<?php
ini_set('max_execution_time', 30000);
//0.MCF MAIN MENU
$affctd = 0;
$usrID = $_SESSION['USRID'];
$prsnid = $_SESSION['PRSN_ID'];
$orgID = $_SESSION['ORG_ID'];
$uName = $_SESSION['UNAME'];
$menuItems = array("Customers", "Customer Accounts", "Core Banking",
    "Credit Management", "Investment Management", "Vault Management", "Product Setup",
    "Utilities and Configuration", "Treasury Management", "Standard Reports");
$menuImages = array("cstmrs1.jpg", "accounts_mn.jpg", "core_banking.jpg", "loans_prdt.png", "insurance.png",
    "vaults_mn.png", "services_prdt.jpg", "ControlPanel.png", "investments_prdt.png", "report-icon-png.png");

//1.CUSTOMERS MANAGEMENT MENU
$cstMenuItems = array("Individual Customer", "Corporate /Joint /Trust Customer", "Customer Groups", "Other Persons", "All Customer Correspondence",
    "Additional Data Setup");
$cstMenuImages = array("person.png", "corporate_sm.jpg", "group_sm.jpg", "other_persons_sm.jpg", "addresses_wbg_64x64.png",
    "settings.png");

//2.CUSTOMER ACCOUNTS MANAGEMENT MENU
$cstAcctMenuItems = array("Customer Accounts", "Manual Interest Payments", "Statement of Account");
$cstAcctMenuImages = array("accounts_mn.jpg", "deposit.png", "chcklst2.png");

//3.CORE BANKING MENU

$cbMenuItems = array("Teller Operations", "Uncleared Transactions", "Miscellaneous GL Account Transactions", "Cheques Management", "Account Transfers & Standing Orders");
$cbMenuImages = array("teller1.png", "icon-ACH.png", "cash_trnsfr.png", "cashbook_big_icon.png", "chcklst2.png");

//3.1.TELLER OPERATIONS SUBMENU
$topMenuItems = array("My Till Position", "Withdrawal", "Deposits",
    "Forex Sales", "Forex Purchase", "Loan Repayment", "Mobile & Other Money Transfers",
    "Utility Payments", "Banker's Drafts", "All Account Transactions", "Cash Exchange / Transfers", "Bulk/Batch Transactions");
$topMenuImages = array("safe-icon.png", "withdraw_rqst.png", "98-512.png",
    "sales_growth-512.png", "98-512.png", "loans_prdt.png",
    "money-transfer-icon-17.png", /* "mobile_money.png" */ "utilities.png", "cheque.png", "core_banking.jpg", "transactions.png", "98-512.png");

//3.4.CHEQUE MANAGEMENT SUBMENU
$cbCmMenuItems = array("Cheque Book Register", "Cheque Register");
$cbCmMenuImages = array("person.png", "bb_flow.gif");

//4.CREDIT MANAGEMENT MENU
$cmMenuItems = array("Loan Application", "Disbursement", "Loan Repayment", "Loan Calculator", "Cash Loan Payment", "Credit Risk Assessment",
    "Property Collaterals", "Sector Classification", "Loan Write-Off", "Summary Dashboard", "Overdraft Interest Processing");
$cmMenuImages = array("person.png", "loans_prdt.png", "loan_repay.jpg", "loan_calc1.jpg", "98-512.png", "risk_assmnt3.png",
    "prpty_collateral.png", "sector_clsfctn.png", "bulkPay.png", "dashboard220.png", "overdraft_interest.png");

//4.1 CREDIT RISK ASSESSMENT
$craMenuItems = array("Credit Risk Assessments", "Risk Factors", "Risk Profiles", "Assessment Set");
$craMenuImages = array("risk_assmnt3.png", "risk_factor.jpg", "risk_profile.png", "risk_assmnt1.png");

//5.INVESTMENT MANAGEMENT MENU
$invstMenuItems = array("Summary Dashboard", "Investment", "Liquidation");
$invstMenuImages = array("dashboard220.png", "deposit.png", "withdraw_rqst.png");

//6.VAULT MANAGEMENT MENU
$trsryMenuItems = array("Cash Flow Analysis", "Corporate Investments", "Money Market Indicators", "Risk Assessments");
$trsryMenuImages = array("sales_growth-512.png", "money_cash.png", "dashboard220.png", "dscnt.png");

//7.PRODUCT MANAGEMENT MENU
$pdtMenuItems = array("Savings and Investment Products", "Credit Products"/* , "Services" */);
$pdtMenuImages = array("savings_prdt.jpg", "loans_prdt.png"/* , "services_prdt.jpg" */);

//8.GENERAL SETUP MANAGEMENT MENU
$gstMenuItems = array("GL Interface", "Currencies", "Teller Tills", "Exchange Rates", "Default Transaction Accounts", "All Banks & Branches", "End of Day Processes", "Default Global Variables", "Loan Classifications");
$gstMenuImages = array("GL-256.png", "money_cash.png", "teller2.png", "sales_growth-512.png", "accounts_mn.jpg", "Bank_icon.png", "adjustments.png", "dashboard220.png", "chcklst4.png");

$trnsTypes = array("DEPOSIT", "WITHDRAWAL", "LIEN_TRNS", "LOAN_DISB", "LOAN_REPAY", "LOAN_PYMNT", "LOAN_APPL", "OVERDRAFT");
$trnsTypesDesc = array("DEPOSIT", "WITHDRAWAL", "LIEN TRANSACTION", "LOAN DISBURSEMENT", "LOAN REPAYMENT", "LOAN PAYMENT", "LOAN APPLICATION", "OVERDRAFT FACILITY");
$trnsTypeABRV = array("DEP", "WTH", "LIEN", "LNDB", "LNRP", "LNPT", "LNAP", "ODFT");
$trnsTypesSlf = array("RECEIPT", "ISSUE", "ISSUE", "ISSUE", "RECEIPT", "RECEIPT", "", "ISSUE");

$vwtyp1 = 0;
//echo $vwtyp1;
$mdlNm = "Banking";
//$mdlNm = "Basic Person Data";
$mdlNmVMS = "Vault Management";
$ModuleName = $mdlNm;

$dfltPrvldgs = array("View Banking",
    /* 1 */ "View SQL", "View Record History", "View Standard Reports",
    /* 4 */ "View Customer Management", "View Customer Accounts", "View Core Banking",
    /* 7 */ "View Credit Management", "View Investment Management", "View Vault Management", "View Product Setup",
    /* 11 */ "View Utilities & Configuration", "View Treasury Management", "View Standard Banking Reports",
    /* 14 */ "View Individual Customers", "View Corporate Customer", "View Customer Groups", "View Other Persons",
    /* 18 */ "View All Customer Correspondence", "View Customer Additional Data Setup", "View Customer Accounts", "View Teller Operations",
    /* 22 */ "View Uncleared Transactins", "View Miscellaneous Account Transactions", "View Cheque Management", "View Account Transfers and Standing Orders",
    /* 26 */ "View Loan Applications", "View Disbursements", "View Loan Repayments", "View Loan Calculator",
    /* 30 */ "View Cash Loan Payments", "View Loans Summary Dashboard", "View Investments Summary Dashboard", "View Investments",
    /* 34 */ "View Investment Rediscounts", "View Savings and Investment Products", "View Credit Products", "View Services",
    /* 38 */ "View GL Interface", "View Currencies", "View Teller Tills", "View Exchange Rates",
    /* 42 */ "View Default Transaction Accounts", "View All Banks and Branches", "View End of Day", "View Cash Flow Analysis",
    /* 46 */ "View Corporate Investments", "View My Till Position", "View Withdrawal Transactions", "View Deposit Transactions",
    /* 50 */ "View Forex Sales", "View Forex Purchase", "View Loan Repayment", "View Mobile and Other Money Transfers",
    /* 54 */ "View Utility Payments", "View Banker's Draft", "View All Account Transactions", "View Mobile and Other Money Transfers",
    /* 58 */ "View Cheque Book Register", "View Cheques Register",
    /* 60 */ "Add Individual Customer", "Edit Individual Customer", "Delete Individual Customer", "Authorize Individual Customer",
    /* 64 */ "Add Corporate Customer", "Edit Corporate Customer", "Delete Corporate Customer", "Authorize Corporate Customer",
    /* 68 */ "Add Customer Group", "Edit Customer Group", "Delete Customer Group", "Authorize Customer Group",
    /* 72 */ "Add Other Person", "Edit Other Person", "Delete Other Person", "Authorize Other Person",
    /* 76 */ "Add Customers - Local", "Add Customers - Global",
    /* 78 */ "Add Additional Customer Data", "Delete Additional Customer Data",
    /* 80 */ "Add Customer Account", "Edit Customer Account", "Delete Customer Account", "Authorize Customer Account",
    /* 84 */ "Add Customer Account - Local", "Add Customer Account - Global", "Create Loan Repayment Accounts",
    /* 87 */ "Add Account Lien", "Edit Account Lien", "Delete Account Lien",
    /* 90 */ "View Risk Factors", "View Risk Profiles", "View Assessment Sets",
    /* 93 */ "Add Withdrawal Transaction", "Edit Withdrawal Transactions", "Delete/Void Withdrawal Transactions", "Authorize Withdrawal Transactions",
    /* 97 */ "Add Deposit Transaction", "Edit Deposit Transactions", "Delete/Void Deposit Transactions", "Authorize Deposit Transactions",
    /* 101 */ "Add Forex Sale Transaction", "Edit Forex Sale Transactions", "Delete/Void Forex Sale Transactions", "Authorize Forex Sale Transactions",
    /* 105 */ "Add Forex Purchase Transaction", "Edit Forex Purchase Transactions", "Delete/Void Forex Purchase Transactions", "Authorize Forex Purchase Transactions",
    /* 109 */ "Add Loan Repayment", "Edit Loan Repayment", "Delete/Void Loan Repayment", "Authorize Loan Repayment",
    /* 113 */ "Add Mobile & Other Money Transfers", "Edit Mobile & Other Money Transfers", "Delete Mobile & Other Money Transfers", "Authorize Mobile & Other Money Transfers",
    /* 117 */ "Add Utility Payment", "Edit Utility Payment", "Delete Loan Utility Payment", "Authorize Loan Utility Payment",
    /* 121 */ "Add Banker's Draft", "Edit Banker's Draft", "Delete Banker's Draft", "Authorize Banker's Draft",
    /* 125 */ "Add Cheque Book Register", "Edit Cheque Book", "Delete Cheque Book Register", "Authorize  Cheque Book Draft Register",
    /* 129 */ "Add Cheques Register", "Edit Cheques Register", "Delete Cheques Register", "Authorize  Cheques Register",
    /* 133 */ "Auto-Execute All Transactions Due", "Execute Standing Order",
    /* 135 */ "Add Adjustment Transaction", "Edit Adjustment Transaction", "Delete Adjustment Transaction", "Authorize Adjustment Transaction",
    /* 139 */ "Add Standing Order", "Edit Standing Order", "Delete Standing Order", "Authorize Standing Order",
    /* 143 */ "Add Loan Application", "Edit Loan Application", "Delete/Void Loan Application", "Authorize Loan Application",
    /* 147 */ "Add Disbursement", "Edit Disbursement", "Delete Disbursement", "Void Disbursement",
    /* 151 */ "Add Loan Payment", "Edit Loan Payment", "Delete/Void Loan Payment", "Authorize Loan Payment",
    /* 155 */ "Add Investment", "Edit Investment", "Delete Investment", "Authorize Investment",
    /* 159 */ "Add Investment Rediscount", "Edit Investment Rediscount", "Delete Investment Rediscount", "Authorize Investment Rediscount",
    /* 163 */ "Add Savings and Investment Products", "Edit Savings and Investment Products", "Delete Savings and Investment Products", "Authorize Savings and Investment Products",
    /* 167 */ "Add Credit Products", "Edit Credit Products", "Delete Credit Products", "Authorize Credit Products",
    /* 171 */ "Add Services", "Edit Services", "Delete Services", "Authorize Services",
    /* 175 */ "Add Currencies", "Edit Currencies", "Delete Currencies", "Authorize Currencies",
    /* 179 */ "Add Tell Tills", "Edit Tell Tills", "Delete Tell Tills", "Authorize Tell Tills",
    /* 183 */ "Add Exchange Rate", "Edit Exchange Rate", "Delete Exchange Rate", "Authorize Exchange Rate",
    /* 187 */ "Add Exchange Rate", "Edit Exchange Rate", "Delete Exchange Rate", "Authorize Exchange Rate",
    /* 189 */ "Add Default Transaction Account", "Edit Default Transaction Account", "Delete Default Transaction Account", "Authorize Default Transaction Account",
    /* 193 */ "Add Bank", "Edit Bank", "Delete Bank", "Authorize Bank",
    /* 197 */ "Add Branch", "Edit Branch", "Delete Branch", "Authorize Branch",
    /* 203 */ "Run End of Day", "Void End of Day",
    /* 205 */ "Add Corporate Investment", "Edit Corporate Investment", "Delete Corporate Investment", "Authorize Corporate Investment",
    /* 209 */ "Add Authorization Limit", "Edit Authorization Limit", "Delete Authorization Limit",
    /* 212 */ "Search All Transactions", "See non-related Transactions",
    /* 214 */ "Can Send to GL",
    /* 215 */ "Export Individual Customer", "Import Individual Customer",
    /* 217 */ "Export National IDs", "Import National IDs",
    /* 219 */ "Export Additional Data - Individual Customer", "Import Additional Data - Individual Customer",
    /* 221 */ "Export Corporate Customer", "Import Corporate Customer",
    /* 223 */ "Export Corporate Directors", "Import Corporate Directors",
    /* 225 */ "Export Additional Data - Corporate Customer", "Import Additional Data - Corporate Customer",
    /* 227 */ "Export Group Customer", "Import Group Customer",
    /* 229 */ "Export Group Members", "Import Group Members",
    /* 231 */ "Export Additional Data - Group Customer", "Import Additional Data - Group Customer",
    /* 233 */ "Export Other Persons", "Import Other Persons",
    /* 235 */ "Export National IDs - Other Persons", "Import National IDs - Other Persons",
    /* 237 */ "Export Additional Data - Other Persons", "Import Additional Data -Other Persons",
    /* 239 */ "Export Customer Accounts", "Import Customer Accounts",
    /* 241 */ "Export Customer Account Signtories", "Import Customer Account Signtories",
    /* 243 */ "Export Customer Accounts Liens", "Import Customer Accounts Liens",
    /* 245 */ "View Credit Risk Assessment", "View Property Collaterals", "View Loan Sector Classifications",
    /* 248 */ "Block Account", "Close Accounts", "Re-Open Account", "Unblock Account",
    /* 252 */ "View Loan Classification", "Add Loan Classification", "Edit Loan Classification", "Delete Loan Classification",
    /* 256 */ "View Global Variables", "Add Global Variable", "Edit Global Variable",
    /* 259 */ "Reject Individual Customer", "Reject Corporate Customer", "Reject Group Customer", "Reject Other Customer",
    /* 263 */ "Reject Customer Accounts", "Can Clear Transactions",
    /* 265 */ "Add Risk Factors", "Edit Risk Factors", "Delete Risk Factors",
    /* 268 */ "Add Risk Profile", "Edit Risk Profile", "Delete Risk Profile",
    /* 271 */ "Add Assessment Set", "Edit Assessment Set", "Delete Assessment Set",
    /* 274 */ "Add Property Collaterals", "Edit Property Collaterals", "Delete Property Collaterals",
    /* 277 */ "Add Sector Classifications", "Edit Sector Classifications", "Delete Sector Classifications",
    /* 280 */ "Add Loan Write-Off", "Edit Loan Write-Off", "Delete Loan Write-Off", "View Loan Write-Off",
    /* 284 */ "Authorize Loan Write-Off", "Process Loan Write-Off",
    /* 286 */ "Add Overdraft Interest Process", "Edit Overdraft Interest Process", "Delete Overdraft Interest Process", "View Overdraft Interest Process",
    /* 290 */ "Authorize Overdraft Interest Process","Process Overdraft Interest Process",
    /* 292 */ "View Bulk Teller Transactions", "Add Bulk Teller Transactions", "Edit Bulk Teller Transactions", "Delete Bulk Teller Transactions", "Authorize Bulk Teller Transactions",
    /* 297 */ "See Other Branch Transactions", "See Other Staff Account Transactions", "Can Modify Customer Account Number");

$dfltPrvldgsVMS = array("View Vault Management",
    /* 1 */ "View Branches & Vaults", "View Transactions", "View Standard Reports",
    /* 4 */ "View VMS Administration", "View SQL", "View Record History",
    /* 7 */ "View Branch Setup", "View Vault Setup", "View Cage Setup", "View Item List Setup",
    /* 11 */ "View Authorization Limits Setup", "View Customers/Suppliers Setup",
    /* 13 */ "View Transfer Transactions", "View Direct Customer Deposits", "View Direct Customer Withdrawals",
    /* 16 */ "View Currency Importation", "View Currency Destruction",
    /* 18 */ "View Transit Transfers", "View Teller Transfers", "View Exam Transfers", "View From Exam",
    /* 22 */ "Add Branch/Agency", "Edit Branch/Agency", "Delete Branch/Agency",
    /* 25 */ "Add Vault", "Edit Vault", "Delete Vault",
    /* 28 */ "Add Cage/Shelve", "Edit Cage/Shelve", "Delete Cage/Shelve",
    /* 31 */ "Add Items", "Edit Items", "Delete Items",
    /* 34 */ "Add Authorization Limit", "Edit Authorization Limit", "Delete Authorization Limit",
    /* 37 */ "Add Transactions", "Edit Transactions", "Delete Transactions", "Authorize Transactions",
    /* 41 */ "Search All Transactions", "See non-related Transactions",
    /* 43 */ "View Currency Sale", "View Currency Purchase", "View Miscellaneous Adjustments",
    /* 46 */ "Can Send to GL", "Can Add Correction Transactions", "Can Void Correction Transactions",
    /* 49 */ "Add Customer/Supplier", "Edit Customer/Supplier", "Delete Customer/Supplier",
    /* 52 */ "View Direct Cage/Shelve Transaction",
        /* 53 */ "View Vault/GL Account Transfers", "See Other Branch Transactions");
        /*
          DEFIND ALL PRIVILEGES FOR MICROFINANCE
         */
        $mcbPrmSnsRstl = getMcfPgPrmssns($prsnid, $orgID);
        $fnccurid = $mcbPrmSnsRstl[0];
        $fnccurnm = getPssblValNm($fnccurid);
        $brnchLocID = $mcbPrmSnsRstl[1];
        $acsCntrlGrpID = $mcbPrmSnsRstl[2];
        $canview = ($mcbPrmSnsRstl[3] >= 1) ? true : false;
        $canViewCM = ($mcbPrmSnsRstl[4] >= 1) ? true : false;
        $canViewCA = ($mcbPrmSnsRstl[5] >= 1) ? true : false;
        $canViewCB = ($mcbPrmSnsRstl[6] >= 1) ? true : false;
        $canViewCRDT = ($mcbPrmSnsRstl[7] >= 1) ? true : false;
        $canViewINVST = ($mcbPrmSnsRstl[8] >= 1) ? true : false;
        $canViewVM = ($mcbPrmSnsRstl[9] >= 1) ? true : false;
        $canViewPRDCT = ($mcbPrmSnsRstl[10] >= 1) ? true : false;
        $canViewCONF = ($mcbPrmSnsRstl[11] >= 1) ? true : false;
        $canViewTM = ($mcbPrmSnsRstl[12] >= 1) ? true : false;
        $canViewRpts = ($mcbPrmSnsRstl[13] >= 1) ? true : false;

        $canViewLoanApplctn = ($mcbPrmSnsRstl[14] >= 1) ? true : false;
        $canViewDisbursment = ($mcbPrmSnsRstl[15] >= 1) ? true : false;
        $canViewLoanRpymnt = ($mcbPrmSnsRstl[16] >= 1) ? true : false;
        $canViewLoanCalculator = ($mcbPrmSnsRstl[17] >= 1) ? true : false;
        $canViewCashLoanPymnt = ($mcbPrmSnsRstl[18] >= 1) ? true : false;
        $canViewLoanSummaryDshboard = ($mcbPrmSnsRstl[19] >= 1) ? true : false;

        $canViewRiskFactors = ($mcbPrmSnsRstl[20] >= 1) ? true : false;
        $canViewRiskProfiles = ($mcbPrmSnsRstl[21] >= 1) ? true : false;
        $canViewAssessmentSet =($mcbPrmSnsRstl[22] >= 1) ? true : false;
        $canAddTrns = ($mcbPrmSnsRstl[23] >= 1) ? true : false;
        $canEdtTrns = ($mcbPrmSnsRstl[24] >= 1) ? true : false;
        $canDelTrns = ($mcbPrmSnsRstl[25] >= 1) ? true : false;
        $canAthrz = ($mcbPrmSnsRstl[26] >= 1) ? true : false;
        $canSeeOthrsTrns = ($mcbPrmSnsRstl[27] >= 1) ? true : false;
        $canViewCreditRiskAssmnt = ($mcbPrmSnsRstl[28] >= 1) ? true : false;
        $canViewPropertyCollaterals = ($mcbPrmSnsRstl[29] >= 1) ? true : false;
        $canViewSectorClassifications = ($mcbPrmSnsRstl[30] >= 1) ? true : false;
        $vwtyp = "0";
        $vwtypActn = "VIEW"; //0 -- Read-only, 1 -- Add, 2 -- Edit
        $qstr = "";
        $dsply = "";
        $actyp = "";
        $srchFor = "";
        $srchIn = "Name";
        $PKeyID = -1;
        $fltrTypValue = "All";
        $fltrTyp = "Relation Type";
        $sortBy = "ID ASC";
        $custID = -1;
        $prdtID = -1;
        $siteID = -1;
        $subPgNo = 0;
        $otherPrsnType = "";
        $tblRowID = -1;
        $rowID = -1;
        $pAcctID = -1;
        $trnsType = -1;

$subVwtyp = 0;
if (isset($_POST['subVwtyp'])) {//SUB VIEWS FOR CREDIT MANAGEMENT
    $subVwtyp = cleanInputData($_POST['subVwtyp']);
}

$fnccurid = getOrgFuncCurID($orgID);
$fnccurnm = getPssblValNm($fnccurid);

/*$gnrlTrnsDteDMYHMS = getStartOfDayDMYHMS();
$gnrlTrnsDteYMD = getStartOfDayYMD();
$gnrlTrnsDteYMDHMS = getStartOfDayYMDHMS();*/

$gnrlTrnsDteDMYHMS = getStartOfDayDMYHMS(); //getStartOfDayDMYHMS();
$gnrlTrnsDteYMDHMS = cnvrtDMYTmToYMDTm($gnrlTrnsDteDMYHMS);
$gnrlTrnsDteYMD = substr($gnrlTrnsDteYMDHMS, 0, 10);

$trnsNtAllwdDts = getTrnsNotAllwdDates();
$trnsNtAllwdDys = getTrnsNotAllwdDays();


if (isset($formArray)) {
    if (count($formArray) > 0) {
        $vwtyp = isset($formArray['vtyp']) ? cleanInputData($formArray['vtyp']) : "0";
        $qstr = isset($formArray['q']) ? cleanInputData($formArray['q']) : '';
    } else {
        $vwtyp = isset($_POST['vtyp']) ? cleanInputData($_POST['vtyp']) : "0";
    }
} else {
    $vwtyp = isset($_POST['vtyp']) ? cleanInputData($_POST['vtyp']) : "0";
}
if (isset($_POST['PKeyID'])) {
    $PKeyID = cleanInputData($_POST['PKeyID']);
}
if (isset($_POST['searchfor'])) {
    $srchFor = cleanInputData($_POST['searchfor']);
}
if (isset($_POST['searchin'])) {
    $srchIn = cleanInputData($_POST['searchin']);
}
if (isset($_POST['q'])) {
    $qstr = cleanInputData($_POST['q']);
}
if (isset($_POST['vtyp'])) {
    $vwtyp = cleanInputData($_POST['vtyp']);
}
if (isset($_POST['vtypActn'])) {//ADD, EDIT, VIEW
    $vwtypActn = cleanInputData($_POST['vtypActn']);
}
if (isset($_POST['custID'])) {
    $custID = cleanInputData($_POST['custID']);
}
if (isset($_POST['prdtID'])) {
    $prdtID = cleanInputData($_POST['prdtID']);
}
if (isset($_POST['siteID'])) {
    $siteID = cleanInputData($_POST['siteID']);
}
if (isset($_POST['subPgNo'])) {//SUB MENUS
    $subPgNo = cleanInputData($_POST['subPgNo']);
}
if (isset($_POST['actyp'])) {
    $actyp = cleanInputData($_POST['actyp']);
}
if (isset($_POST['fltrTypValue'])) {
    $fltrTypValue = cleanInputData($_POST['fltrTypValue']);
}
if (isset($_POST['fltrTyp'])) {
    $fltrTyp = cleanInputData($_POST['fltrTyp']);
}
if (isset($_POST['sortBy'])) {
    $sortBy = cleanInputData($_POST['sortBy']);
}
if (isset($_POST['prsnType'])) {
    $otherPrsnType = cleanInputData($_POST['prsnType']);
}
if (isset($_POST['trnsType'])) {
    $trnsType = cleanInputData($_POST['trnsType']);
}
if (isset($_POST['tblRowID'])) {
    $tblRowID = cleanInputData($_POST['tblRowID']);
}
if (isset($_POST['rowID'])) {
    $rowID = cleanInputData($_POST['rowID']);
}
if (strpos($srchFor, "%") === FALSE) {
    $srchFor = " " . $srchFor . " ";
    $srchFor = str_replace(" ", "%", $srchFor);
}
if (isset($_POST['pAcctID'])) {
    $pAcctID = cleanInputData($_POST['pAcctID']);
}

//grp=40&typ=5
$cntent = "<div>
				<ul class=\"breadcrumb\" style=\"$breadCrmbBckclr\">
					<li onclick=\"openATab('#home', 'grp=40&typ=1');\">
                                                <i class=\"fa fa-home\" aria-hidden=\"true\"></i>
						<span style=\"text-decoration:none;\">Home</span>
                                                <span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
					</li>
					<li onclick=\"openATab('#allmodules', 'grp=40&typ=5');\">
						<span style=\"text-decoration:none;\">All Modules</span><span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
					</li>";
require 'mcf_intro2.php';
if ($lgn_num > 0 && $canview === true) {
    //echo $pgNo;

    $prsnid = $_SESSION['PRSN_ID'];
    if ($qstr == "UPDATE") {
        if ($pgNo == 11) {//CUSTOMER MANAGEMENT
            if ($subPgNo == 1.1 || $subPgNo == 1.2 || $subPgNo == 1.3 || $subPgNo == 1.4) {
                $addtnlCstmrDataCol1 = isset($_POST['addtnlCstmrDataCol1']) ? cleanInputData($_POST['addtnlCstmrDataCol1']) : "";
                $addtnlCstmrDataCol2 = isset($_POST['addtnlCstmrDataCol2']) ? cleanInputData($_POST['addtnlCstmrDataCol2']) : "";
                $addtnlCstmrDataCol3 = isset($_POST['addtnlCstmrDataCol3']) ? cleanInputData($_POST['addtnlCstmrDataCol3']) : "";
                $addtnlCstmrDataCol4 = isset($_POST['addtnlCstmrDataCol4']) ? cleanInputData($_POST['addtnlCstmrDataCol4']) : "";
                $addtnlCstmrDataCol5 = isset($_POST['addtnlCstmrDataCol5']) ? cleanInputData($_POST['addtnlCstmrDataCol5']) : "";
                $addtnlCstmrDataCol6 = isset($_POST['addtnlCstmrDataCol6']) ? cleanInputData($_POST['addtnlCstmrDataCol6']) : "";
                $addtnlCstmrDataCol7 = isset($_POST['addtnlCstmrDataCol7']) ? cleanInputData($_POST['addtnlCstmrDataCol7']) : "";
                $addtnlCstmrDataCol8 = isset($_POST['addtnlCstmrDataCol8']) ? cleanInputData($_POST['addtnlCstmrDataCol8']) : "";
                $addtnlCstmrDataCol9 = isset($_POST['addtnlCstmrDataCol9']) ? cleanInputData($_POST['addtnlCstmrDataCol9']) : "";
                $addtnlCstmrDataCol10 = isset($_POST['addtnlCstmrDataCol10']) ? cleanInputData($_POST['addtnlCstmrDataCol10']) : "";
                $addtnlCstmrDataCol11 = isset($_POST['addtnlCstmrDataCol11']) ? cleanInputData($_POST['addtnlCstmrDataCol11']) : "";
                $addtnlCstmrDataCol12 = isset($_POST['addtnlCstmrDataCol12']) ? cleanInputData($_POST['addtnlCstmrDataCol12']) : "";
                $addtnlCstmrDataCol13 = isset($_POST['addtnlCstmrDataCol13']) ? cleanInputData($_POST['addtnlCstmrDataCol13']) : "";
                $addtnlCstmrDataCol14 = isset($_POST['addtnlCstmrDataCol14']) ? cleanInputData($_POST['addtnlCstmrDataCol14']) : "";
                $addtnlCstmrDataCol15 = isset($_POST['addtnlCstmrDataCol15']) ? cleanInputData($_POST['addtnlCstmrDataCol15']) : "";
                $addtnlCstmrDataCol16 = isset($_POST['addtnlCstmrDataCol16']) ? cleanInputData($_POST['addtnlCstmrDataCol16']) : "";
                $addtnlCstmrDataCol17 = isset($_POST['addtnlCstmrDataCol17']) ? cleanInputData($_POST['addtnlCstmrDataCol17']) : "";
                $addtnlCstmrDataCol18 = isset($_POST['addtnlCstmrDataCol18']) ? cleanInputData($_POST['addtnlCstmrDataCol18']) : "";
                $addtnlCstmrDataCol19 = isset($_POST['addtnlCstmrDataCol19']) ? cleanInputData($_POST['addtnlCstmrDataCol19']) : "";
                $addtnlCstmrDataCol20 = isset($_POST['addtnlCstmrDataCol20']) ? cleanInputData($_POST['addtnlCstmrDataCol20']) : "";
                $addtnlCstmrDataCol21 = isset($_POST['addtnlCstmrDataCol21']) ? cleanInputData($_POST['addtnlCstmrDataCol21']) : "";
                $addtnlCstmrDataCol22 = isset($_POST['addtnlCstmrDataCol22']) ? cleanInputData($_POST['addtnlCstmrDataCol22']) : "";
                $addtnlCstmrDataCol23 = isset($_POST['addtnlCstmrDataCol23']) ? cleanInputData($_POST['addtnlCstmrDataCol23']) : "";
                $addtnlCstmrDataCol24 = isset($_POST['addtnlCstmrDataCol24']) ? cleanInputData($_POST['addtnlCstmrDataCol24']) : "";
                $addtnlCstmrDataCol25 = isset($_POST['addtnlCstmrDataCol25']) ? cleanInputData($_POST['addtnlCstmrDataCol25']) : "";
                $addtnlCstmrDataCol26 = isset($_POST['addtnlCstmrDataCol26']) ? cleanInputData($_POST['addtnlCstmrDataCol26']) : "";
                $addtnlCstmrDataCol27 = isset($_POST['addtnlCstmrDataCol27']) ? cleanInputData($_POST['addtnlCstmrDataCol27']) : "";
                $addtnlCstmrDataCol28 = isset($_POST['addtnlCstmrDataCol28']) ? cleanInputData($_POST['addtnlCstmrDataCol28']) : "";
                $addtnlCstmrDataCol29 = isset($_POST['addtnlCstmrDataCol29']) ? cleanInputData($_POST['addtnlCstmrDataCol29']) : "";
                $addtnlCstmrDataCol30 = isset($_POST['addtnlCstmrDataCol30']) ? cleanInputData($_POST['addtnlCstmrDataCol30']) : "";
                $addtnlCstmrDataCol31 = isset($_POST['addtnlCstmrDataCol31']) ? cleanInputData($_POST['addtnlCstmrDataCol31']) : "";
                $addtnlCstmrDataCol32 = isset($_POST['addtnlCstmrDataCol32']) ? cleanInputData($_POST['addtnlCstmrDataCol32']) : "";
                $addtnlCstmrDataCol33 = isset($_POST['addtnlCstmrDataCol33']) ? cleanInputData($_POST['addtnlCstmrDataCol33']) : "";
                $addtnlCstmrDataCol34 = isset($_POST['addtnlCstmrDataCol34']) ? cleanInputData($_POST['addtnlCstmrDataCol34']) : "";
                $addtnlCstmrDataCol35 = isset($_POST['addtnlCstmrDataCol35']) ? cleanInputData($_POST['addtnlCstmrDataCol35']) : "";
                $addtnlCstmrDataCol36 = isset($_POST['addtnlCstmrDataCol36']) ? cleanInputData($_POST['addtnlCstmrDataCol36']) : "";
                $addtnlCstmrDataCol37 = isset($_POST['addtnlCstmrDataCol37']) ? cleanInputData($_POST['addtnlCstmrDataCol37']) : "";
                $addtnlCstmrDataCol38 = isset($_POST['addtnlCstmrDataCol38']) ? cleanInputData($_POST['addtnlCstmrDataCol38']) : "";
                $addtnlCstmrDataCol39 = isset($_POST['addtnlCstmrDataCol39']) ? cleanInputData($_POST['addtnlCstmrDataCol39']) : "";
                $addtnlCstmrDataCol40 = isset($_POST['addtnlCstmrDataCol40']) ? cleanInputData($_POST['addtnlCstmrDataCol40']) : "";
                $addtnlCstmrDataCol41 = isset($_POST['addtnlCstmrDataCol41']) ? cleanInputData($_POST['addtnlCstmrDataCol41']) : "";
                $addtnlCstmrDataCol42 = isset($_POST['addtnlCstmrDataCol42']) ? cleanInputData($_POST['addtnlCstmrDataCol42']) : "";
                $addtnlCstmrDataCol43 = isset($_POST['addtnlCstmrDataCol43']) ? cleanInputData($_POST['addtnlCstmrDataCol43']) : "";
                $addtnlCstmrDataCol44 = isset($_POST['addtnlCstmrDataCol44']) ? cleanInputData($_POST['addtnlCstmrDataCol44']) : "";
                $addtnlCstmrDataCol45 = isset($_POST['addtnlCstmrDataCol45']) ? cleanInputData($_POST['addtnlCstmrDataCol45']) : "";
                $addtnlCstmrDataCol46 = isset($_POST['addtnlCstmrDataCol46']) ? cleanInputData($_POST['addtnlCstmrDataCol46']) : "";
                $addtnlCstmrDataCol47 = isset($_POST['addtnlCstmrDataCol47']) ? cleanInputData($_POST['addtnlCstmrDataCol47']) : "";
                $addtnlCstmrDataCol48 = isset($_POST['addtnlCstmrDataCol48']) ? cleanInputData($_POST['addtnlCstmrDataCol48']) : "";
                $addtnlCstmrDataCol49 = isset($_POST['addtnlCstmrDataCol49']) ? cleanInputData($_POST['addtnlCstmrDataCol49']) : "";
                $addtnlCstmrDataCol50 = isset($_POST['addtnlCstmrDataCol50']) ? cleanInputData($_POST['addtnlCstmrDataCol50']) : "";

                $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : "";

                $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                $ntnltyIDExstncCnt = 0;

                if ($subPgNo == 1.1) {//PERSONAL CUSTOMER
                    if ($vwtyp == "0") {// BASIC DATA
                        //var_dump($_POST);
                        //var_dump($_FILES);
                        //header("content-type:application/json");
                        //categoryCombo
                        $dateStr = getDB_Date_time();

                        if ($actyp == 1) {
                            //WITHDRAWN
                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Withdrawn',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request WITHDRAWN successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to WITHDRAWN Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        } else if ($actyp == 2) {
                            //REJECT
                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Rejected',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request REJECTED successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to REJECT Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        } else if ($actyp == 3) {
                            //AUTHORIZE
                            $errMsg = "";

                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Authorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr',"
                                    . "authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 1!<br/></div>';
                                exit();
                            }
//
//                            //SET chngs_pndng to 0
//                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers SET chngs_pndng = 0,"
//                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
//                            if($updateCnt1 <= 0){
//                               echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
//                                . 'width:18px;height:18px;"/>Failed Update 2!<br/></div>';
//                                exit();
//                            }

                            if ($rvsnTtl > 0) {
                                //FETCH ORIGINAL DATA
                                $orgnlCustDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers WHERE cust_id = $custID");
                                $orgnlProfileDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_ind WHERE cust_id = $custID");
                                //NATIONAL IDS
                                $orgnlNtlnlIDDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prsn_national_ids WHERE person_id = $custID"
                                        . " AND person_type = 'Individual Customer'");
                                //ADDITIONAL PERSON DATA
                                $orgnlAdtnlDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID"
                                        . " AND src_type = 'Personal Customer'");
                                //FETCH IMAGES
                                //FETCH CURRENT DATA
                                //$crntCustDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl");
                                //$crntProfileDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_ind_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl");
                                //MOVE CURRENT TO ORIGINAL
                                //mcf_customers_hstrc TO mcf_customers
                                $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers
                                    SET branch_id=subquery.branch_id,
                                        status=subquery.status,
                                        relation_type=subquery.relation_type,
                                        valid_start_date=subquery.valid_start_date,
                                        valid_end_date=subquery.valid_end_date,
                                        authorized_by_person_id=subquery.authorized_by_person_id,
                                        autorization_date=subquery.autorization_date,
                                        last_update_by=subquery.last_update_by,
                                        last_update_date=subquery.last_update_date,
                                        chngs_pndng = 0
                                    FROM (SELECT cust_id, cust_type, created_by, creation_date, last_update_by,
                                           last_update_date, relation_type, status, valid_start_date, valid_end_date,
                                           org_id, branch_id, authorized_by_person_id, autorization_date,
                                           rvsn_ttl, row_id
                                      FROM mcf.mcf_customers_hstrc WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_customers.cust_id=subquery.cust_id
                                    AND mcf.mcf_customers.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt1 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 2!<br/></div>';
                                    exit();
                                }

                                //echo "CustID=".$custID." rvsnTtl = ".$rvsnTtl;
                                //mcf_customers_ind_hstrc TO mcf_customers_ind
                                $updateCnt2 = execUpdtInsSQL("UPDATE mcf.mcf_customers_ind
                                    SET first_name=subquery.first_name,
                                        sur_name=subquery.sur_name,
                                        other_names=subquery.other_names,
                                        title=subquery.title,
                                        gender=subquery.gender,
                                        marital_status=subquery.marital_status,
                                        date_of_birth=subquery.date_of_birth,
                                        place_of_birth=subquery.place_of_birth,
                                        religion=subquery.religion,
                                        res_address=subquery.res_address,
                                        pstl_addrs=subquery.pstl_addrs,
                                        email=subquery.email,
                                        cntct_no_tel=subquery.cntct_no_tel,
                                        cntct_no_mobl=subquery.cntct_no_mobl,
                                        cntct_no_fax=subquery.cntct_no_fax,
                                        img_location=subquery.img_location,
                                        hometown=subquery.hometown,
                                        nationality=subquery.nationality,
                                        lnkd_firm_org_id=subquery.lnkd_firm_org_id,
                                        lnkd_firm_site_id=subquery.lnkd_firm_site_id,
                                        last_update_by=subquery.last_update_by,
                                        last_update_date=subquery.last_update_date,
                                        new_company=subquery.new_company,
                                        new_company_loc=subquery.new_company_loc,
                                        sign_img_location=subquery.sign_img_location
                                    FROM (SELECT ind_profile_id, cust_id, first_name, sur_name, other_names, title,
                                           local_id_no, org_id, gender, marital_status, date_of_birth, place_of_birth,
                                           religion, res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                           cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                           lnkd_firm_site_id, created_by, creation_date, last_update_by,
                                           last_update_date, new_company, new_company_loc, sign_img_location,
                                           row_id, rvsn_ttl
                                      FROM mcf.mcf_customers_ind_hstrc WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_customers_ind.cust_id=subquery.cust_id
                                    AND mcf.mcf_customers_ind.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt2 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3!<br/></div>';
                                    exit();
                                }

                                $sqlQry2 = "SELECT * FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $custID AND "
                                        . "person_type = 'Individual Customer' AND rvsn_ttl = $rvsnTtl";
                                $resultQry2 = executeSQLNoParams($sqlQry2);
                                $rowCntQry2 = loc_db_num_rows($resultQry2);

                                if ($rowCntQry2 > 0) {
                                    //NATIONAL IDS
                                    //CHECK EXISTENCE OF NTNLTY ID in mcf_prsn_national_ids
                                    $sqlQry9 = "SELECT ntnlty_id
                                       FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $custID AND "
                                            . "person_type = 'Individual Customer' AND rvsn_ttl = $rvsnTtl";
                                    $resultQry9 = executeSQLNoParams($sqlQry9);
                                    while ($row9 = loc_db_fetch_array($resultQry9)) {
                                        $ntnltyID = $row9[0];
                                        $sqlQry8 = "SELECT * FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = $ntnltyID";
                                        if ($ntnltyID < 0) {
                                            $sqlQry8 = "SELECT * FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = (-1*$ntnltyID)";
                                        }
                                        $resultQry8 = executeSQLNoParams($sqlQry8);
                                        $rowCntQry8 = loc_db_num_rows($resultQry8);
                                        if ($rowCntQry8 <= 0) {
                                            //INSERT
                                            $updateCnt5 = execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids(
                                                                    person_id, nationality, id_number, created_by, creation_date,
                                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
                                                            SELECT person_id, nationality, id_number, created_by, creation_date,
                                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, 'Yes'
                                                            FROM mcf.mcf_prsn_national_ids_hstrc WHERE ntnlty_id = $ntnltyID
                                                                AND rvsn_ttl = $rvsnTtl AND person_type = 'Individual Customer'");

                                            if ($updateCnt5 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-5!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            if ($ntnltyID < 0) {
                                                $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = (-1*$ntnltyID)");
                                                if ($updateCnt55 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                                    exit();
                                                }
                                            } else {
                                                //UPDATE
                                                //mcf_prsn_national_ids_hstrc TO mcf_prsn_national_ids
                                                $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_national_ids
                                                SET nationality = subquery.nationality,
                                                id_number = subquery.id_number,
                                                national_id_typ = subquery.national_id_typ,
                                                date_issued = subquery.date_issued,
                                                expiry_date = subquery.expiry_date,
                                                other_info = subquery.other_info,
                                                is_approved = 'Yes'
                                                FROM (SELECT person_id, nationality, id_number, created_by, creation_date,
                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, row_id
                                               FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $custID AND "
                                                        . "person_type = 'Individual Customer' AND rvsn_ttl = $rvsnTtl AND ntnlty_id = $ntnltyID) AS subquery
                                                WHERE mcf.mcf_prsn_national_ids.person_id=subquery.person_id
                                                AND mcf.mcf_prsn_national_ids.rvsn_ttl = subquery.rvsn_ttl
                                                AND mcf.mcf_prsn_national_ids.ntnlty_id = subquery.ntnlty_id
                                                AND mcf.mcf_prsn_national_ids.person_type = subquery.person_type
                                                AND mcf.mcf_prsn_national_ids.person_type = 'Individual Customer'");

                                                if ($updateCnt56 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-56!<br/></div>';
                                                    exit();
                                                }
                                            }
                                        }
                                    }
                                }

                                $sqlQry3 = "SELECT * FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $custID "
                                        . "AND src_type = 'Personal Customer' and rvsn_ttl = $rvsnTtl";
                                $resultQry3 = executeSQLNoParams($sqlQry3);
                                $rowCntQry3 = loc_db_num_rows($resultQry3);

                                if ($rowCntQry3 > 0) {
                                    //ADDITIONAL PERSON DATA
                                    //mcf_extra_data_hstrc TO mcf_extra_data
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data
                                        SET data_col1= subquery.data_col1, data_col2= subquery.data_col2, data_col3= subquery.data_col3,
                                            data_col4= subquery.data_col4, data_col5= subquery.data_col5,
                                            data_col6= subquery.data_col6, data_col7= subquery.data_col7, data_col8= subquery.data_col8,
                                            data_col9= subquery.data_col9, data_col10= subquery.data_col10, data_col11= subquery.data_col11,
                                            data_col12= subquery.data_col12, data_col13= subquery.data_col13, data_col14= subquery.data_col14,
                                            data_col15= subquery.data_col15, data_col16= subquery.data_col16, data_col17= subquery.data_col17,
                                            data_col18= subquery.data_col18, data_col19= subquery.data_col19, data_col20= subquery.data_col20,
                                            data_col21= subquery.data_col21, data_col22= subquery.data_col22, data_col23= subquery.data_col23,
                                            data_col24= subquery.data_col24, data_col25= subquery.data_col25, data_col26= subquery.data_col26,
                                            data_col27= subquery.data_col27, data_col28= subquery.data_col28, data_col29= subquery.data_col29,
                                            data_col30= subquery.data_col30, data_col31= subquery.data_col31, data_col32= subquery.data_col32,
                                            data_col33= subquery.data_col33, data_col34= subquery.data_col34, data_col35= subquery.data_col35,
                                            data_col36= subquery.data_col36, data_col37= subquery.data_col37, data_col38= subquery.data_col38,
                                            data_col39= subquery.data_col39, data_col40= subquery.data_col40, data_col41= subquery.data_col41,
                                            data_col42= subquery.data_col42, data_col43= subquery.data_col43, data_col44= subquery.data_col44,
                                            data_col45= subquery.data_col45, data_col46= subquery.data_col46, data_col47= subquery.data_col47,
                                            data_col48= subquery.data_col48, data_col49= subquery.data_col49, data_col50= subquery.data_col50
                                        FROM (SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl, row_id
                                       FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $custID "
                                            . "AND src_type = 'Personal Customer' and rvsn_ttl = $rvsnTtl) AS subquery
                                        WHERE mcf.mcf_extra_data.src_pk_id=subquery.src_pk_id
                                        AND mcf.mcf_extra_data.rvsn_ttl = subquery.rvsn_ttl
                                        AND mcf.mcf_extra_data.src_type = subquery.src_type
                                        AND mcf.mcf_extra_data.src_type = 'Personal Customer'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //MOVE ORGINAL DATA TO HISTORIC
                                //mcf_customers TO mcf_customers_hstrc
                                while ($row = loc_db_fetch_array($orgnlCustDataRslt)) {
                                    $updateCnt3 = execUpdtInsSQL("UPDATE mcf.mcf_customers_hstrc
                                        SET branch_id=$row[11],
                                            relation_type = '$row[6]',
                                            status='$row[7]',
                                            valid_start_date='$row[8]',
                                            valid_end_date='$row[9]',
                                            authorized_by_person_id=$row[12],
                                            autorization_date='$row[13]',
                                            last_update_by=$row[4],
                                            last_update_date='$row[5]'
                                         WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl");

                                    if ($updateCnt3 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 4!<br/></div>';
                                        exit();
                                    }
                                }

                                //mcf_customers_ind TO mcf_customers_ind_hstrc
                                while ($row1 = loc_db_fetch_array($orgnlProfileDataRslt)) {
                                    $updateCnt4 = execUpdtInsSQL("UPDATE mcf.mcf_customers_ind_hstrc
                                        SET first_name='$row1[2]',
                                        sur_name='$row1[3]',
                                        other_names='$row1[4]',
                                        title='$row1[5]',
                                        gender='$row1[8]',
                                        marital_status='$row1[9]',
                                        date_of_birth='$row1[10]',
                                        place_of_birth='$row1[11]',
                                        religion='$row1[12]',
                                        res_address='$row1[13]',
                                        pstl_addrs='$row1[14]',
                                        email='$row1[15]',
                                        cntct_no_tel='$row1[16]',
                                        cntct_no_mobl='$row1[17]',
                                        cntct_no_fax='$row1[18]',
                                        img_location='$row1[19]',
                                        hometown='$row1[20]',
                                        nationality='$row1[21]',
                                        lnkd_firm_org_id=$row1[22],
                                        lnkd_firm_site_id=$row1[23],
                                        last_update_by=$row1[26],
                                        last_update_date='$row1[27]',
                                        new_company='$row1[28]',
                                        new_company_loc='$row1[29]',
                                        sign_img_location='$row1[30]'
                                      WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl");

                                    if ($updateCnt4 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //NATIONAL ID
                                $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_prsn_national_ids_hstrc WHERE "
                                        . "person_id = $custID and rvsn_ttl = $rvsnTtl AND person_type = 'Individual Customer'");

                                //mcf_prsn_national_ids TO mcf_prsn_national_ids_hstrc
                                while ($row2 = loc_db_fetch_array($orgnlNtlnlIDDataRslt)) {
                                    $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids_hstrc(
                                            person_id, nationality, id_number, created_by, creation_date,
                                            last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                            date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
                                    VALUES($row2[0],'$row2[1]','" . loc_db_escape_string($row2[2]) . "',$row2[3],'$row2[4]',$row2[5],'$row2[6]',$row2[7],'" . loc_db_escape_string($row2[8]) . "',"
                                                    . "'$row2[9]','$row2[10]','" . loc_db_escape_string($row2[11]) . "','$row2[12]',$row2[13],'$row2[14]')");

                                    if ($updateCnt51 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //ADDITIONAL PERSON INFO
                                //mcf_extra_data TO mcf_extra_data_hstrc
                                while ($row3 = loc_db_fetch_array($orgnlAdtnlDataRslt)) {
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data_hstrc
                                        SET data_col1= '$row3[1]', data_col2= '$row3[2]', data_col3= '$row3[3]',
                                        data_col4= '$row3[4]', data_col5= '$row3[5]',
                                        data_col6= '$row3[6]', data_col7= '$row3[7]', data_col8= '$row3[8]',
                                        data_col9= '$row3[9]', data_col10= '$row3[10]', data_col11= '$row3[11]',
                                        data_col12= '$row3[12]', data_col13= '$row3[13]', data_col14= '$row3[14]',
                                        data_col15= '$row3[15]', data_col16= '$row3[16]', data_col17= '$row3[17]',
                                        data_col18= '$row3[18]', data_col19= '$row3[19]', data_col20= '$row3[20]',
                                        data_col21= '$row3[21]', data_col22= '$row3[22]', data_col23= '$row3[23]',
                                        data_col24= '$row3[24]', data_col25= '$row3[25]', data_col26= '$row3[26]',
                                        data_col27= '$row3[27]', data_col28= '$row3[28]', data_col29= '$row3[29]',
                                        data_col30= '$row3[30]', data_col31= '$row3[31]', data_col32= '$row3[32]',
                                        data_col33= '$row3[33]', data_col34= '$row3[34]', data_col35= '$row3[35]',
                                        data_col36= '$row3[36]', data_col37= '$row3[37]', data_col38= '$row3[38]',
                                        data_col39= '$row3[39]', data_col40= '$row3[40]', data_col41= '$row3[41]',
                                        data_col42= '$row3[42]', data_col43= '$row3[43]', data_col44= '$row3[44]',
                                        data_col45= '$row3[45]', data_col46= '$row3[46]', data_col47= '$row3[47]',
                                        data_col48= '$row3[48]', data_col49= '$row3[49]', data_col50= '$row3[50]',
                                        last_update_by=$row3[53], last_update_date='$row3[54]'
                                      WHERE src_pk_id = $custID and rvsn_ttl = $rvsnTtl AND src_type = 'Personal Customer'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                        exit();
                                    }
                                }
                            }

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");

                            echo json_encode($response);
                        }
                        else if ($actyp == 4) {
                            //var_dump($_POST);
                            //MODIFY DATA
                            $errMsg = "";
                            //BACKUP AUTHORIZED DATA
                            //mcf_customers
                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers SET chngs_pndng = 1, rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
                            if ($updateCnt1 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE Customer Record!<br/></div>';
                                exit();
                            }

                            $updateCnt2 = execUpdtInsSQL("INSERT INTO mcf.mcf_customers_hstrc(
                                    cust_id, cust_type, created_by, creation_date, last_update_by,
                                    last_update_date, relation_type, status, valid_start_date, valid_end_date,
                                    org_id, branch_id, authorized_by_person_id, autorization_date, rvsn_ttl)
                            SELECT cust_id, cust_type, created_by, creation_date, last_update_by,
                                    last_update_date, relation_type, 'Incomplete', valid_start_date, valid_end_date,
                                    org_id, branch_id, authorized_by_person_id, autorization_date, rvsn_ttl
                                    FROM mcf.mcf_customers WHERE cust_id = $custID AND status IN ('Approved','Authorized')");

                            if ($updateCnt2 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic Customer Record!<br/></div>';
                                exit();
                            }

                            //mcf_customers_ind
                            $updateCnt4 = execUpdtInsSQL("UPDATE mcf.mcf_customers_ind SET rvsn_ttl = (rvsn_ttl+1),"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
                            if ($updateCnt4 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE Customer Profile!<br/></div>';
                                exit();
                            }

                            $updateCnt3 = execUpdtInsSQL("INSERT INTO mcf.mcf_customers_ind_hstrc(
                                    ind_profile_id, cust_id, first_name, sur_name, other_names, title,
                                    local_id_no, org_id, gender, marital_status, date_of_birth, place_of_birth,
                                    religion, res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                    cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                    lnkd_firm_site_id, created_by, creation_date, last_update_by,
                                    last_update_date, new_company, new_company_loc, sign_img_location, rvsn_ttl)
                            SELECT ind_profile_id, cust_id, first_name, sur_name, other_names, title,
                                    local_id_no, org_id, gender, marital_status, date_of_birth, place_of_birth,
                                    religion, res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                    cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                    lnkd_firm_site_id, created_by, creation_date, last_update_by,
                                    last_update_date, new_company, new_company_loc, sign_img_location, rvsn_ttl
                                    FROM mcf.mcf_customers_ind WHERE cust_id = $custID");

                            if ($updateCnt3 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic Individual Customer Record!<br/></div>';
                                exit();
                            }

                            $sqlQry345 = "SELECT * FROM mcf.mcf_prsn_national_ids WHERE person_id = $custID AND person_type = 'Individual Customer'";
                            $resultQry345 = executeSQLNoParams($sqlQry345);
                            $rowCntQry345 = loc_db_num_rows($resultQry345);

                            if($rowCntQry345 > 0) {
                                //mcf_prsn_national_ids
                                $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_national_ids SET rvsn_ttl = (rvsn_ttl+1),"
                                        . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $custID AND person_type = 'Individual Customer'");
                                if ($updateCnt7 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to UPDATE National ID Record!<br/></div>';
                                    exit();
                                }
                                //NATIONAL IDS
                                $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids_hstrc(
                                        person_id, nationality, id_number, created_by, creation_date,
                                        last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                        date_issued, expiry_date, other_info, person_type, rvsn_ttl)
                                SELECT person_id, nationality, id_number, created_by, creation_date,
                                        last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                        date_issued, expiry_date, other_info, person_type, rvsn_ttl
                                        FROM mcf.mcf_prsn_national_ids WHERE person_id = $custID AND person_type = 'Individual Customer'");

                                if ($updateCnt9 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to INSERT Historic National ID Record!<br/></div>';
                                    exit();
                                }
                            }

                            $sqlQry2 = "SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Personal Customer'";
                            $resultQry2 = executeSQLNoParams($sqlQry2);
                            $rowCntQry2 = loc_db_num_rows($resultQry2);

                            if ($rowCntQry2 > 0) {
                                //ADDITIONAL PERSON DATA
                                //mcf_extra_data
                                $updateCnt8 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data SET rvsn_ttl = (rvsn_ttl+1),"
                                        . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE src_pk_id = $custID AND src_type = 'Personal Customer'");
                                if ($updateCnt8 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to UPDATE Additional Customer Data!<br/></div>';
                                    exit();
                                }

                                $updateCnt10 = execUpdtInsSQL("INSERT INTO mcf.mcf_extra_data_hstrc(
                                            src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl)
                                    SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl
                                            FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Personal Customer'");

                                if ($updateCnt10 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to INSERT Historic Additional Person Record!<br/></div>';
                                    exit();
                                }
                            }

                            //BACKUP ALL IMAGES

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");
                            echo json_encode($response);
                        }
                        else if ($actyp == 5) {
                            //Import Individual Customers
                            $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                            session_write_close();
                            $affctd = 0;
                            if ($dataToSend != "") {
                                $variousRows = explode("|", $dataToSend);
                                $total = count($variousRows);
                                for ($z = 0; $z < $total; $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 28) {
                                        $number = cleanInputData1($crntRow[0]);
                                        $idNo = trim((cleanInputData1($crntRow[1])));
                                        $title = trim(cleanInputData1($crntRow[2]));
                                        $firstName = cleanInputData1($crntRow[3]);
                                        $surName = cleanInputData1($crntRow[4]);
                                        $otherNames = cleanInputData1($crntRow[5]);
                                        $gender = trim(cleanInputData1($crntRow[6]));
                                        $maritalStatus = trim(cleanInputData1($crntRow[7]));
                                        $dob = cleanInputData1($crntRow[8]);
                                        $pob = cleanInputData1($crntRow[9]);
                                        $nationality = cleanInputData1($crntRow[10]);
                                        $homeTown = cleanInputData1($crntRow[11]);
                                        $religion = cleanInputData1($crntRow[12]);
                                        $lnkdFirmName = cleanInputData1($crntRow[13]);
                                        $lnkdFirmLoc = cleanInputData1($crntRow[14]);
                                        $email = cleanInputData1($crntRow[15]);
                                        $telNo = cleanInputData1($crntRow[16]);
                                        $mobileNo = cleanInputData1($crntRow[17]);
                                        $faxNo = cleanInputData1($crntRow[18]);
                                        $postalAddress = cleanInputData1($crntRow[19]);
                                        $residentialAddress = cleanInputData1($crntRow[20]);
                                        $relation = cleanInputData1($crntRow[21]);
                                        $startDate = cleanInputData1($crntRow[22]);
                                        $endDate = cleanInputData1($crntRow[23]);
                                        $prsnType = cleanInputData1($crntRow[24]);
                                        $bnkBranch = cleanInputData1($crntRow[25]);
                                        $rcdStatus = cleanInputData1($crntRow[26]);
                                        $segment1 = cleanInputData1($crntRow[27]);

                                        $profileID = getCustPrflIdDtaImprt($idNo, $orgID);
                                        $custID = getCustIdDtaImprt($idNo, $orgID);

                                        if ($z == 0) {
                                            if (strtoupper($number) == "NO." && strtoupper($idNo) == "CUSTOMER ID**" && strtoupper($title) == "TITLE**") {
                                                continue;
                                            } else {
                                                $arr_content['percent'] = 100;
                                                $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                                //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                                $arr_content['msgcount'] = $total;
                                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                                break;
                                            }
                                        }
                                        /*
                                          if ($idNo == "" || $title == "" || $firstName == "" || $surName == "" || gender == "" || maritalStatus == "" || dob == "" || $nationality == "" || lnkdFirmName == "" || lnkdFirmLoc == "" || $mobileNo == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                          continue;
                                          } */

                                        $bnkBranchID = getGnrlRecID("org.org_sites_locations", "location_code_name", "location_id", $bnkBranch, $orgID);
                                        $dateStr = getDB_Date_time();
                                        $timeMlscnd = getDB_time_Millisecond();
                                        $lnkdFirmID = getGnrlRecID2("scm.scm_cstmr_suplr", "cust_sup_name", "cust_sup_id", $lnkdFirmName);
                                        $lnkdFirmLocID = getGnrlRecIDExtr("scm.scm_cstmr_suplr_sites", "site_name", "cust_supplier_id", "cust_sup_site_id", $lnkdFirmLoc, $lnkdFirmID);

                                        if ($custID <= 0) {
                                            $custID = getNewCustID();
                                            createGnrlCustTblDataDtaImprt($startDate, $endDate, 'Individual', $bnkBranchID, $relation, $dateStr, $timeMlscnd, $idNo, $custID);
                                            //$custID = getGnrlCustIdDtaImprt($bnkBranchID, $dateStr, 'Individual', $orgID, $usrID, $timeMlscnd);
                                            $affctd += createPrsnBasicDtaImprt($orgID, $custID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $segment1);
                                        } else {
                                            $affctd += updatePrsnBasicDtaImprt($orgID, $profileID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $rvsnTtl, $segment1);
                                            updateCustTblData($startDate, $endDate, $custID, $bnkBranchID, $relation, $rvsnTtl, $idNo);
                                        }

                                    saveAddtnlCstmrData($custID, "Personal Customer", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", $rvsnTtl);
                                    }
                                    $percent = round((($z + 1) / $total) * 100, 2);
                                    $arr_content['percent'] = $percent;
                                    if ($percent >= 100) {
                                        $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Individual Customer(s) imported.";
                                        $arr_content['msgcount'] = $total;
                                    } else {
                                        $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Individual Customers...Please Wait..." . ($z + 1) . " out of " . $total . " Individual Customer(s) imported.";
                                    }
                                    file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                }
                            } else {
                                $percent = 100;
                                $arr_content['percent'] = $percent;
                                $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                                $arr_content['msgcount'] = "";
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        }
                        else if ($actyp == 6) {
                            //Checked Importing Process Status
                            header('Content-Type: application/json');
                            $file = $ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho";
                            if (file_exists($file)) {
                                $text = file_get_contents($file);
                                echo $text;

                                $obj = json_decode($text);
                                if ($obj->percent >= 100) {
                                    unlink($file);
                                }
                            } else {
                                echo json_encode(array("percent" => null, "message" => null));
                            }
                        }
                        else if ($actyp == 7) {
                            //Import national Ids
                            $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                            session_write_close();
                            $affctd = 0;
                            if ($dataToSend != "") {
                                $variousRows = explode("|", $dataToSend);
                                $total = count($variousRows);
                                for ($z = 0; $z < $total; $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 7) {
                                        $custNo = cleanInputData1($crntRow[0]);
                                        $nicCountry = trim((cleanInputData1($crntRow[1])));
                                        $nicIDType = trim(cleanInputData1($crntRow[2]));
                                        $nicIDNo = cleanInputData1($crntRow[3]);
                                        $nicDateIssd = cleanInputData1($crntRow[4]);
                                        $nicExpDate = cleanInputData1($crntRow[5]);
                                        $nicPrsnType = trim(cleanInputData1($crntRow[6]));

                                        $rvsnTtl = getGnrlRecID("mcf.mcf_customers", "id_no", "rvsn_ttl", $custNo, $orgID);
                                        $custID = getGnrlRecID("mcf.mcf_customers", "id_no", "cust_id", $custNo, $orgID);

                                        if ($z == 0) {
                                            if (strtoupper($custNo) == "CUST NO" && strtoupper($nicCountry) == "NATIONALITY**" && strtoupper($nicIDType) == "ID TYPE**") {
                                                continue;
                                            } else {
                                                $arr_content['percent'] = 100;
                                                $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                                //.strtoupper($custNo) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                                $arr_content['msgcount'] = $total;
                                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                                break;
                                            }
                                        }
                                        /*
                                          if ($nicCountry == "" || $nicIDType == "" || $nicIDNo == "" || $nicDateIssd == "" || nicPrsnType == "" || maritalStatus == "" || dob == "" || $nationality == "" || lnkdFirmName == "" || lnkdFirmLoc == "" || $mobileNo == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                          continue;
                                          } */


                                        $dateStr = getDB_Date_time();
                                        $timeMlscnd = (int)getDB_time_Millisecond() + (int)$z;

                                        $ntnltyIDExstncCnt = checkIDTypeSave($nicCountry, $nicIDType, $nicIDNo, $rvsnTtl);

                                        $affctd += createPrsnCustNtnlIDDtaImport($custID, $nicCountry, $nicIDNo, $nicIDType, $nicDateIssd, $nicExpDate, "", $nicPrsnType, $rvsnTtl);

                                    }
                                    $percent = round((($z + 1) / $total) * 100, 2);
                                    $arr_content['percent'] = $percent;
                                    if ($percent >= 100) {
                                        $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " National IDs(s) imported.";
                                        $arr_content['msgcount'] = $total;
                                    } else {
                                        $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Individual Customers...Please Wait..." . ($z + 1) . " out of " . $total . " National ID(s) imported.";
                                    }
                                    file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                }
                            } else {
                                $percent = 100;
                                $arr_content['percent'] = $percent;
                                $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                                $arr_content['msgcount'] = "";
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        }
                        else {
                            //SAVE OR SUBMIT
                            $orgid = $_SESSION['ORG_ID'];

                            $profileID = isset($_POST['profileID']) ? cleanInputData($_POST['profileID']) : -1;
                            $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                            $idNo = isset($_POST['idNo']) ? cleanInputData($_POST['idNo']) : "";
                            $title = isset($_POST['title']) ? cleanInputData($_POST['title']) : "";
                            $firstName = isset($_POST['firstName']) ? cleanInputData($_POST['firstName']) : "";
                            $surName = isset($_POST['surName']) ? cleanInputData($_POST['surName']) : "";
                            $otherNames = isset($_POST['otherNames']) ? cleanInputData($_POST['otherNames']) : "";
                            $gender = isset($_POST['gender']) ? cleanInputData($_POST['gender']) : "";
                            $maritalStatus = isset($_POST['maritalStatus']) ? cleanInputData($_POST['maritalStatus']) : "";
                            $dob = isset($_POST['dob']) ? cleanInputData($_POST['dob']) : "";
                            $pob = isset($_POST['pob']) ? cleanInputData($_POST['pob']) : "";
                            $nationality = isset($_POST['nationality']) ? cleanInputData($_POST['nationality']) : "";
                            $homeTown = isset($_POST['homeTown']) ? cleanInputData($_POST['homeTown']) : "";
                            $religion = isset($_POST['religion']) ? cleanInputData($_POST['religion']) : "";
                            $lnkdFirmName = isset($_POST['lnkdFirmName']) ? cleanInputData($_POST['lnkdFirmName']) : "";
                            $lnkdFirmLoc = isset($_POST['lnkdFirmLoc']) ? cleanInputData($_POST['lnkdFirmLoc']) : "";
                            $lnkdFirmID = getGnrlRecID2("scm.scm_cstmr_suplr", "cust_sup_name", "cust_sup_id", $lnkdFirmName);
                            $lnkdFirmLocID = getGnrlRecIDExtr("scm.scm_cstmr_suplr_sites", "site_name", "cust_supplier_id", "cust_sup_site_id", $lnkdFirmLoc, $lnkdFirmID);
                            $email = isset($_POST['email']) ? cleanInputData($_POST['email']) : "";
                            $telNo = isset($_POST['telNo']) ? cleanInputData($_POST['telNo']) : "";
                            $mobileNo = isset($_POST['mobileNo']) ? cleanInputData($_POST['mobileNo']) : "";
                            $faxNo = isset($_POST['faxNo']) ? cleanInputData($_POST['faxNo']) : "";
                            $postalAddress = isset($_POST['postalAddress']) ? cleanInputData($_POST['postalAddress']) : "";
                            $residentialAddress = isset($_POST['residentialAddress']) ? cleanInputData($_POST['residentialAddress']) : "";
                            $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : "-1";
                            $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                            $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";
                            $relation = isset($_POST['relation']) ? cleanInputData($_POST['relation']) : "";
                            $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;

                            //$dateStr = getDB_Date_time();
                            $cstAge = "";
                            //$dateStr = getDB_Date_time();

                            if ($dob != "") {
                                $cstAge = getCustAge(cnvrtDMYToYMD($dob));
                                if ($cstAge < 18) {
                                    if ($cstAge == 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Sorry! Age of Customer (' . $cstAge . ' years ' . getMonthAge(cnvrtDMYToYMD($dob)) . ' Month(s)) is not acceptable</br>Age mus be 18 years and above<br/></div>';
                                    } else {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Sorry! Age of Customer (' . $cstAge . ' years) must be greater than 17 years<br/></div>';
                                    }
                                    exit();
                                }
                            }

                            if ($title != "" &&
                                    $firstName != "" &&
                                    $surName != "" &&
                                    $gender != "" &&
                                    $maritalStatus != "" &&
                                    $dob != "" &&
                                    $nationality != "") {
                                if ($profileID <= 0) {

                                    if(trim($idNo) != ""){
                                        //Check existence of ID
                                        if(doesCustNoExistsSave(trim($idNo))){
                                            $result1 = executeSQLNoParams("SELECT mcf.get_customer_name(cust_type, cust_id), cust_type FROM mcf.mcf_customers "
                                                . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($custNo)) . "'");
                                            while ($row1 = loc_db_fetch_array($result1)) {
                                                echo '<div style="color:red;">SORRY!</br>An existing '.$row1[1].' Customer '.$row1[0].' is already assigned this ID '.$idNo.'!<br/></div>';
                                                exit();
                                            }

                                        }
                                    }

				    $custID = getNewCustID();
                                    createCustTblData($startDate, $endDate, 'Individual', $bnkBranchID, $relation, $dateStr, $custID, $idNo);
                                    //$custID = getCustID($bnkBranchID, $dateStr, 'Individual', $orgid, $usrID);
                                    createPrsnBasic($orgid, $custID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr);
                                } else {
                                    if(trim($idNo) == ""){
                                        echo '<div>Customer ID No is required!<br/></div>';
                                        exit();
                                    } else {
                                        //Check existence of ID
                                        if(doesCustNoExistsUpdate($custID, trim($idNo))){
                                            $result1 = executeSQLNoParams("SELECT mcf.get_customer_name(cust_type, cust_id), cust_type FROM mcf.mcf_customers "
                                                . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($idNo)) . "' and cust_id != $custID");
                                            while ($row1 = loc_db_fetch_array($result1)) {
                                                echo '<div style="color:red;">SORRY!</br>An existing '.$row1[1].' Customer '.$row1[0].' is already assigned this ID '.$idNo.'!<br/></div>';
                                                exit();
                                            }
                                        }
                                    }

                                    updatePrsnBasic($orgid, $profileID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $rvsnTtl);
                                    updateCustTblData($startDate, $endDate, $custID, $bnkBranchID, $relation, $rvsnTtl, $idNo);
                                }
                                $nwImgLoc = "";
                                if ($custID > 0) {
                                    if (isset($_FILES["custPicture"])) {
                                        uploadDaImage($custID, $nwImgLoc, "Picture", $rvsnTtl);
                                    }
                                    if (isset($_FILES["signPicture"])) {
                                        uploadDaImage($custID, $nwImgLoc, "Signature", $rvsnTtl);
                                    }

                                    saveAddtnlCstmrData($custID, $srcType, $addtnlCstmrDataCol1, $addtnlCstmrDataCol2, $addtnlCstmrDataCol3, $addtnlCstmrDataCol4, $addtnlCstmrDataCol5, $addtnlCstmrDataCol6, $addtnlCstmrDataCol7, $addtnlCstmrDataCol8, $addtnlCstmrDataCol9, $addtnlCstmrDataCol10, $addtnlCstmrDataCol11, $addtnlCstmrDataCol12, $addtnlCstmrDataCol13, $addtnlCstmrDataCol14, $addtnlCstmrDataCol15, $addtnlCstmrDataCol16, $addtnlCstmrDataCol17, $addtnlCstmrDataCol18, $addtnlCstmrDataCol19, $addtnlCstmrDataCol20, $addtnlCstmrDataCol21, $addtnlCstmrDataCol22, $addtnlCstmrDataCol23, $addtnlCstmrDataCol24, $addtnlCstmrDataCol25, $addtnlCstmrDataCol26, $addtnlCstmrDataCol27, $addtnlCstmrDataCol28, $addtnlCstmrDataCol29, $addtnlCstmrDataCol30, $addtnlCstmrDataCol31, $addtnlCstmrDataCol32, $addtnlCstmrDataCol33, $addtnlCstmrDataCol34, $addtnlCstmrDataCol35, $addtnlCstmrDataCol36, $addtnlCstmrDataCol37, $addtnlCstmrDataCol38, $addtnlCstmrDataCol39, $addtnlCstmrDataCol40, $addtnlCstmrDataCol41, $addtnlCstmrDataCol42, $addtnlCstmrDataCol43, $addtnlCstmrDataCol44, $addtnlCstmrDataCol45, $addtnlCstmrDataCol46, $addtnlCstmrDataCol47, $addtnlCstmrDataCol48, $addtnlCstmrDataCol49, $addtnlCstmrDataCol50, $rvsnTtl);
                                }

                                if ($shdSbmt > 0) {//SUBMIT FOR APPROVAL
                                    $errMsg = "";
                                    //                                if ($custID > 0) {
                                    //                                    $srcDocID = $custID;
                                    //                                    $srcDocType = "Customer Data";
                                    //                                    $routingID = -1;
                                    //                                    $inptSlctdRtngs = "";
                                    //                                    $actionToPrfrm = "Initiate";
                                    //                                    $errMsg .= "" . mcfLoanAppsReqMsgActns($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                                    //                                }
                                    $tblNm = "mcf.mcf_customers";
                                    if ($rvsnTtl > 0) {
                                        $tblNm = "mcf.mcf_customers_hstrc";
                                    }

                                    $updateCnt = execUpdtInsSQL("UPDATE $tblNm SET status = 'Unauthorized',"
                                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID"
                                            . " AND rvsn_ttl = $rvsnTtl");


                                    if ($updateCnt > 0) {
                                        $response = array('custID' => $custID,
                                            'sbmtMsg' => "Change Request submitted successfully for AUTHORIZATION");
                                    } else {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to Submit Data for AUTHORIZATION!<br/></div>';
                                        exit();
                                    }

                                    echo json_encode($response);
                                } else {

                                    $localIdNo = getGnrlRecNm("mcf.mcf_customers_ind", "cust_id", "local_id_no", $custID);
                                    if ($profileID <= 0) {
                                        $profileID = getGnrlRecNm("mcf.mcf_customers_ind", "cust_id", "ind_profile_id", $custID);
                                    }
                                    echo json_encode(array("custID" => $custID, "profileID" => $profileID, "localIdNo" => $localIdNo));
                                    exit();
                                }
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Either the New Person ID No. is in Use <br/>or Data Supplied is Incomplete!<br/></div>';
                                exit();
                            }
                        }
                    } else if ($vwtyp == "5") {//NATIONAL IDS
                        //var_dump($_POST);
                        $ntnlIDCardsCountry = isset($_POST['ntnlIDCardsCountry']) ? cleanInputData($_POST['ntnlIDCardsCountry']) : "";
                        $ntnlIDCardsIDTyp = isset($_POST['ntnlIDCardsIDTyp']) ? cleanInputData($_POST['ntnlIDCardsIDTyp']) : "";
                        $ntnlIDCardsIDNo = isset($_POST['ntnlIDCardsIDNo']) ? cleanInputData($_POST['ntnlIDCardsIDNo']) : "";
                        $ntnlIDCardsDateIssd = isset($_POST['ntnlIDCardsDateIssd']) ? cleanInputData($_POST['ntnlIDCardsDateIssd']) : "";
                        $ntnlIDCardsExpDate = isset($_POST['ntnlIDCardsExpDate']) ? cleanInputData($_POST['ntnlIDCardsExpDate']) : "";
                        $ntnlIDCardsOtherInfo = isset($_POST['ntnlIDCardsOtherInfo']) ? cleanInputData($_POST['ntnlIDCardsOtherInfo']) : "";

                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                        $ntnlIDpKey = isset($_POST['ntnlIDpKey']) ? cleanInputData($_POST['ntnlIDpKey']) : -1;
                        $custPrsnID = isset($_POST['custPrsnID']) ? cleanInputData($_POST['custPrsnID']) : -1;

                        $dateStr = getDB_Date_time();
                        $recCnt = 0;

                        if ($custPrsnID > 0 && $ntnlIDCardsCountry != "Please Select..." && $ntnlIDCardsIDTyp != "Please Select..." && trim($ntnlIDCardsIDNo) != "" && $ntnlIDCardsDateIssd != "" && $ntnlIDCardsExpDate != "") {
                            if ($ntnlIDpKey <= 0) {

                                $ntnltyIDExstncCnt = checkIDTypeSave($ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl);
                                if ((int) $ntnltyIDExstncCnt > 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Sorry! Failed to Add National ID!<br/>Record with details <b>' . $ntnlIDCardsCountry . ',' . $ntnlIDCardsIDTyp . ',' . $ntnlIDCardsIDNo . '</b> exists</div>';
                                    exit();
                                }

                                $recCnt = createPrsnCustNtnlID($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, "Individual Customer", $rvsnTtl);

                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to National ID!<br/></div>';
                                    exit();
                                }
                            } else {
                                $ntnltyIDExstncCnt = checkIDTypeUpdate($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl);
                                if ((int) $ntnltyIDExstncCnt > 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Sorry! Failed to Update National ID!<br/>Record with details <b>' . $ntnlIDCardsCountry . ',' . $ntnlIDCardsIDTyp . ',' . $ntnlIDCardsIDNo . '</b> exists</div>';
                                    exit();
                                }

                                $recCnt = updatePrsnCustNtnlID($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, "Individual Customer", $ntnlIDpKey, $rvsnTtl);
                            }

                            if ($ntnlIDpKey <= 0) {

                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to add National ID!<br/></div>';
                                    exit();
                                }
                                echo json_encode(array("ntnlIDpKey" => $ntnlIDpKey));
                            } else {
                                //EXISTING DIRECTOR
                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to update National ID!<br/></div>';
                                    exit();
                                } else {
                                    echo json_encode(array("ntnlIDpKey" => $ntnlIDpKey));
                                }
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please complete the National ID Form providing all required data!<br/></div>';
                            exit();
                        }
                    }
                } else if ($subPgNo == 1.2 || $subPgNo == 1.3) {//CORPORATE CUSTOMER OR CUSTOMER GROUPS
                    if ($vwtyp == "0") {// BASIC DATA
                        $dateStr = getDB_Date_time();

                        if ($actyp == 1) {
                            //WITHDRAWN
                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Withdrawn',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request WITHDRAWN successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to WITHDRAWN Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        } else if ($actyp == 2) {
                            //REJECT
                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Rejected',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request REJECTED successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to REJECT Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        }
                        else if ($actyp == 3) {
                            //AUTHORIZE
                            $errMsg = "";

                            $tblNm1 = "mcf.mcf_customers";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_customers_hstrc";
                            }

                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Authorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr',"
                                    . "authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE cust_id = $custID");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 1!<br/></div>';
                                exit();
                            }

                            if ($rvsnTtl > 0) {
                                //FETCH ORIGINAL DATA
                                $orgnlCustDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers WHERE cust_id = $custID");
                                //CORPORATE CUSTOMER
                                $orgnlProfileDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_corp WHERE cust_id = $custID");
                                //CORPORATE DIRECTORS
                                $orgnlNtlnlIDDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_corporate_directors WHERE cust_id = $custID");
                                //ADDITIONAL PERSON DATA
                                $orgnlAdtnlDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID"
                                        . " AND src_type = 'Corporate Customer'");
                                if ($subPgNo == 1.3) {
                                    //GROUP MEMBERS
                                    $orgnlNtlnlIDDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_group_members WHERE grp_cust_id = $custID");
                                    //ADDITIONAL PERSON DATA
                                    $orgnlAdtnlDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID"
                                            . " AND src_type = 'Group Customer'");
                                }
                                //FETCH IMAGES
                                //FETCH CURRENT DATA
                                //$crntCustDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl");
                                //$crntProfileDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_customers_ind_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl");
                                //MOVE CURRENT TO ORIGINAL
                                //mcf_customers_hstrc TO mcf_customers
                                $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers
                                    SET branch_id=subquery.branch_id,
                                        status=subquery.status,
                                        relation_type=subquery.relation_type,
                                        valid_start_date=subquery.valid_start_date,
                                        valid_end_date=subquery.valid_end_date,
                                        authorized_by_person_id=subquery.authorized_by_person_id,
                                        autorization_date=subquery.autorization_date,
                                        last_update_by=subquery.last_update_by,
                                        last_update_date=subquery.last_update_date,
                                        chngs_pndng = 0
                                    FROM (SELECT cust_id, cust_type, created_by, creation_date, last_update_by,
                                           last_update_date, relation_type, status, valid_start_date, valid_end_date,
                                           org_id, branch_id, authorized_by_person_id, autorization_date,
                                           rvsn_ttl, row_id
                                      FROM mcf.mcf_customers_hstrc WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_customers.cust_id=subquery.cust_id
                                    AND mcf.mcf_customers.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt1 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 2!<br/></div>';
                                    exit();
                                }

                                //echo "CustID=".$custID." rvsnTtl = ".$rvsnTtl;
                                //mcf_customers_corp_hstrc TO mcf_customers_corp
                                $updateCnt2 = execUpdtInsSQL("UPDATE mcf.mcf_customers_corp
                                    SET cust_name=subquery.cust_name,
                                    cust_desc=subquery.cust_desc,
                                    classification=subquery.classification,
                                    date_of_estblshmnt=subquery.date_of_estblshmnt,
                                    firm_brand_name=subquery.firm_brand_name,
                                    type_of_organisation=subquery.type_of_organisation,
                                    company_reg_num=subquery.company_reg_num,
                                    date_of_incorporation=subquery.date_of_incorporation,
                                    type_of_incorporation=subquery.type_of_incorporation,
                                    vat_number=subquery.vat_number,
                                    tin_number=subquery.tin_number,
                                    ssnit_reg_number=subquery.ssnit_reg_number,
                                    no_of_emplyees=subquery.no_of_emplyees,
                                    contact_nos=subquery.contact_nos,
                                    email=subquery.email,
                                    pstl_address=subquery.pstl_address,
                                    last_update_by=subquery.last_update_by,
                                    last_update_date=subquery.last_update_date,
                                    local_id_no=subquery.local_id_no,
                                    nature_of_business=subquery.nature_of_business,
                                    res_address=subquery.res_address,
                                    contact_no_fax=subquery.contact_no_fax,
                                    meeting_days=subquery.meeting_days,
                                    is_enabled=subquery.is_enabled
                                    FROM (SELECT corp_profile_id, cust_id, cust_name, cust_desc, classification,
                                            org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
                                            company_reg_num, date_of_incorporation, type_of_incorporation,
                                            vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
                                            email, pstl_address, created_by, creation_date, last_update_by,
                                            last_update_date, local_id_no, nature_of_business, res_address,
                                            contact_no_fax, meeting_days, is_enabled, rvsn_ttl, row_id
                                       FROM mcf.mcf_customers_corp_hstrc WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_customers_corp.cust_id=subquery.cust_id
                                    AND mcf.mcf_customers_corp.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt2 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3!<br/></div>';
                                    exit();
                                }

                                $sqlQry2 = "SELECT * FROM mcf.mcf_corporate_directors_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl";
                                if ($subPgNo == 1.3) {
                                    $sqlQry2 = "SELECT * FROM mcf.mcf_group_members_hstrc WHERE grp_cust_id = $custID AND rvsn_ttl = $rvsnTtl";
                                }
                                $resultQry2 = executeSQLNoParams($sqlQry2);
                                $rowCntQry2 = loc_db_num_rows($resultQry2);

                                if ($rowCntQry2 > 0) {
                                    $sqlQry9 = "SELECT director_id
                                   FROM mcf.mcf_corporate_directors_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl";
                                    if ($subPgNo == 1.3) {
                                        $sqlQry9 = "SELECT grp_member_id
                                   FROM mcf.mcf_group_members_hstrc WHERE grp_cust_id = $custID AND rvsn_ttl = $rvsnTtl";
                                    }
                                    $resultQry9 = executeSQLNoParams($sqlQry9);
                                    while ($row9 = loc_db_fetch_array($resultQry9)) {
                                        $directorID = $row9[0];
                                        $sqlQry8 = "SELECT * FROM mcf.mcf_corporate_directors WHERE director_id = $directorID";
                                        if ($subPgNo == 1.3) {
                                            $sqlQry8 = "SELECT * FROM mcf.mcf_group_members WHERE grp_member_id = $directorID";
                                        }
                                        if ($directorID < 0) {
                                            $sqlQry8 = "SELECT * FROM mcf.mcf_corporate_directors WHERE director_id = (-1*$directorID)";
                                            if ($subPgNo == 1.3) {
                                                $sqlQry8 = "SELECT * FROM mcf.mcf_group_members WHERE grp_member_id = (-1*$directorID)";
                                            }
                                        }
                                        $resultQry8 = executeSQLNoParams($sqlQry8);
                                        $rowCntQry8 = loc_db_num_rows($resultQry8);
                                        if ($rowCntQry8 <= 0) {
                                            //INSERT
                                            $updateCnt5 = 0;
                                            if ($subPgNo == 1.2) {
                                                $updateCnt5 = execUpdtInsSQL("INSERT INTO mcf.mcf_corporate_directors(
                                                                director_id, cust_id, created_by, creation_date, last_update_by,
                                                                last_update_date, person_cust_id, start_date_active, end_date_active,
                                                                source_type, rvsn_ttl, is_approved)
                                                       SELECT director_id, cust_id, created_by, creation_date, last_update_by,
                                                                last_update_date, person_cust_id, start_date_active, end_date_active,
                                                                source_type, rvsn_ttl, 'Yes'
                                                    FROM mcf.mcf_corporate_directors_hstrc WHERE director_id = $directorID
                                                        AND rvsn_ttl = $rvsnTtl");
                                            } else {
                                                $updateCnt5 = execUpdtInsSQL("INSERT INTO mcf.mcf_group_members(
                                                            grp_member_id, grp_cust_id, cust_id, position, created_by,
                                                            creation_date, last_update_by, last_update_date, start_date_active,
                                                            end_date_active, rvsn_ttl, is_approved)
                                                    SELECT grp_member_id, grp_cust_id, cust_id, position, created_by,
                                                            creation_date, last_update_by, last_update_date, start_date_active,
                                                            end_date_active, rvsn_ttl,'Yes'
                                                    FROM mcf.mcf_group_members_hstrc WHERE grp_member_id = $directorID");
                                            }

                                            if ($updateCnt5 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-5!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            if ($directorID < 0) {
                                                $updateCnt55 = 0;
                                                if ($subPgNo == 1.2) {
                                                    $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_corporate_directors WHERE director_id = (-1*$directorID)");
                                                } else {
                                                    $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_group_members WHERE grp_member_id = (-1*$directorID)");
                                                }
                                                if ($updateCnt55 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                                    exit();
                                                }
                                            } else {
                                                //UPDATE
                                                //mcf_prsn_national_ids_hstrc TO mcf_prsn_national_ids
                                                $updateCnt56 = 0;
                                                if ($subPgNo == 1.2) {
                                                    $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_corporate_directors
                                                    SET last_update_by=subquery.last_update_by,
                                                            last_update_date=subquery.last_update_date,
                                                            person_cust_id=subquery.person_cust_id,
                                                            start_date_active=subquery.start_date_active,
                                                            end_date_active=subquery.end_date_active,
                                                            source_type=subquery.source_type
                                                    FROM (SELECT director_id, cust_id, created_by, creation_date, last_update_by,
                                                            last_update_date, person_cust_id, start_date_active, end_date_active,
                                                            source_type, row_id, rvsn_ttl
                                                       FROM mcf.mcf_corporate_directors_hstrc WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl
                                                           AND director_id = $directorID) AS subquery
                                                    WHERE mcf.mcf_corporate_directors.cust_id=subquery.cust_id
                                                    AND mcf.mcf_corporate_directors.director_id=subquery.director_id
                                                    AND mcf.mcf_corporate_directors.rvsn_ttl = subquery.rvsn_ttl");
                                                } else {
                                                    $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_group_members
                                                    SET grp_member_id=subquery.grp_member_id,
                                                        cust_id=subquery.cust_id,
                                                        position=subquery.position,
                                                        last_update_by=subquery.last_update_by,
                                                        last_update_date=subquery.last_update_date,
                                                        start_date_active=subquery.start_date_active,
                                                        end_date_active=subquery.end_date_active
                                                  FROM (SELECT grp_member_id, grp_cust_id, cust_id, position, created_by,
                                                        creation_date, last_update_by, last_update_date, start_date_active,
                                                        end_date_active, rvsn_ttl, is_approved, row_id
                                                   FROM mcf.mcf_group_members_hstrc WHERE grp_cust_id = $custID AND rvsn_ttl = $rvsnTtl
                                                           AND grp_member_id = $directorID)AS subquery
                                                    WHERE mcf.mcf_group_members.grp_cust_id=subquery.grp_cust_id
                                                    AND mcf.mcf_group_members.grp_member_id=subquery.grp_member_id
                                                    AND mcf.mcf_group_members.rvsn_ttl = subquery.rvsn_ttl");
                                                }

                                                if ($updateCnt56 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-56!<br/></div>';
                                                    exit();
                                                }
                                            }
                                        }
                                    }
                                }

                                $cstType = "Corporate Customer";
                                $sqlQry3 = "SELECT * FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $custID "
                                        . "AND src_type = 'Corporate Customer' and rvsn_ttl = $rvsnTtl";
                                if ($subPgNo == 1.3) {
                                    $cstType = "Customer Group";
                                    $sqlQry3 = "SELECT * FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $custID "
                                            . "AND src_type = 'Customer Group' and rvsn_ttl = $rvsnTtl";
                                }
                                $resultQry3 = executeSQLNoParams($sqlQry3);
                                $rowCntQry3 = loc_db_num_rows($resultQry3);

                                if ($rowCntQry3 > 0) {
                                    //ADDITIONAL PERSON DATA
                                    //mcf_extra_data_hstrc TO mcf_extra_data
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data
                                    SET data_col1= subquery.data_col1, data_col2= subquery.data_col2, data_col3= subquery.data_col3,
                                        data_col4= subquery.data_col4, data_col5= subquery.data_col5,
                                        data_col6= subquery.data_col6, data_col7= subquery.data_col7, data_col8= subquery.data_col8,
                                        data_col9= subquery.data_col9, data_col10= subquery.data_col10, data_col11= subquery.data_col11,
                                        data_col12= subquery.data_col12, data_col13= subquery.data_col13, data_col14= subquery.data_col14,
                                        data_col15= subquery.data_col15, data_col16= subquery.data_col16, data_col17= subquery.data_col17,
                                        data_col18= subquery.data_col18, data_col19= subquery.data_col19, data_col20= subquery.data_col20,
                                        data_col21= subquery.data_col21, data_col22= subquery.data_col22, data_col23= subquery.data_col23,
                                        data_col24= subquery.data_col24, data_col25= subquery.data_col25, data_col26= subquery.data_col26,
                                        data_col27= subquery.data_col27, data_col28= subquery.data_col28, data_col29= subquery.data_col29,
                                        data_col30= subquery.data_col30, data_col31= subquery.data_col31, data_col32= subquery.data_col32,
                                        data_col33= subquery.data_col33, data_col34= subquery.data_col34, data_col35= subquery.data_col35,
                                        data_col36= subquery.data_col36, data_col37= subquery.data_col37, data_col38= subquery.data_col38,
                                        data_col39= subquery.data_col39, data_col40= subquery.data_col40, data_col41= subquery.data_col41,
                                        data_col42= subquery.data_col42, data_col43= subquery.data_col43, data_col44= subquery.data_col44,
                                        data_col45= subquery.data_col45, data_col46= subquery.data_col46, data_col47= subquery.data_col47,
                                        data_col48= subquery.data_col48, data_col49= subquery.data_col49, data_col50= subquery.data_col50
                                    FROM (SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                        data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                        data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                        data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                        data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                        data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                        data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                        data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                        data_col48, data_col49, data_col50, created_by, creation_date,
                                        last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl, row_id
                                   FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $custID "
                                            . "AND src_type = '$cstType' and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_extra_data.src_pk_id=subquery.src_pk_id
                                    AND mcf.mcf_extra_data.rvsn_ttl = subquery.rvsn_ttl
                                    AND mcf.mcf_extra_data.src_type = subquery.src_type
                                    AND mcf.mcf_extra_data.src_type = '$cstType'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //MOVE ORGINAL DATA TO HISTORIC
                                //mcf_customers TO mcf_customers_hstrc
                                while ($row = loc_db_fetch_array($orgnlCustDataRslt)) {
                                    $updateCnt3 = execUpdtInsSQL("UPDATE mcf.mcf_customers_hstrc
                                        SET branch_id=$row[11],
                                            relation_type = '$row[6]',
                                            status='$row[7]',
                                            valid_start_date='$row[8]',
                                            valid_end_date='$row[9]',
                                            authorized_by_person_id=$row[12],
                                            autorization_date='$row[13]',
                                            last_update_by=$row[4],
                                            last_update_date='$row[5]'
                                         WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl");

                                    if ($updateCnt3 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 4!<br/></div>';
                                        exit();
                                    }
                                }

                                //mcf_customers_corp TO mcf_customers_corp_hstrc
                                while ($row1 = loc_db_fetch_array($orgnlProfileDataRslt)) {
                                    $updateCnt4 = execUpdtInsSQL("UPDATE mcf.mcf_customers_corp_hstrc
                                         SET cust_name='$row1[2]', cust_desc='$row1[3]', classification='$row1[4]',
                                        org_id=$row1[5], date_of_estblshmnt='$row1[6]', firm_brand_name='$row1[7]', type_of_organisation='$row1[8]',
                                        company_reg_num='$row1[9]', date_of_incorporation='$row1[10]', type_of_incorporation='$row1[11]',
                                        vat_number='$row1[12]', tin_number='$row1[13]', ssnit_reg_number='$row1[14]', no_of_emplyees=$row1[15],
                                            contact_nos='$row1[16]', email='$row1[17]', pstl_address='$row1[18]',
                                            last_update_by=$row1[21], last_update_date='$row1[22]', local_id_no='$row1[23]', nature_of_business='$row1[24]',
                                            res_address='$row1[25]', contact_no_fax='$row1[26]', meeting_days='$row1[27]', is_enabled='$row1[28]'
                                      WHERE cust_id = $custID and rvsn_ttl = $rvsnTtl");

                                    if ($updateCnt4 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //CORPORATE DIRECTORS
                                $updateCnt51 = 0;
                                if ($subPgNo == 1.2) {
                                    $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_corporate_directors_hstrc WHERE "
                                            . "cust_id = $custID and rvsn_ttl = $rvsnTtl");
                                } else {
                                    $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_group_members_hstrc WHERE "
                                            . "grp_cust_id = $custID and rvsn_ttl = $rvsnTtl");
                                }

                                //mcf_prsn_national_ids TO mcf_prsn_national_ids_hstrc
                                while ($row2 = loc_db_fetch_array($orgnlNtlnlIDDataRslt)) {
                                    if ($subPgNo == 1.2) {
                                        $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_corporate_directors_hstrc(
                                                director_id, cust_id, created_by, creation_date, last_update_by,
                                                last_update_date, person_cust_id, start_date_active, end_date_active,
                                                source_type, rvsn_ttl, is_approved)
                                        VALUES ($row2[0], $row2[1], $row2[2],'$row2[3]',$row2[4],'$row2[5]', $row2[6], '$row2[7]', '$row2[8]',
                                               '" . loc_db_escape_string($row2[9]) . "', $row2[10], '$row2[11]')");
                                    } else {
                                        $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_group_members_hstrc(
                                                    grp_member_id, grp_cust_id, cust_id, position, created_by,
                                                    creation_date, last_update_by, last_update_date, start_date_active,
                                                    end_date_active, rvsn_ttl, is_approved)
                                            VALUES ($row2[0], $row2[1], $row2[2],'$row2[3]',$row2[4],'$row2[5]', $row2[6], '$row2[7]', '$row2[8]',
                                               '" . loc_db_escape_string($row2[9]) . "', $row2[10], '$row2[11]')");
                                    }

                                    if ($updateCnt51 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                        exit();
                                    }
                                }


                                //ADDITIONAL PERSON INFO
                                //mcf_extra_data TO mcf_extra_data_hstrc
                                while ($row3 = loc_db_fetch_array($orgnlAdtnlDataRslt)) {
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data_hstrc
                                        SET data_col1= '$row3[1]', data_col2= '$row3[2]', data_col3= '$row3[3]',
                                        data_col4= '$row3[4]', data_col5= '$row3[5]',
                                        data_col6= '$row3[6]', data_col7= '$row3[7]', data_col8= '$row3[8]',
                                        data_col9= '$row3[9]', data_col10= '$row3[10]', data_col11= '$row3[11]',
                                        data_col12= '$row3[12]', data_col13= '$row3[13]', data_col14= '$row3[14]',
                                        data_col15= '$row3[15]', data_col16= '$row3[16]', data_col17= '$row3[17]',
                                        data_col18= '$row3[18]', data_col19= '$row3[19]', data_col20= '$row3[20]',
                                        data_col21= '$row3[21]', data_col22= '$row3[22]', data_col23= '$row3[23]',
                                        data_col24= '$row3[24]', data_col25= '$row3[25]', data_col26= '$row3[26]',
                                        data_col27= '$row3[27]', data_col28= '$row3[28]', data_col29= '$row3[29]',
                                        data_col30= '$row3[30]', data_col31= '$row3[31]', data_col32= '$row3[32]',
                                        data_col33= '$row3[33]', data_col34= '$row3[34]', data_col35= '$row3[35]',
                                        data_col36= '$row3[36]', data_col37= '$row3[37]', data_col38= '$row3[38]',
                                        data_col39= '$row3[39]', data_col40= '$row3[40]', data_col41= '$row3[41]',
                                        data_col42= '$row3[42]', data_col43= '$row3[43]', data_col44= '$row3[44]',
                                        data_col45= '$row3[45]', data_col46= '$row3[46]', data_col47= '$row3[47]',
                                        data_col48= '$row3[48]', data_col49= '$row3[49]', data_col50= '$row3[50]',
                                        last_update_by=$row3[53], last_update_date='$row3[54]'
                                      WHERE src_pk_id = $custID and rvsn_ttl = $rvsnTtl AND src_type = '$cstType'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                        exit();
                                    }
                                }
                            }

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");

                            echo json_encode($response);
                        }
                        else if ($actyp == 4) {
                            //var_dump($_POST);
                            //MODIFY DATA
                            $errMsg = "";
                            //BACKUP AUTHORIZED DATA
                            //mcf_customers
                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers SET chngs_pndng = 1, rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
                            if ($updateCnt1 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE Customer Record<br/></div>';
                                exit();
                            }

                            $updateCnt2 = execUpdtInsSQL("INSERT INTO mcf.mcf_customers_hstrc(
                                    cust_id, cust_type, created_by, creation_date, last_update_by,
                                    last_update_date, relation_type, status, valid_start_date, valid_end_date,
                                    org_id, branch_id, authorized_by_person_id, autorization_date, rvsn_ttl)
                            SELECT cust_id, cust_type, created_by, creation_date, last_update_by,
                                    last_update_date, relation_type, 'Incomplete', valid_start_date, valid_end_date,
                                    org_id, branch_id, authorized_by_person_id, autorization_date, rvsn_ttl
                                    FROM mcf.mcf_customers WHERE cust_id = $custID AND status IN ('Approved','Authorized')");

                            if ($updateCnt2 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic Customer Record!<br/></div>';
                                exit();
                            }

                            //mcf_customers_corp
                            $updateCnt4 = execUpdtInsSQL("UPDATE mcf.mcf_customers_corp SET rvsn_ttl = (rvsn_ttl+1),"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
                            if ($updateCnt4 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE Corporate Customer Profile!<br/></div>';
                                exit();
                            }

                            $updateCnt3 = execUpdtInsSQL("INSERT INTO mcf.mcf_customers_corp_hstrc(
                                    corp_profile_id, cust_id, cust_name, cust_desc, classification,
                                    org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
                                    company_reg_num, date_of_incorporation, type_of_incorporation,
                                    vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
                                    email, pstl_address, created_by, creation_date, last_update_by,
                                    last_update_date, local_id_no, nature_of_business, res_address,
                                    contact_no_fax, meeting_days, is_enabled, segment1_dataload,
                                    rvsn_ttl)
                            SELECT corp_profile_id, cust_id, cust_name, cust_desc, classification,
                                    org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
                                    company_reg_num, date_of_incorporation, type_of_incorporation,
                                    vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
                                    email, pstl_address, created_by, creation_date, last_update_by,
                                    last_update_date, local_id_no, nature_of_business, res_address,
                                    contact_no_fax, meeting_days, is_enabled, segment1_dataload,
                                    rvsn_ttl
                                    FROM mcf.mcf_customers_corp WHERE cust_id = $custID");

                            if ($updateCnt3 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic Corporate Customer Record!<br/></div>';
                                exit();
                            }


                            if ($subPgNo == 1.2) {
                                //CHECK COUNT OF DIRECTORS RECORD
                                $sqlQry1 = "SELECT * FROM  mcf.mcf_corporate_directors WHERE cust_id = $custID";
                                $resultQry1 = executeSQLNoParams($sqlQry1);
                                $rowCntQry1 = loc_db_num_rows($resultQry1);

                                if ($rowCntQry1 > 0) {
                                    //mcf_corporate_directors
                                    $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_corporate_directors SET rvsn_ttl = (rvsn_ttl+1),"
                                            . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
                                    if ($updateCnt7 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to UPDATE Corporate Director Records!<br/></div>';
                                        exit();
                                    }

                                    //CORPORATE CUSTOMERS
                                    $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_corporate_directors_hstrc(
                                            director_id, cust_id, created_by, creation_date, last_update_by,
                                            last_update_date, person_cust_id, start_date_active, end_date_active,
                                            source_type, rvsn_ttl)
                                    SELECT director_id, cust_id, created_by, creation_date, last_update_by,
                                            last_update_date, person_cust_id, start_date_active, end_date_active,
                                            source_type, rvsn_ttl
                                            FROM mcf.mcf_corporate_directors WHERE cust_id = $custID");

                                    if ($updateCnt9 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to INSERT Historic Corporate Customers Record!<br/></div>';
                                        exit();
                                    }
                                }

                                //ADDITIONAL PERSON DATA
                                $sqlQry2 = "SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Corporate Customer'";
                                $resultQry2 = executeSQLNoParams($sqlQry2);
                                $rowCntQry2 = loc_db_num_rows($resultQry2);

                                if ($rowCntQry2 > 0) {
                                    //mcf_extra_data
                                    $updateCnt8 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data SET rvsn_ttl = (rvsn_ttl+1),"
                                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE src_pk_id = $custID AND src_type = 'Corporate Customer'");
                                    if ($updateCnt8 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to UPDATE Additional Customer Data!<br/></div>';
                                        exit();
                                    }

                                    $updateCnt10 = execUpdtInsSQL("INSERT INTO mcf.mcf_extra_data_hstrc(
                                                src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                                data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                                data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                                data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                                data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                                data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                                data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                                data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                                data_col48, data_col49, data_col50, created_by, creation_date,
                                                last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl)
                                        SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                                data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                                data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                                data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                                data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                                data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                                data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                                data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                                data_col48, data_col49, data_col50, created_by, creation_date,
                                                last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl
                                                FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Corporate Customer'");

                                    if ($updateCnt10 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to INSERT Historic Additional Person Record!<br/></div>';
                                        exit();
                                    }
                                }
                            } else {
                                //CHECK COUNT OF GROUP MEMBERS RECORD
                                $sqlQry1 = "SELECT * FROM  mcf.mcf_group_members WHERE grp_cust_id = $custID";
                                $resultQry1 = executeSQLNoParams($sqlQry1);
                                $rowCntQry1 = loc_db_num_rows($resultQry1);

                                if ($rowCntQry1 > 0) {
                                    //mcf_group_members
                                    $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_group_members SET rvsn_ttl = (rvsn_ttl+1),"
                                            . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE grp_cust_id = $custID");
                                    if ($updateCnt7 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to UPDATE Group Member Records!<br/></div>';
                                        exit();
                                    }

                                    //GROUP MEMBERS
                                    $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_group_members_hstrc(
                                        grp_member_id, grp_cust_id, cust_id, position, created_by,
                                        creation_date, last_update_by, last_update_date, start_date_active,
                                        end_date_active, rvsn_ttl)
                                    SELECT grp_member_id, grp_cust_id, cust_id, position, created_by,
                                        creation_date, last_update_by, last_update_date, start_date_active,
                                        end_date_active, rvsn_ttl
                                            FROM mcf.mcf_group_members WHERE grp_cust_id = $custID");

                                    if ($updateCnt9 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to INSERT Historic Group Members Record!<br/></div>';
                                        exit();
                                    }
                                }

                                //ADDITIONAL PERSON DATA
                                $sqlQry2 = "SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Customer Group'";
                                $resultQry2 = executeSQLNoParams($sqlQry2);
                                $rowCntQry2 = loc_db_num_rows($resultQry2);

                                if ($rowCntQry2 > 0) {
                                    //mcf_extra_data
                                    $updateCnt8 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data SET rvsn_ttl = (rvsn_ttl+1),"
                                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE src_pk_id = $custID AND src_type = 'Customer Group'");
                                    if ($updateCnt8 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to UPDATE Additional Customer Data!<br/></div>';
                                        exit();
                                    }

                                    $updateCnt10 = execUpdtInsSQL("INSERT INTO mcf.mcf_extra_data_hstrc(
                                                src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                                data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                                data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                                data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                                data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                                data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                                data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                                data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                                data_col48, data_col49, data_col50, created_by, creation_date,
                                                last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl)
                                        SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                                data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                                data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                                data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                                data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                                data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                                data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                                data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                                data_col48, data_col49, data_col50, created_by, creation_date,
                                                last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl
                                                FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = 'Customer Group'");

                                    if ($updateCnt10 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to INSERT Historic Additional Person Record!<br/></div>';
                                        exit();
                                    }
                                }
                            }

                            //BACKUP ALL IMAGES

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");
                            echo json_encode($response);
                        }
                        else if ($actyp == 5) {
                            //Import Corporate/Group Customers

			    $addtnlPrsnType = "Corporate Customer";
                            $ctgryName = "Corporate Customers";
                            $cstType = "Corporate";
                            if ($subPgNo == 1.3) {
                                $ctgryName = "Customer Groups";
                                $cstType = "Group";
                                $addtnlPrsnType = "Customer Group";
                            }
                            $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                            session_write_close();
                            $affctd = 0;
                            if ($dataToSend != "") {
                                $variousRows = explode("|", $dataToSend);
                                $total = count($variousRows);
                                for ($z = 0; $z < $total; $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 27) {
                                        $number = cleanInputData1($crntRow[0]);
                                        $idNo = trim((cleanInputData1($crntRow[1])));
                                        $custName = trim(cleanInputData1($crntRow[2]));
                                        $clsfctn = cleanInputData1($crntRow[3]);
                                        $dateOfEstblshmnt = cleanInputData1($crntRow[4]);
                                        $brandName = cleanInputData1($crntRow[5]);
                                        $orgType = trim(cleanInputData1($crntRow[6]));
                                        $regNo = trim(cleanInputData1($crntRow[7]));
                                        $dateOfIncorp = cleanInputData1($crntRow[8]);
                                        $typeOfIncorp = cleanInputData1($crntRow[9]);
                                        $vatNo = cleanInputData1($crntRow[10]);
                                        $tinNo = cleanInputData1($crntRow[11]);
                                        $ssnitRegNo = cleanInputData1($crntRow[12]);
                                        $noOfEmp = cleanInputData1($crntRow[13]);
                                        $contactNos = cleanInputData1($crntRow[14]);
                                        $email = cleanInputData1($crntRow[15]);
                                        $pstlAddress = cleanInputData1($crntRow[16]);
                                        $natureOfBus = cleanInputData1($crntRow[17]);
                                        $resAddress = cleanInputData1($crntRow[18]);
                                        $faxNo = cleanInputData1($crntRow[19]);
                                        $meetingDays = cleanInputData1($crntRow[20]);
                                        $segment1 = cleanInputData1($crntRow[21]);
                                        $startDate = cleanInputData1($crntRow[22]);
                                        $endDate = cleanInputData1($crntRow[23]);
                                        $prsnType = cleanInputData1($crntRow[24]);
                                        $bnkBranch = cleanInputData1($crntRow[25]);
                                        $rcdStatus = cleanInputData1($crntRow[26]);

                                        $profileID = getCrpGrpPrflIdDtaImprt($idNo, $orgID);
                                        $custID = getCrpGrpCustIdDtaImprt($idNo, $orgID);

                                        if ($z == 0) {
                                            if (strtoupper($number) == "NO." && strtoupper($custName) == "CUSTOMER NAME**" && strtoupper($natureOfBus) == "NATURE OF BUSINESS**") {
                                                continue;
                                            } else {
                                                $arr_content['percent'] = 100;
                                                $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                                //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                                $arr_content['msgcount'] = $total;
                                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_crpgrpcstmrimprt_progress.rho", json_encode($arr_content));
                                                break;
                                            }
                                        }
                                        /*
                                          if ($idNo == "" || $title == "" || $firstName == "" || $surName == "" || gender == "" || maritalStatus == "" || dob == "" || $nationality == "" || lnkdFirmName == "" || lnkdFirmLoc == "" || $mobileNo == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                          continue;
                                          } */

                                        $bnkBranchID = getGnrlRecID("org.org_sites_locations", "location_code_name", "location_id", $bnkBranch, $orgID);
                                        $dateStr = getDB_Date_time();
                                        $timeMlscnd = getDB_time_Millisecond();

                                        if ($custID <= 0) {
                                            $custID = getNewCustID();
                                            createGnrlCustTblDataDtaImprt($startDate, $endDate, $cstType, $bnkBranchID, "Customer", $dateStr, $timeMlscnd, $idNo, $custID);
                                            //$custID = getGnrlCustIdDtaImprt($bnkBranchID, $dateStr, $cstType, $orgID, $usrID, $timeMlscnd);
                                            $affctd += createCorpCustDtaImprt($idNo, $custID, $custName, $custName, $clsfctn, $orgID, $dateOfEstblshmnt, $brandName, $orgType, $regNo, $dateOfIncorp, $typeOfIncorp, $vatNo, $tinNo, $ssnitRegNo, $noOfEmp, $contactNos, $email, $pstlAddress, $natureOfBus, $resAddress, $faxNo, $meetingDays, $segment1, $bnkBranch);
                                        } else {
                                            $affctd += updateCorpCustDtaImprt($idNo, $profileID, $custID, $custName, $custName, $clsfctn, $orgID, $dateOfEstblshmnt, $brandName, $orgType, $regNo, $dateOfIncorp, $typeOfIncorp, $vatNo, $tinNo, $ssnitRegNo, $noOfEmp, $contactNos, $email, $pstlAddress, $natureOfBus, $resAddress, $faxNo, $meetingDays, $segment1, $bnkBranch);
                                            updateCustTblData($startDate, $endDate, $custID, $bnkBranchID, "Customer", $idNo);
                                        }

                                    	saveAddtnlCstmrData($custID, $addtnlPrsnType, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", $rvsnTtl);
                                    }
                                    $percent = round((($z + 1) / $total) * 100, 2);
                                    $arr_content['percent'] = $percent;
                                    if ($percent >= 100) {
                                        $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " " . $ctgryName . "(s) imported.";
                                        $arr_content['msgcount'] = $total;
                                    } else {
                                        $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing " . $ctgryName . "...Please Wait..." . ($z + 1) . " out of " . $total . " " . $ctgryName . "(s) imported.";
                                    }
                                    file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_crpgrpcstmrimprt_progress.rho", json_encode($arr_content));
                                }
                            } else {
                                $percent = 100;
                                $arr_content['percent'] = $percent;
                                $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                                $arr_content['msgcount'] = "";
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_crpgrpcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        }
                        else if ($actyp == 6) {
                            //Checked Importing Process Status
                            header('Content-Type: application/json');
                            $file = $ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_crpgrpcstmrimprt_progress.rho";
                            if (file_exists($file)) {
                                $text = file_get_contents($file);
                                echo $text;

                                $obj = json_decode($text);
                                if ($obj->percent >= 100) {
                                    unlink($file);
                                }
                            } else {
                                echo json_encode(array("percent" => null, "message" => null));
                            }
                        } else {

                            $orgid = $_SESSION['ORG_ID'];
                            $dsplyMsg = "";

                            $profileID = isset($_POST['profileID']) ? cleanInputData($_POST['profileID']) : -1;
                            $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                            $idNo = isset($_POST['idNo']) ? cleanInputData($_POST['idNo']) : "";
                            $clsfctn = isset($_POST['clsfctn']) ? cleanInputData($_POST['clsfctn']) : "";
                            $custName = isset($_POST['custName']) ? cleanInputData($_POST['custName']) : "";
                            $natureOfBus = isset($_POST['natureOfBus']) ? cleanInputData($_POST['natureOfBus']) : "";
                            $relation = isset($_POST['relation']) ? cleanInputData($_POST['relation']) : "";
                            $dateOfEstblshmnt = isset($_POST['dateOfEstblshmnt']) ? cleanInputData($_POST['dateOfEstblshmnt']) : "";
                            $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : "-1";
                            $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                            $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";

                            $pstlAddress = isset($_POST['pstlAddress']) ? cleanInputData($_POST['pstlAddress']) : "";
                            $resAddress = isset($_POST['resAddress']) ? cleanInputData($_POST['resAddress']) : "";
                            $email = isset($_POST['email']) ? cleanInputData($_POST['email']) : "";
                            $contactNos = isset($_POST['contactNos']) ? cleanInputData($_POST['contactNos']) : "";
                            $faxNo = isset($_POST['faxNo']) ? cleanInputData($_POST['faxNo']) : "";

                            $brandName = isset($_POST['brandName']) ? cleanInputData($_POST['brandName']) : "";
                            $orgType = isset($_POST['orgType']) ? cleanInputData($_POST['orgType']) : "";
                            $regNo = isset($_POST['regNo']) ? cleanInputData($_POST['regNo']) : "";
                            $dateOfIncorp = isset($_POST['dateOfIncorp']) ? cleanInputData($_POST['dateOfIncorp']) : "";
                            $typeOfIncorp = isset($_POST['typeOfIncorp']) ? cleanInputData($_POST['typeOfIncorp']) : "";
                            $vatNo = isset($_POST['vatNo']) ? cleanInputData($_POST['vatNo']) : "";
                            $tinNo = isset($_POST['tinNo']) ? cleanInputData($_POST['tinNo']) : "";
                            $ssnitRegNo = isset($_POST['ssnitRegNo']) ? cleanInputData($_POST['ssnitRegNo']) : "";
                            $noOfEmp = isset($_POST['noOfEmp']) ? cleanInputData($_POST['noOfEmp']) : 0;
                            $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;

                            $meetingDays = isset($_POST['meetingDays']) ? cleanInputData($_POST['meetingDays']) : "";
                            $corpOGrp = "Corporate";



                            if ($subPgNo == 1.2) {
                                if ($custName == "" || $natureOfBus == "" || $dateOfEstblshmnt == "" || $startDate == "" || $resAddress == "" ||
                                        $email == "" || $contactNos == "" || $brandName == "" || $regNo == "" || $dateOfIncorp == "" || $tinNo == "") {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Data Supplied is Incomplete!<br/></div>';
                                    exit();
                                }
                            } else {
                                $corpOGrp = "Group";
                                if ($custName == "" || $dateOfEstblshmnt == "" || $startDate == "" || $resAddress == "" ||
                                        $contactNos == "" || $meetingDays == "") {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Data Supplied is Incomplete!<br/></div>';
                                    exit();
                                }
                            }

                            if ($profileID <= 0) {

                                if(trim($idNo) != ""){
                                    //Check existence of ID
                                    if(doesCustNoExistsSave(trim($idNo))){
                                        $result1 = executeSQLNoParams("SELECT mcf.get_customer_name(cust_type, cust_id), cust_type FROM mcf.mcf_customers "
                                                . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($custNo)) . "'");
                                        while ($row1 = loc_db_fetch_array($result1)) {
                                            echo '<div style="color:red;">SORRY!</br>An existing '.$row1[1].' Customer '.$row1[0].' is already assigned this ID '.$idNo.'!<br/></div>';
                                            exit();
                                        }

                                    }
                                }

                                $custID = getNewCustID();
                                createCustTblData($startDate, $endDate, $corpOGrp, $bnkBranchID, $relation, $dateStr, $custID, $idNo);

                                //$custID = getCustID($bnkBranchID, $dateStr, $corpOGrp, $orgid, $usrID);

                                if ($custID > 0) {
                                    $rsltCnt = createCorpCust($custID, $custName, $custName, $clsfctn, $orgID, $dateOfEstblshmnt, $brandName, $orgType, $regNo, $dateOfIncorp, $typeOfIncorp, $vatNo, $tinNo, $ssnitRegNo, $noOfEmp, $contactNos, $email, $pstlAddress, $natureOfBus, $resAddress, $faxNo, $meetingDays);
                                } else {
                                    echo '<div><span style="color:\"red;\" font-weight:\"bold !important;\""/>'
                                    . 'Failed to create Customer</span><br/></div>';
                                    exit();
                                }

                                if ($rsltCnt <= 0) {
                                    echo '<div><span style="color:\"red;\" font-weight:\"bold !important;\""/>'
                                    . 'Failed to create Customer</span><br/></div>';
                                    exit();
                                }
                            } else {
                                if(trim($idNo) == ""){
                                    echo '<div>Customer ID No is required!<br/></div>';
                                    exit();
                                } else {
                                    //Check existence of ID
                                    if(doesCustNoExistsUpdate($custID, trim($idNo))){
                                        $result1 = executeSQLNoParams("SELECT mcf.get_customer_name(cust_type, cust_id), cust_type FROM mcf.mcf_customers "
                                                . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($idNo)) . "' and cust_id != $custID");
                                        while ($row1 = loc_db_fetch_array($result1)) {
                                            echo '<div style="color:red;">SORRY!</br>An existing '.$row1[1].' Customer '.$row1[0].' is already assigned this ID '.$idNo.'!<br/></div>';
                                            exit();
                                        }
                                    }
                                }

                                $rsltCnt = updateCorpCust($profileID, $custID, $custName, $custName, $clsfctn, $orgID, $dateOfEstblshmnt, $brandName, $orgType, $regNo, $dateOfIncorp, $typeOfIncorp, $vatNo, $tinNo, $ssnitRegNo, $noOfEmp, $contactNos, $email, $pstlAddress, $natureOfBus, $resAddress, $faxNo, $meetingDays, $rvsnTtl, $idNo);

                                updateCustTblData($startDate, $endDate, $custID, $bnkBranchID, $relation, $rvsnTtl, $idNo);
                            }

                            if ($rsltCnt <= 0) {
                                echo '<div><span style="color:\"red;\" font-weight:\"bold !important;\""/>'
                                . 'Failed to Update Customer</span><br/></div>';
                                exit();
                            }

                            $nwImgLoc = "";
                            if ($custID > 0) {
                                saveAddtnlCstmrData($custID, $srcType, $addtnlCstmrDataCol1, $addtnlCstmrDataCol2, $addtnlCstmrDataCol3, $addtnlCstmrDataCol4, $addtnlCstmrDataCol5, $addtnlCstmrDataCol6, $addtnlCstmrDataCol7, $addtnlCstmrDataCol8, $addtnlCstmrDataCol9, $addtnlCstmrDataCol10, $addtnlCstmrDataCol11, $addtnlCstmrDataCol12, $addtnlCstmrDataCol13, $addtnlCstmrDataCol14, $addtnlCstmrDataCol15, $addtnlCstmrDataCol16, $addtnlCstmrDataCol17, $addtnlCstmrDataCol18, $addtnlCstmrDataCol19, $addtnlCstmrDataCol20, $addtnlCstmrDataCol21, $addtnlCstmrDataCol22, $addtnlCstmrDataCol23, $addtnlCstmrDataCol24, $addtnlCstmrDataCol25, $addtnlCstmrDataCol26, $addtnlCstmrDataCol27, $addtnlCstmrDataCol28, $addtnlCstmrDataCol29, $addtnlCstmrDataCol30, $addtnlCstmrDataCol31, $addtnlCstmrDataCol32, $addtnlCstmrDataCol33, $addtnlCstmrDataCol34, $addtnlCstmrDataCol35, $addtnlCstmrDataCol36, $addtnlCstmrDataCol37, $addtnlCstmrDataCol38, $addtnlCstmrDataCol39, $addtnlCstmrDataCol40, $addtnlCstmrDataCol41, $addtnlCstmrDataCol42, $addtnlCstmrDataCol43, $addtnlCstmrDataCol44, $addtnlCstmrDataCol45, $addtnlCstmrDataCol46, $addtnlCstmrDataCol47, $addtnlCstmrDataCol48, $addtnlCstmrDataCol49, $addtnlCstmrDataCol50, $rvsnTtl);
                            }


                            if ($shdSbmt > 0) {//SUBMIT FOR APPROVAL
                                $errMsg = "";
                                $tblNm = "mcf.mcf_customers";
                                if ($rvsnTtl > 0) {
                                    $tblNm = "mcf.mcf_customers_hstrc";
                                }

                                $updateCnt = execUpdtInsSQL("UPDATE $tblNm SET status = 'Unauthorized',"
                                        . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID"
                                        . " AND rvsn_ttl = $rvsnTtl");


                                if ($updateCnt > 0) {
                                    $response = array('custID' => $custID,
                                        'sbmtMsg' => "Change Request submitted successfully for AUTHORIZATION");
                                } else {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to Submit Data for AUTHORIZATION!<br/></div>';
                                    exit();
                                }

                                echo json_encode($response);
                                exit();
                            } else {

                                $localIdNo = getGnrlRecNm("mcf.mcf_customers_corp", "cust_id", "local_id_no", $custID);
                                if ($profileID <= 0) {
                                    $profileID = getGnrlRecNm("mcf.mcf_customers_corp", "cust_id", "corp_profile_id", $custID);
                                }
                                echo json_encode(array("custID" => $custID, "profileID" => $profileID, "localIdNo" => $localIdNo));
                                exit();
                            }
                        }
                    }

                    if ($subPgNo == 1.2) {//CORPORATE CUSTOMER
                        if ($vwtyp == "5") {//DIRECTORS
                            //var_dump($_POST);
                            $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : "";
                            $directorID = isset($_POST['directorID']) ? cleanInputData($_POST['directorID']) : -1;
                            $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                            $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                            $startDateActive = isset($_POST['startDateActive']) ? cleanInputData($_POST['startDateActive']) : "";
                            $endDateActive = isset($_POST['endDateActive']) ? cleanInputData($_POST['endDateActive']) : "31-Dec-4000";

                            $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                            $dateStr = getDB_Date_time();
                            $recCnt = 0;

                            if ($directorID > 0 && $srcType != "" && $custID != "" && $startDateActive != "") {
                                if ($rowID <= 0) {
                                    $recCnt = createCorpDrctr($directorID, $custID, $srcType, $startDateActive, $endDateActive, $dateStr, $rvsnTtl);

                                    if ($recCnt <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to save Corporate Director!<br/></div>';
                                        exit();
                                    }
                                } else {
                                    $recCnt = updateCorpDrctr($rowID, $directorID, $custID, $srcType, $startDateActive, $endDateActive, $dateStr, $rvsnTtl);
                                }

                                if ($rowID <= 0) {
                                    //NEW DIRECTOR
                                    $rowID = getCorpDirectorID($dateStr, $usrID, $directorID, $custID, $rvsnTtl);
                                    if ($rowID <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to retrieve ID of newly created Corporate Director!<br/></div>';
                                        exit();
                                    }
                                    echo json_encode(array("rowID" => $rowID));
                                } else {
                                    //EXISTING DIRECTOR
                                    if ($recCnt <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to update Corporate Director!<br/></div>';
                                        exit();
                                    } else {
                                        echo json_encode(array("rowID" => $rowID));
                                    }
                                }
                                exit();
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Please complete the Director form First!<br/></div>';
                                exit();
                            }
                        }
                    } else {//CUSTOMER GROUP
                        if ($vwtyp == "5") {//GROUP MEMBERS
                            //var_dump($_POST);
                            $mbrPstn = isset($_POST['mbrPstn']) ? cleanInputData($_POST['mbrPstn']) : "";
                            $memberID = isset($_POST['memberID']) ? cleanInputData($_POST['memberID']) : -1;
                            $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                            $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                            $startDateActive = isset($_POST['startDateActive']) ? cleanInputData($_POST['startDateActive']) : "";
                            $endDateActive = isset($_POST['endDateActive']) ? cleanInputData($_POST['endDateActive']) : "31-Dec-4000";

                            $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                            $dateStr = getDB_Date_time();
                            $recCnt = 0;

                            if ($memberID > 0 && $mbrPstn != "" && $custID != "" && $startDateActive != "") {
                                if ($rowID <= 0) {
                                    $recCnt = createGrpMember($custID, $memberID, $mbrPstn, $startDateActive, $endDateActive, $dateStr, $rvsnTtl);

                                    if ($recCnt <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to save Group Member!<br/></div>';
                                        exit();
                                    }
                                } else {
                                    $recCnt = updateGrpMember($rowID, $custID, $memberID, $mbrPstn, $startDateActive, $endDateActive, $dateStr, $rvsnTtl);
                                }

                                if ($rowID <= 0) {
                                    //NEW DIRECTOR
                                    $rowID = getGrpMemberID($dateStr, $usrID, $memberID, $custID, $rvsnTtl);
                                    if ($rowID <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to retrieve ID of newly created Group Member!<br/></div>';
                                        exit();
                                    }
                                    echo json_encode(array("rowID" => $rowID));
                                } else {
                                    //EXISTING DIRECTOR
                                    if ($recCnt <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to update Group Member!<br/></div>';
                                        exit();
                                    } else {
                                        echo json_encode(array("rowID" => $rowID));
                                    }
                                }
                                exit();
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Please complete the Group Member form First!<br/></div>';
                                exit();
                            }
                        }
                    }
                } else if ($subPgNo == 1.4) {// OTHER PERSONS
                    //var_dump($_POST);
                    if ($vwtyp == "0") {

                        $dateStr = getDB_Date_time();
                        $personID = isset($_POST['personID']) ? cleanInputData($_POST['personID']) : -1;

                        if ($actyp == 1) {
                            //WITHDRAWN
                            $tblNm1 = "mcf.mcf_prsn_names_nos";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_prsn_names_nos_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Withdrawn',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $personID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request WITHDRAWN successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to WITHDRAWN Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        } else if ($actyp == 2) {
                            //REJECT
                            $tblNm1 = "mcf.mcf_prsn_names_nos";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_prsn_names_nos_hstrc";
                            }

                            $errMsg = "";
                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Rejected',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $personID");

                            if ($updateCnt > 0) {
                                $response = array('custID' => $custID,
                                    'sbmtMsg' => "Change Request REJECTED successfully");
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to REJECT Data Change Request!<br/></div>';
                                exit();
                            }

                            echo json_encode($response);
                        } else if ($actyp == 3) {
                            //AUTHORIZE
                            $errMsg = "";

                            $tblNm1 = "mcf.mcf_prsn_names_nos";
                            //$tblNm1 = "mcf.mcf_customers_";
                            if ($rvsnTtl > 0) {
                                $tblNm1 = "mcf.mcf_prsn_names_nos_hstrc";
                            }

                            $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Authorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr',"
                                    . "authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE person_id = $personID");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 1!<br/></div>';
                                exit();
                            }
//
//                            //SET chngs_pndng to 0
//                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_customers SET chngs_pndng = 0,"
//                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE cust_id = $custID");
//                            if($updateCnt1 <= 0){
//                               echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
//                                . 'width:18px;height:18px;"/>Failed Update 2!<br/></div>';
//                                exit();
//                            }

                            if ($rvsnTtl > 0) {
                                //FETCH ORIGINAL DATA
                                $orgnlPrsnDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prsn_names_nos WHERE person_id = $personID");
                                //NATIONAL IDS
                                $orgnlNtlnlIDDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prsn_national_ids WHERE person_id = $personID"
                                        . " AND person_type = 'Other Person'");
                                //ADDITIONAL PERSON DATA
                                $orgnlAdtnlDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $personID"
                                        . " AND src_type = 'Other Person'");
                                //FETCH IMAGES
                                //MOVE CURRENT TO ORIGINAL
                                //mcf_prsn_names_nos_hstrc TO mcf_prsn_names_nos
                                $updateCnt2 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_names_nos
                                    SET first_name=subquery.first_name,
                                        sur_name=subquery.sur_name,
                                        other_names=subquery.other_names,
                                        title=subquery.title,
                                        gender=subquery.gender,
                                        marital_status=subquery.marital_status,
                                        date_of_birth=subquery.date_of_birth,
                                        place_of_birth=subquery.place_of_birth,
                                        religion=subquery.religion,
                                        res_address=subquery.res_address,
                                        pstl_addrs=subquery.pstl_addrs,
                                        email=subquery.email,
                                        cntct_no_tel=subquery.cntct_no_tel,
                                        cntct_no_mobl=subquery.cntct_no_mobl,
                                        cntct_no_fax=subquery.cntct_no_fax,
                                        img_location=subquery.img_location,
                                        hometown=subquery.hometown,
                                        nationality=subquery.nationality,
                                        lnkd_firm_org_id=subquery.lnkd_firm_org_id,
                                        lnkd_firm_site_id=subquery.lnkd_firm_site_id,
                                        last_update_by=subquery.last_update_by,
                                        last_update_date=subquery.last_update_date,
                                        new_company=subquery.new_company,
                                        new_company_loc=subquery.new_company_loc,
                                        sign_img_location=subquery.sign_img_location,
                                        branch_id=subquery.branch_id,
                                        status=subquery.status,
                                        is_signatory=subquery.is_signatory,
                                        prsn_type=subquery.prsn_type,
                                        valid_start_date=subquery.valid_start_date,
                                        valid_end_date=subquery.valid_end_date,
                                        authorized_by_person_id=subquery.authorized_by_person_id,
                                        autorization_date=subquery.autorization_date,
                                        chngs_pndng = 0
                                    FROM (SELECT person_id, first_name, sur_name, other_names, title,
                                           local_id_no, org_id, gender, marital_status, date_of_birth, place_of_birth,
                                           religion, res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                           cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                           lnkd_firm_site_id, created_by, creation_date, last_update_by,
                                           last_update_date, new_company, new_company_loc, sign_img_location,
                                           is_signatory, prsn_type, status, valid_start_date, valid_end_date,
                                           org_id, branch_id, authorized_by_person_id, autorization_date,
                                           rvsn_ttl, row_id
                                      FROM mcf.mcf_prsn_names_nos_hstrc WHERE person_id = $personID and rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_prsn_names_nos.person_id=subquery.person_id
                                    AND mcf.mcf_prsn_names_nos.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt2 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 2!<br/></div>';
                                    exit();
                                }

                                $sqlQry2 = "SELECT * FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $personID AND "
                                        . "person_type = 'Other Person' AND rvsn_ttl = $rvsnTtl";
                                $resultQry2 = executeSQLNoParams($sqlQry2);
                                $rowCntQry2 = loc_db_num_rows($resultQry2);

                                if ($rowCntQry2 > 0) {
                                    //NATIONAL IDS
                                    //CHECK EXISTENCE OF NTNLTY ID in mcf_prsn_national_ids
                                    $sqlQry9 = "SELECT ntnlty_id
                                       FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $personID AND "
                                            . "person_type = 'Other Person' AND rvsn_ttl = $rvsnTtl";
                                    $resultQry9 = executeSQLNoParams($sqlQry9);
                                    while ($row9 = loc_db_fetch_array($resultQry9)) {
                                        $ntnltyID = $row9[0];
                                        $sqlQry8 = "SELECT * FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = $ntnltyID";
                                        if ($ntnltyID < 0) {
                                            $sqlQry8 = "SELECT * FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = (-1*$ntnltyID)";
                                        }
                                        $resultQry8 = executeSQLNoParams($sqlQry8);
                                        $rowCntQry8 = loc_db_num_rows($resultQry8);
                                        if ($rowCntQry8 <= 0) {
                                            //INSERT
                                            $updateCnt5 = execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids(
                                                                    person_id, nationality, id_number, created_by, creation_date,
                                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
                                                            SELECT person_id, nationality, id_number, created_by, creation_date,
                                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, 'Yes'
                                                            FROM mcf.mcf_prsn_national_ids_hstrc WHERE ntnlty_id = $ntnltyID
                                                                AND rvsn_ttl = $rvsnTtl AND person_type = 'Other Person'");

                                            if ($updateCnt5 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-5!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            if ($ntnltyID < 0) {
                                                $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_prsn_national_ids WHERE ntnlty_id = (-1*$ntnltyID)");
                                                if ($updateCnt55 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                                    exit();
                                                }
                                            } else {
                                                //UPDATE
                                                //mcf_prsn_national_ids_hstrc TO mcf_prsn_national_ids
                                                $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_national_ids
                                                SET nationality = subquery.nationality,
                                                id_number = subquery.id_number,
                                                national_id_typ = subquery.national_id_typ,
                                                date_issued = subquery.date_issued,
                                                expiry_date = subquery.expiry_date,
                                                other_info = subquery.other_info,
                                                is_approved = 'Yes'
                                                FROM (SELECT person_id, nationality, id_number, created_by, creation_date,
                                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl, row_id
                                               FROM mcf.mcf_prsn_national_ids_hstrc WHERE person_id = $personID AND "
                                                        . "person_type = 'Other Person' AND rvsn_ttl = $rvsnTtl AND ntnlty_id = $ntnltyID) AS subquery
                                                WHERE mcf.mcf_prsn_national_ids.person_id=subquery.person_id
                                                AND mcf.mcf_prsn_national_ids.rvsn_ttl = subquery.rvsn_ttl
                                                AND mcf.mcf_prsn_national_ids.ntnlty_id = subquery.ntnlty_id
                                                AND mcf.mcf_prsn_national_ids.person_type = subquery.person_type
                                                AND mcf.mcf_prsn_national_ids.person_type = 'Other Person'");

                                                if ($updateCnt56 <= 0) {
                                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-56!<br/></div>';
                                                    exit();
                                                }
                                            }
                                        }
                                    }
                                }

                                $sqlQry3 = "SELECT * FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $personID "
                                        . "AND src_type = 'Other Person' and rvsn_ttl = $rvsnTtl";
                                $resultQry3 = executeSQLNoParams($sqlQry3);
                                $rowCntQry3 = loc_db_num_rows($resultQry3);

                                if ($rowCntQry3 > 0) {
                                    //ADDITIONAL PERSON DATA
                                    //mcf_extra_data_hstrc TO mcf_extra_data
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data
                                        SET data_col1= subquery.data_col1, data_col2= subquery.data_col2, data_col3= subquery.data_col3,
                                            data_col4= subquery.data_col4, data_col5= subquery.data_col5,
                                            data_col6= subquery.data_col6, data_col7= subquery.data_col7, data_col8= subquery.data_col8,
                                            data_col9= subquery.data_col9, data_col10= subquery.data_col10, data_col11= subquery.data_col11,
                                            data_col12= subquery.data_col12, data_col13= subquery.data_col13, data_col14= subquery.data_col14,
                                            data_col15= subquery.data_col15, data_col16= subquery.data_col16, data_col17= subquery.data_col17,
                                            data_col18= subquery.data_col18, data_col19= subquery.data_col19, data_col20= subquery.data_col20,
                                            data_col21= subquery.data_col21, data_col22= subquery.data_col22, data_col23= subquery.data_col23,
                                            data_col24= subquery.data_col24, data_col25= subquery.data_col25, data_col26= subquery.data_col26,
                                            data_col27= subquery.data_col27, data_col28= subquery.data_col28, data_col29= subquery.data_col29,
                                            data_col30= subquery.data_col30, data_col31= subquery.data_col31, data_col32= subquery.data_col32,
                                            data_col33= subquery.data_col33, data_col34= subquery.data_col34, data_col35= subquery.data_col35,
                                            data_col36= subquery.data_col36, data_col37= subquery.data_col37, data_col38= subquery.data_col38,
                                            data_col39= subquery.data_col39, data_col40= subquery.data_col40, data_col41= subquery.data_col41,
                                            data_col42= subquery.data_col42, data_col43= subquery.data_col43, data_col44= subquery.data_col44,
                                            data_col45= subquery.data_col45, data_col46= subquery.data_col46, data_col47= subquery.data_col47,
                                            data_col48= subquery.data_col48, data_col49= subquery.data_col49, data_col50= subquery.data_col50
                                        FROM (SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl, row_id
                                       FROM mcf.mcf_extra_data_hstrc WHERE src_pk_id = $personID "
                                            . "AND src_type = 'Other Person' and rvsn_ttl = $rvsnTtl) AS subquery
                                        WHERE mcf.mcf_extra_data.src_pk_id=subquery.src_pk_id
                                        AND mcf.mcf_extra_data.rvsn_ttl = subquery.rvsn_ttl
                                        AND mcf.mcf_extra_data.src_type = subquery.src_type
                                        AND mcf.mcf_extra_data.src_type = 'Other Person'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 4!<br/></div>';
                                        exit();
                                    }
                                }

                                //MOVE ORGINAL DATA TO HISTORIC
                                //mcf_prsn_names_nos TO mcf_prsn_names_nos_hstrc
                                while ($row1 = loc_db_fetch_array($orgnlPrsnDataRslt)) {
                                    $updateCnt4 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_names_nos_hstrc
                                    SET last_update_by=$row1[3],
                                        last_update_date='$row1[4]', first_name='$row1[5]', sur_name='$row1[6]', other_names='$row1[7]',
                                        title='$row1[8]', local_id_no='$row1[9]', org_id=$row1[10], gender='$row1[11]', marital_status='$row1[12]',
                                        date_of_birth='$row1[13]', place_of_birth='$row1[14]', religion='$row1[15]', res_address='$row1[16]',
                                        pstl_addrs='$row1[17]', email='$row1[18]', cntct_no_tel='$row1[19]', cntct_no_mobl='$row1[20]',
                                        cntct_no_fax='$row1[21]', img_location='$row1[22]', hometown='$row1[23]', nationality='$row1[24]',
                                        lnkd_firm_org_id=$row1[25],
                                        lnkd_firm_site_id=$row1[26], new_company='$row1[27]', new_company_loc='$row1[28]', prsn_type='$row1[29]',
                                        valid_start_date='$row1[30]', valid_end_date='$row1[31]', branch_id=$row1[32], status='$row1[33]',
                                        is_signatory='$row1[34]', sign_img_location='$row1[35]', linked_cust_id=$row1[36],
                                        authorized_by_person_id=$row1[37], autorization_date='$row1[38]'
                                      WHERE person_id = $personID and rvsn_ttl = $rvsnTtl");

                                    if ($updateCnt4 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                        exit();
                                    }
                                }

                                //NATIONAL ID
                                $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_prsn_national_ids_hstrc WHERE "
                                        . "person_id = $personID and rvsn_ttl = $rvsnTtl AND person_type = 'Other Person'");

                                //mcf_prsn_national_ids TO mcf_prsn_national_ids_hstrc
                                while ($row2 = loc_db_fetch_array($orgnlNtlnlIDDataRslt)) {
                                    $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids_hstrc(
                                            person_id, nationality, id_number, created_by, creation_date,
                                            last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                            date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
                                    VALUES($row2[0],'$row2[1]','" . loc_db_escape_string($row2[2]) . "',$row2[3],'$row2[4]',$row2[5],'$row2[6]',$row2[7],'" . loc_db_escape_string($row2[8]) . "',"
                                                    . "'$row2[9]','$row2[10]','" . loc_db_escape_string($row2[11]) . "','$row2[12]',$row2[13],'$row2[14]')");

                                    if ($updateCnt51 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                        exit();
                                    }
                                }


                                //ADDITIONAL PERSON INFO
                                //mcf_extra_data TO mcf_extra_data_hstrc
                                while ($row3 = loc_db_fetch_array($orgnlAdtnlDataRslt)) {
                                    $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data_hstrc
                                        SET data_col1= '$row3[1]', data_col2= '$row3[2]', data_col3= '$row3[3]',
                                        data_col4= '$row3[4]', data_col5= '$row3[5]',
                                        data_col6= '$row3[6]', data_col7= '$row3[7]', data_col8= '$row3[8]',
                                        data_col9= '$row3[9]', data_col10= '$row3[10]', data_col11= '$row3[11]',
                                        data_col12= '$row3[12]', data_col13= '$row3[13]', data_col14= '$row3[14]',
                                        data_col15= '$row3[15]', data_col16= '$row3[16]', data_col17= '$row3[17]',
                                        data_col18= '$row3[18]', data_col19= '$row3[19]', data_col20= '$row3[20]',
                                        data_col21= '$row3[21]', data_col22= '$row3[22]', data_col23= '$row3[23]',
                                        data_col24= '$row3[24]', data_col25= '$row3[25]', data_col26= '$row3[26]',
                                        data_col27= '$row3[27]', data_col28= '$row3[28]', data_col29= '$row3[29]',
                                        data_col30= '$row3[30]', data_col31= '$row3[31]', data_col32= '$row3[32]',
                                        data_col33= '$row3[33]', data_col34= '$row3[34]', data_col35= '$row3[35]',
                                        data_col36= '$row3[36]', data_col37= '$row3[37]', data_col38= '$row3[38]',
                                        data_col39= '$row3[39]', data_col40= '$row3[40]', data_col41= '$row3[41]',
                                        data_col42= '$row3[42]', data_col43= '$row3[43]', data_col44= '$row3[44]',
                                        data_col45= '$row3[45]', data_col46= '$row3[46]', data_col47= '$row3[47]',
                                        data_col48= '$row3[48]', data_col49= '$row3[49]', data_col50= '$row3[50]',
                                        last_update_by=$row3[53], last_update_date='$row3[54]'
                                      WHERE src_pk_id = $personID and rvsn_ttl = $rvsnTtl AND src_type = 'Other Person'");

                                    if ($updateCnt6 <= 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 7!<br/></div>';
                                        exit();
                                    }
                                }
                            }

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");

                            echo json_encode($response);
                        }
                        else if ($actyp == 4) {
                            //var_dump($_POST);
                            //MODIFY DATA
                            $errMsg = "";
                            //BACKUP AUTHORIZED DATA
                            //mcf_customers
                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_names_nos SET chngs_pndng = 1, rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $personID");
                            if ($updateCnt1 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE Person Record!<br/></div>';
                                exit();
                            }

                            $updateCnt2 = execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_names_nos_hstrc(
                                    person_id, created_by, creation_date, last_update_by, last_update_date,
                                    first_name, sur_name, other_names, title, local_id_no, org_id,
                                    gender, marital_status, date_of_birth, place_of_birth, religion,
                                    res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                    cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                    lnkd_firm_site_id, new_company, new_company_loc, prsn_type, valid_start_date,
                                    valid_end_date, branch_id, status, is_signatory, sign_img_location,
                                    linked_cust_id, authorized_by_person_id, autorization_date, rvsn_ttl)
                            SELECT person_id, created_by, creation_date, last_update_by, last_update_date,
                                    first_name, sur_name, other_names, title, local_id_no, org_id,
                                    gender, marital_status, date_of_birth, place_of_birth, religion,
                                    res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl,
                                    cntct_no_fax, img_location, hometown, nationality, lnkd_firm_org_id,
                                    lnkd_firm_site_id, new_company, new_company_loc, prsn_type, valid_start_date,
                                    valid_end_date, branch_id, 'Incomplete', is_signatory, sign_img_location,
                                    linked_cust_id, authorized_by_person_id, autorization_date, rvsn_ttl
                                    FROM mcf.mcf_prsn_names_nos WHERE person_id = $personID AND status IN ('Approved','Authorized')");

                            if ($updateCnt2 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic Person Record!<br/></div>';
                                exit();
                            }

			   $sqlQry111 = "SELECT * FROM  mcf.mcf_prsn_national_ids WHERE person_id = $personID AND person_type = 'Other Person'";
                            $resultQry111 = executeSQLNoParams($sqlQry111);
                            $rowCntQry111 = loc_db_num_rows($resultQry111);

                            if($rowCntQry111 > 0) {

                            //mcf_prsn_national_ids
                            $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_prsn_national_ids SET rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $personID AND person_type = 'Other Person'");
                            if ($updateCnt7 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to UPDATE National ID Record!<br/></div>';
                                exit();
                            }

                            //NATIONAL IDS
                            $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_prsn_national_ids_hstrc(
                                    person_id, nationality, id_number, created_by, creation_date,
                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl)
                            SELECT person_id, nationality, id_number, created_by, creation_date,
                                    last_update_by, last_update_date, ntnlty_id, national_id_typ,
                                    date_issued, expiry_date, other_info, person_type, rvsn_ttl
                                    FROM mcf.mcf_prsn_national_ids WHERE person_id = $personID AND person_type = 'Other Person'");

                            if ($updateCnt9 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to INSERT Historic National ID Record!<br/></div>';
                                exit();
                            }

			    }

                            $sqlQry2 = "SELECT * FROM mcf.mcf_extra_data WHERE src_pk_id = $personID AND src_type = 'Other Person'";
                            $resultQry2 = executeSQLNoParams($sqlQry2);
                            $rowCntQry2 = loc_db_num_rows($resultQry2);

                            if ($rowCntQry2 > 0) {
                                //ADDITIONAL PERSON DATA
                                //mcf_extra_data
                                $updateCnt8 = execUpdtInsSQL("UPDATE mcf.mcf_extra_data SET rvsn_ttl = (rvsn_ttl+1),"
                                        . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE src_pk_id = $personID AND src_type = 'Other Person'");
                                if ($updateCnt8 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to UPDATE Additional Customer Data!<br/></div>';
                                    exit();
                                }

                                $updateCnt10 = execUpdtInsSQL("INSERT INTO mcf.mcf_extra_data_hstrc(
                                            src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl)
                                    SELECT src_pk_id, data_col1, data_col2, data_col3, data_col4, data_col5,
                                            data_col6, data_col7, data_col8, data_col9, data_col10, data_col11,
                                            data_col12, data_col13, data_col14, data_col15, data_col16, data_col17,
                                            data_col18, data_col19, data_col20, data_col21, data_col22, data_col23,
                                            data_col24, data_col25, data_col26, data_col27, data_col28, data_col29,
                                            data_col30, data_col31, data_col32, data_col33, data_col34, data_col35,
                                            data_col36, data_col37, data_col38, data_col39, data_col40, data_col41,
                                            data_col42, data_col43, data_col44, data_col45, data_col46, data_col47,
                                            data_col48, data_col49, data_col50, created_by, creation_date,
                                            last_update_by, last_update_date, src_type, extra_data_id, rvsn_ttl
                                            FROM mcf.mcf_extra_data WHERE src_pk_id = $personID AND src_type = 'Other Person'");

                                if ($updateCnt10 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to INSERT Historic Additional Person Record!<br/></div>';
                                    exit();
                                }
                            }

                            //BACKUP ALL IMAGES

                            $response = array('custID' => $custID,
                                'sbmtMsg' => "Change Request AUTHORIZED successfully");
                            echo json_encode($response);
                        }
                        else if ($actyp == 5) {
                            var_dump($_POST);
                            //Import Other Persons
                            $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                            session_write_close();
                            $affctd = 0;
                            if ($dataToSend != "") {
                                $variousRows = explode("|", $dataToSend);
                                $total = count($variousRows);
                                for ($z = 0; $z < $total; $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 28) {
                                        $number = cleanInputData1($crntRow[0]);
                                        $idNo = trim((cleanInputData1($crntRow[1])));
                                        $title = trim(cleanInputData1($crntRow[2]));
                                        $firstName = cleanInputData1($crntRow[3]);
                                        $surName = cleanInputData1($crntRow[4]);
                                        $otherNames = cleanInputData1($crntRow[5]);
                                        $gender = trim(cleanInputData1($crntRow[6]));
                                        $maritalStatus = trim(cleanInputData1($crntRow[7]));
                                        $dob = cleanInputData1($crntRow[8]);
                                        $pob = cleanInputData1($crntRow[9]);
                                        $nationality = cleanInputData1($crntRow[10]);
                                        $homeTown = cleanInputData1($crntRow[11]);
                                        $religion = cleanInputData1($crntRow[12]);
                                        $lnkdFirmName = cleanInputData1($crntRow[13]);
                                        $lnkdFirmLoc = cleanInputData1($crntRow[14]);
                                        $email = cleanInputData1($crntRow[15]);
                                        $telNo = cleanInputData1($crntRow[16]);
                                        $mobileNo = cleanInputData1($crntRow[17]);
                                        $faxNo = cleanInputData1($crntRow[18]);
                                        $postalAddress = cleanInputData1($crntRow[19]);
                                        $residentialAddress = cleanInputData1($crntRow[20]);
                                        $relation = cleanInputData1($crntRow[21]);
                                        $startDate = cleanInputData1($crntRow[22]);
                                        $endDate = cleanInputData1($crntRow[23]);
                                        $prsnType = cleanInputData1($crntRow[24]);
                                        $bnkBranch = cleanInputData1($crntRow[25]);
                                        $rcdStatus = cleanInputData1($crntRow[26]);
                                        $segment1 = cleanInputData1($crntRow[27]);


                                        if ($z == 0) {
                                            if (strtoupper($number) == "NO." && strtoupper($idNo) == "CUSTOMER ID**" && strtoupper($title) == "TITLE**") {
                                                continue;
                                            } else {
                                                $arr_content['percent'] = 100;
                                                $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                                //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                                $arr_content['msgcount'] = $total;
                                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                                break;
                                            }
                                        }
                                        /*
                                          if ($idNo == "" || $title == "" || $firstName == "" || $surName == "" || gender == "" || maritalStatus == "" || dob == "" || $nationality == "" || lnkdFirmName == "" || lnkdFirmLoc == "" || $mobileNo == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                          continue;
                                          } */

                                        $bnkBranchID = getGnrlRecID("org.org_sites_locations", "location_code_name", "location_id", $bnkBranch, $orgID);
                                        $dateStr = getDB_Date_time();
                                        $timeMlscnd = getDB_time_Millisecond();
                                        $lnkdFirmID = getGnrlRecID2("scm.scm_cstmr_suplr", "cust_sup_name", "cust_sup_id", $lnkdFirmName);
                                        $lnkdFirmLocID = getGnrlRecIDExtr("scm.scm_cstmr_suplr_sites", "site_name", "cust_supplier_id", "cust_sup_site_id", $lnkdFirmLoc, $lnkdFirmID);

                                       $localIdNo = getNextOtherPrsnLocalIDNoSerial($bnkBranchID);

                                        $affctd += createOtherPersonDtaImprt($orgID, $localIdNo, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $segment1,
										$startDate, $endDate, $relation, $bnkBranchID, 0);

                                        $custPrsnID = getGnrlRecID("mcf.mcf_prsn_names_nos", "local_id_no", "person_id", $localIdNo, $orgID);

                                        saveAddtnlCstmrData($custPrsnID, "Other Person", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", $rvsnTtl);

                                    }
                                    $percent = round((($z + 1) / $total) * 100, 2);
                                    $arr_content['percent'] = $percent;
                                    if ($percent >= 100) {
                                        $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Other Person(s) imported.";
                                        $arr_content['msgcount'] = $total;
                                    } else {
                                        $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Other Persons...Please Wait..." . ($z + 1) . " out of " . $total . " Other Person(s) imported.";
                                    }
                                    file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                }
                            } else {
                                $percent = 100;
                                $arr_content['percent'] = $percent;
                                $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                                $arr_content['msgcount'] = "";
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        }
                        else if ($actyp == 6) {
                            //Checked Importing Process Status
                            header('Content-Type: application/json');
                            $file = $ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho";
                            if (file_exists($file)) {
                                $text = file_get_contents($file);
                                echo $text;

                                $obj = json_decode($text);
                                if ($obj->percent >= 100) {
                                    unlink($file);
                                }
                            } else {
                                echo json_encode(array("percent" => null, "message" => null));
                            }
                        }
                        else {
                            $orgid = $_SESSION['ORG_ID'];

                            $bnkCustomerID = isset($_POST['bnkCustomerID']) ? cleanInputData($_POST['bnkCustomerID']) : -1;
                            $personID = isset($_POST['personID']) ? cleanInputData($_POST['personID']) : -1;
                            $idNo = isset($_POST['idNo']) ? cleanInputData($_POST['idNo']) : "";
                            $title = isset($_POST['title']) ? cleanInputData($_POST['title']) : "";
                            $firstName = isset($_POST['firstName']) ? cleanInputData($_POST['firstName']) : "";
                            $surName = isset($_POST['surName']) ? cleanInputData($_POST['surName']) : "";
                            $otherNames = isset($_POST['otherNames']) ? cleanInputData($_POST['otherNames']) : "";
                            $gender = isset($_POST['gender']) ? cleanInputData($_POST['gender']) : "";
                            $maritalStatus = isset($_POST['maritalStatus']) ? cleanInputData($_POST['maritalStatus']) : "";
                            $dob = isset($_POST['dob']) ? cleanInputData($_POST['dob']) : "";
                            $pob = isset($_POST['pob']) ? cleanInputData($_POST['pob']) : "";
                            $nationality = isset($_POST['nationality']) ? cleanInputData($_POST['nationality']) : "";
                            $homeTown = isset($_POST['homeTown']) ? cleanInputData($_POST['homeTown']) : "";
                            $religion = isset($_POST['religion']) ? cleanInputData($_POST['religion']) : "";
                            $lnkdFirmName = isset($_POST['lnkdFirmName']) ? cleanInputData($_POST['lnkdFirmName']) : "";
                            $lnkdFirmLoc = isset($_POST['lnkdFirmLoc']) ? cleanInputData($_POST['lnkdFirmLoc']) : "";
                            $lnkdFirmID = getGnrlRecID2("scm.scm_cstmr_suplr", "cust_sup_name", "cust_sup_id", $lnkdFirmName);
                            $lnkdFirmLocID = getGnrlRecIDExtr("scm.scm_cstmr_suplr_sites", "site_name", "cust_supplier_id", "cust_sup_site_id", $lnkdFirmLoc, $lnkdFirmID);
                            $email = isset($_POST['email']) ? cleanInputData($_POST['email']) : "";
                            $telNo = isset($_POST['telNo']) ? cleanInputData($_POST['telNo']) : "";
                            $mobileNo = isset($_POST['mobileNo']) ? cleanInputData($_POST['mobileNo']) : "";
                            $faxNo = isset($_POST['faxNo']) ? cleanInputData($_POST['faxNo']) : "";
                            $postalAddress = isset($_POST['postalAddress']) ? cleanInputData($_POST['postalAddress']) : "";
                            $residentialAddress = isset($_POST['residentialAddress']) ? cleanInputData($_POST['residentialAddress']) : "";
                            $isSignatory = isset($_POST['isSignatory']) ? cleanInputData($_POST['isSignatory']) : "";
                            $prsnType = isset($_POST['prsnType']) ? cleanInputData($_POST['prsnType']) : "";
                            $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : "";
                            $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                            $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";
                            $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;

                            if ($title != "" &&
                                    $firstName != "" &&
                                    $surName != "" &&
                                    $gender != "" &&
                                    $maritalStatus != "") {
                                if ($personID <= 0) {
				    $personID = getNewOtherPrsnID();
                                    createPrsnBasicOP($orgid, $personID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $startDate, $endDate, $bnkCustomerID, $isSignatory, $prsnType, $bnkBranchID);

                                    //$idNoVal
                                    $bnkBranchCode = getOtherPrsnBranchCode($personID);
                                    //                                $varVal = getMCFglobalVariableValue("Other Person ID No. Format");
                                    //                                $idNoVal = "(SELECT lpad(trim((" . $personID . ")||''),7,'0'))";
                                    //                                if($varVal == "Branch Code->Unique ID"){
                                    //                                    $idNoVal = "'$bnkBranchCode'||(SELECT lpad(trim((" . $personID . ")||''),7,'0'))";
                                    //                                }
                                    $idNoVal = getNextOtherPrsnLocalIDNoSerial($bnkBranchID);
                                    //$idNoVal

                                    $rstlCnt = execUpdtInsSQL("UPDATE mcf.mcf_prsn_names_nos SET local_id_no = '$idNoVal'"
                                            . " WHERE person_id= $personID");
                                } else {
                                    updatePrsnBasicOP($orgid, $personID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress
                                            , $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $startDate, $endDate, $bnkCustomerID, $isSignatory, $prsnType, $bnkBranchID, $rvsnTtl);
                                }
                                $nwImgLoc = "";
                                if ($personID > 0) {
                                    if (isset($_FILES["custPicture"])) {
                                        uploadDaImageOP($personID, $nwImgLoc, "OP_Picture", $rvsnTtl);
                                    }
                                    if (isset($_FILES["signPicture"])) {
                                        uploadDaImageOP($personID, $nwImgLoc, "OP_Signature", $rvsnTtl);
                                    }

                                    saveAddtnlCstmrData($personID, $srcType, $addtnlCstmrDataCol1, $addtnlCstmrDataCol2, $addtnlCstmrDataCol3, $addtnlCstmrDataCol4, $addtnlCstmrDataCol5, $addtnlCstmrDataCol6, $addtnlCstmrDataCol7, $addtnlCstmrDataCol8, $addtnlCstmrDataCol9, $addtnlCstmrDataCol10, $addtnlCstmrDataCol11, $addtnlCstmrDataCol12, $addtnlCstmrDataCol13, $addtnlCstmrDataCol14, $addtnlCstmrDataCol15, $addtnlCstmrDataCol16, $addtnlCstmrDataCol17, $addtnlCstmrDataCol18, $addtnlCstmrDataCol19, $addtnlCstmrDataCol20, $addtnlCstmrDataCol21, $addtnlCstmrDataCol22, $addtnlCstmrDataCol23, $addtnlCstmrDataCol24, $addtnlCstmrDataCol25, $addtnlCstmrDataCol26, $addtnlCstmrDataCol27, $addtnlCstmrDataCol28, $addtnlCstmrDataCol29, $addtnlCstmrDataCol30, $addtnlCstmrDataCol31, $addtnlCstmrDataCol32, $addtnlCstmrDataCol33, $addtnlCstmrDataCol34, $addtnlCstmrDataCol35, $addtnlCstmrDataCol36, $addtnlCstmrDataCol37, $addtnlCstmrDataCol38, $addtnlCstmrDataCol39, $addtnlCstmrDataCol40, $addtnlCstmrDataCol41, $addtnlCstmrDataCol42, $addtnlCstmrDataCol43, $addtnlCstmrDataCol44, $addtnlCstmrDataCol45, $addtnlCstmrDataCol46, $addtnlCstmrDataCol47, $addtnlCstmrDataCol48, $addtnlCstmrDataCol49, $addtnlCstmrDataCol50, $rvsnTtl);
                                }

                                if ($shdSbmt > 0) {//SUBMIT FOR APPROVAL
                                    $errMsg = "";

                                    $tblNm = "mcf.mcf_prsn_names_nos";
                                    if ($rvsnTtl > 0) {
                                        $tblNm = "mcf.mcf_prsn_names_nos_hstrc";
                                    }

                                    $updateCnt = execUpdtInsSQL("UPDATE $tblNm SET status = 'Unauthorized',"
                                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE person_id = $personID"
                                            . " AND rvsn_ttl = $rvsnTtl");


                                    if ($updateCnt > 0) {
                                        $response = array('personID' => $personID,
                                            'sbmtMsg' => "Change Request submitted successfully for AUTHORIZATION");
                                    } else {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Failed to Submit Data for AUTHORIZATION!<br/></div>';
                                        exit();
                                    }

                                    echo json_encode($response);
                                } else {

                                    $localIDNo = getGnrlRecNm("mcf.mcf_prsn_names_nos", "person_id", "local_id_no ", $personID);
                                    echo json_encode(array("personID" => $personID, "localIDNo" => $localIDNo));
                                    exit();
                                }

                                exit();
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Data Supplied is Incomplete!<br/></div>';
                                exit();
                            }
                        }
                    } else if ($vwtyp == "5") {//NATIONAL IDS
                        //var_dump($_POST);
                        $ntnlIDCardsCountry = isset($_POST['ntnlIDCardsCountry']) ? cleanInputData($_POST['ntnlIDCardsCountry']) : "";
                        $ntnlIDCardsIDTyp = isset($_POST['ntnlIDCardsIDTyp']) ? cleanInputData($_POST['ntnlIDCardsIDTyp']) : "";
                        $ntnlIDCardsIDNo = isset($_POST['ntnlIDCardsIDNo']) ? cleanInputData($_POST['ntnlIDCardsIDNo']) : "";
                        $ntnlIDCardsDateIssd = isset($_POST['ntnlIDCardsDateIssd']) ? cleanInputData($_POST['ntnlIDCardsDateIssd']) : "";
                        $ntnlIDCardsExpDate = isset($_POST['ntnlIDCardsExpDate']) ? cleanInputData($_POST['ntnlIDCardsExpDate']) : "";
                        $ntnlIDCardsOtherInfo = isset($_POST['ntnlIDCardsOtherInfo']) ? cleanInputData($_POST['ntnlIDCardsOtherInfo']) : "";

                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                        $ntnlIDpKey = isset($_POST['ntnlIDpKey']) ? cleanInputData($_POST['ntnlIDpKey']) : -1;
                        $custPrsnID = isset($_POST['custPrsnID']) ? cleanInputData($_POST['custPrsnID']) : -1;

                        $dateStr = getDB_Date_time();
                        $recCnt = 0;
                        $ntnltyIDExstncCnt = 0;
                        if ($custPrsnID > 0 && $ntnlIDCardsCountry != "Please Select..." && $ntnlIDCardsIDTyp != "Please Select..." && trim($ntnlIDCardsIDNo) != "" && $ntnlIDCardsDateIssd != "" && $ntnlIDCardsExpDate != "") {
                            if ($ntnlIDpKey <= 0) {
                                $ntnltyIDExstncCnt = checkIDTypeSave($ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl);
                                if ((int) $ntnltyIDExstncCnt > 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Sorry! Failed to Add National ID!<br/>Record with details <b>' . $ntnlIDCardsCountry . ',' . $ntnlIDCardsIDTyp . ',' . $ntnlIDCardsIDNo . '</b> exists</div>';
                                    exit();
                                }

                                $recCnt = createPrsnCustNtnlID($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, "Other Person", $rvsnTtl);

                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to save National ID!<br/></div>';
                                    exit();
                                }
                            } else {
                                $ntnltyIDExstncCnt = checkIDTypeUpdate($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl);
                                if ((int) $ntnltyIDExstncCnt > 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Sorry! Failed to Update National ID!<br/>Record with details <b>' . $ntnlIDCardsCountry . ',' . $ntnlIDCardsIDTyp . ',' . $ntnlIDCardsIDNo . '</b> exists</div>';
                                    exit();
                                }

                                $recCnt = updatePrsnCustNtnlID($custPrsnID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, "Other Person", $ntnlIDpKey, $rvsnTtl);
                            }

                            if ($ntnlIDpKey <= 0) {

                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to add National ID!<br/></div>';
                                    exit();
                                }
                                echo json_encode(array("ntnlIDpKey" => $ntnlIDpKey));
                            } else {
                                //EXISTING DIRECTOR
                                if ($recCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to update National ID!<br/></div>';
                                    exit();
                                } else {
                                    echo json_encode(array("ntnlIDpKey" => $ntnlIDpKey));
                                }
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please complete the National ID Form providing all required data!<br/></div>';
                            exit();
                        }
                    }
                }
            }
            else {
                if ($subPgNo == 1.5) {//CUSTOMER CORRESPONDENCE
                $cstmrCrspndncId = isset($_POST['cstmrCrspndncId']) ? cleanInputData($_POST['cstmrCrspndncId']) : -1;
                $acctNoFindAccId = isset($_POST['acctNoFindAccId']) ? cleanInputData($_POST['acctNoFindAccId']) : -1;
                $bnkCustomerID = isset($_POST['bnkCustomerID'])  ? cleanInputData($_POST['bnkCustomerID']) : -1;
                $branchID = isset($_POST['branchID'])  ?  cleanInputData($_POST['branchID']) : -1;
                $custType = isset($_POST['custType'])  ?  cleanInputData($_POST['custType']) : "";
                $requestDate = isset($_POST['requestDate'])  ? cleanInputData($_POST['requestDate']) : "";

                $requestorNm = isset($_POST['requestorNm'])  ? cleanInputData($_POST['requestorNm']) : "";
                $trnsctnID = isset($_POST['trnsctnID'])  ? cleanInputData($_POST['trnsctnID']) : -1;
                $requestTypeID = isset($_POST['requestTypeID'])  ? cleanInputData($_POST['requestTypeID']) : -1;
                $requestDetails = isset($_POST['requestDetails'])  ? cleanInputData($_POST['requestDetails']) : "";
                $assignedToPrsnID = isset($_POST['assignedToPrsnID'])  ? cleanInputData($_POST['assignedToPrsnID']) : -1;
                $urgency = isset($_POST['urgency'])  ? cleanInputData($_POST['urgency']) : "";
                $expectedCloseDate = isset($_POST['expectedCloseDate'])  ? cleanInputData($_POST['expectedCloseDate']) : "";
                $requestStatus = isset($_POST['requestStatus'])  ? cleanInputData($_POST['requestStatus']) : "";
                $actualCloseDate = isset($_POST['actualCloseDate'])  ? cleanInputData($_POST['actualCloseDate']) : "";

                $closedByPersonId = isset($_POST['closedByPersonId'])  ? cleanInputData($_POST['closedByPersonId']) : -1;
                $closedActionDetails = isset($_POST['closedActionDetails'])  ? cleanInputData($_POST['closedActionDetails']) : "";

                $rslt = 'FAILURE';
                $dateStr = getDB_Date_time();
                if ($actyp == 1) {

                    $rslt = processManualInterestPymntSavings($cstmrCrspndncId, $currencyID, $branchID);
                    if ($rslt == 'SUCCESS') {
                        echo "SUCCESS";
                        exit();
                    } else {
                        echo $rslt;
                        exit();
                    }
                } else if ($actyp == 2) {
                    if ($prgrs < 100) {
                        $getUpdateRecCnt = getDummyDtaCnt();
                        $prgrs = ($getUpdateRecCnt / 500) * 100;
                        echo $prgrs;
                    } else {
                        echo 100;
                    }
                    exit();
                } else if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_customer_correspondence SET status = 'Withdrawn', request_status = 'Open',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE crspndnc_id = $cstmrCrspndncId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Customer Correspondence!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("cstmrCrspndncId" => $cstmrCrspndncId));
                    exit();
                } else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_customer_correspondence SET status = 'Rejected', request_status = 'Open',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE crspndnc_id = $cstmrCrspndncId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Customer Correspondence!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("cstmrCrspndncId" => $cstmrCrspndncId));
                    exit();
                } else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_customer_correspondence SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE crspndnc_id = $cstmrCrspndncId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Customer Correspondence!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("cstmrCrspndncId" => $cstmrCrspndncId));
                    exit();
                } else if ($actyp == 6) {
                    //CLOSE

                    if ($actualCloseDate != "") {
                        $actualCloseDate = cnvrtDMYToYMD($actualCloseDate);
                    }

                    $closedByPersonId = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $closedByPersonId, $orgID);

                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_customer_correspondence SET request_status = 'Closed',
                            closed_by_person_id = $closedByPersonId, actual_close_date = '$actualCloseDate',
                                closed_action_details = '" . loc_db_escape_string($closedActionDetails) . "',
                            last_update_by = $usrID, last_update_date = '$dateStr' WHERE crspndnc_id = $cstmrCrspndncId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to CLOSE Customer Correspondence!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("cstmrCrspndncId" => $cstmrCrspndncId));
                    exit();
                } else {
                    $dateStr = getDB_Date_time();

                    if ($acctNoFindAccId != "") {
                        if ($cstmrCrspndncId <= 0) {
                            $cstmrCrspndncId = getNextSequenceVal("nextval('mcf.mcf_customer_correspondence_crspndnc_id_seq'::regclass)");

                            $rowCnt = createCstmrCrspndnc($cstmrCrspndncId, $bnkCustomerID, $custType, $requestTypeID, $acctNoFindAccId, $branchID,
									$requestDetails, $urgency, $requestDate, $expectedCloseDate, $actualCloseDate,
									$closedByPersonId, $closedActionDetails, $requestorNm, $assignedToPrsnID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Customer Correspondence!<br/></div>';
                                exit();
                            }
                        } else {

                            $rowCnt = updateCstmrCrspndnc($cstmrCrspndncId, $bnkCustomerID, $custType, $requestTypeID, $acctNoFindAccId, $branchID,
								$requestDetails, $urgency, $requestDate, $expectedCloseDate, $actualCloseDate,
								$closedByPersonId, $closedActionDetails, $requestorNm, $assignedToPrsnID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Customer Correspondence!<br/></div>';
                                exit();
                            }
                        }

                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_customer_correspondence SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE crspndnc_id = $cstmrCrspndncId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Customer Correspondence for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("cstmrCrspndncId" => $cstmrCrspndncId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            } else if ($subPgNo == 1.6) {
                    if ($actyp == 1) {
                        //COLUMN SETUP
                        $slctdExtrDataCols = isset($_POST['slctdExtrDataCols']) ? cleanInputData($_POST['slctdExtrDataCols']) : '';
                        $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : '';
                        if (trim($slctdExtrDataCols, "|~") != "") {
                            //Save Persons
                            $variousRows = explode("|", trim($slctdExtrDataCols, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 12) {
                                    $colno = (int) (cleanInputData1($crntRow[0]));
                                    $extrdataID = (int) (cleanInputData1($crntRow[1]));
                                    $collabel = trim(cleanInputData1($crntRow[2]));
                                    $lovnm = cleanInputData1($crntRow[3]);
                                    $datatyp = cleanInputData1($crntRow[4]);
                                    $catgry = cleanInputData1($crntRow[5]);
                                    $lngth = (int) (cleanInputData1($crntRow[6]));
                                    $dsplytyp = cleanInputData1($crntRow[7]);
                                    $tblrnumcols = (int) (cleanInputData1($crntRow[8]));
                                    $ordr = (int) (cleanInputData1($crntRow[9]));
                                    $csvTblColNms = cleanInputData1($crntRow[10]);
                                    $isrqrd = cleanInputData1($crntRow[11]) == "YES" ? TRUE : FALSE;
                                    //$oldExtrdataID = getGnrlRecID("mcf.mcf_extra_data_cols", "''||column_no", "extra_data_cols_id", $colno, $orgID);
                                    $result = executeSQLNoParams("SELECT extra_data_cols_id FROM mcf.mcf_extra_data_cols WHERE "
                                            . " column_no = $colno AND src_type = '" . $srcType . "' AND org_id = $orgID");
                                    $oldExtrdataID = -1;
                                    while ($row = loc_db_fetch_array($result)) {
                                        $oldExtrdataID = $row[0];
                                    }

                                    if ($oldExtrdataID <= 0) {
                                        //Insert
                                        if ($dsplytyp == "Tabular") {
                                            $dsplytyp = "T";
                                        } else {
                                            $dsplytyp = "D";
                                        }
                                        if ($collabel != "") {
                                            createMcfExtrDataCol($colno, $collabel, $lovnm, $datatyp, $catgry, $lngth, $dsplytyp, $orgID, $tblrnumcols, $ordr, $csvTblColNms, $isrqrd, $srcType);
                                        }
                                    } else {
                                        if ($dsplytyp == "Tabular") {
                                            $dsplytyp = "T";
                                        } else {
                                            $dsplytyp = "D";
                                        }
                                        updateMcfExtrDataCol($colno, $collabel, $lovnm, $datatyp, $catgry, $lngth, $dsplytyp, $orgID, $tblrnumcols, $oldExtrdataID, $ordr, $csvTblColNms, $isrqrd, $srcType);
                                    }
                                }
                            }
                            ?>
                            <div class="container-fluid"  style="float:none;width:100%;text-align: center;padding:0px 0px 0px 25px !important;">
                                <div class="row" style="float:none;width:100%;text-align: center;">
                                    <span style="color:green;font-weight:bold;font-size:16px;font-style: italic;font-family: Georgia;width:100%;text-align: center;">Additional Person Data Setup Saved Successfully!</span>
                                </div>
                            </div>
                            <?php
                        } else {
                            ?>
                            <div class="container-fluid"  style="float:none;width:100%;text-align: center;padding:0px 0px 0px 25px !important;">
                                <div class="row" style="float:none;width:100%;text-align: center;">
                                    <span style="color:red;font-weight:bold;font-size:16px;font-style: italic;font-family: Georgia;width:100%;text-align: center;">Failed to Save Additional Person Data Setup!</span>
                                </div>
                            </div>
                            <?php
                        }
                    }
                }
                else if ($subPgNo == 1.9){
//                    echo "I am in";
//                    exit();

                    $dateStr = getDB_Date_time();
                    //
                    //$prmryAgntID = isset($_POST['prmryAgntID']) ? cleanInputData($_POST['prmryAgntID']) : -1;
                    $slctdTrnsCustNoLines = isset($_POST['slctdTrnsCustNoLines']) ? cleanInputData($_POST['slctdTrnsCustNoLines']) : '';
                    $uptCnt = 0;
                    $uptCnt1 = 0;
                    $uptCnt2 = 0;
                    $uptCnt3 = 0;
                    $uptCnt4 = 0;
                    $uptCnt5 = 0;
                    $uptCnt6 = 0;

                    $affctdAns = 0;
                    if (trim($slctdTrnsCustNoLines, "|~") != "") {

                        $variousRows = explode("|", trim($slctdTrnsCustNoLines, "|"));
                        $rowCnt = count($variousRows);
                        $cnt = 0;
                        for ($z = 0; $z < count($variousRows); $z++) {
                            $crntRow = explode("~", $variousRows[$z]);
                            if (count($crntRow) == 2) {
                                $srcCustNo = (cleanInputData1($crntRow[0]));
                                $dstntnCustNo = (cleanInputData1($crntRow[1]));
                                //VALIDATE src and destination Customer Nos.
                                //$srcCustID = getGnrlRecID("mcf.mcf_customers", $srchcol, $rtrnCol, $recname, $orgID);

                                $custChngsPndng = getCustNoChngsPndng($srcCustNo);

                                if((int)$custChngsPndng >= 0){

                                } else {
                                    $erMsg = "";
                                    $cnt = $cnt + 1;
                                    //if($recCntSrc <= 0){
                                    $erMsg = $erMsg."</br>Source Customer Number ".$srcCustNo." is not valid";
                                    //}
//                                    if($dstntnCustNo <= 0){
//                                        $erMsg = $erMsg."</br>Destination Customer Number ".$dstntnCustNo." is not valid";
//                                    }
                                    echo "<div style='color:re; font-weight: bold !important;'>The following Validation Errors Occured</br>$erMsg</div>";
                                    exit();
                                }
                            }
                        }

                        for ($x = 0; $x < count($variousRows); $x++) {
                            $crntRow1 = explode("~", $variousRows[$x]);
                            if (count($crntRow1) == 2) {
                                $srcCustNo = (cleanInputData1($crntRow1[0]));
                                $dstntnCustNo = (cleanInputData1($crntRow1[1]));
                                //VALIDATE src and destination Customer Nos.

                                $custChngsPndng = getCustNoChngsPndng($srcCustNo);
                                $custRvsnTtl = getCustNoRvsnTtl($srcCustNo);



                                //$recCntSrc = chkCstmrNoExtnceCount($srcCustNo);
                                //$recCntDstntn = chkCstmrNoExtnceCount($dstntnCustNo);

                                if($custChngsPndng >= 0){

                                    $custType = getGnrlRecNm2("mcf.mcf_customers", "id_no", "cust_type", $srcCustNo);
                                    $custID = (int)getGnrlRecNm2("mcf.mcf_customers", "cust_id", "cust_type", $srcCustNo);
                                    //$tblNm2 = "mcf.mcf_customers_ind";

                                    if($custChngsPndng > 0){
                                        $tblNm1 = "mcf.mcf_customers_hstrc";
                                        $tblNm2 = "mcf.mcf_customers_corp_hstrc";

                                        if($custType == "Individual"){
                                            $tblNm2 = "mcf.mcf_customers_ind_hstrc";
                                        }

                                    } else {
                                        $tblNm1 = "mcf.mcf_customers";
                                        $tblNm2 = "mcf.mcf_customers_corp";

                                        if($custType == "Individual"){
                                            $tblNm2 = "mcf.mcf_customers_ind";
                                        }
                                    }

                                    $uptCnt2 = $uptCnt2 + execUpdtInsSQL("update $tblNm2
                                               set local_id_no = '$dstntnCustNo',
                                               last_update_by = $usrID, last_update_date = '$dateStr'
                                               where cust_id = (select distinct cust_id from mcf.mcf_customers
                                               where id_no = '$srcCustNo') AND rvsn_ttl = $custRvsnTtl");



                                    $uptCnt6 = $uptCnt6 + execUpdtInsSQL("UPDATE mcf.mcf_accounts
                                               SET account_number =  substr(account_number,1,3)||substr(account_number,4,1)||
                                               '$dstntnCustNo'||substr(account_number,15,2),
                                               last_update_by = $usrID, last_update_date = '$dateStr'
                                               where cust_id = (select distinct cust_id from mcf.mcf_customers
                                               where id_no = '$srcCustNo')");

                                    /*$uptCnt6 = $uptCnt6 + execUpdtInsSQL("UPDATE mcf.mcf_accounts_hstrc
                                               SET account_number =  substr(account_number,1,3)||substr(account_number,4,1)||
                                               '$dstntnCustNo'||substr(account_number,15,2),
                                               last_update_by = $usrID, last_update_date = '$dateStr'
                                               where cust_id = (select distinct cust_id from mcf.mcf_customers
                                               where id_no = '$srcCustNo') and rvsn_ttl = (select max(rvsn_ttl) "
                                            . "FROM mcf.mcf_account_hstrc b WHERE b.account_number = (SELECT substr(account_number,1,3)||substr(account_number,4,1)||
                                               '$srcCustNo'||substr(account_number,15,2) FROM mcf.mcf_accounts where cust_id = (select distinct cust_id from mcf.mcf_customers
                                               where id_no = '$srcCustNo')))");*/

                                    $uptCnt = $uptCnt + execUpdtInsSQL("update mcf.mcf_customers
                                             set id_no = '$dstntnCustNo',
                                             last_update_by = $usrID, last_update_date = '$dateStr'
                                             where cust_id = (select distinct cust_id from mcf.mcf_customers
                                             where id_no = '$srcCustNo')");
                                }
                            }
                        }

                        if($uptCnt > 0){
                            echo "Merger Succcessful";
                            exit();
                        } else {
                             echo "Merger Failed";
                             exit();
                        }

                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'No Customer Numbers Provided for Mergers!<br/></div>';
                        exit();
                    }

                }
            }
        } else if ($pgNo == 12) {//PRODUCT MANAGEMENT
            if ($subPgNo == 7.1) {//SAVINGS PRODUCT
                if ($vwtyp == "0") {// MAIN PARAMETERS DATA
                    //var_dump($_POST);
                    //var_dump($_FILES);
                    //header("content-type:application/json");
                    //categoryCombo
                    $orgid = $_SESSION['ORG_ID'];
                    $dateStr = getDB_Date_time();
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    if ($actyp == 1) {
                        //WITHDRAWN
                        $tblNm1 = "mcf.mcf_prdt_savings";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_savings_hstrc";
                        }

                        $errMsg = "";
                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Withdrawn',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE svngs_product_id = $prdtID");

                        if ($updateCnt > 0) {
                            $response = array('prdtID' => $prdtID,
                                'sbmtMsg' => "Change Request WITHDRAWN successfully");
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to WITHDRAWN Data Change Request!<br/></div>';
                            exit();
                        }

                        echo json_encode($response);
                    } else if ($actyp == 2) {
                        //REJECT
                        $tblNm1 = "mcf.mcf_prdt_savings";
                        //$tblNm1 = "mcf.mcf_customers_";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_savings_hstrc";
                        }

                        $errMsg = "";
                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Rejected',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE svngs_product_id = $prdtID");

                        if ($updateCnt > 0) {
                            $response = array('prdtID' => $prdtID,
                                'sbmtMsg' => "Change Request REJECTED successfully");
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to REJECT Data Change Request!<br/></div>';
                            exit();
                        }

                        echo json_encode($response);
                    } 
                    else if ($actyp == 3) {//AUTHORIZE SAVINGS PRODUCT
                        //var_dump($_POST);
                        $prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                        $dateStr = getDB_Date_time();

                        $tblNm1 = "mcf.mcf_prdt_savings";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_savings_hstrc";
                        }

                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Authorized',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr',"
                                . "authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE svngs_product_id = $prdtID");

                        if ($updateCnt <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 1!<br/></div>';
                            exit();
                        }

                        if ((int) $rvsnTtl > 0) {
                            //FETCH APPROVED DATA
                            $apprvdCustAcountDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prdt_savings WHERE svngs_product_id = $prdtID");
                            $apprvdEventAcntnDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prdt_savings_stdevnt_accntn WHERE svngs_product_id = $prdtID");
                            $apprvdAcountSgntryDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_svngs_wthdrwl_comm WHERE product_id = $prdtID");

                            //OVERWRITE APPROVED DATA
                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings
                                SET svngs_product_id=subquery.svngs_product_id, product_name=subquery.product_name,
                                product_desc=subquery.product_desc, prdt_type_id=subquery.prdt_type_id,
                                    cust_type_ind=subquery.cust_type_ind, currency_id=subquery.currency_id,
                                    initial_amount_min=subquery.initial_amount_min, balance_min=subquery.balance_min,
                                    interest_rate=subquery.interest_rate, interest_accrual_frequency=subquery.interest_accrual_frequency,
                                    interest_posting_frequency=subquery.interest_posting_frequency,
                                    interest_calc_method=subquery.interest_calc_method, withdrawal_limit_no=subquery.withdrawal_limit_no,
                                    withdrawal_limit_amount=subquery.withdrawal_limit_amount,
                                    allow_overdraft=subquery.allow_overdraft, overdraft_limit=subquery.overdraft_limit,
                                    entry_fees=subquery.entry_fees, close_fees=subquery.close_fees,
                                    reopen_fees=subquery.reopen_fees, product_code=subquery.product_code,
                                    interest_calc_type=subquery.interest_calc_type, charge_cot=subquery.charge_cot,
                                    cot_free_withdrawals_max=subquery.cot_free_withdrawals_max, created_by=subquery.created_by,
                                    creation_date=subquery.creation_date, last_update_by=subquery.last_update_by,
                                    last_update_date=subquery.last_update_date, use_as_collateral=subquery.use_as_collateral,
                                    product_type=subquery.product_type, withdrawal_limit=subquery.withdrawal_limit,
                                    overdraft_penalty_flat=subquery.overdraft_penalty_flat, overdraft_penalty_percent=subquery.overdraft_penalty_percent,
                                    cust_type_corp=subquery.cust_type_corp,
                                    cust_type_custgrp=subquery.cust_type_custgrp, org_id=subquery.org_id, charge_interest=subquery.charge_interest,
                                    invstmnt_duration_no=subquery.invstmnt_duration_no,
                                    invstmnt_duration_type=subquery.invstmnt_duration_type, invstmnt_type=subquery.invstmnt_type,
                                    discount_rate=subquery.discount_rate, invstmnt_max_amount=subquery.invstmnt_max_amount,
                                    invstmnt_min_amount=subquery.invstmnt_min_amount, interest_crediting_period=subquery.interest_crediting_period,
                                    interest_crediting_type=subquery.interest_crediting_type,
                                    daily_minbal_for_interest=subquery.daily_minbal_for_interest,
                                    authorized_by_person_id=subquery.authorized_by_person_id, autorization_date=subquery.autorization_date,
                                    chngs_pndng=0, status=subquery.status, invstmnt_fees_flat=subquery.invstmnt_fees_flat,
                                    invstmnt_fees_percent=subquery.invstmnt_fees_percent, invstmnt_charge_fees=subquery.invstmnt_charge_fees,
                                    is_staff_account_product=subquery.is_staff_account_product, sms_alert_fee=subquery.sms_alert_fee, 
                                    sms_alert_revenue_id=subquery.sms_alert_revenue_id
                                FROM (SELECT svngs_product_id, product_name, product_desc, prdt_type_id, cust_type_ind,
                                    currency_id, initial_amount_min, balance_min, interest_rate,
                                    interest_accrual_frequency, interest_posting_frequency, interest_calc_method,
                                    withdrawal_limit_no, withdrawal_limit_amount, allow_overdraft,
                                    overdraft_limit, entry_fees, close_fees, reopen_fees, product_code,
                                    interest_calc_type, charge_cot, cot_free_withdrawals_max, created_by,
                                    creation_date, last_update_by, last_update_date, use_as_collateral,
                                    product_type, withdrawal_limit, overdraft_penalty_flat, overdraft_penalty_percent,
                                    cust_type_corp, cust_type_custgrp, org_id, charge_interest, invstmnt_duration_no,
                                    invstmnt_duration_type, invstmnt_type, discount_rate, invstmnt_max_amount,
                                    invstmnt_min_amount, interest_crediting_period, interest_crediting_type,
                                    daily_minbal_for_interest, authorized_by_person_id, autorization_date,
                                    chngs_pndng, rvsn_ttl, row_id, status, invstmnt_fees_flat, invstmnt_fees_percent,
                                    invstmnt_charge_fees, is_staff_account_product, sms_alert_fee, sms_alert_revenue_id
                               FROM mcf.mcf_prdt_savings_hstrc
                                    WHERE svngs_product_id = $prdtID and rvsn_ttl = $rvsnTtl) AS subquery
                                WHERE mcf.mcf_prdt_savings.svngs_product_id=subquery.svngs_product_id
                                AND mcf.mcf_prdt_savings.rvsn_ttl = subquery.rvsn_ttl");

                            if ($updateCnt1 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 2!<br/></div>';
                                exit();
                            }

                            $sqlQry3 = "SELECT * FROM mcf.mcf_prdt_savings_stdevnt_accntn_hstrc WHERE svngs_product_id = $prdtID "
                                    . "AND rvsn_ttl = $rvsnTtl";
                            $resultQry3 = executeSQLNoParams($sqlQry3);
                            $rowCntQry3 = loc_db_num_rows($resultQry3);

                            if ($rowCntQry3 > 0) {
                                //ADDITIONAL PERSON DATA
                                //mcf_extra_data_hstrc TO mcf_extra_data
                                $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings_stdevnt_accntn
                                    SET svngs_accntn_evnt_id=subquery.svngs_accntn_evnt_id, svngs_product_id=subquery.svngs_product_id,
                                    deposit_cash_dbt_accnt_id=subquery.deposit_cash_dbt_accnt_id,
                                        deposit_cash_crdt_accnt_id=subquery.deposit_cash_crdt_accnt_id,
                                        withdrawal_dbt_accnt_id=subquery.withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id=subquery.withdrawal_crdt_accnt_id,
                                        deposit_cheque_dbt_accnt_id=subquery.deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id=subquery.deposit_cheque_crdt_accnt_id,
                                        entry_fees_dbt_accnt_id=subquery.entry_fees_dbt_accnt_id, entry_fees_crdt_accnt_id=subquery.entry_fees_crdt_accnt_id,
                                        close_fees_dbt_accnt_id=subquery.close_fees_dbt_accnt_id,
                                        close_fees_crdt_accnt_id=subquery.close_fees_crdt_accnt_id, reopen_fees_dbt_accnt_id=subquery.reopen_fees_dbt_accnt_id,
                                        reopen_fees_crdt_accnt_id=subquery.reopen_fees_crdt_accnt_id,
                                        overdraft_pnlty_dbt_accnt_id=subquery.overdraft_pnlty_dbt_accnt_id, overdraft_pnlty_crdt_accnt_id=subquery.overdraft_pnlty_crdt_accnt_id,
                                        wthdrwl_pnlty_pcnt_dbt_accnt_id=subquery.wthdrwl_pnlty_pcnt_dbt_accnt_id, wthdrwl_pnlty_pcnt_crdt_accnt_id=subquery.wthdrwl_pnlty_pcnt_crdt_accnt_id,
                                        invstmnt_liability_accnt_id=subquery.invstmnt_liability_accnt_id, invstmnt_fee_crdt_accnt_id=subquery.invstmnt_fee_crdt_accnt_id,
                                        cot_amnt_flat_dbt_accnt_id=subquery.cot_amnt_flat_dbt_accnt_id,
                                        cot_amnt_flat_crdt_accnt_id=subquery.cot_amnt_flat_crdt_accnt_id, accrued_interest_dbt_accnt_id=subquery.accrued_interest_dbt_accnt_id,
                                        accrued_interest_crdt_accnt_id=subquery.accrued_interest_crdt_accnt_id, interest_payment_dbt_accnt_id=subquery.interest_payment_dbt_accnt_id,
                                        interest_payment_crdt_accnt_id=subquery.interest_payment_crdt_accnt_id,
                                        created_by=subquery.created_by, creation_date=subquery.creation_date,
                                        last_update_by=subquery.last_update_by, last_update_date=subquery.last_update_date, org_id=subquery.org_id
                                    FROM (SELECT svngs_accntn_evnt_id, svngs_product_id, deposit_cash_dbt_accnt_id,
                                        deposit_cash_crdt_accnt_id, withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
                                        deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id, entry_fees_dbt_accnt_id,
                                        entry_fees_crdt_accnt_id, close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
                                        reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id, overdraft_pnlty_dbt_accnt_id,
                                        overdraft_pnlty_crdt_accnt_id, wthdrwl_pnlty_pcnt_dbt_accnt_id,
                                        wthdrwl_pnlty_pcnt_crdt_accnt_id, invstmnt_liability_accnt_id,
                                        invstmnt_fee_crdt_accnt_id, cot_amnt_flat_dbt_accnt_id, cot_amnt_flat_crdt_accnt_id,
                                        accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
                                        interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id,
                                        created_by, creation_date, last_update_by, last_update_date,
                                        org_id, rvsn_ttl, row_id
                                   FROM mcf.mcf_prdt_savings_stdevnt_accntn_hstrc WHERE svngs_product_id = $prdtID "
                                        . "AND rvsn_ttl = $rvsnTtl) AS subquery
                                    WHERE mcf.mcf_prdt_savings_stdevnt_accntn.svngs_product_id=subquery.svngs_product_id
                                    AND mcf.mcf_prdt_savings_stdevnt_accntn.rvsn_ttl = subquery.rvsn_ttl");

                                if ($updateCnt6 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3!<br/></div>';
                                    exit();
                                }
                            }

                            //COMMISSION ON TURNOVER
                            $sqlQry2 = "SELECT * FROM mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                            $resultQry2 = executeSQLNoParams($sqlQry2);
                            $rowCntQry2 = loc_db_num_rows($resultQry2);

                            if ($rowCntQry2 > 0) {
                                //CHECK EXISTENCE OF acct_sign_id in mcf_prsn_national_ids
                                $sqlQry9 = "SELECT row_id
                                   FROM mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                                $resultQry9 = executeSQLNoParams($sqlQry9);
                                while ($row9 = loc_db_fetch_array($resultQry9)) {
                                    $acctSignID = $row9[0];
                                    $sqlQry8 = "SELECT * FROM mcf.mcf_svngs_wthdrwl_comm WHERE row_id = $acctSignID";
                                    if ($acctSignID < 0) {
                                        $sqlQry8 = "SELECT * FROM mcf.mcf_svngs_wthdrwl_comm WHERE row_id = (-1*$acctSignID)";
                                    }
                                    $resultQry8 = executeSQLNoParams($sqlQry8);
                                    $rowCntQry8 = loc_db_num_rows($resultQry8);
                                    if ($rowCntQry8 <= 0) {
                                        //INSERT
                                        $updateCnt5 = execUpdtInsSQL("INSERT INTO mcf.mcf_svngs_wthdrwl_comm(
                                            row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                            created_by, creation_date, last_update_by, last_update_date,
                                            product_id, rvsn_ttl, is_approved)
                                        SELECT row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                            created_by, creation_date, last_update_by, last_update_date,
                                            product_id, rvsn_ttl, 'Yes'
                                        FROM mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE row_id = $acctSignID AND rvsn_ttl = $rvsnTtl");

                                        if ($updateCnt5 <= 0) {
                                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-5!<br/></div>';
                                            exit();
                                        }
                                    } else {
                                        if ($acctSignID < 0) {
                                            $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_svngs_wthdrwl_comm WHERE row_id = (-1*$acctSignID)");
                                            if ($updateCnt55 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            //UPDATE
                                            //mcf_svngs_wthdrwl_comm_hstrc TO mcf_svngs_wthdrwl_comm
                                            $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_svngs_wthdrwl_comm
                                                SET row_id=subquery.row_id, range_low=subquery.range_low, range_high=subquery.range_high,
                                                comm_flat=subquery.comm_flat, comm_percent=subquery.comm_percent,
                                                    remarks=subquery.remarks, created_by=subquery.created_by, creation_date=subquery.creation_date,
                                                    last_update_by=subquery.last_update_by, last_update_date=subquery.last_update_date,
                                                    product_id=subquery.product_id, rvsn_ttl=subquery.rvsn_ttl, is_approved='Yes'
                                            FROM (SELECT row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                                    created_by, creation_date, last_update_by, last_update_date,
                                                    product_id, rvsn_ttl, is_approved, row_id_hstrc_comm
                                               FROM mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE rvsn_ttl = $rvsnTtl AND row_id = $acctSignID) AS subquery
                                            WHERE mcf.mcf_svngs_wthdrwl_comm.rvsn_ttl = subquery.rvsn_ttl
                                            AND mcf_svngs_wthdrwl_comm.row_id = subquery.row_id");

                                            if ($updateCnt56 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-56!<br/></div>';
                                                exit();
                                            }
                                        }
                                    }
                                }
                            }

                            //MOVE APPROVED DATA TO HISTORIC
                            //mcf_prdt_savings TO mcf_prdt_savings_hstrc
                            while ($row = loc_db_fetch_array($apprvdCustAcountDataRslt)) {
                                $updateCnt3 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings_hstrc
                                    SET svngs_product_id=$row[0], product_name='" . loc_db_escape_string($row[1]) . "',
                                        product_desc='" . loc_db_escape_string($row[2]) . "', prdt_type_id=$row[3],
                                        cust_type_ind='$row[4]', currency_id=$row[5], initial_amount_min=$row[6], balance_min=$row[7],
                                        interest_rate=$row[8], interest_accrual_frequency='" . loc_db_escape_string($row[9]) . "',
                                            interest_posting_frequency='" . loc_db_escape_string($row[10]) . "',
                                        interest_calc_method='" . loc_db_escape_string($row[11]) . "', withdrawal_limit_no=$row[12],
                                            withdrawal_limit_amount=$row[13],
                                        allow_overdraft='" . loc_db_escape_string($row[14]) . "', overdraft_limit=$row[15], entry_fees=$row[16],
                                            close_fees=$row[17],
                                        reopen_fees=$row[18], product_code='" . loc_db_escape_string($row[19]) . "',
                                            interest_calc_type='" . loc_db_escape_string($row[20]) . "', charge_cot='$row[21]',
                                        cot_free_withdrawals_max=$row[22], created_by=$row[23], creation_date='$row[24]', last_update_by=$row[25],
                                        last_update_date='$row[26]', use_as_collateral='$row[27]', product_type='$row[28]',
                                            withdrawal_limit='$row[29]',
                                        overdraft_penalty_flat=$row[30], overdraft_penalty_percent=$row[31], cust_type_corp='$row[32]',
                                        cust_type_custgrp='$row[33]', org_id=$row[34], charge_interest='$row[35]', invstmnt_duration_no=$row[36],
                                        invstmnt_duration_type='$row[37]', invstmnt_type='$row[38]', discount_rate=$row[39], invstmnt_max_amount=$row[40],
                                        invstmnt_min_amount=$row[41], interest_crediting_period='$row[42]', interest_crediting_type='$row[43]',
                                        daily_minbal_for_interest=$row[44], authorized_by_person_id=$row[45], autorization_date='$row[46]',
                                        chngs_pndng=$row[47], rvsn_ttl=$row[48], status='$row[49]', invstmnt_fees_flat=$row[50],
                                        invstmnt_fees_percent=$row[51], invstmnt_charge_fees='$row[52]', is_staff_account_product='$row[53]',
                                        sms_alert_fee=$row[54], sms_alert_revenue_id=$row[55]   
                                  WHERE svngs_product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                                if ($updateCnt3 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 4!<br/></div>';
                                    exit();
                                }
                            }

                            //ADDITIONAL PERSON DATA
                            while ($row3 = loc_db_fetch_array($apprvdEventAcntnDataRslt)) {
                                $updateCnt6 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings_stdevnt_accntn_hstrc
                                    SET svngs_accntn_evnt_id=$row3[0], svngs_product_id=$row3[1], deposit_cash_dbt_accnt_id=$row3[2],
                                        deposit_cash_crdt_accnt_id=$row3[3], withdrawal_dbt_accnt_id=$row3[4], withdrawal_crdt_accnt_id=$row3[5],
                                        deposit_cheque_dbt_accnt_id=$row3[6], deposit_cheque_crdt_accnt_id=$row3[7],
                                        entry_fees_dbt_accnt_id=$row3[8], entry_fees_crdt_accnt_id=$row3[9], close_fees_dbt_accnt_id=$row3[10],
                                        close_fees_crdt_accnt_id=$row3[11], reopen_fees_dbt_accnt_id=$row3[12], reopen_fees_crdt_accnt_id=$row3[13],
                                        overdraft_pnlty_dbt_accnt_id=$row3[14], overdraft_pnlty_crdt_accnt_id=$row3[15],
                                        wthdrwl_pnlty_pcnt_dbt_accnt_id=$row3[16], wthdrwl_pnlty_pcnt_crdt_accnt_id=$row3[17],
                                        invstmnt_liability_accnt_id=$row3[18], invstmnt_fee_crdt_accnt_id=$row3[19], cot_amnt_flat_dbt_accnt_id=$row3[20],
                                        cot_amnt_flat_crdt_accnt_id=$row3[21], accrued_interest_dbt_accnt_id=$row3[22],
                                        accrued_interest_crdt_accnt_id=$row3[23], interest_payment_dbt_accnt_id=$row3[24],
                                        interest_payment_crdt_accnt_id=$row3[25], created_by=$row3[26], creation_date='$row3[27]',
                                        last_update_by=$row3[28], last_update_date='$row3[29]', org_id=$row3[30], rvsn_ttl=$row3[31]
                                      WHERE svngs_product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                                if ($updateCnt6 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                    exit();
                                }
                            }

                            //COT
                            $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE "
                                    . "product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                            //mcf_account_signatories TO mcf_account_signatories_hstrc
                            while ($row2 = loc_db_fetch_array($apprvdAcountSgntryDataRslt)) {
                                $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_svngs_wthdrwl_comm_hstrc(
                                    row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                    created_by, creation_date, last_update_by, last_update_date,
                                    product_id, rvsn_ttl, is_approved)
                                 VALUES($row2[0],$row2[1],$row2[2],$row2[3],$row2[4],'$row2[5]',
                                         $row2[6],'$row2[7]',$row2[8],'$row2[9]',
                                         $row2[10], $row2[11], '$row2[12]')");

                                if ($updateCnt51 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                    exit();
                                }
                            }
                        }

                        $response = array('prdtID' => $prdtID);
                        echo json_encode($response);
                        exit();
                    } else if ($actyp == 4) {//MODIFY DATA
                        $prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                        $dateStr = getDB_Date_time();

                        //BACKUP AUTHORIZED DATA
                        //mcf_customers
                        $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings SET chngs_pndng = 1, rvsn_ttl = (rvsn_ttl+1),"
                                . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE svngs_product_id = $prdtID");
                        if ($updateCnt1 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Savings Product. ERROR1!<br/></div>';
                            exit();
                        }

                        $updateCnt2 = execUpdtInsSQL("INSERT INTO mcf.mcf_prdt_savings_hstrc(
                                svngs_product_id, product_name, product_desc, prdt_type_id, cust_type_ind,
                                currency_id, initial_amount_min, balance_min, interest_rate,
                                interest_accrual_frequency, interest_posting_frequency, interest_calc_method,
                                withdrawal_limit_no, withdrawal_limit_amount, allow_overdraft,
                                overdraft_limit, entry_fees, close_fees, reopen_fees, product_code,
                                interest_calc_type, charge_cot, cot_free_withdrawals_max, created_by,
                                creation_date, last_update_by, last_update_date, use_as_collateral,
                                product_type, withdrawal_limit, overdraft_penalty_flat, overdraft_penalty_percent,
                                cust_type_corp, cust_type_custgrp, org_id, charge_interest, invstmnt_duration_no,
                                invstmnt_duration_type, invstmnt_type, discount_rate, invstmnt_max_amount,
                                invstmnt_min_amount, interest_crediting_period, interest_crediting_type,
                                daily_minbal_for_interest, authorized_by_person_id, autorization_date,
                                rvsn_ttl, status, invstmnt_fees_flat, invstmnt_fees_percent,
                                invstmnt_charge_fees, is_staff_account_product, sms_alert_fee, sms_alert_revenue_id)
                        SELECT svngs_product_id, product_name, product_desc, prdt_type_id, cust_type_ind,
                                currency_id, initial_amount_min, balance_min, interest_rate,
                                interest_accrual_frequency, interest_posting_frequency, interest_calc_method,
                                withdrawal_limit_no, withdrawal_limit_amount, allow_overdraft,
                                overdraft_limit, entry_fees, close_fees, reopen_fees, product_code,
                                interest_calc_type, charge_cot, cot_free_withdrawals_max, created_by,
                                creation_date, last_update_by, last_update_date, use_as_collateral,
                                product_type, withdrawal_limit, overdraft_penalty_flat, overdraft_penalty_percent,
                                cust_type_corp, cust_type_custgrp, org_id, charge_interest, invstmnt_duration_no,
                                invstmnt_duration_type, invstmnt_type, discount_rate, invstmnt_max_amount,
                                invstmnt_min_amount, interest_crediting_period, interest_crediting_type,
                                daily_minbal_for_interest, authorized_by_person_id, autorization_date,
                                rvsn_ttl, 'Incomplete', invstmnt_fees_flat, invstmnt_fees_percent,
                                invstmnt_charge_fees, is_staff_account_product, sms_alert_fee, sms_alert_revenue_id
                                FROM mcf.mcf_prdt_savings WHERE svngs_product_id = $prdtID AND status IN ('Approved','Authorized')");

                        if ($updateCnt2 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Savings Product. ERROR2!<br/></div>';
                            exit();
                        }

                        //EVENT ACCOUNTING
                        $updateCnt3 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_savings_stdevnt_accntn SET rvsn_ttl = (rvsn_ttl+1),"
                                . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE svngs_product_id = $prdtID");
                        if ($updateCnt3 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Event Accounting. ERROR1!<br/></div>';
                            exit();
                        }

                        $updateCnt4 = execUpdtInsSQL("INSERT INTO mcf.mcf_prdt_savings_stdevnt_accntn_hstrc(
                                svngs_accntn_evnt_id, svngs_product_id, deposit_cash_dbt_accnt_id,
                                deposit_cash_crdt_accnt_id, withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
                                deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id, entry_fees_dbt_accnt_id,
                                entry_fees_crdt_accnt_id, close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
                                reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id, overdraft_pnlty_dbt_accnt_id,
                                overdraft_pnlty_crdt_accnt_id, wthdrwl_pnlty_pcnt_dbt_accnt_id,
                                wthdrwl_pnlty_pcnt_crdt_accnt_id, invstmnt_liability_accnt_id,
                                invstmnt_fee_crdt_accnt_id, cot_amnt_flat_dbt_accnt_id, cot_amnt_flat_crdt_accnt_id,
                                accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
                                interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id,
                                created_by, creation_date, last_update_by, last_update_date,
                                org_id, rvsn_ttl)
                        SELECT svngs_accntn_evnt_id, svngs_product_id, deposit_cash_dbt_accnt_id,
                                deposit_cash_crdt_accnt_id, withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
                                deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id, entry_fees_dbt_accnt_id,
                                entry_fees_crdt_accnt_id, close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
                                reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id, overdraft_pnlty_dbt_accnt_id,
                                overdraft_pnlty_crdt_accnt_id, wthdrwl_pnlty_pcnt_dbt_accnt_id,
                                wthdrwl_pnlty_pcnt_crdt_accnt_id, invstmnt_liability_accnt_id,
                                invstmnt_fee_crdt_accnt_id, cot_amnt_flat_dbt_accnt_id, cot_amnt_flat_crdt_accnt_id,
                                accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
                                interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id,
                                created_by, creation_date, last_update_by, last_update_date,
                                org_id, rvsn_ttl
                                FROM mcf.mcf_prdt_savings_stdevnt_accntn WHERE svngs_product_id = $prdtID");

                        if ($updateCnt4 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Event Accounting. ERROR2!<br/></div>';
                            exit();
                        }

                        //mcf_svngs_wthdrwl_comm
                        $sqlQry2 = "SELECT * FROM mcf.mcf_svngs_wthdrwl_comm WHERE product_id = $prdtID";
                        $resultQry2 = executeSQLNoParams($sqlQry2);
                        $rowCntQry2 = loc_db_num_rows($resultQry2);

                        if ($rowCntQry2 > 0) {
                            $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_svngs_wthdrwl_comm SET rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE product_id = $prdtID");
                            if ($updateCnt7 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Commission on TurnOver. ERROR1!<br/></div>';
                                exit();
                            }

                            //COMMISSION ON TURNOVER
                            $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_svngs_wthdrwl_comm_hstrc(
                                    row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                    created_by, creation_date, last_update_by, last_update_date,
                                    product_id, rvsn_ttl)
                            SELECT row_id, range_low, range_high, comm_flat, comm_percent, remarks,
                                    created_by, creation_date, last_update_by, last_update_date,
                                    product_id, rvsn_ttl
                                    FROM mcf.mcf_svngs_wthdrwl_comm WHERE product_id = $prdtID");

                            if ($updateCnt9 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Commission on TurnOver. ERROR2!<br/></div>';
                                exit();
                            }
                        }
                        //BACKUP ALL IMAGES

                        $response = array('prdtID' => $prdtID,
                            'sbmtMsg' => "Approved Savings Product Data BACKUP Successful");
                        echo json_encode($response);
                    } else {

                        $prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                        $pdtCode = isset($_POST['pdtCode']) ? cleanInputData($_POST['pdtCode']) : "";
                        $prdtName = isset($_POST['prdtName']) ? cleanInputData($_POST['prdtName']) : "";
                        $prdtDesc = isset($_POST['prdtDesc']) ? cleanInputData($_POST['prdtDesc']) : "";
                        $prdtCrncy = isset($_POST['prdtCrncy']) ? cleanInputData($_POST['prdtCrncy']) : "";
                        $prdtType = isset($_POST['prdtType']) ? cleanInputData($_POST['prdtType']) : "";
                        $chrgInterest = isset($_POST['chrgInterest']) ? cleanInputData($_POST['chrgInterest']) : "";
                        $intRate = isset($_POST['intRate']) ? cleanInputData($_POST['intRate']) : 0;
                        $accrualFrqncy = isset($_POST['accrualFrqncy']) ? cleanInputData($_POST['accrualFrqncy']) : "";
                        $pstnFrqncy = isset($_POST['pstnFrqncy']) ? cleanInputData($_POST['pstnFrqncy']) : "";
                        $calcMethod = isset($_POST['calcMethod']) ? cleanInputData($_POST['calcMethod']) : "";
                        $calcType = isset($_POST['calcType']) ? cleanInputData($_POST['calcType']) : "";
                        $indCust = isset($_POST['indCust']) ? cleanInputData($_POST['indCust']) : "";
                        $corpCust = isset($_POST['corpCust']) ? cleanInputData($_POST['corpCust']) : "";
                        $custGrp = isset($_POST['custGrp']) ? cleanInputData($_POST['custGrp']) : "";
                        $wtdwlLimitType = isset($_POST['wtdwlLimitType']) ? cleanInputData($_POST['wtdwlLimitType']) : "";
                        $wtdwlLimitNo = isset($_POST['wtdwlLimitNo']) ? cleanInputData($_POST['wtdwlLimitNo']) : 0;
                        $wtdwlLimitAmt = isset($_POST['wtdwlLimitAmt']) ? cleanInputData($_POST['wtdwlLimitAmt']) : 0;
                        $wtdwlPnltyFlat = isset($_POST['wtdwlPnltyFlat']) ? cleanInputData($_POST['wtdwlPnltyFlat']) : 0;
                        $wtdwlPnltyPercent = isset($_POST['wtdwlPnltyPercent']) ? cleanInputData($_POST['wtdwlPnltyPercent']) : 0;
                        $chrgCOT = isset($_POST['chrgCOT']) ? cleanInputData($_POST['chrgCOT']) : "";
                        $cotFreeWtdwlNo = isset($_POST['cotFreeWtdwlNo']) ? cleanInputData($_POST['cotFreeWtdwlNo']) : 0;
                        $depstOpnBal = isset($_POST['depstOpnBal']) ? cleanInputData($_POST['depstOpnBal']) : 0;
                        $accBalMin = isset($_POST['accBalMin']) ? cleanInputData($_POST['accBalMin']) : 0;
		    $minBalForInterest = isset($_POST['minBalForInterest']) ? cleanInputData($_POST['minBalForInterest']) : 0;

                        $ovdrftAllowed = isset($_POST['ovdrftAllowed']) ? cleanInputData($_POST['ovdrftAllowed']) : "";
                        $useAsColtrl = isset($_POST['useAsColtrl']) ? cleanInputData($_POST['useAsColtrl']) : "";
                        $entryFees = isset($_POST['entryFees']) ? cleanInputData($_POST['entryFees']) : 0;
                        $closeFees = isset($_POST['closeFees']) ? cleanInputData($_POST['closeFees']) : 0;
                        $reOpenFees = isset($_POST['reOpenFees']) ? cleanInputData($_POST['reOpenFees']) : 0;

                        $crdtnFrqncy = isset($_POST['crdtnFrqncy']) ? cleanInputData($_POST['crdtnFrqncy']) : "";
                        $crdtnType = isset($_POST['crdtnType']) ? cleanInputData($_POST['crdtnType']) : "";

                        $invstmntType = isset($_POST['invstmntType']) ? cleanInputData($_POST['invstmntType']) : "";
                        $drtnNo = isset($_POST['drtnNo']) ? cleanInputData($_POST['drtnNo']) : 0;
                        $drtnType = isset($_POST['drtnType']) ? cleanInputData($_POST['drtnType']) : "";
                        $intRate1 = isset($_POST['intRate1']) ? cleanInputData($_POST['intRate1']) : 0;
                        $dscntRate = isset($_POST['dscntRate']) ? cleanInputData($_POST['dscntRate']) : 0;
                        $minAmount = isset($_POST['minAmount']) ? cleanInputData($_POST['minAmount']) : 0;
                        $maxAmount = isset($_POST['maxAmount']) ? cleanInputData($_POST['maxAmount']) : 0;
                        $invstmntFeeFlat = isset($_POST['invstmntFeeFlat']) ? cleanInputData($_POST['invstmntFeeFlat']) : 0;
                        $invstmntFeePrcnt = isset($_POST['invstmntFeePrcnt']) ? cleanInputData($_POST['invstmntFeePrcnt']) : 0;
                        $feeApplctnType = isset($_POST['feeApplctnType']) ? cleanInputData($_POST['feeApplctnType']) : "";
                        $isStaffAccountProduct = isset($_POST['isStaffAccountProduct']) ? cleanInputData($_POST['isStaffAccountProduct']) : "No";
                        
                        $smsAlertFeeRvnueAcctID = isset($_POST['smsAlertFeeRvnueAcctID']) ? cleanInputData($_POST['smsAlertFeeRvnueAcctID']) : -1;
                        $smsAlertFee = isset($_POST['smsAlertFee']) ? cleanInputData($_POST['smsAlertFee']) : 0;
                        
                        $prdtCrncy = getGnrlRecID("mcf.mcf_currencies", "iso_code", "crncy_id", $prdtCrncy, $orgid);
                        // getPssblValID($prdtCrncy, getLovID("Bank Currencies (Select List)"));

                        $svngsAccntnEvntId = isset($_POST['svngsAccntnEvntId']) ? cleanInputData($_POST['svngsAccntnEvntId']) : -1;
                        $cashDepositDbtAccID = isset($_POST['cashDepositDbtAccID']) ? cleanInputData($_POST['cashDepositDbtAccID']) : -1;
                        $cashDepositCrdtAccID = isset($_POST['cashDepositCrdtAccID']) ? cleanInputData($_POST['cashDepositCrdtAccID']) : -1;
                        $chqDepositDbtAccID = isset($_POST['chqDepositDbtAccID']) ? cleanInputData($_POST['chqDepositDbtAccID']) : -1;
                        $chqDepositCrdtAccID = isset($_POST['chqDepositCrdtAccID']) ? cleanInputData($_POST['chqDepositCrdtAccID']) : -1;
                        $cashWtdwlDbtAccID = isset($_POST['cashWtdwlDbtAccID']) ? cleanInputData($_POST['cashWtdwlDbtAccID']) : -1;
                        $cashWtdwlCrdtAccID = isset($_POST['cashWtdwlCrdtAccID']) ? cleanInputData($_POST['cashWtdwlCrdtAccID']) : -1;
                        $entryFeesDbtAccID = isset($_POST['entryFeesDbtAccID']) ? cleanInputData($_POST['entryFeesDbtAccID']) : -1;
                        $entryFeesCrdtAccID = isset($_POST['entryFeesCrdtAccID']) ? cleanInputData($_POST['entryFeesCrdtAccID']) : -1;
                        $closeFeesDbtAccID = isset($_POST['closeFeesDbtAccID']) ? cleanInputData($_POST['closeFeesDbtAccID']) : -1;
                        $closeFeesCrdtAccID = isset($_POST['closeFeesCrdtAccID']) ? cleanInputData($_POST['closeFeesCrdtAccID']) : -1;
                        $reopenFeesDbtAccID = isset($_POST['reopenFeesDbtAccID']) ? cleanInputData($_POST['reopenFeesDbtAccID']) : -1;
                        $reopenFeesCrdtAccID = isset($_POST['reopenFeesCrdtAccID']) ? cleanInputData($_POST['reopenFeesCrdtAccID']) : -1;
                        $wtdwlPnltyFlatDbtAccID = isset($_POST['wtdwlPnltyFlatDbtAccID']) ? cleanInputData($_POST['wtdwlPnltyFlatDbtAccID']) : -1;
                        $wtdwlPnltyFlatCrdtAccID = isset($_POST['wtdwlPnltyFlatCrdtAccID']) ? cleanInputData($_POST['wtdwlPnltyFlatCrdtAccID']) : -1;
                        $wtdwlPnltyPrcntDbtAccID = isset($_POST['wtdwlPnltyPrcntDbtAccID']) ? cleanInputData($_POST['wtdwlPnltyPrcntDbtAccID']) : -1;
                        $wtdwlPnltyPrcntCrdtAccID = isset($_POST['wtdwlPnltyPrcntCrdtAccID']) ? cleanInputData($_POST['wtdwlPnltyPrcntCrdtAccID']) : -1;
                        $cotFeeFlatDbtAccID = isset($_POST['cotFeeFlatDbtAccID']) ? cleanInputData($_POST['cotFeeFlatDbtAccID']) : -1;
                        $cotFeeFlatCrdtAccID = isset($_POST['cotFeeFlatCrdtAccID']) ? cleanInputData($_POST['cotFeeFlatCrdtAccID']) : -1;
                        $invstmntFeeDbtAccID = isset($_POST['invstmntFeeDbtAccID']) ? cleanInputData($_POST['invstmntFeeDbtAccID']) : -1;
                        $invstmntFeeCrdtAccID = isset($_POST['invstmntFeeCrdtAccID']) ? cleanInputData($_POST['invstmntFeeCrdtAccID']) : -1;
                        $interesPyblDbtAccID = isset($_POST['interesPyblDbtAccID']) ? cleanInputData($_POST['interesPyblDbtAccID']) : -1;
                        $interesPyblCrdtAccID = isset($_POST['interesPyblCrdtAccID']) ? cleanInputData($_POST['interesPyblCrdtAccID']) : -1;
                        $interesExpenseDbtAccID = isset($_POST['interesExpenseDbtAccID']) ? cleanInputData($_POST['interesExpenseDbtAccID']) : -1;
                        $interesExpenseCrdtAccID = isset($_POST['interesExpenseCrdtAccID']) ? cleanInputData($_POST['interesExpenseCrdtAccID']) : -1;
                        $myFormPage = isset($_POST['myFormPage']) ? cleanInputData($_POST['myFormPage']) : 1;

                        $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;

                        if ($prdtType === "Investment") {
                            $intRate = $intRate1;
                            $cashWtdwlDbtAccID = -1;
                            $cashWtdwlCrdtAccID = -1;
                            $entryFeesDbtAccID = -1;
                            $entryFeesCrdtAccID = -1;
                            $closeFeesDbtAccID = -1;
                            $closeFeesCrdtAccID = -1;
                            $reopenFeesDbtAccID = -1;
                            $reopenFeesCrdtAccID = -1;
                            $wtdwlPnltyPrcntDbtAccID = -1;
                            $wtdwlPnltyPrcntCrdtAccID = -1;
                            $cotFeeFlatDbtAccID = -1;
                            $cotFeeFlatCrdtAccID = -1;
                            $chrgInterest = "NO";
                            $accrualFrqncy = "";
                            $pstnFrqncy = "";
                            $calcMethod = "";
                            $calcType = "";
                            $indCust = "NO";
                            $corpCust = "NO";
                            $custGrp = "NO";
                            $wtdwlLimitType = "NO LIMIT";
                            $wtdwlLimitNo = 0;
                            $wtdwlLimitAmt = 0;
                            $wtdwlPnltyFlat = 0;
                            $wtdwlPnltyPercent = 0;
                            $chrgCOT = "NO";
                            $cotFreeWtdwlNo = 0;
                            $depstOpnBal = 0;
                            $accBalMin = 0;

                            $ovdrftAllowed = "NO";
                            $useAsColtrl = "NO";
                            $entryFees = 0;
                            $closeFees = 0;
                            $reOpenFees = 0;

                            $crdtnFrqncy = "";
                            $crdtnType = "";
                            
                            $smsAlertFeeRvnueAcctID = -1;
                            $smsAlertFee = 0;
                        } else {
                            $invstmntFeeCrdtAccID = -1;
                            $invstmntFeeDbtAccID = -1;
                            $invstmntType = "";
                            $drtnNo = 0;
                            $drtnType = "";
                            $intRate1 = 0;
                            $dscntRate = 0;
                            $minAmount = 0;
                            $maxAmount = 0;
                            $invstmntFeeFlat = 0;
                            $invstmntFeePrcnt = 0;
                            $feeApplctnType = "No Fee";
                        }

                        if ($prdtName == "" || $pdtCode == "" || $prdtType == "") {
                            echo "Please complete all required fields before proceeding!";
                            exit();
                        }


                        $rcdCnt = 0;
                        $rcdCntActn = 0;
                        //var_dump($prdtDesc." ".$prdtName." ".$prdtDesc." ".$prdtCrncy);

                        if ($pdtCode != "" && $prdtName != "" &&
                                $prdtDesc != "" &&
                                $prdtCrncy != "") {
                            if ($prdtID <= 0) {
                                if (svngsPrdtNameExists($prdtName, $prdtType, $prdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! a Product with same Name ' . $prdtName . ' exists for Product Type ' . $prdtType . '!<br/></div>';
                                    exit();
                                }

                                if (svngsPrdtCodeExists($pdtCode, $prdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! Product Code ' . $pdtCode . ' exists!<br/></div>';
                                    exit();
                                }

                                $rcdCnt = createSavingsPrdt($orgid, $pdtCode, $prdtName, $prdtDesc, $prdtCrncy, $prdtType, $chrgInterest, $intRate, $accrualFrqncy, $pstnFrqncy, $calcMethod, $calcType, $indCust, $corpCust, $custGrp, $wtdwlLimitType, $wtdwlLimitNo, $wtdwlLimitAmt, $wtdwlPnltyFlat, $wtdwlPnltyPercent, $chrgCOT, $cotFreeWtdwlNo, $ovdrftAllowed, $useAsColtrl, $entryFees, $closeFees, $reOpenFees, $dateStr, $depstOpnBal, $accBalMin, $crdtnFrqncy, $crdtnType, $invstmntType, $drtnNo, $drtnType, $dscntRate, $minAmount, $maxAmount, $invstmntFeeFlat, $invstmntFeePrcnt, $feeApplctnType, $isStaffAccountProduct, $minBalForInterest, $smsAlertFee, $smsAlertFeeRvnueAcctID);
                            } else {
                                if (svngsPrdtNameExists($prdtName, $prdtType, $prdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! a Product with same Name ' . $prdtName . ' exists for Product Type ' . $prdtType . '!<br/></div>';
                                    exit();
                                }

                                if (svngsPrdtCodeExists($pdtCode, $prdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! Product Code ' . $pdtCode . ' exists!<br/></div>';
                                    exit();
                                }

                                $rcdCnt = updateSavingsPrdt($prdtID, $pdtCode, $prdtName, $prdtDesc, $prdtCrncy, $prdtType, $chrgInterest, $intRate, $accrualFrqncy, $pstnFrqncy, $calcMethod, $calcType, $indCust, $corpCust, $custGrp, $wtdwlLimitType, $wtdwlLimitNo, $wtdwlLimitAmt, $wtdwlPnltyFlat, $wtdwlPnltyPercent, $chrgCOT, $cotFreeWtdwlNo, $ovdrftAllowed, $useAsColtrl, $entryFees, $closeFees, $reOpenFees, $dateStr, $depstOpnBal, $accBalMin, $crdtnFrqncy, $crdtnType, $invstmntType, $drtnNo, $drtnType, $dscntRate, $minAmount, $maxAmount, $invstmntFeeFlat, $invstmntFeePrcnt, $feeApplctnType, $rvsnTtl, $isStaffAccountProduct, $minBalForInterest, $smsAlertFee, $smsAlertFeeRvnueAcctID);
                            }

                            if ($prdtID <= 0) {
                                $prdtID = getPrdtID($dateStr, $orgid, $usrID);

                                if ($rcdCnt > 0) {
                                    $rcdCntActn = createSavingsPrdtStdAccEvnts(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, $orgid, $dateStr, $prdtID);
                                } else {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Savings Product Failed to Save!<br/></div>';
                                    exit();
                                }

                                if ($rcdCntActn <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Standard Events Accounts Failed to Save!<br/></div>';
                                    exit();
                                }

                                echo json_encode(array("prdtID" => $prdtID));
                                exit();
                            } else {

                                if ($rcdCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to Update Savings Product!<br/></div>';
                                    exit();
                                } else {

                                    if ($myFormPage == 2) {
                                        $rcdCntActn = updateSavingsPrdtStdAccEvnts($cashDepositDbtAccID, $cashDepositCrdtAccID, $chqDepositDbtAccID, $chqDepositCrdtAccID, $cashWtdwlDbtAccID, $cashWtdwlCrdtAccID, $entryFeesDbtAccID, $entryFeesCrdtAccID, $closeFeesDbtAccID, $closeFeesCrdtAccID, $reopenFeesDbtAccID, $reopenFeesCrdtAccID, $wtdwlPnltyFlatDbtAccID, $wtdwlPnltyFlatCrdtAccID, $wtdwlPnltyPrcntDbtAccID, $wtdwlPnltyPrcntCrdtAccID, $cotFeeFlatDbtAccID, $cotFeeFlatCrdtAccID, $invstmntFeeDbtAccID, $invstmntFeeCrdtAccID, $interesPyblDbtAccID, $interesPyblCrdtAccID, $interesExpenseDbtAccID, $interesExpenseCrdtAccID, $orgid, $dateStr, $prdtID, $rvsnTtl);
                                    }
                                }

                                if ($myFormPage == 2 && $rcdCntActn <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to Update Standard Event Accounts!<br/></div>';
                                    exit();
                                } else {

                                    if ($shdSbmt > 0) {
                                        //VALIDATE AND SUBMIT
                                        //SUBMIT FOR APPROVAL
                                        $tblNm = "mcf.mcf_prdt_savings";
                                        if ($rvsnTtl > 0) {
                                            $tblNm = "mcf.mcf_prdt_savings_hstrc";
                                        }

                                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm SET status = 'Unauthorized',"
                                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE svngs_product_id = $prdtID"
                                                . " AND rvsn_ttl = $rvsnTtl");


                                        if ($updateCnt > 0) {
                                            echo json_encode(array("prdtID" => $prdtID));
                                            exit();
//                                        $response = array('prdtID' => $prdtID,
//                                            'sbmtMsg' => "Change Request submitted successfully for AUTHORIZATION");
                                        } else {
                                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                            . 'width:18px;height:18px;"/>Failed to Submit Data for AUTHORIZATION!<br/></div>';
                                            exit();
                                        }

                                        //echo json_encode($response);
                                    }

                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Savings Product Successfully Saved!<br/></div>';
                                    exit();
                                }
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . '<br/>Data Supplied is Incomplete!<br/></div>';
                            exit();
                        }
                    }
                } else if ($vwtyp == "5") {//COMMISSIONS
                    //var_dump($rowID);
                    $lowRange = isset($_POST['lowRange']) ? cleanInputData($_POST['lowRange']) : 0;
                    $highRange = isset($_POST['highRange']) ? cleanInputData($_POST['highRange']) : 0;
                    $amountFlat = isset($_POST['amountFlat']) ? cleanInputData($_POST['amountFlat']) : 0;
                    $amountPrcnt = isset($_POST['amountPrcnt']) ? cleanInputData($_POST['amountPrcnt']) : 0;
                    $remarks = isset($_POST['remarks']) ? cleanInputData($_POST['remarks']) : "";
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                    $prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    $dateStr = getDB_Date_time();

                    if ($lowRange > 0 && $highRange > 0) {
                        if ($rowID <= 0) {
                            createSavingsWtdwlCmmsn($lowRange, $highRange, $amountFlat, $amountPrcnt, $remarks, $prdtID, $dateStr, $rvsnTtl);
                        } else {
                            updateSavingsWtdwlCmmsn($lowRange, $highRange, $amountFlat, $amountPrcnt, $remarks, $dateStr, $rowID, $rvsnTtl);
                        }

                        if ($rowID <= 0) {
                            //$rowID = getSvngsCmsnRowID($dateStr, $usrID, $prdtID);
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Commission Added Successfully!<br/></div>';
                            exit();
                            //echo json_encode(array("rowID" => $rowID));
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Savings Withdrawal Commission Successfully Saved!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Either the New Product ID No. is in Use <br/>or Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 7.2) {//CREDIT PRODUCT
                if ($vwtyp == "0") {// MAIN PARAMETERS DATA
                    //var_dump($_POST);
                    //header("content-type:application/json");
                    //categoryCombo
                    $orgid = $_SESSION['ORG_ID'];
                    $dateStr = getDB_Date_time();
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                    $sbmtdPrdtID = isset($_POST['sbmtdPrdtID']) ? cleanInputData($_POST['sbmtdPrdtID']) : -1;

                    //echo "rvsnTtl=".$rvsnTtl;

                    if ($actyp == 1) {
                        //WITHDRAWN
                        $tblNm1 = "mcf.mcf_prdt_loans";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                        }

                        $errMsg = "";
                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Withdrawn',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_product_id = $sbmtdPrdtID");

                        if ($updateCnt > 0) {
                            $response = array('prdtID' => $prdtID,
                                'sbmtMsg' => "Change Request WITHDRAWN successfully");
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to WITHDRAWN Data Change Request!<br/></div>';
                            exit();
                        }

                        echo json_encode($response);
                    } else if ($actyp == 2) {
                        //REJECT
                        $tblNm1 = "mcf.mcf_prdt_loans";
                        //$tblNm1 = "mcf.mcf_customers_";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                        }

                        $errMsg = "";
                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Rejected',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_product_id = $sbmtdPrdtID");

                        if ($updateCnt > 0) {
                            $response = array('prdtID' => $sbmtdPrdtID,
                                'sbmtMsg' => "Change Request REJECTED successfully");
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to REJECT Data Change Request!<br/></div>';
                            exit();
                        }

                        echo json_encode($response);
                    } else if ($actyp == 3) {//AUTHORIZE LOANS PRODUCT
                        //var_dump($_POST);
                        $prdtID = $sbmtdPrdtID;
                        //$prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                        //$dateStr = getDB_Date_time();

                        $tblNm1 = "mcf.mcf_prdt_loans";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                        }

                        $updateCnt = execUpdtInsSQL("UPDATE $tblNm1 SET status = 'Authorized',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr',"
                                . "authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE loan_product_id = $prdtID");

                        if ($updateCnt <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 1!<br/></div>';
                            exit();
                        }

                        if ((int) $rvsnTtl > 0) {
                            //FETCH APPROVED DATA
                            $apprvdCustAcountDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_prdt_loans WHERE loan_product_id = $prdtID");
                            $apprvdPrcsnFeeDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loan_product_id = $prdtID");
                            $apprvdLateFeeDataRslt = executeSQLNoParams("SELECT * FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loan_product_id = $prdtID");

                            //OVERWRITE APPROVED DATA
                            $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_loans
                                SET loan_product_id=subquery.loan_product_id, product_name=subquery.product_name,
                                    product_desc=subquery.product_desc, loan_max_amount=subquery.loan_max_amount,
                                    loan_min_amount=subquery.loan_min_amount, loan_repayment_type=subquery.loan_repayment_type,
                                    grace_period_no=subquery.grace_period_no,
                                    grace_period_type=subquery.grace_period_type, max_loan_tenor=subquery.max_loan_tenor,
                                    max_loan_tenor_type=subquery.max_loan_tenor_type,
                                    guarantor_required=subquery.guarantor_required, guarantor_no=subquery.guarantor_no,
                                    sector_clsfctn_major_id=subquery.sector_clsfctn_major_id,
                                    sector_clsfctn_minor_id=subquery.sector_clsfctn_minor_id, org_id=subquery.org_id,
                                    created_by=subquery.created_by, creation_date=subquery.creation_date,
                                    last_update_by=subquery.last_update_by, last_update_date=subquery.last_update_date, product_code=subquery.product_code,
                                    product_type=subquery.product_type,
                                    posting_frequency=subquery.posting_frequency, charge_interest=subquery.charge_interest, interest_rate=subquery.interest_rate,
                                    cust_type_custgrp=subquery.cust_type_custgrp,
                                    cust_type_corp=subquery.cust_type_corp, cust_type_ind=subquery.cust_type_ind, start_date_active=subquery.start_date_active,
                                    end_date_active=subquery.end_date_active,
                                    compounding_period=subquery.compounding_period, principal_rcvbl_acct_id=subquery.principal_rcvbl_acct_id,
                                    interest_rcvbl_acct_id=subquery.interest_rcvbl_acct_id,
                                    deferred_interest_acct_id=subquery.deferred_interest_acct_id, loans_payable_acct_id=subquery.loans_payable_acct_id,
                                    is_account_rqrd=subquery.is_account_rqrd,
                                    cash_collateral_rqrd=subquery.cash_collateral_rqrd, value_flat_min_cash_collateral=subquery.value_flat_min_cash_collateral,
                                    value_flat_prcnt_cash_collateral=subquery.value_flat_prcnt_cash_collateral,
                                    prpty_collateral_rqrd=subquery.prpty_collateral_rqrd, value_flat_min_prpty_collateral=subquery.value_flat_min_prpty_collateral,
                                    value_flat_prcnt_prpty_collateral=subquery.value_flat_prcnt_prpty_collateral,
                                    invstmnt_collateral_rqrd=subquery.invstmnt_collateral_rqrd, value_flat_min_invstmnt_collateral=subquery.value_flat_min_invstmnt_collateral,
                                    value_flat_prcnt_invstmnt_collateral=subquery.value_flat_prcnt_invstmnt_collateral, min_loan_tenor=subquery.min_loan_tenor, min_loan_tenor_type=subquery.min_loan_tenor_type,
                                    rcvry_officer_rqrd=subquery.rcvry_officer_rqrd, currency_id=subquery.currency_id, interest_rate_type=subquery.interest_rate_type,
                                    interest_revenue_acct_id=subquery.interest_revenue_acct_id,
                                    ttl_allwd_principal_rcvbl_amnt_flat=subquery.ttl_allwd_principal_rcvbl_amnt_flat, scoring_set_hdr_id=subquery.scoring_set_hdr_id,
                                    status=subquery.status, bad_debt_acct_id=subquery.bad_debt_acct_id, authorized_by_person_id=subquery.authorized_by_person_id,
                                    autorization_date=subquery.autorization_date, chngs_pndng=0,
                                    loan_provision_dbt_acct_id=subquery.loan_provision_dbt_acct_id, loan_provision_crdt_acct_id=subquery.loan_provision_crdt_acct_id,
                                    is_staff_loan_product=subquery.is_staff_loan_product, allwd_group_type=subquery.allwd_group_type, allwd_group_value=subquery.allwd_group_value
                                FROM (SELECT loan_product_id, product_name, product_desc, loan_max_amount,
                                    loan_min_amount, loan_repayment_type, grace_period_no, grace_period_type,
                                    max_loan_tenor, max_loan_tenor_type, guarantor_required, guarantor_no,
                                    sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, created_by,
                                    creation_date, last_update_by, last_update_date, product_code,
                                    product_type, posting_frequency, charge_interest, interest_rate,
                                    cust_type_custgrp, cust_type_corp, cust_type_ind, start_date_active,
                                    end_date_active, compounding_period, principal_rcvbl_acct_id,
                                    interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id,
                                    is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral,
                                    value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral,
                                    value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd,
                                    value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
                                    min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id,
                                    interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat,
                                    scoring_set_hdr_id, status, bad_debt_acct_id, authorized_by_person_id,
                                    autorization_date, chngs_pndng, rvsn_ttl, row_id, loan_provision_dbt_acct_id, loan_provision_crdt_acct_id,
                                    is_staff_loan_product, allwd_group_type, allwd_group_value
                               FROM mcf.mcf_prdt_loans_hstrc
                                    WHERE loan_product_id = $prdtID and rvsn_ttl = $rvsnTtl) AS subquery
                                WHERE mcf.mcf_prdt_loans.loan_product_id=subquery.loan_product_id
                                AND mcf.mcf_prdt_loans.rvsn_ttl = subquery.rvsn_ttl");

                            if ($updateCnt1 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 2!<br/></div>';
                                exit();
                            }


                            //CHECK EXISTENCE OF PROCESSING FEES
                            $sqlQry22 = "SELECT * FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE loan_product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                            $resultQry22 = executeSQLNoParams($sqlQry22);
                            $rowCntQry22 = loc_db_num_rows($resultQry22);
                            //$varEms = "Before Entry";

                            if ($rowCntQry22 > 0) {
                                //$varEms .= "</br> > 0";
                                //PICK PKeys of historic data
                                $sqlQry99 = "SELECT loanprdt_prcssn_fee_id
                                   FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE loan_product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                                $resultQry99 = executeSQLNoParams($sqlQry99);
                                while ($row99 = loc_db_fetch_array($resultQry99)) {
                                    $acctSignID = $row99[0];
                                    //$varEms .= "</br> fee id = $acctSignID";
                                    $sqlQry88 = "SELECT * FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_prcssn_fee_id = $acctSignID";
                                    if ($acctSignID < 0) {
                                        $sqlQry88 = "SELECT * FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_prcssn_fee_id = (-1*$acctSignID)";
                                    }
                                    $resultQry88 = executeSQLNoParams($sqlQry88);
                                    $rowCntQry88 = loc_db_num_rows($resultQry88);
                                    if ($rowCntQry88 <= 0) {
                                        //$varEms .= "</br> Insert Rec";
                                        //INSERT
                                        $updateCnt55 = execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_prcssnfees_n_accts(
                                            loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                            fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                            last_update_date, crdt_accnt_id, rvsn_ttl, is_approved)
                                        SELECT loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                            fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                            last_update_date, crdt_accnt_id, rvsn_ttl, 'Yes'
                                        FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE loanprdt_prcssn_fee_id = $acctSignID "
                                                . "AND rvsn_ttl = $rvsnTtl");

                                        if ($updateCnt55 <= 0) {
                                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                            exit();
                                        }
                                    } else {
                                        if ($acctSignID < 0) {
                                            //$varEms .= "</br> Del Rec";
                                            $updateCnt555 = execUpdtInsSQL("DELETE FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_prcssn_fee_id = (-1*$acctSignID)");
                                            if ($updateCnt555 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-555!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            //$varEms .= "</br> Update Rec";
                                            //UPDATE
                                            $updateCnt565 = execUpdtInsSQL("UPDATE mcf.mcf_loanprdt_prcssnfees_n_accts
                                            SET loanprdt_prcssn_fee_id=subquery.loanprdt_prcssn_fee_id, loan_product_id=subquery.loan_product_id,
                                                fee_name=subquery.fee_name, fee_type=subquery.fee_type,
                                                fee_flat=subquery.fee_flat, fee_percent=subquery.fee_percent, remarks=subquery.remarks,
                                                created_by=subquery.created_by, creation_date=subquery.creation_date,
                                                last_update_by=subquery.last_update_by, last_update_date=subquery.last_update_date,
                                                crdt_accnt_id=subquery.crdt_accnt_id, rvsn_ttl=subquery.rvsn_ttl, is_approved='Yes'
                                            FROM (SELECT loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                                fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                                last_update_date, crdt_accnt_id, rvsn_ttl, is_approved, row_id
                                            FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE rvsn_ttl = $rvsnTtl "
                                                    . "AND loanprdt_prcssn_fee_id = $acctSignID) AS subquery
                                            WHERE mcf.mcf_loanprdt_prcssnfees_n_accts.rvsn_ttl = subquery.rvsn_ttl
                                            AND mcf.mcf_loanprdt_prcssnfees_n_accts.loanprdt_prcssn_fee_id = subquery.loanprdt_prcssn_fee_id");

                                            if ($updateCnt565 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-565!<br/></div>';
                                                exit();
                                            }
                                        }
                                    }
                                }
                            }

                            //echo $varEms;
                            //exit();
                            //LATE FEES
                            $sqlQry2 = "SELECT * FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE loan_product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                            $resultQry2 = executeSQLNoParams($sqlQry2);
                            $rowCntQry2 = loc_db_num_rows($resultQry2);

                            if ($rowCntQry2 > 0) {
                                //CHECK EXISTENCE
                                $sqlQry9 = "SELECT loanprdt_late_fee_id
                                   FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE loan_product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
                                $resultQry9 = executeSQLNoParams($sqlQry9);
                                while ($row9 = loc_db_fetch_array($resultQry9)) {
                                    $acctSignID = $row9[0];
                                    $sqlQry8 = "SELECT * FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loanprdt_late_fee_id = $acctSignID";
                                    if ($acctSignID < 0) {
                                        $sqlQry8 = "SELECT * FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loanprdt_late_fee_id = (-1*$acctSignID)";
                                    }
                                    $resultQry8 = executeSQLNoParams($sqlQry8);
                                    $rowCntQry8 = loc_db_num_rows($resultQry8);
                                    if ($rowCntQry8 <= 0) {
                                        //INSERT
                                        $updateCnt55 = execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_latefees_n_accts(
                                            loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat,
                                            fee_percent, frequency, frequency_no, remarks, created_by, creation_date,
                                            last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                            rvsn_ttl, is_approved)
                                        SELECT loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat,
                                            fee_percent, frequency, frequency_no, remarks, created_by, creation_date,
                                            last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                            rvsn_ttl, 'Yes'
                                        FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE loanprdt_late_fee_id = $acctSignID "
                                                . "AND rvsn_ttl = $rvsnTtl");

                                        if ($updateCnt5 <= 0) {
                                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-5!<br/></div>';
                                            exit();
                                        }
                                    } else {
                                        if ($acctSignID < 0) {
                                            $updateCnt55 = execUpdtInsSQL("DELETE FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loanprdt_late_fee_id = (-1*$acctSignID)");
                                            if ($updateCnt55 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-55!<br/></div>';
                                                exit();
                                            }
                                        } else {
                                            //UPDATE
                                            $updateCnt56 = execUpdtInsSQL("UPDATE mcf.mcf_loanprdt_latefees_n_accts
                                            SET loanprdt_late_fee_id=subquery.loanprdt_late_fee_id, loan_product_id=subquery.loan_product_id, fee_name=subquery.fee_name, target=subquery.target,
                                                fee_flat=subquery.fee_flat, fee_percent=subquery.fee_percent, frequency=subquery.frequency, frequency_no=subquery.frequency_no, remarks=subquery.remarks,
                                                created_by=subquery.created_by, creation_date=subquery.creation_date, last_update_by=subquery.last_update_by, last_update_date=subquery.last_update_date,
                                                dbt_accnt_id=subquery.dbt_accnt_id, crdt_accnt_id=subquery.crdt_accnt_id, rvsn_ttl=subquery.rvsn_ttl, is_approved='Yes'
                                            FROM (SELECT loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat,
                                                fee_percent, frequency, frequency_no, remarks, created_by, creation_date,
                                                last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                                rvsn_ttl, is_approved, row_id
                                           FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE rvsn_ttl = $rvsnTtl "
                                                    . "AND loanprdt_late_fee_id = $acctSignID) AS subquery
                                            WHERE mcf.mcf_loanprdt_latefees_n_accts.rvsn_ttl = subquery.rvsn_ttl
                                            AND mcf.mcf_loanprdt_latefees_n_accts.loanprdt_late_fee_id = subquery.loanprdt_late_fee_id");

                                            if ($updateCnt56 <= 0) {
                                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                                . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 3-56!<br/></div>';
                                                exit();
                                            }
                                        }
                                    }
                                }
                            }


                            //MOVE APPROVED DATA TO HISTORIC
                            //mcf_prdt_loans TO mcf_prdt_loans_hstrc
                            while ($row = loc_db_fetch_array($apprvdCustAcountDataRslt)) {
                                $updateCnt3 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_loans_hstrc
                                SET loan_product_id=$row[0], product_name='" . loc_db_escape_string($row[1]) . "',
                                    product_desc='" . loc_db_escape_string($row[2]) . "', loan_max_amount=$row[3],
                                    loan_min_amount=$row[4], loan_repayment_type='$row[5]', grace_period_no=$row[6],
                                    grace_period_type='$row[7]', max_loan_tenor=$row[8], max_loan_tenor_type='$row[9]',
                                    guarantor_required='$row[10]', guarantor_no=$row[11], sector_clsfctn_major_id=$row[12],
                                    sector_clsfctn_minor_id=$row[13], org_id=$row[14], created_by=$row[15], creation_date='$row[16]',
                                    last_update_by=$row[17], last_update_date='$row[18]', product_code='$row[19]', product_type='$row[20]',
                                    posting_frequency='$row[21]', charge_interest='$row[22]', interest_rate=$row[23], cust_type_custgrp='$row[24]',
                                    cust_type_corp='$row[25]', cust_type_ind='$row[26]', start_date_active='$row[27]', end_date_active='$row[28]',
                                    compounding_period='$row[29]', principal_rcvbl_acct_id=$row[30], interest_rcvbl_acct_id=$row[31],
                                    deferred_interest_acct_id=$row[32], loans_payable_acct_id=$row[33], is_account_rqrd='$row[34]',
                                    cash_collateral_rqrd='$row[35]', value_flat_min_cash_collateral=$row[36], value_flat_prcnt_cash_collateral=$row[37],
                                    prpty_collateral_rqrd='$row[38]', value_flat_min_prpty_collateral=$row[39], value_flat_prcnt_prpty_collateral=$row[40],
                                    invstmnt_collateral_rqrd='$row[41]', value_flat_min_invstmnt_collateral=$row[42],
                                    value_flat_prcnt_invstmnt_collateral=$row[43], min_loan_tenor=$row[44], min_loan_tenor_type='$row[45]',
                                    rcvry_officer_rqrd='$row[46]', currency_id=$row[47], interest_rate_type='$row[48]', interest_revenue_acct_id=$row[49],
                                    ttl_allwd_principal_rcvbl_amnt_flat=$row[50], scoring_set_hdr_id=$row[51],
                                    status='$row[52]', bad_debt_acct_id=$row[53], authorized_by_person_id=$row[54], autorization_date='$row[55]',
                                    chngs_pndng=$row[56], rvsn_ttl=$row[57], loan_provision_dbt_acct_id = $row[58], loan_provision_crdt_acct_id= $row[59],
                                    is_staff_loan_product='$row[60]', allwd_group_type='$row[61]', allwd_group_value='$row[62]'
                                  WHERE loan_product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                                if ($updateCnt3 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 4!<br/></div>';
                                    exit();
                                }
                            }

                            //PROCESSING FEES
                            $updateCnt51 = execUpdtInsSQL("DELETE FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE "
                                    . "loan_product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                            while ($row2 = loc_db_fetch_array($apprvdPrcsnFeeDataRslt)) {
                                $updateCnt51 = $updateCnt51 + execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc(
                                        loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                        fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                        last_update_date, crdt_accnt_id, rvsn_ttl, is_approved)
                                 VALUES($row2[0],$row2[1],'" . loc_db_escape_string($row2[2]) . "','$row2[3]',$row2[4],$row2[5],
                                        '" . loc_db_escape_string($row2[6]) . "',$row2[7],'$row2[8]',$row2[9],
                                         '$row2[10]', $row2[11], $row2[12],'$row2[13]')");

                                if ($updateCnt51 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 5!<br/></div>';
                                    exit();
                                }
                            }

                            //LATE FEES
                            $updateCnt6 = execUpdtInsSQL("DELETE FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE "
                                    . "loan_product_id = $prdtID and rvsn_ttl = $rvsnTtl");

                            while ($row2 = loc_db_fetch_array($apprvdLateFeeDataRslt)) {
                                $updateCnt6 = $updateCnt6 + execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_latefees_n_accts_hstrc(
                                    loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat, fee_percent,
                                    frequency, frequency_no, remarks, created_by, creation_date,
                                    last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                    rvsn_ttl, is_approved)
                                 VALUES($row2[0],$row2[1],'" . loc_db_escape_string($row2[2]) . "','$row2[3]',$row2[4],$row2[5],
                                         '" . loc_db_escape_string($row2[6]) . "',$row2[7],'" . loc_db_escape_string($row2[8]) . "',$row2[9],
                                         '$row2[10]', $row2[11], '$row2[12]',$row2[13],$row2[14],$row2[15],'$row2[16]')");

                                if ($updateCnt6 <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to AUTHORIZE Data Change Request. Update 6!<br/></div>';
                                    exit();
                                }
                            }
                        }

                        $response = array('prdtID' => $prdtID);
                        echo json_encode($response);
                        exit();
                    }
                    else if ($actyp == 4) {//MODIFY DATA
                        $prdtID = $sbmtdPrdtID;
                        //$dateStr = getDB_Date_time();
                        //BACKUP AUTHORIZED DATA
                        //mcf_prdt_loans
                        $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_prdt_loans SET chngs_pndng = 1, rvsn_ttl = (rvsn_ttl+1),"
                                . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_product_id = $prdtID");
                        if ($updateCnt1 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Loans Product. ERROR1!<br/></div>';
                            exit();
                        }

                        $updateCnt2 = execUpdtInsSQL("INSERT INTO mcf.mcf_prdt_loans_hstrc(
                            loan_product_id, product_name, product_desc, loan_max_amount,
                            loan_min_amount, loan_repayment_type, grace_period_no, grace_period_type,
                            max_loan_tenor, max_loan_tenor_type, guarantor_required, guarantor_no,
                            sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, created_by,
                            creation_date, last_update_by, last_update_date, product_code,
                            product_type, posting_frequency, charge_interest, interest_rate,
                            cust_type_custgrp, cust_type_corp, cust_type_ind, start_date_active,
                            end_date_active, compounding_period, principal_rcvbl_acct_id,
                            interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id,
                            is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral,
                            value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral,
                            value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd,
                            value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
                            min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id,
                            interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat,
                            scoring_set_hdr_id, status, bad_debt_acct_id, authorized_by_person_id,
                            autorization_date, chngs_pndng, rvsn_ttl, loan_provision_dbt_acct_id, loan_provision_crdt_acct_id,
                            is_staff_loan_product, allwd_group_type, allwd_group_value)
                        SELECT loan_product_id, product_name, product_desc, loan_max_amount,
                            loan_min_amount, loan_repayment_type, grace_period_no, grace_period_type,
                            max_loan_tenor, max_loan_tenor_type, guarantor_required, guarantor_no,
                            sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, created_by,
                            creation_date, last_update_by, last_update_date, product_code,
                            product_type, posting_frequency, charge_interest, interest_rate,
                            cust_type_custgrp, cust_type_corp, cust_type_ind, start_date_active,
                            end_date_active, compounding_period, principal_rcvbl_acct_id,
                            interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id,
                            is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral,
                            value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral,
                            value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd,
                            value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
                            min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id,
                            interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat,
                            scoring_set_hdr_id, 'Incomplete', bad_debt_acct_id, authorized_by_person_id,
                            autorization_date, chngs_pndng, rvsn_ttl, loan_provision_dbt_acct_id, loan_provision_crdt_acct_id,
                            is_staff_loan_product, allwd_group_type, allwd_group_value
                                FROM mcf.mcf_prdt_loans WHERE loan_product_id = $prdtID AND status IN ('Approved','Authorized')");

                        if ($updateCnt2 <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to BACKUP Loans Product. ERROR2!<br/></div>';
                            exit();
                        }

                        //mcf_loanprdt_prcssnfees_n_accts
                        $sqlQry21 = "SELECT * FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loan_product_id = $prdtID";
                        $resultQry21 = executeSQLNoParams($sqlQry21);
                        $rowCntQry21 = loc_db_num_rows($resultQry21);

                        if ($rowCntQry21 > 0) {
                            $updateCnt71 = execUpdtInsSQL("UPDATE mcf.mcf_loanprdt_prcssnfees_n_accts SET rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_product_id = $prdtID");
                            if ($updateCnt71 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Processing Fees. ERROR1!<br/></div>';
                                exit();
                            }

                            $updateCnt91 = execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc(
                                    loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                    fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                    last_update_date, crdt_accnt_id, rvsn_ttl)
                            SELECT loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
                                    fee_flat, fee_percent, remarks, created_by, creation_date, last_update_by,
                                    last_update_date, crdt_accnt_id, rvsn_ttl
                                    FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loan_product_id = $prdtID");

                            if ($updateCnt91 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Processing Fees. ERROR2!<br/></div>';
                                exit();
                            }
                        }

                        //mcf_loanprdt_latefees_n_accts
                        $sqlQry2 = "SELECT * FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loan_product_id = $prdtID";
                        $resultQry2 = executeSQLNoParams($sqlQry2);
                        $rowCntQry2 = loc_db_num_rows($resultQry2);

                        if ($rowCntQry2 > 0) {
                            $updateCnt7 = execUpdtInsSQL("UPDATE mcf.mcf_loanprdt_latefees_n_accts SET rvsn_ttl = (rvsn_ttl+1),"
                                    . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_product_id = $prdtID");
                            if ($updateCnt7 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Late Fees. ERROR1!<br/></div>';
                                exit();
                            }

                            $updateCnt9 = execUpdtInsSQL("INSERT INTO mcf.mcf_loanprdt_latefees_n_accts_hstrc(
                                    loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat,
                                    fee_percent, frequency, frequency_no, remarks, created_by, creation_date,
                                    last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                    rvsn_ttl)
                            SELECT loanprdt_late_fee_id, loan_product_id, fee_name, target, fee_flat,
                                    fee_percent, frequency, frequency_no, remarks, created_by, creation_date,
                                    last_update_by, last_update_date, dbt_accnt_id, crdt_accnt_id,
                                    rvsn_ttl
                                    FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loan_product_id = $prdtID");

                            if ($updateCnt9 <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to BACKUP Late Fees. ERROR2!<br/></div>';
                                exit();
                            }
                        }
                        //BACKUP ALL IMAGES

                        $response = array('prdtID' => $prdtID,
                            'sbmtMsg' => "Approved Credit Product Data BACKUP Successful");
                        echo json_encode($response);
                    }
                    else {
                        $sbmtdPrdtID = isset($_POST['sbmtdPrdtID']) ? cleanInputData($_POST['sbmtdPrdtID']) : -1;
                        // getPssblValID($prdtCrncy, getLovID("Bank Currencies (Select List)"));
                        $prdtName = isset($_POST['prdtName']) ? cleanInputData($_POST['prdtName']) : "";
                        $pdtCode = isset($_POST['pdtCode']) ? cleanInputData($_POST['pdtCode']) : "";
                        $prdtDesc = isset($_POST['prdtDesc']) ? cleanInputData($_POST['prdtDesc']) : "";
                        $prdtCrncy = isset($_POST['prdtCrncy']) ? cleanInputData($_POST['prdtCrncy']) : "";
                        $prdtCrncy = getGnrlRecID("mcf.mcf_currencies", "iso_code", "crncy_id", $prdtCrncy, $orgid);
                        $prdtType = isset($_POST['prdtType']) ? cleanInputData($_POST['prdtType']) : "";
                        $minAmnt = isset($_POST['minAmnt']) ? cleanInputData($_POST['minAmnt']) : 0;
                        $maxAmnt = isset($_POST['maxAmnt']) ? cleanInputData($_POST['maxAmnt']) : 0;
                        $rpmntType = isset($_POST['rpmntType']) ? cleanInputData($_POST['rpmntType']) : "";
                        $gracePeriodNo = isset($_POST['gracePeriodNo']) ? cleanInputData($_POST['gracePeriodNo']) : 0;
                        $gracePeriodType = isset($_POST['gracePeriodType']) ? cleanInputData($_POST['gracePeriodType']) : "";
                        $minLoanTenor = isset($_POST['minLoanTenor']) ? cleanInputData($_POST['minLoanTenor']) : 0;
                        $minLoanTenorType = isset($_POST['minLoanTenorType']) ? cleanInputData($_POST['minLoanTenorType']) : "";
                        $maxLoanTenor = isset($_POST['maxLoanTenor']) ? cleanInputData($_POST['maxLoanTenor']) : 0;
                        $maxLoanTenorType = isset($_POST['maxLoanTenorType']) ? cleanInputData($_POST['maxLoanTenorType']) : "";
                        $cashCltrlRqrd = isset($_POST['cashCltrlRqrd']) ? cleanInputData($_POST['cashCltrlRqrd']) : "No";
                        $valueFlatCashCltrl = isset($_POST['valueFlatCashCltrl']) ? cleanInputData($_POST['valueFlatCashCltrl']) : 0;
                        $valuePrcntCashCltrl = isset($_POST['valuePrcntCashCltrl']) ? cleanInputData($_POST['valuePrcntCashCltrl']) : 0;
                        $prptyCltrlRqrd = isset($_POST['prptyCltrlRqrd']) ? cleanInputData($_POST['prptyCltrlRqrd']) : "No";
                        $valueFlatPrptyCltrl = isset($_POST['valueFlatPrptyCltrl']) ? cleanInputData($_POST['valueFlatPrptyCltrl']) : 0;
                        $valuePrcntPrptyCltrl = isset($_POST['valuePrcntPrptyCltrl']) ? cleanInputData($_POST['valuePrcntPrptyCltrl']) : 0;
                        $invstmntCltrlRqrd = isset($_POST['invstmntCltrlRqrd']) ? cleanInputData($_POST['invstmntCltrlRqrd']) : "No";
                        $valueFlatInvstmntCltrl = isset($_POST['valueFlatInvstmntCltrl']) ? cleanInputData($_POST['valueFlatInvstmntCltrl']) : 0;
                        $valuePrcntInvstmntCltrl = isset($_POST['valuePrcntInvstmntCltrl']) ? cleanInputData($_POST['valuePrcntInvstmntCltrl']) : 0;
                        $chrgInterest = isset($_POST['chrgInterest']) ? cleanInputData($_POST['chrgInterest']) : "NO";
                        $intRateType = isset($_POST['intRateType']) ? cleanInputData($_POST['intRateType']) : "";
                        $interestRate = isset($_POST['interestRate']) ? cleanInputData($_POST['interestRate']) : 0;
                        $compound = isset($_POST['compound']) ? cleanInputData($_POST['compound']) : "";
                        $pstnFrqncy = isset($_POST['pstnFrqncy']) ? cleanInputData($_POST['pstnFrqncy']) : "";
                        $grntaRqrd = isset($_POST['grntaRqrd']) ? cleanInputData($_POST['grntaRqrd']) : "No";
                        $grntaNo = isset($_POST['grntaNo']) ? cleanInputData($_POST['grntaNo']) : 0;
                        $prncplRcvblDbtAccID = isset($_POST['prncplRcvblDbtAccID']) ? cleanInputData($_POST['prncplRcvblDbtAccID']) : -1;
                        $loansPybleCrdtAccID = isset($_POST['loansPybleCrdtAccID']) ? cleanInputData($_POST['loansPybleCrdtAccID']) : -1;
                        $intrstRcvblDbtAccID = isset($_POST['intrstRcvblDbtAccID']) ? cleanInputData($_POST['intrstRcvblDbtAccID']) : -1;
                        $dfrdIntrstCrdtAccID = isset($_POST['dfrdIntrstCrdtAccID']) ? cleanInputData($_POST['dfrdIntrstCrdtAccID']) : -1;
                        $intrstRvnueCrdtAccID = isset($_POST['intrstRvnueCrdtAccID']) ? cleanInputData($_POST['intrstRvnueCrdtAccID']) : -1;
                        $maxPrncplRcvbl = isset($_POST['maxPrncplRcvbl']) ? cleanInputData($_POST['maxPrncplRcvbl']) : 0;
                        $isAcctRqrd = isset($_POST['isAcctRqrd']) ? cleanInputData($_POST['isAcctRqrd']) : "No";
                        $crdtOfficerRqrd = isset($_POST['crdtOfficerRqrd']) ? cleanInputData($_POST['crdtOfficerRqrd']) : "No";
                        $assmntSetID = isset($_POST['assmntSetID']) ? cleanInputData($_POST['assmntSetID']) : -1;
                        $sctrMjrID = isset($_POST['sctrMjrID']) ? cleanInputData($_POST['sctrMjrID']) : -1;
                        $sctrMnrID = isset($_POST['sctrMnrID']) ? cleanInputData($_POST['sctrMnrID']) : -1;
                        $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                        $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "31-Dec-4000";
                        $indCust = isset($_POST['indCust']) ? cleanInputData($_POST['indCust']) : "NO";
                        $corpCust = isset($_POST['corpCust']) ? cleanInputData($_POST['corpCust']) : "NO";
                        $custGrp = isset($_POST['custGrp']) ? cleanInputData($_POST['custGrp']) : "NO";
                        $slctdPrcsnFees = isset($_POST['slctdPrcsnFees']) ? cleanInputData($_POST['slctdPrcsnFees']) : "";
                        $slctdLatePymntFees = isset($_POST['slctdLatePymntFees']) ? cleanInputData($_POST['slctdLatePymntFees']) : "";
                        $optn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : 0;

                        $badDebtExpnsAccID = isset($_POST['badDebtExpnsAccID']) ? cleanInputData($_POST['badDebtExpnsAccID']) : -1;
                        $prvsnExpnsAccID = isset($_POST['prvsnExpnsAccID']) ? cleanInputData($_POST['prvsnExpnsAccID']) : -1;
                        $prvsnContraAccID = isset($_POST['prvsnContraAccID']) ? cleanInputData($_POST['prvsnContraAccID']) : -1;

                        $grpType = isset($_POST['grpType']) ? cleanInputData($_POST['grpType']) : "Everyone";
                        $groupID = isset($_POST['groupID']) ? cleanInputData($_POST['groupID']) : -1;

                        $isStaffLoanProduct = isset($_POST['isStaffLoanProduct']) ? cleanInputData($_POST['isStaffLoanProduct']) : "No";

                        if ($grpType == "Person Type" && is_numeric($groupID) === FALSE) {
                            $groupID = getPssblValID($groupID, getLovID("Person Types"));
                        }

                        //echo "prvsnExpnsAccID=".$prvsnExpnsAccID." prvsnContraAccID=".$prvsnContraAccID;
                        //return;

                        $vldtyUpdtCnt = 0;
                        $rsltCrtCnt = 0;
                        $rsltUpdtCnt = 0;

                        //$dateStr = getDB_Date_time();

                        if ($optn > -1 && $pdtCode != "" && $prdtName != "" && $minAmnt >= 0 && $maxAmnt >= 0 && $gracePeriodNo >= 0 && $minLoanTenor >= 0 && $maxLoanTenor >= 0 && ($maxLoanTenor >= $minLoanTenor) && $valueFlatCashCltrl >= 0 && $valuePrcntCashCltrl >= 0 &&
                                $valueFlatPrptyCltrl >= 0 && $valuePrcntPrptyCltrl >= 0 && $valueFlatInvstmntCltrl >= 0 &&
                                $valuePrcntInvstmntCltrl >= 0 && $interestRate >= 0 && (($grntaRqrd == "Yes" && $grntaNo > 0) ||
                                ($grntaRqrd == "No" && $grntaNo > -1)) && $badDebtExpnsAccID > 0 &&
                                $prvsnExpnsAccID > 0 && $prvsnContraAccID > 0 && $intrstRvnueCrdtAccID > 0 && $maxPrncplRcvbl >= 0 &&
                                $sctrMjrID > 0 && $sctrMnrID > 0 && $startDate != "") {

                            if ($prdtType == "Loan") {
                                if ($prncplRcvblDbtAccID <= 0 || $intrstRcvblDbtAccID <= 0 && $dfrdIntrstCrdtAccID <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Please complete all required fields before proceeding!<br/></div>';
                                    exit();
                                }
                            }

                            if ($sbmtdPrdtID <= 0) {
                                if (loanPrdtNameExists($prdtName, $prdtType, $sbmtdPrdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! a Loan Product with same Name ' . $prdtName . ' exists for Product Type ' . $prdtType . '!<br/></div>';
                                    exit();
                                }

                                if (loanPrdtCodeExists($pdtCode, $sbmtdPrdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! Loan Product Code ' . $pdtCode . ' exists!<br/></div>';
                                    exit();
                                }

                                $rsltCrtCnt = createLoanPrdt($prdtName, $prdtDesc, $maxAmnt, $minAmnt, $rpmntType, $gracePeriodNo, $gracePeriodType, $maxLoanTenor, $maxLoanTenorType, $grntaRqrd, $grntaNo, $sctrMjrID, $sctrMnrID, $orgID, $pdtCode, $prdtType, $pstnFrqncy, $chrgInterest, $interestRate, $custGrp, $corpCust, $indCust, $startDate, $endDate, $compound, $prncplRcvblDbtAccID, $intrstRcvblDbtAccID, $dfrdIntrstCrdtAccID, $loansPybleCrdtAccID, $isAcctRqrd, $cashCltrlRqrd, $valueFlatCashCltrl, $valuePrcntCashCltrl, $prptyCltrlRqrd, $valueFlatPrptyCltrl, $valuePrcntPrptyCltrl, $invstmntCltrlRqrd, $valueFlatInvstmntCltrl, $valuePrcntInvstmntCltrl, $minLoanTenor, $minLoanTenorType, $crdtOfficerRqrd, $prdtCrncy, $intRateType, $intrstRvnueCrdtAccID, $maxPrncplRcvbl, $assmntSetID, 'Incomplete', $badDebtExpnsAccID, $prvsnExpnsAccID, $prvsnContraAccID,
                                        $grpType, $groupID, $isStaffLoanProduct);

                                if ($rsltCrtCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Failed to create Loan Product!<br/></div>';
                                    exit();
                                }
                            } else {
                                if (loanPrdtNameExists($prdtName, $prdtType, $sbmtdPrdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! a Loan Product with same Name ' . $prdtName . ' exists for Product Type ' . $prdtType . '!<br/></div>';
                                    exit();
                                }

                                if (loanPrdtCodeExists($pdtCode, $sbmtdPrdtID, $rvsnTtl)) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Sorry! Loan Product Code ' . $pdtCode . ' exists!<br/></div>';
                                    exit();
                                }

                                $rsltUpdtCnt = updateLoanPrdt($sbmtdPrdtID, $prdtName, $prdtDesc, $maxAmnt, $minAmnt, $rpmntType, $gracePeriodNo, $gracePeriodType, $maxLoanTenor, $maxLoanTenorType, $grntaRqrd, $grntaNo, $sctrMjrID, $sctrMnrID, $orgID, $pdtCode, $prdtType, $pstnFrqncy, $chrgInterest, $interestRate, $custGrp, $corpCust, $indCust, $startDate, $endDate, $compound, $prncplRcvblDbtAccID, $intrstRcvblDbtAccID, $dfrdIntrstCrdtAccID, $loansPybleCrdtAccID, $isAcctRqrd, $cashCltrlRqrd, $valueFlatCashCltrl, $valuePrcntCashCltrl, $prptyCltrlRqrd, $valueFlatPrptyCltrl, $valuePrcntPrptyCltrl, $invstmntCltrlRqrd, $valueFlatInvstmntCltrl, $valuePrcntInvstmntCltrl, $minLoanTenor, $minLoanTenorType, $crdtOfficerRqrd, $prdtCrncy, $intRateType, $intrstRvnueCrdtAccID, $maxPrncplRcvbl, $assmntSetID, $rvsnTtl, $badDebtExpnsAccID, $prvsnExpnsAccID, $prvsnContraAccID,
                                        $grpType, $groupID, $isStaffLoanProduct);

                                if ($rsltUpdtCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . '<br/>Failed to Update Loan Product!<br/></div>';
                                    exit();
                                }
                            }

                            if ($sbmtdPrdtID <= 0) {
                                $sbmtdPrdtID = get_LoanPrdtID($dateStr, $usrID, $prdtName);
                            }

                            //CREATE PROCESSING FEES
                            $dateStr = getDB_Date_time();
                            $recCntInst = 0;
                            $recCntUpdt = 0;

                            if (trim($slctdPrcsnFees, "|~") != "") {

                                $variousRows = explode("|", trim($slctdPrcsnFees, "|"));
                                for ($z = 0; $z < count($variousRows); $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 8) {
                                        $loanprdtPrcssnFeeID = (int) (cleanInputData1($crntRow[0]));
                                        $loanPrdtID = (int) cleanInputData1($crntRow[1]);
                                        $feeNm = cleanInputData1($crntRow[2]);
                                        $feeType = cleanInputData1($crntRow[3]);
                                        $amntFlat = (float) cleanInputData1($crntRow[4]);
                                        $amntPrcnt = (float) cleanInputData1($crntRow[5]);
                                        $rvnAcctID = (int) cleanInputData1($crntRow[6]);
                                        $rmrks = cleanInputData1($crntRow[7]);

                                        if ($loanprdtPrcssnFeeID > 0) {
                                            $recCntUpdt = $recCntUpdt + updateLoanPrdt_PrcnFeeNAccts($loanprdtPrcssnFeeID, $loanPrdtID, $feeNm, $feeType, $amntFlat, $amntPrcnt, $rmrks, $rvnAcctID, $rvsnTtl);
                                        } else {
                                            $recCntInst = $recCntInst + createLoanPrdt_PrcnFeeNAccts($sbmtdPrdtID, $feeNm, $feeType, $amntFlat, $amntPrcnt, $rmrks, $rvnAcctID, $rvsnTtl);
                                        }
                                    }
                                }
                            }

                            //CREATE LATE FEES
                            if (trim($slctdLatePymntFees, "|~") != "") {

                                $variousRows1 = explode("|", trim($slctdLatePymntFees, "|"));
                                for ($z = 0; $z < count($variousRows1); $z++) {
                                    $crntRow1 = explode("~", $variousRows1[$z]);
                                    if (count($crntRow1) == 7) {
                                        $loanprdtLateFeeID = (int) (cleanInputData1($crntRow1[0]));
                                        $loanPrdtID = (int) cleanInputData1($crntRow1[1]);
                                        $feeNm = cleanInputData1($crntRow1[2]);
                                        $target = cleanInputData1($crntRow1[3]);
                                        $amntFlat = (float) cleanInputData1($crntRow1[4]);
                                        $amntPrcnt = (float) cleanInputData1($crntRow1[5]);
                                        $dbtAcctID = -1; //(int) cleanInputData1($crntRow1[6]);
                                        $crdtAcctID = (int) cleanInputData1($crntRow1[6]);

                                        if ($loanprdtLateFeeID > 0) {
                                            $recCntUpdt = $recCntUpdt + updateLoanPrdt_LateFeeNAccts($loanprdtLateFeeID, $loanPrdtID, $feeNm, $target, $amntFlat, $amntPrcnt, $dbtAcctID, $crdtAcctID, $rvsnTtl);
                                        } else {
                                            $recCntInst = $recCntInst + createLoanPrdt_LateFeeNAccts($sbmtdPrdtID, $feeNm, $target, $amntFlat, $amntPrcnt, $dbtAcctID, $crdtAcctID, $rvsnTtl);
                                        }
                                    }
                                }
                            }

                            if (($recCntUpdt + $recCntInst) > 0) {
                                $tblNm1 = "mcf.mcf_prdt_loans";
                                if ($rvsnTtl > 0) {
                                    $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                                }

                                $updtSQL4 = "UPDATE $tblNm1 SET last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE loan_product_id = $sbmtdPrdtID AND rvsn_ttl = $rvsnTtl";
                                execUpdtInsSQL($updtSQL4);
                            }
                            //
                            if ($optn == 1) {//SUBMIT FOR APPROVAL
                                $tblNm = "mcf.mcf_prdt_loans";
                                if ($rvsnTtl > 0) {
                                    $tblNm = "mcf.mcf_prdt_loans_hstrc";
                                }

                                $updtSQL4 = "UPDATE $tblNm SET status = 'Unauthorized', last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE loan_product_id = $sbmtdPrdtID AND rvsn_ttl = $rvsnTtl";
                                $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                                if ($vldtyUpdtCnt <= 0) {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to Submit Data for AUTHORIZATION!<br/></div>';
                                    exit();
                                }
                            }

                            //echo "<span style='color:green;font-weight:bold !important;'>Credit Product Saved</br><i>$recCntInst Fee Record(s) inserted</br>$recCntUpdt Fee record(s) updated</i></span>";
                            echo json_encode(array("sbmtdPrdtID" => $sbmtdPrdtID, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt,
                                "rsltCrtCnt" => $rsltCrtCnt, "rsltUpdtCnt" => $rsltUpdtCnt));
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . '<br/>Please complete all required fields before proceeding!<br/></div>';
                            exit();
                        }
                    }
                }
                else if ($vwtyp == "1") {//LATE FEES FRQNCY AND REMARKS
                    //var_dump($_POST);
                    $frqncy = isset($_POST['frqncy']) ? cleanInputData($_POST['frqncy']) : "Repayment Date";
                    $frqncyNo = isset($_POST['frqncyNo']) ? cleanInputData($_POST['frqncyNo']) : 0;
                    $remarks = isset($_POST['remarks']) ? cleanInputData($_POST['remarks']) : "";
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;

                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                    //$sbmtdPrdtID = isset($_POST['sbmtdPrdtID']) ? cleanInputData($_POST['sbmtdPrdtID']) : -1;

                    $dateStr = getDB_Date_time();
                    $recCnt = 0;

                    if ($rowID <= 0 || $frqncy != "Repayment Date" && ($frqncyNo == "" || (float) $frqncyNo <= 0)) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete the Director form First!<br/></div>';
                        exit();
                    } else {
                        $recCnt = updateLoanPrdt_LateFeeFrqncyNRmrks($rowID, $frqncy, $frqncyNo, $remarks, $dateStr, $rvsnTtl);
                        if ($recCnt > 0) {
                            echo json_encode(array("rowID" => $rowID));
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Saving Failed!<br/></div>';
                            exit();
                        }
                    }
                }
            }
        }
        else if ($pgNo == 13) {//CUSTOMER ACCOUNTS MANAGEMENT
            if ($subPgNo == 2.1) {//CUSTOMER ACCOUNTS
                if ($vwtyp == "0") {// MAIN PARAMETERS DATA
                    //categoryCombo
                    $orgid = $_SESSION['ORG_ID'];

                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    if ($actyp == 1) {

                        $custType = isset($_POST['custType']) ? cleanInputData($_POST['custType']) : "";
                        $bnkCustomerID = isset($_POST['bnkCustomerID']) ? cleanInputData($_POST['bnkCustomerID']) : -1;

                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                        $acctNumber = isset($_POST['acctNumber']) ? cleanInputData($_POST['acctNumber']) : "";
                        $acctTitle = isset($_POST['acctTitle']) ? cleanInputData($_POST['acctTitle']) : "";
                        $acctType = isset($_POST['acctType']) ? cleanInputData($_POST['acctType']) : "";
                        $prdtTypeID = isset($_POST['prdtTypeID']) ? cleanInputData($_POST['prdtTypeID']) : -1;
                        $acctTrnsTyp = isset($_POST['acctTrnsTyp']) ? cleanInputData($_POST['acctTrnsTyp']) : "";
                        $prsnTypeEntity = isset($_POST['prsnTypeEntity']) ? cleanInputData($_POST['prsnTypeEntity']) : -1;
                        $prdtCrncy = isset($_POST['prdtCrncy']) ? cleanInputData($_POST['prdtCrncy']) : "";

                        $prpsOfAcct = isset($_POST['prpsOfAcct']) ? cleanInputData($_POST['prpsOfAcct']) : "";
                        $prpsOfAcctOther = isset($_POST['prpsOfAcctOther']) ? cleanInputData($_POST['prpsOfAcctOther']) : "";
                        $srcOfFunds = isset($_POST['srcOfFunds']) ? cleanInputData($_POST['srcOfFunds']) : "";
                        $srcOfFundsOther = isset($_POST['srcOfFundsOther']) ? cleanInputData($_POST['srcOfFundsOther']) : "";
                        $trnsPerMnthNo = isset($_POST['trnsPerMnthNo']) ? cleanInputData($_POST['trnsPerMnthNo']) : 0;
                        $amountPerMnth = isset($_POST['amountPerMnth']) ? cleanInputData($_POST['amountPerMnth']) : 0;

                        $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                        $reltnOfficerID = isset($_POST['reltnOfficerID']) ? cleanInputData($_POST['reltnOfficerID']) : "";
                        //$startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                        //$endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";

                        $statusReason = isset($_POST['statusReason']) ? cleanInputData($_POST['statusReason']) : "";
                        $status = isset($_POST['status']) ? cleanInputData($_POST['status']) : "";
                        $accMndte = isset($_POST['accMndte']) ? cleanInputData($_POST['accMndte']) : "";

                        $prdtCrncy = getGnrlRecID("mcf.mcf_currencies", "iso_code", "crncy_id", $prdtCrncy, $orgid);
                        //getPssblValID($prdtCrncy, getLovID("Bank Currencies (Select List)"));

                        $grpType = isset($_POST['grpType']) ? cleanInputData($_POST['grpType']) : "Everyone";
                        $groupID = isset($_POST['groupID']) ? cleanInputData($_POST['groupID']) : -1;

                        $canOverdrawAcct = isset($_POST['canOverdrawAcct']) ? cleanInputData($_POST['canOverdrawAcct']) : "No";
		    $smsTriggers = isset($_POST['smsTriggers']) ? cleanInputData($_POST['smsTriggers']) : "";

                        if ($grpType == "Person Type" && is_numeric($groupID) === FALSE) {
                            $groupID = getPssblValID($groupID, getLovID("Person Types"));
                        }

                        $shdSbmit = isset($_POST['shdSbmit']) ? cleanInputData($_POST['shdSbmit']) : 0;


                        $dateStr = getDB_Date_time();

                        if ($custType != "" &&
                                $acctTitle != "" &&
                                $acctType != "") {

                            if ($custType == "Joint-Individual") {
                                $bnkCustomerID = -1;
                            } else {
                                if ($bnkCustomerID == "" || $bnkCustomerID == "undefined") {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Data Supplied is Incomplete!<br/></div>';
                                    exit();
                                }
                            }


                            if ($acctID <= 0) {
                                $acctID = getNewCustAccountID();
                                createCustAccountManual($orgid, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType, $groupID, $canOverdrawAcct, $smsTriggers, $acctID);
                                createAccountTrnsBal($acctID, $dateStr);

                            } else {
                                if(trim($acctNumber) == "" || $acctNumber == 'undefined'){
                                    echo '<div style="color:red;font-weight:bold !important;">Account Number is required!<br/></div>';
                                    exit();
                                } else {
                                    //Check existence of ID
                                    if(doesCustAccountNoExistsUpdate($acctID, trim($acctNumber))){
                                        $result1 = executeSQLNoParams("SELECT account_title, cust_type FROM mcf.mcf_accounts "
                                            . "WHERE upper(account_number) = '" . strtoupper(loc_db_escape_string(trim($acctNumber))) . "' and account_id != $acctID");
                                        while ($row1 = loc_db_fetch_array($result1)) {
                                            echo '<div style="color:red;">SORRY!</br>An Account with title <b>'.$row1[0].'</b> already exists for the Account Number <b>'.$acctNumber.'</b>.<br/></div>';
                                            exit();
                                        }
                                    }
                                }

                                updateCustAccount($acctID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $rvsnTtl, $grpType, $groupID, $canOverdrawAcct, $smsTriggers);
                            }

                            if ((int) $shdSbmit > 0) {//SUBMIT ACCOUNT
                                if ($acctID > 0) {
                                    $cnta = submitCustAccount($acctID, $rvsnTtl);

                                    if ($cnta > 0) {
                                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                        . 'width:18px;height:18px;"/>Customer Account Successfully Initiated!<br/></div>';
                                    }
                                    exit();
                                } else {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Please save Account first!<br/></div>';
                                    exit();
                                }
                            } else {//SAVE ACCOUNT
                                echo json_encode(array("acctID" => $acctID, "acctNumber" => getCustAccountNo($acctID)));
                            }


                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Data Supplied is Incomplete!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == "2") {//REJECT
                        $tblNm1 = "mcf.mcf_accounts";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_accounts_hstrc";
                        }

                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;

                        $dateStr = getDB_Date_time();

                        if ($acctID > 0) {

                            $cnta = execUpdtInsSQL("UPDATE $tblNm1
                                    SET status= 'Rejected', last_update_by=$usrID,
                                        last_update_date= '" . $dateStr .
                                    "' WHERE account_id = $acctID");

                            if ($cnta > 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Customer Account Successfully Rejected!<br/></div>';
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please save Account first!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == "3") {//WITHDRAW CUSTOMER ACCOUNTS
                        $tblNm1 = "mcf.mcf_accounts";
                        if ($rvsnTtl > 0) {
                            $tblNm1 = "mcf.mcf_accounts_hstrc";
                        }

                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;

                        $dateStr = getDB_Date_time();

                        if ($acctID > 0) {
                            $rowCnt = execUpdtInsSQL("UPDATE $tblNm1
                                SET status= 'Withdrawn', last_update_by=$usrID,
                                    last_update_date= '" . $dateStr .
                                    "' WHERE account_id = $acctID");

                            if ($rowCnt > 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Customer Account Successfully Withdrawn!<br/></div>';
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Withdraw Customer Account Request!<br/></div>';
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please save Account first!<br/></div>';
                            exit();
                        }
                    }
                    else if ($actyp == "4") {//AUTHORIZE CUSTOMER ACCOUNTS
                        //var_dump($_POST);
                        //$accMndte = isset($_POST['accMndte']) ? cleanInputData($_POST['accMndte']) : 0;
                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                        $dateStr = getDB_Date_time();
                        $rtrnRslt = "";
                        
                        $strSql = "SELECT mcf.xx_authorize_customeraccount_data($usrID, '$dateStr', $orgID, $acctID, $rvsnTtl, $prsnid)";

                        $result = executeSQLNoParams($strSql);
                        while ($row = loc_db_fetch_array($result)) {
                            $rtrnRslt = $row[0];
                        }
                        
                        if ($rtrnRslt === "SUCCESS"){
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Customer Account Successfully Authorized!<br/></div>';
                        exit();
                        } else {
                           echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>'.$rtrnRslt.'<br/></div>';
                        exit();
                        }
                    }  else if ($actyp == 5) {
                        //Import Customer Account and Balance
                        $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                        session_write_close();
                        $affctd = 0;
			$trnsTm = date('ymdHis');
                        if ($dataToSend != "") {
                            $variousRows = explode("|", $dataToSend);
                            $total = count($variousRows);
                            for ($z = 0; $z < $total; $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 22) {
                                    $number = cleanInputData1($crntRow[0]);
                                    $custType = trim((cleanInputData1($crntRow[1])));
                                    $custNo = trim(cleanInputData1($crntRow[2]));
                                    $acctNumber = cleanInputData1($crntRow[3]);
                                    $acctTitle = cleanInputData1($crntRow[4]);
                                    $acctType = cleanInputData1($crntRow[5]);
                                    $prdtCode = trim(cleanInputData1($crntRow[6]));
                                    $acctTrnsTyp = trim(cleanInputData1($crntRow[7]));
                                    $prsnTypeEntity = cleanInputData1($crntRow[8]);
                                    $prpsOfAcct = cleanInputData1($crntRow[9]);
                                    $prpsOfAcctOther = cleanInputData1($crntRow[10]);
                                    $srcOfFunds = cleanInputData1($crntRow[11]);
                                    $srcOfFundsOther = cleanInputData1($crntRow[12]);
                                    $trnsPerMnthNo = cleanInputData1($crntRow[13]);
                                    $amountPerMnth = cleanInputData1($crntRow[14]);
                                    $reltnOfficer = cleanInputData1($crntRow[15]);
                                    $accntStatus = cleanInputData1($crntRow[16]);
                                    $isDormant = cleanInputData1($crntRow[17]);
                                    $accMndte = cleanInputData1($crntRow[18]);
                                    $bnkBranch = cleanInputData1($crntRow[19]);
                                    $rcdStatus = cleanInputData1($crntRow[20]);
                                    $acctBal = cleanInputData1($crntRow[21]);

                                    $acctID = (int)getCustAcctIdDtaImprt($acctNumber, $orgID);
                                    $lienQty = 0.00;
                                    $clearedQty = $acctBal;
                                    $unClearedQty = 0.00;

//                                    if($acctBal < 0){
//                                        $lienQty = -1 * $acctBal;
//                                        //$clearedQty = $acctBal;
//                                    } else {
//                                        $clearedQty = $acctBal;
//                                    }

                                    if ($z == 0) {
                                        if (strtoupper($number) == "NO." && strtoupper($custType) == "CUSTOMER TYPE**" && strtoupper($custNo) == "CUSTOMER NO.**") {
                                            continue;
                                        } else {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                            //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }
                                    }
                                    /*
                                      if ($custType == "" || $custNo == "" || $acctNumber == "" || $acctTitle == "" || prdtType == "" || acctTrnsTyp == "" || prsnTypeEntity == "" || $prpsOfAcctOther == "" || trnsPerMnthNo == "" || amountPerMnth == "" || $isDormant == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                      continue;
                                      } */
                                    $bnkCustomerID = getGnrlRecID("mcf.mcf_customers_corp", "local_id_no", "cust_id", $custNo, $orgID);
                                    if ($custType == "Individual"/* || $custType == "Group"*/) {
                                        $bnkCustomerID = getGnrlRecID("mcf.mcf_customers_ind", "local_id_no", "cust_id", $custNo, $orgID);
                                    }

//                                    if($bnkCustomerID <= 0){
//                                        $arr_content['percent'] = 100;
//                                        $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Invalid Customer ID! <.br>Local ID No: ".$custNo." </br>Customer Type: ".$custType;
//                                        //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
//                                        $arr_content['msgcount'] = $total;
//                                        file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
//                                        break;
//                                    }

                                    $bnkBranchID = getGnrlRecID("org.org_sites_locations", "location_code_name", "location_id", $bnkBranch, $orgID);
                                    $dateStr = getDB_Date_time();
                                    $timeMlscnd = getDB_time_Millisecond();
                                    $prdtTypeID = getGnrlRecID("mcf.mcf_prdt_savings", "product_code", "svngs_product_id", $prdtCode, $orgID);

                                    $prdtCrncy = getGnrlRecID2("mcf.mcf_prdt_savings", "svngs_product_id", "currency_id", $prdtTypeID);
                                    $reltnOfficerID = -1;

                                    if ($custType == "Individual") {
                                        $prsnTypeEntity = "INDV-Individual";
                                        $accMndte = "Only to sign";
                                    } else if ($custType == "Group") {
                                        $prsnTypeEntity = "CGRP-Customer Group";
                                    } else if ($custType == "Corporate") {
                                        $prsnTypeEntity = "CORP-Limited Liability Company";
                                    }

                                    $grpType = "Everyone";
                                    $groupID = -1;

                                    if ($acctID <= 0) {
                                        $affctd += createCustAccountDtaImprt($orgID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, 'Authorized', $accMndte, $dateStr, $grpType, $groupID, $accntStatus, $isDormant);
					$trnsTm = getDB_DateTimeYMDHMS($trnsTm);
                                        $acctID = getCustAcctIdDtaImprt($acctNumber, $orgID);
					$rcCnt = createAccountTransationMassLoad($acctID, $clearedQty, $prdtCrncy, $trnsTm);
                                        //$succs = false;
                                        $balDate = date("d-M-Y");
                                        $errMsgDsp = "";
                                        $succs = updateCstmrAcntBalancesDataImprt($acctID, $clearedQty, $unClearedQty, $lienQty, '', "I", 'INITBAL', '', $balDate, $errMsgDsp);

                                        if ($succs == false) {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>Customer Daily Balance Update Failed!";
                                            //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                            var_dump("<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>Customer Daily Balance Update Failed!");
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }

                                        //INSERT MANDATE FOR INDIVIDUAL CUSTOMERS
                                        if ($custType == "Individual") {
                                            createAccountSignatory("Individual Customers", $bnkCustomerID, "4000-12-31", $acctID, $dateStr, "Yes",0);
                                        }
                                    } else {
					$affctd += updateCustAccountDtaImprtStatusUpdate($acctID, $dateStr, $accntStatus, $isDormant);

                                        $trnsTm = getDB_DateTimeYMDHMS($trnsTm);
                                        //$acctID = getCustAcctIdDtaImprt($acctNumber, $orgID);
					$rcCnt = createAccountTransationMassLoad($acctID, $clearedQty, $prdtCrncy, $trnsTm);
                                        //$succs = false;
                                        //$balDate = date("d-M-Y");
                                        $balDte = substr(getStartOfDayYMD(), 0, 10);
                                        $errMsgDsp = "";
                                        $succs = updateCstmrAcntBalancesDataImprt($acctID, $clearedQty, $unClearedQty, $lienQty, '', "I", 'INITBAL', '', $balDate, $errMsgDsp);
                                        if ($succs == false) {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>Customer Daily Balance Update Failed!";
                                            //.strtoupper($number) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                            var_dump("<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>Customer Daily Balance Update Failed!");
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }


                                        //BEGIN 09012017
                                        /*$trnsTm = getDB_DateTimeYMDHMS($trnsTm);
                                        $balDte = substr(getStartOfDayYMD(), 0, 10);
                                        $acctBalRhomicom = mcf.get_cstacnt_avlbl_bals($acctID, $balDte);

                                        $netBal = (float)$acctBalRhomicom - (float)$clearedQty;
                                        $trnsType = "DEPOSIT";
                                        $dbOrCrdt = "CR";
                                        $narration = "BAL from TEKSOL Batch 2";
                                        if((float)$netBal != 0){
                                            if($netBal > 0){
                                                $trnsType = "WITHDRAWAL";
                                                $dbOrCrdt = "DR";
                                            } else {
                                                $netBal = -1 * (float)$netBal;
                                            }

                                            $affctd += createAccountTransationMassLoadTopUp($acctID, $netBal, $prdtCrncy, $trnsTme, $trnsType, $dbOrCrdt, $narration);
                                        }*/
                                        //END 09012017
                                        //$affctd += updateCustAccountDtaImprt($acctID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType, $groupID, $accntStatus, $isDormant);                                    }

                                }
                                $percent = round((($z + 1) / $total) * 100, 2);
                                $arr_content['percent'] = $percent;
                                if ($percent >= 100) {
                                    $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Individual Customer(s) imported.";
                                    $arr_content['msgcount'] = $total;
                                } else {
                                    $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Individual Customers...Please Wait..." . ($z + 1) . " out of " . $total . " Individual Customer(s) imported.";
                                }
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
					}
					} else {
                            $percent = 100;
                            $arr_content['percent'] = $percent;
                            $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                            $arr_content['msgcount'] = "";
                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                        }
                    } else if ($actyp == 6) {
                        //Checked Importing Process Status
                        header('Content-Type: application/json');
                        $file = $ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho";
                        if (file_exists($file)) {
                            $text = file_get_contents($file);
                            echo $text;

                            $obj = json_decode($text);
                            if ($obj->percent >= 100) {
                                unlink($file);
                            }
                        } else {
                            echo json_encode(array("percent" => null, "message" => null));
                        }
                    }
                    else if ($actyp == 7) {//MODIFY DATA
                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                        $dateStr = getDB_Date_time();
                        
                        $rslt = processModifyCustomerAccountData($acctID);

                        if ($rslt == 'SUCCESS') {
                            $response = array('acctID' => $acctID,
                            'sbmtMsg' => "Approved Account Data BACKUP Successful");
                            echo json_encode($response);
                           
                            exit();
                        } else {
                            echo $rslt; 
                            exit();
                        }
                    }
                } else if ($vwtyp == "1" || $vwtyp == "2" || $vwtyp == "3" || $vwtyp == "4") {

                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                    $closeReason = isset($_POST['closeReason']) ? cleanInputData($_POST['closeReason']) : "";
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    if ($acctID <= 0) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Sorry! Please save the Account first!<br/></div>';
                        exit();
                    } else if ($closeReason == "") {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Sorry! Please provide a Reason for Closing!<br/></div>';
                        exit();
                    } else {
                        $actnStatus = "Blocked";
                        if ($vwtyp == 2 || $vwtyp == 4) {
                            $actnStatus = "Active";
                        } else if ($vwtyp == 3) {
                            $actnStatus = "Closed";
                        }
                        $dateStr = getDB_Date_time();

                        $tblNm = "mcf.mcf_accounts";
                        if ($rvsnTtl > 0) {
                            $tblNm = "mcf.mcf_accounts_hstrc";
                        }

                        execUpdtInsSQL("UPDATE $tblNm SET account_status = '$actnStatus', last_update_by = $usrID,"
                                . " last_update_date = '$dateStr' WHERE account_id = $acctID AND rvsn_ttl = $rvsnTtl");
                        echo json_encode(array("acctID" => $acctID));
                    }
                } else if ($vwtyp == "5") {//SIGNATORIES
                    //var_dump($rowID);
                    $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : "";
                    $bnkSignatoryID = isset($_POST['bnkSignatoryID']) ? cleanInputData($_POST['bnkSignatoryID']) : -1;
                    $toSignMndtry = isset($_POST['toSignMndtry']) ? cleanInputData($_POST['toSignMndtry']) : 'No';
                    $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;

                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    if ($endDate == "") {
                        $endDate = "4000-12-31 11:59:59";
                    } else {
                        $endDate = cnvrtDMYTmToYMDTm($endDate);
                    }

                    $dateStr = getDB_Date_time();

                    if ($bnkSignatoryID > 0) {
                        if ($rowID <= 0) {
                            createAccountSignatory($srcType, $bnkSignatoryID, $endDate, $acctID, $dateStr, $toSignMndtry, $rvsnTtl);
                        } else {
                            updateAccountSignatory($srcType, $bnkSignatoryID, $endDate, $dateStr, $rowID, $toSignMndtry, $rvsnTtl);
                        }

                        if ($rowID <= 0) {
                            $rowID = getAccountSignatoryID($dateStr, $usrID, $acctID);

                            $localIDNo = getSignatoryLocalIDNo($srcType, $bnkSignatoryID);
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Signatory Added Successfully!<br/></div>';
                            exit();
                            //echo json_encode(array("rowID" => $rowID, "localIDNo" => $localIDNo));
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Account Signatory Successfully Saved!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                }
                else if ($vwtyp == "6") {//LIENS
                    //var_dump($_POST);
                    $lienAmnt = isset($_POST['lienAmnt']) ? cleanInputData($_POST['lienAmnt']) : 0;
                    $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : -1;
                    $endDate = isset($_POST['endDate']) ? cleanInputData($_POST['endDate']) : "";
                    $narration = isset($_POST['narration']) ? cleanInputData($_POST['narration']) : "";
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                    $lienStatus = isset($_POST['lienStatus']) ? cleanInputData($_POST['lienStatus']) : "Incomplete";

                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;

                    if ($endDate == "") {
                        $endDate = "4000-12-31";
                    }

                    $dateStr = getDB_Date_time();
                    $lnCnt = 0;

                    if ($acctID > 0) {
                        if ($rowID <= 0) {
                            $lnCnt = createAccountLien($lienAmnt, $startDate, $endDate, $acctID, $dateStr, $narration, "Inactive", -1, $rvsnTtl);
                        } else {
                            $lnCnt = updateAccountLien($lienAmnt, $startDate, $endDate, $dateStr, $rowID, $narration, $rvsnTtl, $lienStatus);
                        }

                        if ($lnCnt < 0) {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Failed to save Lien 1!<br/></div>';
                            exit();
                        }

                        if ($rowID <= 0) {
                            $rowID = getAccountLienID($dateStr, $usrID, $acctID, $rvsnTtl);

                            $lienIDNo = getLienIDNo($rowID);
                        }

                        if ($rowID > 0) {
                            $lnMsg = '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Account Lien Successfully Saved!<br/></div>';

                            echo json_encode(array("rowID" => $rowID, "lnMsg" => $lnMsg));
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Failed to save Lien 2!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please Save the Account first!<br/></div>';
                        exit();
                    }
                } else if ($vwtyp == "7") {
                    if ($actyp == 1) {
                        $slctdBranchPymntAccts = isset($_POST['slctdBranchPymntAccts']) ? cleanInputData($_POST['slctdBranchPymntAccts']) : '';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;
                        $ttlRowsExts = 0;
                        $dsplyMsg = "";

                        if (trim($slctdBranchPymntAccts, "|~") != "") {

                            //VALIDATE
                            $variousRows1 = explode("|", trim($slctdBranchPymntAccts, "|"));
                            for ($z = 0; $z < count($variousRows1); $z++) {
                                $crntRow1 = explode("~", $variousRows1[$z]);
                                if (count($crntRow1) == 6) {
                                    $BrnchAcctRowID1 = (int) (cleanInputData1($crntRow1[0]));
                                    $BranchID1 = (int) cleanInputData1($crntRow1[1]);
                                    $AccountID1 = (int) cleanInputData1($crntRow1[2]);
                                    $CurrencyID1 = (int) cleanInputData1($crntRow1[3]);
                                    $ProductType1 = cleanInputData1($crntRow1[4]);
                                    $IsEnabled1 = cleanInputData1($crntRow1[5]);


                                    $BranchNm1 = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc||' ['||location_code_name||']'", $BranchID1);
                                    $AccountNm1 = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_title", $AccountID1);
                                    $CurrencyNm1 = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "iso_code", $CurrencyID1);

                                    if ($BrnchAcctRowID1 > 0) {
                                        if (branchPymntAcctRcdExistsUpdt($AccountID1, $BranchID1, $CurrencyID1, $BrnchAcctRowID1)) {
                                            $ttlRowsExts = $ttlRowsExts + 1;
                                            $dsplyMsg = $dsplyMsg . "<span style='color:red;'><b>Row " . ($z + 1) . " - $BranchNm1, $AccountNm1, $CurrencyNm1</b></br>";
                                        }
                                    } else {
                                        if (branchPymntAcctRcdExistsCrt($AccountID1, $BranchID1, $CurrencyID1)) {
                                            $ttlRowsExts = $ttlRowsExts + 1;
                                            $dsplyMsg = $dsplyMsg . "<span style='color:red;'><b>Row " . ($z + 1) . " - $BranchNm1, $AccountNm1, $CurrencyNm1</b></br>";
                                        }
                                    }
                                }
                            }

                            if ($ttlRowsExts > 0) {
                                echo "<div><b>Sorry! The following rows already exists</b></br>$dsplyMsg</div>";
                                exit();
                            }

                            $variousRows = explode("|", trim($slctdBranchPymntAccts, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 6) {
                                    $BrnchAcctRowID = (int) (cleanInputData1($crntRow[0]));
                                    $BranchID = (int) cleanInputData1($crntRow[1]);
                                    $AccountID = (int) cleanInputData1($crntRow[2]);
                                    $CurrencyID = (int) cleanInputData1($crntRow[3]);
                                    $ProductType = cleanInputData1($crntRow[4]);
                                    $IsEnabled = cleanInputData1($crntRow[5]);

                                    if ($BrnchAcctRowID > 0) {
                                        $recCntUpdt = $recCntUpdt + updateBranchPymntAccts($BrnchAcctRowID, $AccountID, $BranchID, $IsEnabled, $ProductType, $CurrencyID, $dateStr);
                                    } else {
                                        $recCntInst = $recCntInst + createBranchPymntAccts($AccountID, $BranchID, $IsEnabled, $ProductType, $CurrencyID, $dateStr);
                                    }
                                }
                            }
                            echo "<span style='color:green;font-weight:bold !important;'><i>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</i></span>";
                            exit();
                            //echo json_encode(array("riskProfileId" => $riskProfileId, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                            //exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide at least one record before saving!<br/></div>';
                            exit();
                        }
                    }
                }
            }
            else if ($subPgNo == 2.2) {//MANUAL INTEREST PAYMENT
                //var_dump($_POST);
                $mnlpymntSvngsHdrId = isset($_POST['mnlpymntSvngsHdrId']) ? cleanInputData($_POST['mnlpymntSvngsHdrId']) : -1;
                $mnlpymntSvngsHdrDesc = isset($_POST['mnlpymntSvngsHdrDesc']) ? cleanInputData($_POST['mnlpymntSvngsHdrDesc']) : '';
                $currencyNm = isset($_POST['currencyNm']) ? cleanInputData($_POST['currencyNm']) : '';
                $currencyID = getGnrlRecID2("mcf.mcf_currencies", "iso_code", "crncy_id", $currencyNm);
                $branchID = isset($_POST['branchID']) ? cleanInputData($_POST['branchID']) : -1;
                $prgrs = isset($_POST['prgrs']) ? cleanInputData($_POST['prgrs']) : -1;
                //$getUpdateRecCnt = 0;
                $rslt = 'FAILURE';
                $dateStr = getDB_Date_time();
                if ($actyp == 1) {
//                    for($i = 0; $i<=500; $i++){
//                        execUpdtInsSQL("UPDATE mcf.mcf_dummy SET col = ".$i);
//                    }
                    $rslt = processManualInterestPymntSavings($mnlpymntSvngsHdrId, $currencyID, $branchID);
                    if ($rslt == 'SUCCESS') {
                        echo "SUCCESS"; //"Payment Batch Completed Successfully";
                        exit();
                    } else {
                        echo $rslt; //"SORRY";
                        exit();
                    }
                } else if ($actyp == 2) {//MONITOR PROGRESS
                    if ($prgrs < 100) {
                        $getUpdateRecCnt = getDummyDtaCnt();
                        $prgrs = ($getUpdateRecCnt / 500) * 100;
                        //$prgrs = $prgrs + 10;
                        echo $prgrs;
                    } else {
                        echo 100;
                    }
                    exit();
                } else if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET status = 'Withdrawn',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_svngs_hdr_id = $mnlpymntSvngsHdrId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Payment Batch!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("mnlpymntSvngsHdrId" => $mnlpymntSvngsHdrId));
                    exit();
                } else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET status = 'Rejected',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_svngs_hdr_id = $mnlpymntSvngsHdrId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Payment Batch!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("mnlpymntSvngsHdrId" => $mnlpymntSvngsHdrId));
                    exit();
                } else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE mnlpymnt_svngs_hdr_id = $mnlpymntSvngsHdrId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Payment Batch!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("mnlpymntSvngsHdrId" => $mnlpymntSvngsHdrId));
                    exit();
                } else if ($actyp == 6) {
                    //REVERSE
                    $rslt = processManualInterestPymntSavings($mnlpymntSvngsHdrId, $currencyID, $branchID);
                    if ($rslt == 'SUCCESS') {
                        $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET status = 'Authorized',"
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_svngs_hdr_id = $mnlpymntSvngsHdrId");

                        if ($updateCnt <= 0) {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Failed to AUTHORIZE Payment Batch!<br/></div>';
                            exit();
                        }

                        echo json_encode(array("mnlpymntSvngsHdrId" => $mnlpymntSvngsHdrId));
                        exit();
                    } else {
                        echo "Failed to REVERSE Batch Payment";
                        exit();
                    }
                } else {
                    $dateStr = getDB_Date_time();

                    if ($mnlpymntSvngsHdrDesc != "") {
                        if ($mnlpymntSvngsHdrId <= 0) {
                            $mnlpymntSvngsHdrId = getNextSequenceVal("nextval('mcf.mcf_manual_interest_pymnt_hdr_svngs_mnlpymnt_svngs_hdr_id_seq'::regclass)");

                            $rowCnt = createManualInterestPymntSavings($mnlpymntSvngsHdrId, $dateStr, $mnlpymntSvngsHdrDesc, $branchID, $currencyID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Payment Batch!<br/></div>';
                                exit();
                            }
                        } else {

                            $rowCnt = updateManualInterestPymntSavings($mnlpymntSvngsHdrId, $dateStr, $mnlpymntSvngsHdrDesc, $branchID, $currencyID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Payment Batch!<br/></div>';
                                exit();
                            }
                        }

                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_svngs_hdr_id = $mnlpymntSvngsHdrId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Payment Batch for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("mnlpymntSvngsHdrId" => $mnlpymntSvngsHdrId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            }
        }
        else if ($pgNo == 14) {
            var_dump($_POST);
        }
        else if ($pgNo == 15) {//CREDIT MANAGEMENT
            if ($subPgNo == 4.1) {//LOAN APPLICATION
                if ($vwtyp == "0") {
                    //var_dump($_POST);
                    //var_dump($_FILES);

                    $orgid = $_SESSION['ORG_ID'];

                    if ($actyp == "1") {//SAVING LOAN APLICATION
                        $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;
                        $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                        $custType = isset($_POST['custType']) ? cleanInputData($_POST['custType']) : "";

                        $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                        $acctNumber = isset($_POST['acctNumber']) ? cleanInputData($_POST['acctNumber']) : "";

                        $bnkCustomerID = isset($_POST['bnkCustomerID']) ? cleanInputData($_POST['bnkCustomerID']) : -1;
                        $prdtTypeID = isset($_POST['prdtTypeID']) ? cleanInputData($_POST['prdtTypeID']) : -1;

                        $loanAmount = isset($_POST['loanAmount']) ? cleanInputData($_POST['loanAmount']) : 0;
                        $loanTenor = isset($_POST['loanTenor']) ? cleanInputData($_POST['loanTenor']) : 0;
                        $loanTenorType = isset($_POST['loanTenorType']) ? cleanInputData($_POST['loanTenorType']) : '';
                        $applctnDate = isset($_POST['applctnDate']) ? cleanInputData($_POST['applctnDate']) : "";

                        $prpsOfLoan = isset($_POST['prpsOfLoan']) ? cleanInputData($_POST['prpsOfLoan']) : "";
                        $rpmntSrcAcctID = isset($_POST['rpmntSrcAcctID']) ? cleanInputData($_POST['rpmntSrcAcctID']) : -1;
                        $cashCollateralID = isset($_POST['cashCollateralID']) ? cleanInputData($_POST['cashCollateralID']) : -1;
                        $invstmntCollateralID = isset($_POST['invstmntCollateralID']) ? cleanInputData($_POST['invstmntCollateralID']) : -1;
                        $prptyCollateralID = isset($_POST['prptyCollateralID']) ? cleanInputData($_POST['prptyCollateralID']) : -1;
                        $status = isset($_POST['status']) ? cleanInputData($_POST['status']) : "";
                        $grpCustId = isset($_POST['grpCustId']) ? cleanInputData($_POST['grpCustId']) : -1;

                        $rqstType = isset($_POST['rqstType']) ? cleanInputData($_POST['rqstType']) : "";
                        $refLoanrqstID = isset($_POST['refLoanrqstID']) ? cleanInputData($_POST['refLoanrqstID']) : -1;
                        $crdtType = isset($_POST['crdtType']) ? cleanInputData($_POST['crdtType']) : "";
                        $rcvryOfficerID = isset($_POST['rcvryOfficerID']) ? cleanInputData($_POST['rcvryOfficerID']) : -1;
                        $interestRate = isset($_POST['interestRate']) ? cleanInputData($_POST['interestRate']) : -1;
                        $rpmntSrcType = isset($_POST['rpmntSrcType']) ? cleanInputData($_POST['rpmntSrcType']) : "";

                        $sctrMjrID = isset($_POST['sctrMjrID']) ? cleanInputData($_POST['sctrMjrID']) : -1;
                        $sctrMnrID = isset($_POST['sctrMnrID']) ? cleanInputData($_POST['sctrMnrID']) : -1;
                        $grpApplicantType= isset($_POST['grpApplicantType']) ? cleanInputData($_POST['grpApplicantType']) : 'Individual';

                        //$optn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : -1;

                        $dateStr = getDB_Date_time();

                        if ($bnkBranchID > 0 &&
                                $custType != "" &&
                                $bnkCustomerID > 0 &&
                                $prdtTypeID > 0 &&
                                $loanAmount > 0 &&
                                $loanTenor > 0 &&
                                $applctnDate != "" && $sctrMjrID > 0 && $sctrMnrID > 0) {


                            if ($loanRqstID <= 0) {
                                $loanRqstID = getGnrlSequenceNo("mcf.mcf_loans_loan_rqst_id_seq");
                                $cntt = createLoanRequest($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate, $prpsOfLoan, $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateralID, $invstmntCollateralID, $prptyCollateralID, $grpCustId, $rqstType, $refLoanrqstID, $crdtType, $rcvryOfficerID, $interestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $grpApplicantType);
                                //$loanRqstID = getLoanRequestID($dateStr, $bnkBranchID, $usrID);
                                if($cntt > 0) {
                                    $trnsctnId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
                                    if($custType == "Group"){
                                        //insert guarantors
                                        executeSQLNoParams("SELECT mcf.insert_group_guarantors($loanRqstID, $usrID, '$dateStr', $grpCustId, $bnkCustomerID)");
                                    }

                                    //LOAD CREDIT ASSESSMENT INIT
                                    $scoreSetHdrID = get_CreditScoreSetHdrIDForLoanRqst($loanRqstID);
                                    load_LoanRqstAssessment($loanRqstID, $scoreSetHdrID, $dateStr);

                                    //$trnsctnId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);

                                    //create_account in mcf_accounts and update loans_table with account_id
                                    echo json_encode(array("loanRqstID" => $loanRqstID, "trnsctnID" => $trnsctnId));
                                } else {
                                    echo "Failed to Create Loan Request";
                                }

                            } else {
                                $slctdGrpMembers = isset($_POST['slctdGrpMembers']) ? cleanInputData($_POST['slctdGrpMembers']) : "";
                                $recCntUpdt = 0;
                                $recCntInst = 0;
                                $ttlAmount = 0;

                                if (trim($slctdGrpMembers, "|~") != "") {

                                    $variousRows = explode("|", trim($slctdGrpMembers, "|"));
                                    for ($z = 0; $z < count($variousRows); $z++) {
                                        $crntRow = explode("~", $variousRows[$z]);
                                        if (count($crntRow) == 7) {
                                            $pkeyID = (int) (cleanInputData1($crntRow[0]));
                                            $custID = (int) cleanInputData1($crntRow[1]);
                                            $rqstdAmount = (float) cleanInputData1($crntRow[2]);
                                            $rpmntAcctID = (int) cleanInputData1($crntRow[3]);
                                            $cashColtID= (int) cleanInputData1($crntRow[4]);
                                            $invtmntColtID = (int) cleanInputData1($crntRow[5]);
                                            $prptyColtID = (int) cleanInputData1($crntRow[6]);

                                            $ttlAmount = $ttlAmount + $rqstdAmount;

                                            if ($pkeyID > 0) {
                                                $recCntUpdt = $recCntUpdt + updateGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $loanRqstID, $rpmntAcctID,
                                                        $cashColtID, $invtmntColtID, $prptyColtID);
                                            } else {
                                                $recCntInst = $recCntInst + createGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $loanRqstID, $rpmntAcctID,
                                                        $cashColtID, $invtmntColtID, $prptyColtID);
                                            }
                                        }
                                    }
                                }

                                updateLoanRequest($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate, $prpsOfLoan, $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateralID, $invstmntCollateralID, $prptyCollateralID, $grpCustId, $rqstType, $refLoanrqstID, $crdtType, $rcvryOfficerID, $interestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $grpApplicantType);
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Loan Request Successfully Saved!<br/></div>';

                            }

                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Data Supplied is Incomplete!<br/></div>';
                            exit();
                        }
                     }
                     else if ($actyp == 3) {//AUTO-LOAD Group Member Applications
                        $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;
                        $grpCustId = isset($_POST['grpCustId']) ? cleanInputData($_POST['grpCustId']) : -1;

                        $dateStr = getDB_Date_time();
                        //echo "rqstid=".$loanRqstID;
                        //var_dump($_POST);

                        if ((int)$loanRqstID > 0 && (int)$grpCustId > 0) {
                            $cnt = 0;
                            $result = executeSQLNoParams("SELECT mcf.load_grp_members_for_loanapplctn($loanRqstID, $grpCustId)");

                            while ($row = loc_db_fetch_array($result)) {
                                $cnt = $row[0];
                            }

                            if($cnt > 0){
                                echo '<div style="color:blue; font-weight:bold !important;">'.$cnt.' Members Loaded Successfully<br/></div>';
                                exit();
                            } else {
                                echo '<div style="color:red; font-weight:bold !important;">No member Loaded!<br/></div>';
                                exit();
                            }

                        } else {
                            echo '<div style="color:red; font-weight:bold !important;">Please Save Loan Request and Select Group Name!<br/></div>';
                            exit();
                        }
                     }
                     else if ($actyp == 5) {
                        //Import Loan Applications
                        $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                        session_write_close();
                        $affctd = 0;
                        $trnsTm = date('ymdHis');
                        if ($dataToSend != "") {
                            $variousRows = explode("|", $dataToSend);
                            $total = count($variousRows);
                            for ($z = 0; $z < $total; $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 24) {
                                    $loanNo = cleanInputData1($crntRow[0]);//SEGMENT1
                                    $applctnDate = trim((cleanInputData1($crntRow[1])));
                                    $loanAmount = trim(cleanInputData1($crntRow[2]));
                                    $loanTenor = cleanInputData1($crntRow[3]);
                                    $prpsOfLoan = cleanInputData1($crntRow[4]);
                                    $bnkBranchCode = cleanInputData1($crntRow[5]);
                                    $rpmntSrcAcct = trim(cleanInputData1($crntRow[6]));
                                    $apprvlStatus = trim(cleanInputData1($crntRow[7]));
                                    $payBackPlan = cleanInputData1($crntRow[8]);
                                    $apprvdAmount = cleanInputData1($crntRow[9]);
                                    $isDisbursed = cleanInputData1($crntRow[10]);
                                    $crdtOfficerCode = cleanInputData1($crntRow[11]);
                                    $rqstType = cleanInputData1($crntRow[12]);
                                    $crdtType = cleanInputData1($crntRow[13]);
                                    $apprvdLoanTenor = cleanInputData1($crntRow[14]);
                                    $apprvdInterestRate = cleanInputData1($crntRow[15]);
                                    $rpmntSrcType = cleanInputData1($crntRow[16]);
                                    $sectorMinor = cleanInputData1($crntRow[17]);
                                    $loanProductNo = cleanInputData1($crntRow[18]);
				    $prncplBal = cleanInputData1($crntRow[19]);
                                    $intrstBal = cleanInputData1($crntRow[20]);
				    $repayStartDte = cleanInputData1($crntRow[21]);
                                    $repayEndDte = cleanInputData1($crntRow[22]);
                                    $ttlLoanPymnts = cleanInputData1($crntRow[23]);
				    $loanTenorType = "Month(s)";

                                    $custType = getGnrlRecNm2("mcf.mcf_accounts", "account_number", "cust_type", $rpmntSrcAcct);
                                    $bnkCustomerID = getGnrlRecID("mcf.mcf_accounts", "account_number", "cust_id", $rpmntSrcAcct, $orgID);

                                    $rcvryOfficerID = getGnrlRecID2("prs.prsn_extra_data", "data_col2", "person_id", $crdtOfficerCode);
                                    $sctrMjrID = getGnrlRecID2("mcf.mcf_loan_sectors_minor", "sector_name", "major_sector_id", $sectorMinor);
                                    $sctrMnrID = getGnrlRecID2("mcf.mcf_loan_sectors_minor", "sector_name", "minor_sector_id", $sectorMinor);
                                    $prdtTypeID = getPrdtIDFromLoanPrdtTeksol($loanProductNo);
				    if($crdtType == 'Overdraft'){
                                        $prdtTypeID = getOvdrftPrdtID($loanProductNo);
                                    }
                                    $loanRqstID = -1;
                                    $rpmntSrcAcctID = getGnrlRecID("mcf.mcf_accounts", "account_number", "account_id", $rpmntSrcAcct, $orgID);
                                    $cashCollateralID = $rpmntSrcAcctID;
                                    $invstmntCollateralID = -1;
                                    $prptyCollateralID = -1;
                                    $grpCustId = -1;
                                    $refLoanrqstID= -1;
                                    $cnt = 0;

		   		    if($custType == "Group"){
                                        $grpCustId = $bnkCustomerID;
                                    }

                                    if ($z == 0) {
                                        if (strtoupper($loanNo) == "LOAN NO" && strtoupper($applctnDate) == "APPLICATION DATE**" && strtoupper($loanAmount) == "LOAN AMOUNT**") {
                                            continue;
                                        } else {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                            //.strtoupper($loanPrdtNo) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }
                                    }
                                    /*
                                      if ($applctnDate == "" || $loanAmount == "" || $loanTenor == "" || $prpsOfLoan == "" || rpmntSrcAcct == "" || apprvlStatus == "" || loanTenorType == "" || $isDisbursed == "" || crdtType == "" || apprvdLoanTenor == "" || $sectorMinor == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                      continue;
                                      } */

                                    $bnkBranchID = getGnrlRecID("org.org_sites_locations", "location_code_name", "location_id", $bnkBranchCode, $orgID);
                                    $dateStr = getDB_Date_time();


                                    $trnsTm = getDB_DateTimeYMDHMS($trnsTm);

                                    $affctd +=   createLoanRequestDtaImport($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate, $prpsOfLoan,
                                            $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateralID, $invstmntCollateralID, $prptyCollateralID, $grpCustId, $rqstType,
                                            $refLoanrqstID, $crdtType, $rcvryOfficerID, $apprvdInterestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $loanNo, $trnsTm, $isDisbursed,
                                              $payBackPlan, $prncplBal, $intrstBal, $repayStartDte, $repayEndDte, $ttlLoanPymnts);

                                }
                                $percent = round((($z + 1) / $total) * 100, 2);
                                $arr_content['percent'] = $percent;
                                if ($percent >= 100) {
                                    $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Loan Application(s) imported.";
                                    $arr_content['msgcount'] = $total;
                                } else {
                                    $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Loan Applications...Please Wait..." . ($z + 1) . " out of " . $total . " Loan Application(s) imported.";
                                }
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        } else {
                            $percent = 100;
                            $arr_content['percent'] = $percent;
                            $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                            $arr_content['msgcount'] = "";
                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                        }
                    }
                     else if ($actyp == 6) {
                        //Import Disbursement Dates
                        $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                        session_write_close();
                        $affctd = 0;
                        $trnsTm = date('ymdHis');
                        if ($dataToSend != "") {
                            $variousRows = explode("|", $dataToSend);
                            $total = count($variousRows);
                            for ($z = 0; $z < $total; $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 2) {
                                    $loanNo = cleanInputData1($crntRow[0]);//SEGMENT1
                                    $applctnDate = trim((cleanInputData1($crntRow[1])));

                                    $cnt = 0;

                                    if ($z == 0) {
                                        if (strtoupper($loanNo) == "LOANNO" && strtoupper($applctnDate) == "DISBURSEDDATE") {
                                            continue;
                                        } else {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }
                                    }
                                    $dateStr = getDB_Date_time();
                                    $affctd +=   execUpdtInsSQL("UPDATE mcf.mcf_loan_request
                                        SET segment8_dataload= '$applctnDate', last_update_by = $usrID, last_update_date = '$dateStr'
                                      WHERE segment1_dataload = '$loanNo'");

                                }
                                $percent = round((($z + 1) / $total) * 100, 2);
                                $arr_content['percent'] = $percent;
                                if ($percent >= 100) {
                                    $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Loan Disbursement Date(s) imported.";
                                    $arr_content['msgcount'] = $total;
                                } else {
                                    $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Loan Disbursement Dates...Please Wait..." . ($z + 1) . " out of " . $total . " Loan Disbursement Date(s) imported.";
                                }
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }
                        } else {
                            $percent = 100;
                            $arr_content['percent'] = $percent;
                            $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                            $arr_content['msgcount'] = "";
                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                        }
                    }
                }
                else if ($vwtyp == "1") {// SUBMIT FOR APPROVAL
                    $orgid = $_SESSION['ORG_ID'];
                    //echo "actyp ". $actyp;
                    if ($actyp == "2") {//SUBMIT LOAN APLICATION
                        $assmntScoreCmnts = isset($_POST['assmntScoreCmnts']) ? cleanInputData($_POST['assmntScoreCmnts']) : "";
                        $ttlScore = isset($_POST['ttlScore']) ? cleanInputData($_POST['ttlScore']) : 0;
                        $lnRqstID = isset($_POST['lnRqstID']) ? cleanInputData($_POST['lnRqstID']) : -1;

                        $ttlQstnCnt = 0;
                        $dateStr = getDB_Date_time();

                        if ($lnRqstID > 0) {

                            //GET APPLICANT ID
                            $applcntCustID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cust_id", $lnRqstID);
                            $rcdMatch = false;
                            $lmt = get_Loan_GuarantorsTtl($lnRqstID, "%");

                            //GET ALL GUARANTORS ID AND TYPE AND LOOP THROUGH, WHERE THERE IS A MATCH => RETURN ERROR AND MESSAGE
                            $resultG = get_Loan_Guarantors($lnRqstID, "%",0,$lmt);
                            while ($rowG = loc_db_fetch_array($resultG)) {
                                $srcTypG = $rowG[2];
                                $custPrsnIDG = (int) $rowG[3];

                                if ($srcTypG == "Individual Customers" && ($applcntCustID == $custPrsnIDG)) {
                                    $rcdMatch = true;
                                    break;
                                }
//                                else {//VALIDATE IF ONLY THERE IS A LINKED CUSTOMER }
                            }

                            if ($rcdMatch == true) {
                                echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                                . 'Sorry! Customer cannot guarantee for same!<br/>Please Specify a different Guarantor</i></br></span></div>';
                                exit();
                            } else {
                                $result2 = executeSQLNoParams("SELECT COUNT(distinct profile_factor_id) FROM mcf.mcf_loan_assessments
                                    WHERE loan_rqst_id = $lnRqstID");
                                while ($row2 = loc_db_fetch_array($result2)) {
                                    $ttlQstnCnt = (int) $row2[0];
                                }
                                $shdBeDone = hasCrdtAssmntBnCmpltd($lnRqstID);

                                if (!($shdBeDone)) {
                                    echo json_encode(array("TTL_COUNT" => $ttlQstnCnt));
                                    exit();
                                }

                                if ($ttlScore <= 0) {
                                    $ttlRngScore = 0;
                                    $resultsAC = get_AssessmentSummary($lnRqstID);
                                    while ($rowAC = loc_db_fetch_array($resultsAC)) {
                                        $ttlRngScore = $ttlRngScore + $rowAC[4];
                                    }
                                    $ttlScore = $ttlRngScore;
                                }

                                //VALIDATE GROUP MEMBERS
                                $slctdGrpMembers = isset($_POST['slctdGrpMembers']) ? cleanInputData($_POST['slctdGrpMembers']) : "";
                                $recCntUpdt = 0;
                                $recCntInst = 0;
                                $ttlAmount = 0;
                                $ttlAmount1 = 0;
                                $affctd5Rslt = array();
                                $affctd5RsltCnt = 0;
                                $errMsgDsp1 = "";
                                $errMsgDsp = "";
                                $dsply1 = "";
                                //$

                                if (trim($slctdGrpMembers, "|~") != "") {

                                    $variousRows1 = explode("|", trim($slctdGrpMembers, "|"));
                                    for ($x = 0; $x < count($variousRows1); $x++) {
                                        $crntRow1 = explode("~", $variousRows1[$x]);
                                        if (count($crntRow1) == 7) {
                                            $pkeyID1 = (int) (cleanInputData1($crntRow1[0]));
                                            $custID1 = (int) cleanInputData1($crntRow1[1]);
                                            $rqstdAmount1 = (float) cleanInputData1($crntRow1[2]);
                                            $rpmntAcctID1 = (int) cleanInputData1($crntRow1[3]);
                                            $cashColtID1= (int) cleanInputData1($crntRow1[4]);
                                            $invtmntColtID1 = (int) cleanInputData1($crntRow1[5]);
                                            $prptyColtID1 = (int) cleanInputData1($crntRow1[6]);

                                            $affctd5Rslt =  validateLoanCollateralsLiens($cashColtID1, $invtmntColtID1, $prptyColtID1, $rqstdAmount1, $lnRqstID, "Loan", $errMsgDsp, $lnRqstID, 0);
                                            $affctd5RsltCnt = $affctd5RsltCnt + (int)$affctd5Rslt["lnCntr"]; //$disbDetArray["scheduledPrdcPaymntAmnt"]
                                            $errMsgDsp1 = $errMsgDsp1 . "</br>" .$affctd5Rslt["errMsg"]; //array("lnCntr"=>$lnCntr, "errMsg"=>$errMsg);

                                            $ttlAmount1 = $ttlAmount1 + $rqstdAmount1;
                                        }
                                    }

                                    $loanAmount = (float)getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_amount", $lnRqstID);
                                    if($ttlAmount1 != $loanAmount){
                                        echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                                        . 'Sorry! Group Loan Amount '.number_format($loanAmount,2).' must agree with total amount for group Members '.number_format($ttlAmount1,2).'</i></br></span></div>';
                                        exit();
                                    }

                                    if($affctd5RsltCnt > 0){
                                          $dsply1 .= $errMsgDsp1;
                                          $dsply1 .= "<br/>|ERROR|-Loan Application Submission Failed!";
                                          $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply1</span></p>";
                                          echo $msg;
                                          exit();
                                    }

                                    $variousRows = explode("|", trim($slctdGrpMembers, "|"));
                                    for ($z = 0; $z < count($variousRows); $z++) {
                                        $crntRow = explode("~", $variousRows[$z]);
                                        if (count($crntRow) == 7) {
                                            $pkeyID = (int) (cleanInputData1($crntRow[0]));
                                            $custID = (int) cleanInputData1($crntRow[1]);
                                            $rqstdAmount = (float) cleanInputData1($crntRow[2]);
                                            $rpmntAcctID = (int) cleanInputData1($crntRow[3]);
                                            $cashColtID= (int) cleanInputData1($crntRow[4]);
                                            $invtmntColtID = (int) cleanInputData1($crntRow[5]);
                                            $prptyColtID = (int) cleanInputData1($crntRow[6]);

                                            $ttlAmount = $ttlAmount + $rqstdAmount;

                                            if ($pkeyID > 0) {
                                                $recCntUpdt = $recCntUpdt + updateGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $lnRqstID, $rpmntAcctID,
                                                        $cashColtID, $invtmntColtID, $prptyColtID);
                                            } else {
                                                $recCntInst = $recCntInst + createGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $lnRqstID, $rpmntAcctID,
                                                        $cashColtID, $invtmntColtID, $prptyColtID);
                                            }
                                        }
                                    }


                                }

                                $cnta = submitLoanRqst($lnRqstID, $assmntScoreCmnts, $ttlScore);

                                if ($cnta > 0) {

                                    $errMsg = "";

                                    $srcDocID = $lnRqstID;
                                    $srcDocType = "Loan Applications";
                                    $routingID = -1;
                                    $inptSlctdRtngs = "";
                                    $actionToPrfrm = "Initiate";
                                    $errMsg .= "" . mcfLoanAppsReqMsgActns($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                                    echo $errMsg;
                                } else {
                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                    . 'width:18px;height:18px;"/>Failed to Initiate request for approval!<br/></div>';
                                }
                                exit();
                            }
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please do Credit Risk Assessment first!<br/></div>';
                            exit();
                        }
                    }
                    else if ($actyp == "3" || $actyp == "4") {//WITHDRAW LOAN APLICATION
                        //var_dump($_POST);
                        $lnRqstID = isset($_POST['lnRqstID']) ? cleanInputData($_POST['lnRqstID']) : -1;
                        $rvrslCmnts = isset($_POST['rvrslCmnts']) ? cleanInputData($_POST['rvrslCmnts']) : '';

                        $dateStr = getDB_Date_time();

                        if ($lnRqstID > 0) {

                            $isLoanDisbursed = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "is_disbursed", $lnRqstID);
                            $actionToPrfrm = "Withdraw";
                            $actnTPrsm = "Withdrawn";

                            if($actyp == "4"){
                                $actionToPrfrm = "Reverse";
                                $actnTPrsm = "Reversed";
                            }
                            //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                            if ($isLoanDisbursed == "No") {
                                echo "Sorry! Loan Application has been disbursed and therefore cannot be $actnTPrsm.";
                                exit();
                            } else {

                                $errMsg = "";


                                if ($actyp == "4") {

                                    if ($rvrslCmnts == "") {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Please provide a reason for Reversing this Approved Loan!<br/></div>';
                                        exit();
                                    }
                                    //UPDATE COMMENTS
                                    execUpdtInsSQL("UPDATE mcf.mcf_loan_request SET rvsl_comments = '" . loc_db_escape_string($rvrslCmnts) . "'"
                                            . " WHERE loan_rqst_id = $lnRqstID");
                                }

                                $srcDocID = $lnRqstID;
                                $srcDocType = "Loan Applications";
                                $routingID = getMCFMxRoutingID($lnRqstID, $srcDocType);
                                $inptSlctdRtngs = "";
                                $errMsg .= "" . mcfLoanAppsReqMsgActns((int) $routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                                echo $errMsg;

//                                //$rowCnt = withdrawLoanRqst($lnRqstID);
//                                if ($rowCnt > 0) {
//                                    echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
//                                    . 'width:18px;height:18px;"/>Loan Request Successfully Withdrawn!<br/></div>';
//                                } else {
//                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
//                                    . 'Failed to Withdraw Loan Request!<br/></div>';
//                                }
                                exit();
                            }
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please do Credit Risk Assessment first!<br/></div>';
                            exit();
                        }
                    }
                }
                else if ($vwtyp == "2") {// CASH BREAKDOWN
                }
                else if ($vwtyp == "5") {//GUARANTORS
                    //var_dump($_POST);
                    $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : "";
                    $guarantorID = isset($_POST['guarantorID']) ? cleanInputData($_POST['guarantorID']) : -1;
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                    $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;

                    $dateStr = getDB_Date_time();

                    if ($guarantorID > 0) {
                        if ($rowID <= 0) {
                            createLoanGuarantor($srcType, $guarantorID, $loanRqstID, $dateStr);
                        } else {
                            updateLoanGuarantor($srcType, $guarantorID, $dateStr, $rowID);
                        }

                        if ($rowID <= 0) {
                            $rowID = getLoanGuarantorID($dateStr, $usrID, $loanRqstID);

                            $localIDNo = getLoanGuarantorLocalIDNo($srcType, $guarantorID);

                            echo json_encode(array("rowID" => $rowID, "localIDNo" => $localIDNo));
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Loan Guarantor Successfully Saved!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please select a Guarantor First!<br/></div>';
                        exit();
                    }
                }
		else if ($vwtyp == "6") {//SUPPLEMENTATY ACCOUNTS
                    $slctdSuplmntryRpymntAccnts = isset($_POST['slctdSuplmntryRpymntAccnts']) ? cleanInputData($_POST['slctdSuplmntryRpymntAccnts']) : "";

                    $vldtyUpdtCnt = 0;
                    $rsltCrtCnt = 0;
                    $rsltUpdtCnt = 0;

                    if (1 > 0) {
                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;

                        if (trim($slctdSuplmntryRpymntAccnts, "|~") != "") {

                            $variousRows = explode("|", trim($slctdSuplmntryRpymntAccnts, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 4) {
                                    $suplmntryRpymntAccntsID = (int) (cleanInputData1($crntRow[0]));
                                    $loanRqstID = (int) (cleanInputData1($crntRow[1]));
                                    $accountID = (int)cleanInputData1($crntRow[2]);
                                    $isEnabled = cleanInputData1($crntRow[3]);

                                    if ($suplmntryRpymntAccntsID > 0) {
                                        $recCntUpdt = $recCntUpdt + updateSuplmntryRpymntAccnts($suplmntryRpymntAccntsID, $loanRqstID, $accountID, $isEnabled, $usrID, $dateStr);
                                    } else {
                                        $suplmntryRpymntAccntsID = getSuplmntryRpymntAccntsID();
                                        $recCntInst = $recCntInst + insertSuplmntryRpymntAccnts($suplmntryRpymntAccntsID, $loanRqstID, $accountID, $isEnabled, $usrID, $dateStr);
                                    }
                                }
                            }
                        }

                        echo json_encode(array("recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . '<br/>Please complete all required fields before proceeding!<br/></div>';
                        exit();
                    }
                }
            } else if ($subPgNo == 4.2) {//LOAN DISBURSEMENT
                if ($vwtyp == "0") {// DISBURSEMENT HEADER
                    //var_dump($_POST);
                    //var_dump($_FILES);
                    if($actyp == 1 ) {//CREATE DISBURSEMENTS
                        $dateStr = getDB_Date_time();
                        $disbmntHdrID = getNewDisbmntHdrID();
                        $myBnkBranchID = get_Person_BranchID($prsnid);
                        $description = "Initial DataLoad - Disbursment of Loans from TEKSOL(NO ACCOUNTING)";
                        $crncyID = getGnrlRecID("mcf.mcf_currencies", "iso_code", "crncy_id", "GHS", $orgID);
                        $afftdRows = 0;
                        $custId = -1;
                        $prdtId = -1;
                        $custType = "";
                        $bnkBranchID = -1;
                        $disbmntDate = date("Y-m-d H:i:s");
                        $prncplBal = 0.00;
                        $intrstBal = 0.00;
                        $crdtType = "";

                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

                        //INSERT HEADER
                        $cnt1 = execUpdtInsSQL("INSERT INTO mcf.mcf_loan_disbursement_hdr(disbmnt_hdr_id, disbmnt_date, batch_no, description, branch_id,
                                status, crncy_id, created_by, creation_date, last_update_by, last_update_date, org_id)
                        VALUES ($disbmntHdrID,'" . $disbmntDate . "','LD-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "','" . loc_db_escape_string($description) .
                                "'," . $myBnkBranchID . ",'Incomplete'," . $crncyID . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $orgID . ")");

                        if($cnt1 > 0){
                            //GET ALL approved LOANS with IS_DISBURSED = Yes AND WITH SEGMENT1_DATALOAD AND NOT DISBURSED
                            $result = executeSQLNoParams("SELECT loan_rqst_id, approved_amount, cust_id, cust_type, loan_product_id, branch_id, segment3_dataload,
                                segment4_dataload, crdt_type FROM mcf.mcf_loan_request a
                                    WHERE COALESCE(segment1_dataload,'') != '' AND status = 'Approved' AND is_disbursed = 'YES'
					AND crdt_type = 'Loan'
                                      AND (select count(*) FROM mcf.mcf_loan_disbursement_det WHERE loan_rqst_id = a.loan_rqst_id and principal_amount > 0) = 0");

                            $rcCnt = 0;

                            while ($row = loc_db_fetch_array($result)) {
                                //INSERT DETAILS for all loans
                                $loanRqstId = (int)$row[0];
                                $apprvdAmnt = (float)$row[1];
                                $custId = (int)$row[2];
                                $custType = $row[3];
                                $prdtId = (int)$row[4];
                                $bnkBranchID = (int)$row[5];
                                $prncplBal = (float)$row[6];
                                $intrstBal = (float)$row[7];
                                $crdtType = $row[8];

                                $results3 = executeSQLNoParams("SELECT mcf.get_customer_name('" . $custType . "'," . $custId . ")");
                                $row3 = loc_db_fetch_array($results3);
                                $custNm = $row3[0];

                                $rcdLnRqstCnt = 0;
                                $result5 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_disbursement_hdr a
                                    WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = $loanRqstId AND b.disbmnt_hdr_id = $disbmntHdrID");

                                while ($row5 = loc_db_fetch_array($result5)) {
                                    $rcdLnRqstCnt = $row5[0];
                                }

                                if ($rcdLnRqstCnt <= 0) {
                                    $insSQL = "INSERT INTO mcf.mcf_loan_disbursement_det(disbmnt_hdr_id, loan_rqst_id, principal_amount, created_by, creation_date,
                                            last_update_by, last_update_date, principal_amount_bal)
                                    VALUES (" . $disbmntHdrID . "," . $loanRqstId . "," . $apprvdAmnt . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "', $apprvdAmnt)";
                                   $rcCnt = execUpdtInsSQL($insSQL);

                                   $afftdRows = $afftdRows + $rcCnt;
                                   $rowCnt = 0;

                                   if($rcCnt > 0){
                                       //GET NEW ACCOUNT ID 13012018 1
                                       $loanAcctId = getNewCustAccountID();

                                        if (/*$custType == "Group" || */$custType == "Group Members") {
                                            $rowCnt = createCustAccountDtaImport($loanAcctId, $orgID, "Individual", $custId, '', $custNm, 'Loan', $prdtId, '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                        } else {
                                            $rowCnt = createCustAccountDtaImport($loanAcctId, $orgID, $custType, $custId, '', $custNm, 'Loan', $prdtId, '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                        }

                                        if($rowCnt > 0){
                                            //$loanAcctId = getLoanCustAcctID($dateStr, $orgID, $usrID, $custId, $prdtId);
                                            if ($loanAcctId > 0) {
                                                $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                                updateLoanRequestAccount($loanRqstId, $loanAcctId);

                                                $dsbrsdAmnt = $prncplBal + $intrstBal;
                                                $lineid = -1;
                                                $newErrMsg = "";
                                                $rcdCnt4 = updateMCFDisbmntCstmrAcntBals($loanAcctId, $dsbrsdAmnt, $lineid, $crdtType, $newErrMsg, $loanRqstId);
                                            }
                                        }
                                        //END GET NEW ACCOUNT ID 13012018 1
                                   }
                                }
                            }

                            if($afftdRows > 0){
                                 $cnt1 = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_hdr SET status = 'Disbursed' WHERE disbmnt_hdr_id = $disbmntHdrID");
                            } else {
                                echo "<span style='color:red; font-weight:bold !important;'>Failed to create Disbursement Details</span>";
                                exit();
                            }
                        } else {
                            $cnt1 = execUpdtInsSQL("DELETE FROM mcf.mcf_loan_disbursement_hdr WHERE disbmnt_hdr_id = $disbmntHdrID");

                            echo "<span style='color:red; font-weight:bold !important;'>Failed to create disbursement Header</span>";
                            exit();
                        }

                        echo "<span style='color:blue; font-weight:bold !important;'>Disbursement Successfully Imported</span>";
                        exit();

                    }
                    else if($actyp == 2 ) {//DISBURSEME ODs
                        $dateStr = getDB_Date_time();
                        $disbmntHdrID = getNewDisbmntHdrID();
                        $myBnkBranchID = get_Person_BranchID($prsnid);
                        $description = "Initial DataLoad - Disbursment of Overdraft from TEKSOL(NO ACCOUNTING)";
                        $crncyID = getGnrlRecID("mcf.mcf_currencies", "iso_code", "crncy_id", "GHS", $orgID);
                        $afftdRows = 0;
                        $custId = -1;
                        $prdtId = -1;
                        $custType = "";
                        $bnkBranchID = -1;
                        $disbmntDate = date("Y-m-d H:i:s");
                        $prncplBal = 0.00;
                        $intrstBal = 0.00;
                        $crdtType = "";
                        $startDte = "";
                        $endDte = "";

                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

                        //INSERT HEADER
                        $cnt1 = execUpdtInsSQL("INSERT INTO mcf.mcf_loan_disbursement_hdr(disbmnt_hdr_id, disbmnt_date, batch_no, description, branch_id,
                                status, crncy_id, created_by, creation_date, last_update_by, last_update_date, org_id)
                        VALUES ($disbmntHdrID,'" . $disbmntDate . "','LD-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "','" . loc_db_escape_string($description) .
                                "'," . $myBnkBranchID . ",'Incomplete'," . $crncyID . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $orgID . ")");

                        if($cnt1 > 0){
                            //GET ALL approved LOANS with IS_DISBURSED = Yes AND WITH SEGMENT1_DATALOAD AND NOT DISBURSED
                            $result = executeSQLNoParams("SELECT loan_rqst_id, approved_amount, cust_id, cust_type, loan_product_id, branch_id, segment3_dataload,
                                segment4_dataload, crdt_type, segment5_dataload ,segment6_dataload, repayment_account_id FROM mcf.mcf_loan_request a
                                    WHERE COALESCE(segment1_dataload,'') != '' AND status = 'Approved' AND is_disbursed = 'YES' AND crdt_type = 'Overdraft'
                                      AND (select count(*) FROM mcf.mcf_loan_disbursement_det WHERE loan_rqst_id = a.loan_rqst_id and principal_amount > 0) = 0");

                            $rcCnt = 0;

                            while ($row = loc_db_fetch_array($result)) {
                                //INSERT DETAILS for all loans
                                $loanRqstId = (int)$row[0];
                                $apprvdAmnt = (float)$row[1];
                                $custId = (int)$row[2];
                                $custType = $row[3];
                                $prdtId = (int)$row[4];
                                $bnkBranchID = (int)$row[5];
                                $prncplBal = (float)$row[6];
                                $intrstBal = (float)$row[7];
                                $crdtType = $row[8];
                                $startDte = $row[9];
                                $endDte = $row[10];
                                $repaymentAccountID = $row[11];

                                $results3 = executeSQLNoParams("SELECT mcf.get_customer_name('" . $custType . "'," . $custId . ")");
                                $row3 = loc_db_fetch_array($results3);
                                $custNm = $row3[0];

                                $rcdLnRqstCnt = 0;
                                $result5 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_disbursement_hdr a
                                    WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = $loanRqstId AND b.disbmnt_hdr_id = $disbmntHdrID");

                                while ($row5 = loc_db_fetch_array($result5)) {
                                    $rcdLnRqstCnt = $row5[0];
                                }

                                if ($rcdLnRqstCnt <= 0) {
                                    $insSQL = "INSERT INTO mcf.mcf_loan_disbursement_det(disbmnt_hdr_id, loan_rqst_id, principal_amount, created_by, creation_date,
                                            last_update_by, last_update_date, principal_amount_bal, repay_start_date, repay_end_date)
                                    VALUES (" . $disbmntHdrID . "," . $loanRqstId . "," . $apprvdAmnt . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
                                            "', $apprvdAmnt, '$startDte', '$endDte')";
                                   $rcCnt = execUpdtInsSQL($insSQL);

                                   $afftdRows = $afftdRows + $rcCnt;
                                   $rowCnt = 0;

                                   if($rcCnt > 0){
                                       //GET NEW ACCOUNT ID 13012018 2
                                        $loanAcctId = getNewCustAccountID();
                                        $rowCnt = createCustAccountDtaImport($loanAcctId, $orgID, $custType, $custId, '', $custNm, 'Loan', $prdtId, '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);

                                        $docType = "Paperless";
                                        $trnsType = "LOAN_DISB";
                                        $trnsTypeFull = "Loan Disbursement";
                                        $trnsHasOtherLines = "0";
                                        if ($crdtType === "Overdraft") {
                                            $trnsType = "OVERDRAFT";
                                            $trnsTypeFull = "Overdraft Facility";
                                            $trnsHasOtherLines = "1";
                                        }
                                        $dte = date('ymdHis');
                                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                        $docNum1 = $gnrtdTrnsNo;
                                        $dateStr = getDB_Date_time();
                                        $dbOrCrdt = "CR";
                                        $voidedTrnsID = -1;
                                        $voidedTrnsType = "";
                                        $rvrsldesc = "";
                                        $accntCurRate = 1;

                                        $acctstatus = "";
                                        $acctcustomer = "";
                                        $acctlien = 0;
                                        $mandate = "";
                                        $wtdrwllimitno = -1;
                                        $wtdrwllimitamt = 0;
                                        $wtdrwllimittype = "";

                                        $isSelf = "Self";

                                        $acntRslt1 = get_OneCustAccntInfo($repaymentAccountID);
                                        while ($rowAcnt = loc_db_fetch_array($acntRslt1)) {
                                            $acctstatus = $rowAcnt[10];
                                            $acctcustomer = $rowAcnt[11];
                                            $acctlien = (float) $rowAcnt[13];
                                            $mandate = $rowAcnt[14];
                                            $wtdrwllimitno = (int) $rowAcnt[15];
                                            $wtdrwllimitamt = (float) $rowAcnt[16];
                                            $wtdrwllimittype = $rowAcnt[17];
                                        }


                                        if($rowCnt > 0){
                                            //$loanAcctId = getLoanCustAcctID($dateStr, $orgID, $usrID, $custId, $prdtId);
                                            if ($loanAcctId > 0) {
                                                $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                                updateLoanRequestAccount($loanRqstId, $loanAcctId);

                                                $dsbrsdAmnt = $apprvdAmnt;
                                                $lineid = -1;
                                                $newErrMsg = "";
                                                //--CREATE ACCOUNT TRANSACTION
                                                //UPDATE LOAN ACCOUNT BALANCE
                                                $rcdCnt4 = updateMCFDisbmntCstmrAcntBals($loanAcctId, $dsbrsdAmnt, $lineid, "Loan", $newErrMsg, $loanRqstId);

                                                //REPAYMENT ACCOUNT TRANSACTIONS
                                                $loanRqstTrnsID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstId);
                                                //CEATE ACCOUNT TRANSACTION
                                                $rsltCnt = createAccountTrns($repaymentAccountID, $dateStr, $docType, $docNum1, $trnsTypeFull, $dbOrCrdt, (float) $dsbrsdAmnt, $trnsType, (float) $dsbrsdAmnt, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $crncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                                //UPDATE ACCOUNT BALANCE
                                                $rcdCnt5 = updateMCFDisbmntCstmrAcntBals($repaymentAccountID, $dsbrsdAmnt, $lineid, $crdtType, $newErrMsg, $loanRqstId);
                                                //CREATE LIEN RECORD
                                                execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET end_date_active ='$endDte', start_date_active='$startDte' WHERE loan_rqst_id = $loanRqstId");

                                            }
                                        }
                                        //END GET NEW ACCOUNT ID 13012018 2
                                   }
                                }
                            }

                            if($afftdRows > 0){
                                 $cnt1 = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_hdr SET status = 'Disbursed' WHERE disbmnt_hdr_id = $disbmntHdrID");
                            } else {
                                echo "<span style='color:red; font-weight:bold !important;'>Failed to create Disbursement Details</span>";
                                exit();
                            }
                        } else {
                            $cnt1 = execUpdtInsSQL("DELETE FROM mcf.mcf_loan_disbursement_hdr WHERE disbmnt_hdr_id = $disbmntHdrID");

                            echo "<span style='color:red; font-weight:bold !important;'>Failed to create disbursement Header</span>";
                            exit();
                        }

                        echo "<span style='color:blue; font-weight:bold !important;'>Disbursement Successfully Imported</span>";
                        exit();

                    }
                    else if($actyp == 3 ) {//POPULATE SCHEDULES
                        $result1 = executeSQLNoParams("SELECT a.loan_rqst_id, segment7_dataload FROM mcf.mcf_loan_request a
                            WHERE a.segment7_dataload > 0 AND a.status = 'Approved' AND a.is_disbursed = 'YES' ORDER BY loan_rqst_id");

                        $cnt = 0;
                        $ttlCnt = 0;

                        while ($row1 = loc_db_fetch_array($result1)) {
                            $docHdrID = (int) $row1[0];
                            $entrdAMnt = (float) $row1[1];

                            $ttlPrncplPymntAmnt = 0;
                            $ttlIntrstPymntAmnt = 0;
                            $prncplPymntAmnt = 0;
                            $intrstPymntAmnt = 0;
                            $prncplAmnt = 0;
                            $intrstAmnt = 0;
                            //$schdlPayDte = "";
                            $entrdAMntRngBal = $entrdAMnt;

                            $rpyDateYMD = "";
                            $isPaid = "YES";
                            $shdlIsPaid = "NO";
                            $shdlIntAmtPaid = 0.00;
                            $shdlPrncplAmtPaid = 0.00;
                            $result = get_UnpaidLoanRqstSchedule($docHdrID);
                            $dateStr = date("Y-m-d H:i:s");
                            $disbmntDetId = -1;

                            $lnStlmntCnta = 0;
                            $ttlIntrstAmntWaived = 0;
                            $lnRpayType = "";
                            if ($dateStr != "") {
                                    $rpyDate = $dateStr;
                                    $rpyDateYMD = substr($rpyDate, 0, 10);
                            }

                            while ($row = loc_db_fetch_array($result)) {
                                $cnt = $cnt + 1;
                                $intrstAmnt = (float) $row[3];
                                $prncplAmnt = (float) $row[4];
                                $schdlPayDate = $row[11];
                                $lnRpayType = 'REPAYMENT';
                                $lnRqstId = $row[9];
                                $shdlIsPaid = $row[6];
                                $shdlIntAmtPaid = (float) $row[7];
                                $shdlPrncplAmtPaid = (float) $row[8];
                                $disbmntDetId = $row[10];
                               //INTEREST DEDUCTION
                                if ($entrdAMntRngBal < $intrstAmnt) {
                                    $intrstPymntAmnt = $entrdAMntRngBal;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                }

                                if ($entrdAMntRngBal == $intrstAmnt) {
                                    $intrstPymntAmnt = $intrstAmnt;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                } else {
                                    $intrstPymntAmnt = $intrstAmnt;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;

                                    $entrdAMntRngBal = (float) $entrdAMntRngBal - $intrstAmnt;

                                    //PRINCIPAL DEDUCTION
                                    if ($entrdAMntRngBal < $prncplAmnt) {
                                        $prncplPymntAmnt = $entrdAMntRngBal;
                                        $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                        $isPaid = "PARTIAL";
                                        $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                        . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                        break;
                                    }

                                    if ($entrdAMntRngBal == $prncplAmnt) {
                                        $prncplPymntAmnt = $prncplAmnt;
                                        $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                        $isPaid = "YES";
                                        $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                        . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                        break;
                                    } else {
                                        $entrdAMntRngBal = (float) $entrdAMntRngBal - $prncplAmnt;

                                        $prncplPymntAmnt = $prncplAmnt;
                                        $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                        $isPaid = "YES";
                                        $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                        . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    }
                                }
                            }

                            if ($cnt > 0) {
                                $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                . "SET principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($docHdrID, 'PRINCIPAL OUTSTANDING')),"
                                . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($docHdrID, 'INTEREST OUTSTANDING'))"
                                . ", ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($docHdrID, 'TENURE OUTSTANDING')),"
                                . " last_update_by = $usrID, last_update_date = '$rpyDate' WHERE disbmnt_det_id = $disbmntDetId");

                                $ttlCnt = $ttlCnt + 1;
                            }
                        }

                        echo "<span style='color:blue; font-weight:bold !important;'>Loan Schedules for $ttlCnt Loans Successfully Populated</span>";
                        exit();

                    }
                    else if($actyp == 5 ) {//IMPORT SCHEDULE
                        //IMPORT LOAD SCHEDULE, FOR EVERY LOANNO(SEGMENT1_DATALOAD), GET DISBURSEMENT DETAILS AND INSERT SCHEDULE

                        //Import Loan Schedules
                        $dataToSend = trim(cleanInputData($_POST['dataToSend']), "|~");
                        session_write_close();
                        $affctd = 0;
                        if ($dataToSend != "") {
                            $variousRows = explode("|", $dataToSend);
                            $total = count($variousRows);
                            for ($z = 0; $z < $total; $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 13) {
                                    $loanNo = cleanInputData1($crntRow[0]);
                                    $repayDate = trim((cleanInputData1($crntRow[1])));
                                    $begnBal = trim(cleanInputData1($crntRow[2]));
                                    $interestAmnt = cleanInputData1($crntRow[3]);
                                    $prncplAmnt = cleanInputData1($crntRow[4]);
                                    $endnBal = cleanInputData1($crntRow[5]);
                                    $isPaid = trim(cleanInputData1($crntRow[6]));
                                    $interestAmntPaid = trim(cleanInputData1($crntRow[7]));
                                    $prncplAmntPaid = cleanInputData1($crntRow[8]);
                                    $shdWaiveInterest = cleanInputData1($crntRow[9]);
                                    $repayStartDate = cleanInputData1($crntRow[10]);
                                    $repayEndDate = cleanInputData1($crntRow[11]);
                                    $ttlInterest = cleanInputData1($crntRow[12]);

                                    $disbmntDetID = -1;
                                    $result = executeSQLNoParams("SELECT disbmnt_det_id FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det b
                                        WHERE a.loan_rqst_id = b.loan_rqst_id
                                        AND a.segment1_dataload = '$loanNo' AND COALESCE(segment1_dataload,'') != '' AND a.status = 'Approved' AND a.is_disbursed = 'YES'
                                        AND principal_amount > 0 ORDER BY disbmnt_det_id LIMIT 1");

                                    while ($row = loc_db_fetch_array($result)) {
                                        $disbmntDetID = $row[0];
                                    }
                                    $cnt = 0;


                                    if ($z == 0) {
                                        if (strtoupper($loanNo) == "LOAN NO" && strtoupper($repayDate) == "REPAY DATE**" && strtoupper($begnBal) == "BEGINNING BALANCE**") {
                                            continue;
                                        } else {
                                            $arr_content['percent'] = 100;
                                            $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> Selected File is Invalid!";
                                            //.strtoupper($loanPrdtNo) ."|". strtoupper($processName) ."|". strtoupper($isEnbld1 == "IS ENABLED?");
                                            $arr_content['msgcount'] = $total;
                                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                                            break;
                                        }
                                    }
                                    /*
                                      if ($repayDate == "" || $begnBal == "" || $interestAmnt == "" || $prncplAmnt == "" || isPaid == "" || interestAmntPaid == "" || prncplAmntPaid == "" || $isDisbursed == "" || crdtType == "" || apprvdLoanTenor == "" || $sectorMinor == "" || prsnType == "" || relation == "" || startDate == "" || $bnkBranch == "") {
                                      continue;
                                      } */

                                    $dateStr = getDB_Date_time();
                                    if($disbmntDetID > 0){
                                        //CREATE SCHEDULE
                                        $affctd +=  execUpdtInsSQL("INSERT INTO mcf.mcf_loan_schedule(disbmnt_det_id, repay_date, begining_bal, interest_amnt,
                                                principal_amnt, ending_bal, is_paid, created_by, creation_date,
                                                last_update_by, last_update_date, interest_amnt_paid, principal_amnt_paid, shd_waive_interest)
                                        VALUES (" . $disbmntDetID . ",'" . $repayDate . "'," . $begnBal . ",round(" . $interestAmnt . ",2),round(" . $prncplAmnt . ",2)," . $endnBal . ",'$isPaid'," .
                                                $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "',$interestAmntPaid, $prncplAmntPaid, '$shdWaiveInterest')");


                                        //UPDATE DISBURSEMENTS
                                        $loanRqstId = (int)getGnrlRecID2("mcf.mcf_loan_request", "segment1_dataload", "loan_rqst_id", $loanNo);
                                        $apprvdTenor = (float)getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "apprvd_loan_tenor", $loanRqstId);
                                        $apprvdTenorType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "apprvd_loan_tenor_type", $loanRqstId);
                                        $apprvdTtlAmount = (float)getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $loanRqstId);
                                        $payBackPlan = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "segment2_dataload", $loanRqstId);
                                        $apprvdInterestRate = (float)getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "apprvd_interest_rate", $loanRqstId);
                                        $cmpndPrd= -1;

                                        $yearlyRepayments = 1;

                                        if ($payBackPlan == "daily") {
                                            $yearlyRepayments = 365.25;
                                        } else if ($payBackPlan == "Weekly") {
                                            $yearlyRepayments = 52;
                                        } else if ($payBackPlan == "BiWeekly") {
                                            $yearlyRepayments = 26;
                                        } else if ($payBackPlan == "BiMonthly") {
                                            $yearlyRepayments = 24;
                                        } else if ($payBackPlan == "Monthly") {
                                            $yearlyRepayments = 12;
                                        } else if ($payBackPlan == "Quarterly") {
                                            $yearlyRepayments = 4;
                                        } else if ($payBackPlan == "HalfYearly") {
                                            $yearlyRepayments = 2;
                                        } else {
                                            $yearlyRepayments = 1;
                                        }

                                        $loanTenorInYears = $apprvdTenor * (float) (1 / 12);

		                        $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                            . " SET scheduled_prdc_paymnt_amnt = ($interestAmnt+$prncplAmnt), "
                                            . " interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($apprvdTtlAmount, $apprvdInterestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                                            . " ttl_interest=$ttlInterest,"
                                            . " principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($loanRqstId, 'PRINCIPAL OUTSTANDING')),"
                                            . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($loanRqstId, 'INTEREST OUTSTANDING')),"
                                            . " ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($loanRqstId, 'TENURE OUTSTANDING')),"
                                            . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate',"
                                            . " last_update_by = $usrID, last_update_date = '$dateStr' WHERE disbmnt_det_id = $disbmntDetID");

                                        }

                                    }
                                $percent = round((($z + 1) / $total) * 100, 2);
                                $arr_content['percent'] = $percent;
                                if ($percent >= 100) {
                                    $arr_content['message'] = "<span style=\"color:green;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span> 100% Completed!..." . $affctd . " out of " . $total . " Loan Schedule(s) imported.";
                                    $arr_content['msgcount'] = $total;
                                } else {
                                    $arr_content['message'] = "<i class=\"fa fa-spin fa-spinner\"></i> Importing Loan Schedules...Please Wait..." . ($z + 1) . " out of " . $total . " Loan Schedule(s) imported.";
                                }
                                file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                            }

                        } else {
                            $percent = 100;
                            $arr_content['percent'] = $percent;
                            $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> 100% Completed...An Error Occured!<br/>$errMsg</span>";
                            $arr_content['msgcount'] = "";
                            file_put_contents($ftp_base_db_fldr . "/bin/log_files/$lgn_num" . "_prsnlcstmrimprt_progress.rho", json_encode($arr_content));
                        }
                    } else {
                        $orgid = $_SESSION['ORG_ID'];

                        $disbmntHdrID = isset($_POST['disbmntHdrID']) ? cleanInputData($_POST['disbmntHdrID']) : -1;
                        $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                        $description = isset($_POST['description']) ? cleanInputData($_POST['description']) : "";
                        $crncyID = isset($_POST['crncyID']) ? cleanInputData($_POST['crncyID']) : -1;

                        $dateStr = getDB_Date_time();

                        if ($bnkBranchID > 0 &&
                                $crncyID > 0 &&
                                $description != "") {


                            if ($disbmntHdrID <= 0) {
                                create_DisbursementHdr($dateStr, $description, $bnkBranchID, $crncyID, $dateStr);
                            } else {
                                update_DisbursementHdr($disbmntHdrID, $dateStr, $description, $bnkBranchID, $crncyID, $dateStr);
                            }

                            if ($disbmntHdrID <= 0) {
                                $disbmntHdrID = get_DisbursementHdrID($dateStr, $bnkBranchID, $usrID);

                                //get Status and batchNo
                                $batchNo = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "batch_no ", $disbmntHdrID);
                                $status = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "status ", $disbmntHdrID);
                                $disbmntDate = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "to_char(to_timestamp(disbmnt_date,'YYYY-MM-DD'),'DD-Mon-YYYY')", $disbmntHdrID);

                                //create_account in mcf_accounts and update loans_table with account_id
                                echo json_encode(array("disbmntHdrID" => $disbmntHdrID, "batchNo" => $batchNo, "status" => $status, "disbmntDate" => $disbmntDate));
                            } else {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Disbursement Header Successfully Saved!<br/></div>';
                            }
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Data Supplied is Incomplete!<br/></div>';
                            exit();
                        }
                    }
                }
                else if ($vwtyp == "1") {//SAVE APPROVED LOANS (AUTO-LOAD AND MANUALLY)
                    //var_dump($_FILES);
                    $orgid = $_SESSION['ORG_ID'];

                    $disbmntHdrID = isset($_POST['disbmntHdrID']) ? cleanInputData($_POST['disbmntHdrID']) : -1;
                    $disbmntDetId = isset($_POST['disbmntDetId']) ? cleanInputData($_POST['disbmntDetId']) : -1;
                    $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                    $custType = isset($_POST['custType']) ? cleanInputData($_POST['custType']) : "";
                    $custGrpID = isset($_POST['custGrpID']) ? cleanInputData($_POST['custGrpID']) : -1;
                    $crncyID = isset($_POST['crncyID']) ? cleanInputData($_POST['crncyID']) : -1;
                    $description = isset($_POST['description']) ? cleanInputData($_POST['description']) : "";

                    $loanRqstId = isset($_POST['loanRqstId']) ? cleanInputData($_POST['loanRqstId']) : -1;

                    $dateStr = getDB_Date_time();
                    $afftdRows = 0;

                    if ($bnkBranchID > 0 &&
                            $disbmntHdrID > 0 &&
                            $custType != "") {


                        if ($loanRqstId > 0) {



                            $rcdLnRqstCnt = 0;
                            $result5 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_disbursement_hdr a
                                WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = $loanRqstId AND b.disbmnt_hdr_id = $disbmntHdrID");

                            while ($row5 = loc_db_fetch_array($result5)) {
                                $rcdLnRqstCnt = $row5[0];
                            }

                            if ($rcdLnRqstCnt > 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry!! The selected Loan Request already exist for this disbursement!<br/></div>';
                                exit();
                            }

                            $afftdRows = save_DisbursementDet($disbmntHdrID, $loanRqstId, $dateStr);
                            $custId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cust_id", $loanRqstId);
                            $prdtId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstId);
                            $custType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cust_type", $loanRqstId);

                            $loanAcctId = getLoanRqstAcctID($loanRqstId);

                            $results3 = executeSQLNoParams("SELECT mcf.get_customer_name('" . $custType . "'," . $custId . ")");
                            $row3 = loc_db_fetch_array($results3);
                            $custNm = $row3[0];
                            $shdBeDoneCnt = 0;

                            /* if ($loanAcctId <= 0) {
                              if ($custType == "Group" || $custType == "Group Members") {
                              $loanAcctId = getCustLoanAccountNo("Individual", $custId, $prdtId, $bnkBranchID);
                              } else {
                              $loanAcctId = getCustLoanAccountNo($custType, $custId, $prdtId, $bnkBranchID);
                              }
                              } */

                            if ($loanAcctId > 0) {
                                $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                updateLoanRequestAccount($loanRqstId, $loanAcctId);
                                if ($shdBeDoneCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Create Initial Daily Account Balance!<br/></div>';
                                    exit();
                                }
                            } else {
                                $rowCnt = 0;
                                if ($custType == "Group" || $custType == "Group Members") {
                                    $grpApplicantType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "grp_applicant_type", $loanRqstId);

                                    $rowCnt = createCustAccount($orgid, $grpApplicantType, $custId, '', $custNm, 'Loan', $prdtId, '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                } else {
                                    $rowCnt = createCustAccount($orgid, $custType, $custId, '', $custNm, 'Loan', $prdtId, '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                }
                                if ($rowCnt > 0) {
                                    $loanAcctId = getLoanCustAcctID($dateStr, $orgid, $usrID, $custId, $prdtId);
                                    if ($loanAcctId > 0) {
                                        $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                        updateLoanRequestAccount($loanRqstId, $loanAcctId);
                                    } else {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Create Account for Loan Request!<br/></div>';
                                        exit();
                                    }

                                    if ($shdBeDoneCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Create Initial Daily Account Balance!<br/></div>';
                                        exit();
                                    }
                                }
                            }
                            //} //COMMENTED LINE ON 23112017
                        } else {
                            //CLEAR RECORDS FOR HDR
                            delete_DisbursementDetForHdr($disbmntHdrID);

                            $lnAccCnta = 0;
                            $faildLnAccCrtn = "";
                            $faildDlyAcctBal = "";
                            $shdBeDoneCnt = 0;
                            $loanAcctId = -1;
                            $grpMemberApplctnsExstCnt = 0;

                            //GET ALL APPROVED
                            $result = get_LoansToBeDisbursed($bnkBranchID, $custType, $custGrpID, $crncyID);
                            while ($row = loc_db_fetch_array($result)) {
                                $custType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cust_type", $row[0]);

                                if ($custType == "Group" || $custType == "Group Members") {
                                    $grpApplicantType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "grp_applicant_type", $row[0]);

                                    if($grpApplicantType == "Group"){
                                        $grpMemberApplctnsExstCnt = grpMemberApplctnExists($row[0]);
                                        if((int)$grpMemberApplctnsExstCnt <= 0){
                                            $afftdRows = $afftdRows + save_DisbursementDet($disbmntHdrID, $row[0], $dateStr);
                                            $loanAcctId = getLoanRqstAcctID($row[0]);
                                        }
                                    } else {
                                        $afftdRows = $afftdRows + save_DisbursementDet($disbmntHdrID, $row[0], $dateStr);
                                        $loanAcctId = getLoanRqstAcctID($row[0]);
                                    }
                                } else {
                                    $afftdRows = $afftdRows + save_DisbursementDet($disbmntHdrID, $row[0], $dateStr);
                                    $loanAcctId = getLoanRqstAcctID($row[0]);
                                }

                                if ($loanAcctId > 0) {
                                    $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                    updateLoanRequestAccount($row[0], $loanAcctId);
                                    if ($shdBeDoneCnt <= 0) {
                                        $lnAccCnta = (int) $lnAccCnta + 1;
                                        $lnTrnsId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $row[0]);

                                        $faildDlyAcctBal = $faildDlyAcctBal . ", " . $lnTrnsId;
                                    }
                                } else {
                                    $rowCnt = 0;
                                    if ($custType == "Group" || $custType == "Group Members") {
                                        $grpApplicantType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "grp_applicant_type", $row[0]);

                                        if($grpApplicantType == "Group"){
                                            $grpMemberApplctnsExstCnt = grpMemberApplctnExists($row[0]);
                                            if((int)$grpMemberApplctnsExstCnt <= 0){
                                                $rowCnt = createCustAccount($orgid, $grpApplicantType, $row[16], '', $row[1], 'Loan', $row[17], '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                            }
                                        } else {
                                            $rowCnt = createCustAccount($orgid, $grpApplicantType, $row[16], '', $row[1], 'Loan', $row[17], '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                        }
                                    } else {
                                        $rowCnt = createCustAccount($orgid, $custType, $row[16], '', $row[1], 'Loan', $row[17], '', '', -1, 'Loan Account', '', '', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', '', $dateStr);
                                    }
                                    if ($rowCnt > 0) {
                                        $loanAcctId = getLoanCustAcctID($dateStr, $orgid, $usrID, $row[16], $row[17]);
                                        if ($loanAcctId > 0) {
                                            $shdBeDoneCnt = createAccountTrnsBal($loanAcctId, $dateStr);
                                            updateLoanRequestAccount($row[0], $loanAcctId);
                                        } else {
                                            $lnAccCnta = (int) $lnAccCnta + 1;
                                            $lnTrnsId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $row[0]);

                                            $faildLnAccCrtn = $faildLnAccCrtn . ", " . $lnTrnsId;
                                        }

                                        if ($shdBeDoneCnt <= 0) {
                                            $lnAccCnta = (int) $lnAccCnta + 1;
                                            $lnTrnsId = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $row[0]);

                                            $faildDlyAcctBal = $faildDlyAcctBal . ", " . $lnTrnsId;
                                        }
                                    }
                                }
                                //}
                            }

                            if ($lnAccCnta > 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Create Loan Account(s) for:' . $faildLnAccCrtn
                                . '</br>Failed to Create Daily Account Balance for:' . $faildDlyAcctBal . ' </div>';
                                exit();
                            }
                        }


                        if ($afftdRows > 0) {

                            //UPDATE HEADER
                            update_DisbursementHdr($disbmntHdrID, $dateStr, $description, $bnkBranchID, $crncyID, $dateStr);

                            //GET LIST OF LOANS TO BE DISBURSED
                            $result2 = get_DisbursementDetLoans($disbmntHdrID);
                            $noOfRec = loc_db_num_rows($result2);
                            $disbDetArray = array();

                            for ($i = 0; $i < $noOfRec; $i++) {

                                $row = loc_db_fetch_array($result2);

                                $disbDetArray[$i] = array('loanRqstId' => $row[0], "customer" => $row[1], "custType" => $row[2],
                                    "trnsctnId" => $row[3], "approvedAmount" => $row[4],
                                    "tenorDisp" => $row[5], "interestRate" => $row[6], "loanType" => $row[23],
                                    "loanRqstId" => $row[8], "chargeInterest" => $row[9],
                                    "loanTenor" => $row[10], "loanTenorType" => $row[11], "loanRepaymentType" => $row[12],
                                    "compoundingPeriod" => $row[13], "gracePeriodNo" => $row[14],
                                    "gracePeriodType" => $row[15], "disbmntDetId" => $row[16]);
                            }

                            //create_account in mcf_accounts and update loans_table with account_id
                            echo json_encode(array("disbDetArray" => $disbDetArray));
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>There are no Approved Loans to be Disbursed!<br/></div>';
                        }
                        exit();
                    } else {
                        $rtrnRslt = "";
                        if ($custType === "") {
                            $rtrnRslt = "Please select Customer Type for AUTO-LOAD";
                        } else {
                            $rtrnRslt = "Please save Disbursement first";
                        }
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>' . $rtrnRslt . '</div>';
                        exit();
                    }
                }
                else if ($vwtyp == "2") {//DISBURSE
                    //GET LIST FROM Disbursement Detail Tbl AND DISBURSE
                    //GET LIST OF LOANS TO BE DISBURSED
                    //var_dump($_POST);
                    //exit();
                    $disbmntHdrID = isset($_POST['disbmntHdrID']) ? cleanInputData($_POST['disbmntHdrID']) : -1;
                    $optn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : 0;
                    $disbmntDetID = isset($_POST['disbmntDetID']) ? cleanInputData($_POST['disbmntDetID']) : -1;
                    $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                    $bnkBranchNm = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc||' ['||location_code_name||']'", $bnkBranchID);
                    $loanRqstID = -1;
                    $currencyID = (int) getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "crncy_id", $disbmntHdrID);
                    $currencyNm = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "iso_code", $currencyID);

                    $dateStr = getDB_Date_time();

                    if ($optn == "0") {//DISBURSE
                        if ($disbmntHdrID > 0 && $bnkBranchID > 0) {
                            //LOOP THROUGH AND CHECK STATUS OF EACH LOAN RQST
                            //IF ANY IS DISBURSED, DISPLAY ERROR MESSAGE TO BE FIXED BEFORE DISBURSING
                            $isDisbursedArray = ", ";
                            $isDsbdCnta = 0;
                            $resultSC = get_DisbursementDetLoans($disbmntHdrID);
                            while ($rowSC = loc_db_fetch_array($resultSC)) {
                                $isDsbd = $rowSC[36];
                                $trnstnIDSC = $rowSC[3];
                                if ($isDsbd == "YES") {
                                    $isDisbursedArray = $isDisbursedArray . ", " . $trnstnIDSC;
                                    $isDsbdCnta = $isDsbdCnta + 1;
                                }
                            }

                            if ($isDsbdCnta > 0) {
                                echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                                . 'The following Loans have already been Disbursed. Delete them before proceding:!<br/><b>' . trim($isDisbursedArray, ", ") . '</b></i></span></div>';
                                exit();
                            }

                            $dfltAcntID = getBranchPymntAcctForDsbmnt($bnkBranchID, $currencyID, "Loan");
                            $cnt = 0;
                            //IF ANY REQUEST REQUIRES MANUAL CASH PAYMENT, VALIDATE IF BRANCH ACCOUNT EXISTS FOR PAYMENT
                            $result5 = get_DisbursementDetLoans($disbmntHdrID);
                            while ($row5 = loc_db_fetch_array($result5)) {
                                if ($row5[30] === "Manual Payments") {
                                    $cnt = $cnt + 1;
                                }
                            }

                            if ($cnt > 0) {
                                if ($dfltAcntID <= 0) {
                                    echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                                    . $cnt . ' Loan Application(s) require Cash Payment</br> Please create an Account for Branch ' . $bnkBranchNm . ' and Currency ' . $currencyNm . '</i></span></div>';
                                    exit();
                                }
                            }

                            $result1 = get_DisbursementDetLoans($disbmntHdrID);
                            while ($row1 = loc_db_fetch_array($result1)) {
                                $loanRqstID = (int) $row1[0];
                                $ttlInterest = 0.00;
                                $initRsltCnt = initiate_Disbursement($row1[16], $row1[4], $row1[10], $row1[11], $row1[12], $row1[13], $row1[14], $row1[15], $row1[9], $row1[6], $dateStr, $disbmntHdrID, $row1[22], $row1[23], $row1[24], $ttlInterest);
                                if ($initRsltCnt > 0) {

                                    $mappedCrncyID = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);  //getGnrlRecID2("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);
                                    $docNum = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "batch_no", $row1[33]);

                                    $dsply = "";
                                    $rsltCnt = array();

				    $docType = "Paperless";
                                    $trnsType = "LOAN_DISB";
                                    $trnsTypeFull = "Loan Disbursement";
                                    $trnsHasOtherLines = "0";
                                    if ($row1[23] === "Overdraft") {
                                        $trnsType = "OVERDRAFT";
                                        $trnsTypeFull = "Overdraft Facility";
                                        $trnsHasOtherLines = "1";
                                    }
                                    $dte = date('ymdHis');
                                    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                    $docNum1 = $gnrtdTrnsNo;
                                    $dateStr = getDB_Date_time();
                                    $dbOrCrdt = "CR";
                                    $voidedTrnsID = -1;
                                    $voidedTrnsType = "";
                                    $rvrsldesc = "";
                                    $accntCurRate = 1;

                                    $acctstatus = "";
                                    $acctcustomer = "";
                                    $acctlien = 0;
                                    $mandate = "";
                                    $wtdrwllimitno = -1;
                                    $wtdrwllimitamt = 0;
                                    $wtdrwllimittype = "";

                                    $isSelf = "Self";

                                    //1. CREATE ACCOUNT_TRANSACTION FIRST
                                    $pAcctID = array($row1[34], $row1[31]);
                                    for ($i = 0; $i <= 1; $i++) {

                                        //$entrdCrncyID = getGnrlRecNm("mcf.mcf_currencies", "mapped_lov_crncy_id", "crncy_id", $row1[29]);


                                        $dte = date('ymdHis');
                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;


                                        if ((int) $pAcctID[$i] > 0) {
                                            if ($i == 0) {//LOAN ACCOUNT ID
                                                $acctstatus = "Authorized";
                                                $acctcustomer = $row1[1];
                                            } else {

                                                $acntRslt = get_OneCustAccntInfo($pAcctID[$i]);
                                                while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                                                    $acctstatus = $rowAcnt[10];
                                                    $acctcustomer = $rowAcnt[11];
                                                    $acctlien = (float) $rowAcnt[13];
                                                    $mandate = $rowAcnt[14];
                                                    $wtdrwllimitno = (int) $rowAcnt[15];
                                                    $wtdrwllimitamt = (float) $rowAcnt[16];
                                                    $wtdrwllimittype = $rowAcnt[17];
                                                }
                                            }

                                            $rsltCnt[$i] = createAccountTrns($pAcctID[$i], $dateStr, $docType, $docNum1, $trnsTypeFull, $dbOrCrdt, (float) $row1[4], $trnsType, (float) $row1[4], $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                        }
                                    }

                                    $shdActnBeDone = FALSE;
                                    $nwMsg = "";

                                    if ($row1[30] === "Account Deductions") {//REPAYMENT ACCOUNT BALANCE UPDATE
                                        $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                    } else {
                                        //GET DEFAULT DUMMY CUSTOMER ACCOUNT FOR MANUAL REPAYMENT CASH PAYMENTS FOR BRANCH
                                        $prsnBranchID = $bnkBranchID;
                                        $prsnBranch = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc", $prsnBranchID);

                                        //$dfltAcntID = getGnrlRecID("mcf.mcf_accounts", "account_title", "account_id", "Branch Loan Payments -".$prsnBranch, $orgID);
                                        $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $dfltAcntID, (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                        //$shdActnBeDone = TRUE;
                                    }

                                    //1. CREATE ACCOUNT_TRANSACTION FIRST
                                    if ($shdActnBeDone === TRUE) {
                                        $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[34], (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);

                                        if ($shdActnBeDone === TRUE) {
                                            $dsply .= "<span style=\"color:green;font-weight:bold;\">Customer Balance Updated<br/></span>";
                                            //$nwMsg = "";

                                            $shdActnBeDone = createMCFLoanDisbmntAccntng((int) $row1[16], (float) $row1[4], (float) $ttlInterest, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg);

                                            if ($shdActnBeDone === FALSE) {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Disbursement!</span>";
                                                echo $dsply;
                                                exit();
                                            } else {
                                                $dsply .= "<span style=\"color:green;font-weight:bold;\">Disbursement and Accounting Created Successfully<br/></span>";
                                                $dsply .= "<span style=\"color:green;font-weight:bold;font-size:16px;\">Approved Loans Successfully Disbursed<br>View and Save Schedules for all Loans<br/></span>";


                                                execUpdtInsSQL("UPDATE mcf.mcf_loan_request SET is_disbursed = 'YES', last_update_by=$usrID, last_update_date= '" . $dateStr . "' WHERE loan_rqst_id = $row1[0]");
                                            }
                                        } else {
                                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances!</span>";
                                            echo $dsply;
                                            exit();
                                        }
                                    } else {
                                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances1!</br>$nwMsg</span>";
                                        echo $dsply;
                                        exit();
                                    }
                                } else {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Initiate Disbursement!<br/></div>';
                                    exit();
                                }

                                //REPLICATE INTEREST AND FEES TRANSACTIONS
                                if (1 == 1) {
                                    $mappedCrncyID = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);  //getGnrlRecID2("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);
                                    $docNum = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "batch_no", $row1[33]);

                                    $dsply = "";
                                    $nwMsg = "";
                                    $rsltCnt = array();
                                    //1. CREATE ACCOUNT_TRANSACTION FIRST
                                    $pAcctID = array($row1[34], $row1[31]);
                                    for ($i = 0; $i <= 1; $i++) {
                                        $docType = "Paperless";
                                        $trnsType = "LOAN_DISB";
                                        $trnsTypeFull = "Loan Disbursement";
                                        $trnsHasOtherLines = "0";
                                        if ($row1[23] === "Overdraft") {
                                            $trnsType = "OVERDRAFT";
                                            $trnsTypeFull = "Overdraft Facility";
                                            $trnsHasOtherLines = "1";
                                        }
                                        $dte = date('ymdHis');
                                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                        $docNum1 = $gnrtdTrnsNo;
                                        $dateStr = getDB_Date_time();
                                        $dbOrCrdt = "CR";
                                        $voidedTrnsID = -1;
                                        $voidedTrnsType = "";
                                        $rvrsldesc = "";
                                        $accntCurRate = 1;

                                        $acctstatus = "";
                                        $acctcustomer = "";
                                        $acctlien = 0;
                                        $mandate = "";
                                        $wtdrwllimitno = -1;
                                        $wtdrwllimitamt = 0;
                                        $wtdrwllimittype = "";

                                        $isSelf = "Self";

                                        if ((int) $pAcctID[$i] > 0) {
                                            if ($i == 0) {//LOAN ACCOUNT ID
                                                $acctstatus = "Authorized";
                                                $acctcustomer = $row1[1];
                                            } else {

                                                $acntRslt = get_OneCustAccntInfo($pAcctID[$i]);
                                                while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                                                    $acctstatus = $rowAcnt[10];
                                                    $acctcustomer = $rowAcnt[11];
                                                    $acctlien = (float) $rowAcnt[13];
                                                    $mandate = $rowAcnt[14];
                                                    $wtdrwllimitno = (int) $rowAcnt[15];
                                                    $wtdrwllimitamt = (float) $rowAcnt[16];
                                                    $wtdrwllimittype = $rowAcnt[17];
                                                }
                                            }

                                            if ($i == 0) {//LOAN ACCOUNT
                                                if ((float) $ttlInterest > 0) {
                                                    $trnsType = "DEPOSIT";
                                                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                                    $recCnt = createAccountTrns($pAcctID[$i], $dateStr, $docType, $gnrtdTrnsNo, "Loan Deferred Interest", "CR", (float) $ttlInterest, $trnsType, (float) $ttlInterest, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);

                                                    if ($recCnt <= 0) {
                                                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Customer Loan Deferred Interest Account Transaction!</br>$nwMsg</span>";
                                                        echo $dsply;
                                                        exit();
                                                    }

                                                    //INCREASE DAILY BALANCE WITH TTL INTEREST updateMCFDisbmntCstmrAcntBals((int) $row1[34], (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                                    $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, "DEPOSIT")];
                                                    $dateStr11 = getFrmtdDB_Date_time();
                                                    $shdActnBeDone = updateCstmrAcntBalances((int) $row1[34], $ttlInterest, 0.00, 0.00, "DEPOSIT", "I", $docTypPrfx, $row1[16], $dateStr11, $nwMsg);

                                                    if ($shdActnBeDone === FALSE) {
                                                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Loan Account Balances with Interest!</br>$nwMsg</span>";
                                                        echo $dsply;
                                                        exit();
                                                    }
                                                }
                                            } else {//LOAN REPAYMENT ACCOUNT
                                                $loanPrdtID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstID);
                                                $resultLPF = get_One_MCFLoanPrcssnFees($loanPrdtID);
                                                while ($rowLPF = loc_db_fetch_array($resultLPF)) {
                                                    $feeName = $rowLPF[0];
                                                    $feeType = $rowLPF[1];
                                                    $feeFlat = (float) $rowLPF[2];
                                                    if ((float) $row1[4] < 0) {
                                                        $feeFlat = -1 * (float) $rowLPF[2];
                                                    }
                                                    $feePercent = (float) $rowLPF[3];
                                                    $ttlFees = $feeFlat + (($feePercent / 100) * (float) $row1[4]);

                                                    if ((float) $ttlFees > 0) {
                                                        $trnsType = "WITHDRAWAL";
                                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                                        $recCnt = createAccountTrns($pAcctID[$i], $dateStr, $docType, $gnrtdTrnsNo, "Funds Transfer - $feeName ($feeType)", "DR", (float) $ttlFees, $trnsType, (float) $ttlFees, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);

                                                        if ($recCnt <= 0) {
                                                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Processing Fees Account Transactions for Customer!</br>$nwMsg</span>";
                                                            echo $dsply;
                                                            exit();
                                                        }

                                                        if ($row1[30] === "Account Deductions" && (int) $row1[31] > 0) {//REPAYMENT ACCOUNT BALANCE UPDATE
                                                            $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                                                            $dateStr11 = getFrmtdDB_Date_time();
                                                            $shdActnBeDone = updateCstmrAcntBalances((int) $row1[31], $ttlFees, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx, $row1[16], $dateStr11, $nwMsg);

                                                            if ($shdActnBeDone === FALSE) {
                                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Account Balances with Loan Processing Fees!</br>$nwMsg</span>";
                                                                echo $dsply;
                                                                exit();
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                //END OF REPLICATE INTEREST AND FEES TRANSACTIONS


                                //08012018
                                $refLoanrqstID = (int) $row1[24];
                                $newLoanrqstID = (int) $row1[0];
                                $currTtlInterestBal = 0.00;
                                $currPrincipalAmountBal = 0.00;
                                if ($row1[22] === "Reschedule Request"){
                                    // LOAN request ID $row[0]
                                    //1. Reverse Loan Amount and create

                                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")] . "-" . $usrTrnsCode . "-" . date('ymdHis');
                                    $actRsltCnt = 0;
                                    if ((int) $row1[31] > 0) {
                                        $acntRslt1 = get_OneCustAccntInfo($row1[31]);
                                        while ($rowAcnt = loc_db_fetch_array($acntRslt1)) {
                                            $acctstatus = $rowAcnt[10];
                                            $acctcustomer = $rowAcnt[11];
                                            $acctlien = (float) $rowAcnt[13];
                                            $mandate = $rowAcnt[14];
                                            $wtdrwllimitno = (int) $rowAcnt[15];
                                            $wtdrwllimitamt = (float) $rowAcnt[16];
                                            $wtdrwllimittype = $rowAcnt[17];
                                        }

                                        //GET PRINCIPAL AND INTEREST BALANCE for reference LOAN
                                        $result = get_RefLoanRqstDetsForLoanApplctnRescheduled($refLoanrqstID);
                                        while ($row = loc_db_fetch_array($result)) {
                                            $currPrincipalAmountBal = (float) $row[1];
                                            $currTtlInterestBal = (float) $row[5];
                                        }

                                        $LoanRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $newLoanrqstID);
                                        $trnsTypeFull = "Reversal of Loan Principal Balance due to Reschedule Loan Request ".$LoanRqstNo;
                                        $actRsltCnt = createAccountTrns($row1[31], $dateStr, $docType, $docNum1, $trnsTypeFull, "DR", (float) $currPrincipalAmountBal, "WITHDRAWAL", (float) $currPrincipalAmountBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                    }

                                    if((int)$actRsltCnt > 0){
                                        $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], -1 * (float) $currPrincipalAmountBal, (int) $row1[16], $row1[23], $nwMsg, $refLoanrqstID);
                                        if ($shdActnBeDone === TRUE) {

                                            $shdActnBeDone = createMCFLoanDisbmntAccntngTopUpReschedule((int) $row1[16], -1 * (float) $currPrincipalAmountBal, -1 * (float) $currTtlInterestBal, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg, $row1[22]);

                                            if ($shdActnBeDone === FALSE) {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Re-Scheduled Reversal Disbursement!</span>";
                                                echo $dsply;
                                                exit();
                                            }
                                        } else {
                                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances -  Re-schedule Reversal!</span>";
                                            echo $dsply;
                                            exit();
                                        }
                                    }

                                } else if ($row1[22] === "Top-Up Request"){
                                    //GET Reference Loan Request ID $ttlInterest
                                    //$netTtlInterestBal = 0.00;

                                    //$currTtlInterestBal = 0.00;
                                    //$currPrincipalAmountBal = 0.00;
                                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")] . "-" . $usrTrnsCode . "-" . date('ymdHis');

                                    if ((int) $row1[31] > 0) {
                                        $acntRslt2 = get_OneCustAccntInfo($row1[31]);
                                        while ($rowAcnt = loc_db_fetch_array($acntRslt2)) {
                                            $acctstatus = $rowAcnt[10];
                                            $acctcustomer = $rowAcnt[11];
                                            $acctlien = (float) $rowAcnt[13];
                                            $mandate = $rowAcnt[14];
                                            $wtdrwllimitno = (int) $rowAcnt[15];
                                            $wtdrwllimitamt = (float) $rowAcnt[16];
                                            $wtdrwllimittype = $rowAcnt[17];
                                        }

                                        //GET PRINCIPAL AND INTEREST BALANCE for reference LOAN
                                        $result = get_RefLoanRqstDetsForLoanApplctnTopUp($refLoanrqstID);
                                        while ($row = loc_db_fetch_array($result)) {
                                            $currPrincipalAmountBal = (float) $row[1];
                                            $currTtlInterestBal = (float) $row[5];
                                        }

                                        $LoanRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $newLoanrqstID);
                                        $trnsTypeFull = "Reversal of Loan Principal Balance due to Top-Up Loan Request ".$LoanRqstNo;
                                        $actRsltCnt = createAccountTrns($row1[31], $dateStr, $docType, $docNum1, $trnsTypeFull, "DR", (float) $currPrincipalAmountBal, "WITHDRAWAL", (float) $currPrincipalAmountBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                    }

                                    if((int)$actRsltCnt > 0){

                                        $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], -1 * (float) $currPrincipalAmountBal, (int) $row1[16], $row1[23], $nwMsg, $refLoanrqstID);
                                        if ($shdActnBeDone === TRUE) {
                                            $shdActnBeDone = createMCFLoanDisbmntAccntngTopUpReschedule((int) $row1[16], -1 * (float) $currPrincipalAmountBal, -1 * (float) $currTtlInterestBal, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg, $row1[22]);

                                            if ($shdActnBeDone === FALSE) {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Re-Scheduled Reversal Disbursement!</span>";
                                                echo $dsply;
                                                exit();
                                            }
                                        } else {
                                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances -  Re-schedule Reversal!</span>";
                                            echo $dsply;
                                            exit();
                                        }
                                    }

                                }

                            }

                            execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_hdr SET status = 'Disbursed' WHERE disbmnt_hdr_id = $disbmntHdrID");

                            $result2 = get_DisbursementDetLoans($disbmntHdrID);
                            $noOfRec = loc_db_num_rows($result2);
                            $disbDetArray = array();

                            for ($i = 0; $i < $noOfRec; $i++) {

                                $row = loc_db_fetch_array($result2);

                                $ttlLoanTermTimes = calculate_TtlLoanTermTimes($row[10], $row[11], $row[12]);
                                $approvedAmount = $row[4];

                                //UPDATE DISBURSEMENT DETAILS WITH TTL TENOR BAL
                                execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET ttl_tenor_bal = $ttlLoanTermTimes WHERE disbmnt_det_id = $row[16]");

                                if ($row[22] === "Top-Up Request") {
                                    $result4 = get_RefLoanRqstDetsForLoanApplctn($row[24]);
                                    while ($row4 = loc_db_fetch_array($result4)) {
                                        $currPrincipalAmountBal = (float) $row4[1];
                                        $approvedAmount = (float) $approvedAmount + $currPrincipalAmountBal;
                                    }
                                }

                                $disbDetArray[$i] = array('loanRqstId' => $row[0], "customer" => $row[1], "custType" => $row[2],
                                    "trnsctnId" => $row[3], "approvedAmount" => $row[4],
                                    "tenorDisp" => $row[5], "interestRate" => $row[6], "loanType" => $row[23],
                                    "loanRqstId" => $row[8], "chargeInterest" => $row[9],
                                    "loanTenor" => $row[10], "loanTenorType" => $row[11], "loanRepaymentType" => $row[12],
                                    "compoundingPeriod" => $row[13], "gracePeriodNo" => $row[14],
                                    "gracePeriodType" => $row[15], "disbmntDetId" => $row[16],
                                    "interestRatePerPeriod" => $row[17], "ttlLoanTermTimes" => $ttlLoanTermTimes,
                                    "scheduledPrdcPaymntAmnt" => $row[18], "repayStartDate" => $row[19],
                                    "repayEndDate" => $row[20], "interestRateType" => $row[21],
                                    "applctnType" => $row[22], "crdtType" => $row[23], "refLoanrqstID" => $row[24],
                                    "newPrincipalBal" => $approvedAmount);


                                //SAVE SCHEDULE
                                $ttlLoanTermTimes = calculate_TtlLoanTermTimes($row[10], $row[11], $row[12]);

                                loadAmortizationSchedule($approvedAmount, $row[17], $ttlLoanTermTimes, $row[18], $row[12], $row[19], $row[16], $row[21],
                                        $row[23], $row[13],$row[33]);

                            }

                            echo json_encode(array("disbDetArray" => $disbDetArray, "finMsg" => $dsply));
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Save Disbursement Header First!<br/></div>';
                            exit();
                        }
                    } else {//VOID DISBURSEMENT
                        if ($disbmntHdrID > 0 && $bnkBranchID > 0) {

                            $msgDsply = "";
                            $dsply = "";
                            $disbDetArray = array();
                            $disbmntHdrIDNew = -1;
                            $crdtTypeNm = "Loan";

                            $shdBeDone = true; //

                            if ($shdBeDone) {

                                $dfltAcntID = getBranchPymntAcctForDsbmnt($bnkBranchID, $currencyID, "Loan");
                                $cnt = 0;
                                //IF ANY REQUEST REQUIRES MANUAL CASH PAYMENT, VALIDATE IF BRANCH ACCOUNT EXISTS FOR PAYMENT
                                $result5 = get_DisbursementDetLoans($disbmntHdrID);
                                while ($row5 = loc_db_fetch_array($result5)) {
                                    if ($row5[30] === "Manual Payments") {
                                        $cnt = $cnt + 1;
                                    }
                                }

                                if ($cnt > 0) {
                                    if ($dfltAcntID <= 0) {
                                        echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                                        . 'Cash Payment Account for Branch ' . $bnkBranchNm . ' and Currency ' . $currencyNm . ' is required for ' . $cnt . ' disbursed loan(s)</i></span></div>';
                                        exit();
                                    }
                                }

                                $result1 = get_DisbursementDetLoansForRvsl($disbmntHdrID, $dateStr, $dsply, $disbmntHdrIDNew);

                                while ($row1 = loc_db_fetch_array($result1)) {
                                    $loanRqstID = (int) $row1[0];
                                    $ttlInterest = (float) $row1[35];
                                    $initRsltCnt = 1;
                                    if ($initRsltCnt > 0) {

                                        $mappedCrncyID = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);  //getGnrlRecID2("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);
                                        $docNum = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "batch_no", $row1[33]);

					    $docType = "Paperless";
                                            $trnsType = "LOAN_DISB";
                                            $trnsTypeFull = "Loan Disbursement";
                                            $trnsHasOtherLines = "0";
                                            if ($row1[23] === "Overdraft") {
                                                $trnsType = "OVERDRAFT";
                                                $trnsTypeFull = "Overdraft Facility";
                                                $trnsHasOtherLines = "1";
                                            }

                                            $dte = date('ymdHis');
                                            $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                                            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                            $docNum1 = $gnrtdTrnsNo;
                                            $dateStr = getDB_Date_time();
                                            $dbOrCrdt = "CR";
                                            $voidedTrnsID = -1;
                                            $voidedTrnsType = "";
                                            $rvrsldesc = "";
                                            $accntCurRate = 1;

                                            $acctstatus = "";
                                            $acctcustomer = "";
                                            $acctlien = 0;
                                            $mandate = "";
                                            $wtdrwllimitno = -1;
                                            $wtdrwllimitamt = 0;
                                            $wtdrwllimittype = "";

                                            $isSelf = "Self";

                                        $rsltCnt = array();
                                        //1. CREATE ACCOUNT_TRANSACTION FIRST
                                        $pAcctID = array($row1[34], $row1[31]);
                                        for ($i = 0; $i <= 1; $i++) {

                                            //$entrdCrncyID = getGnrlRecNm("mcf.mcf_currencies", "mapped_lov_crncy_id", "crncy_id", $row1[29]);

                                            $dte = date('ymdHis');
                                            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;

                                            if ((int) $pAcctID[$i] > 0) {
                                                if ($i == 0) {//LOAN ACCOUNT ID
                                                    $acctstatus = "Authorized";
                                                    $acctcustomer = $row1[1];
                                                } else {

                                                    $acntRslt = get_OneCustAccntInfo($pAcctID[$i]);
                                                    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                                                        $acctstatus = $rowAcnt[10];
                                                        $acctcustomer = $rowAcnt[11];
                                                        $acctlien = (float) $rowAcnt[13];
                                                        $mandate = $rowAcnt[14];
                                                        $wtdrwllimitno = (int) $rowAcnt[15];
                                                        $wtdrwllimitamt = (float) $rowAcnt[16];
                                                        $wtdrwllimittype = $rowAcnt[17];
                                                    }
                                                }

                                                $rsltCnt[$i] = createAccountTrns($pAcctID[$i], $dateStr, $docType, $docNum1, $trnsTypeFull . " - Reversal", $dbOrCrdt, -1 * (float) $row1[4], $trnsType, -1 * (float) $row1[4], $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                            }
                                        }

                                        $shdActnBeDone = FALSE;
                                        $nwMsg = "";

                                        if ($row1[30] === "Account Deductions") {//REPAYMENT ACCOUNT BALANCE UPDATE
                                            $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], -1 * (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                        } else {
                                            //GET DEFAULT DUMMY CUSTOMER ACCOUNT FOR MANUAL REPAYMENT CASH PAYMENTS FOR BRANCH
                                            $prsnBranchID = $bnkBranchID;
                                            $prsnBranch = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc", $prsnBranchID);

                                            //$dfltAcntID = getGnrlRecID("mcf.mcf_accounts", "account_title", "account_id", "Branch Loan Payments -".$prsnBranch, $orgID);
                                            $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $dfltAcntID, -1 * (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                            //$shdActnBeDone = TRUE;
                                        }

                                        //1. CREATE ACCOUNT_TRANSACTION FIRST
                                        if ($shdActnBeDone === TRUE) {
                                            $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[34], -1 * (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);

                                            if ($shdActnBeDone === TRUE) {
                                                $dsply .= "<span style=\"color:green;font-weight:bold;\">Customer Balance Update Reversed<br/></span>";
                                                //$nwMsg = "";

                                                $shdActnBeDone = createMCFLoanDisbmntAccntng((int) $row1[16], -1 * (float) $row1[4], (float) $ttlInterest, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg);

                                                if ($shdActnBeDone === FALSE) {
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Reversal Accounting for Disbursement Reversal!</span>";
                                                    echo $dsply;
                                                    exit();
                                                } else {
                                                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Reversal Accounting Created Successfully<br/></span>";

                                                    //execUpdtInsSQL("UPDATE mcf.mcf_loan_request SET is_disbursed = 'YES', last_update_by=$usrID, last_update_date= '" . $dateStr . "' WHERE loan_rqst_id = $row1[0]");
                                                }
                                            } else {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Reverse Customer Account Balances for Disbursement Reversal!</span>";
                                                echo $dsply;
                                                exit();
                                            }
                                        } else {
                                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Reverse Customer Account Balances!</br>$nwMsg</span>";
                                            echo $dsply;
                                            exit();
                                        }
                                    } else {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Reverse Disbursement!<br/></div>';
                                        exit();
                                    }

                                    //REVERSE REPLICATE INTEREST AND FEES TRANSACTIONS
                                    if (1 == 1) {
                                        $mappedCrncyID = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);  //getGnrlRecID2("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $row1[29]);
                                        $docNum = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "batch_no", $row1[33]);

                                        $dsply = "";
                                        $nwMsg = "";
                                        $rsltCnt = array();
                                        //1. CREATE ACCOUNT_TRANSACTION FIRST
                                        $pAcctID = array($row1[34], $row1[31]);
                                        for ($i = 0; $i <= 1; $i++) {
                                            $docType = "Paperless";
                                            $trnsType = "LOAN_DISB";
                                            $trnsTypeFull = "Loan Disbursement";
                                            $trnsHasOtherLines = "0";
                                            if ($row1[23] === "Overdraft") {
                                                $trnsType = "OVERDRAFT";
                                                $trnsTypeFull = "Overdraft Facility";
                                                $trnsHasOtherLines = "1";
                                            }
                                            $dte = date('ymdHis');
                                            $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                                            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                            $docNum1 = $gnrtdTrnsNo;
                                            $dateStr = getDB_Date_time();
                                            $dbOrCrdt = "CR";
                                            $voidedTrnsID = -1;
                                            $voidedTrnsType = "";
                                            $rvrsldesc = "";
                                            $accntCurRate = 1;

                                            $acctstatus = "";
                                            $acctcustomer = "";
                                            $acctlien = 0;
                                            $mandate = "";
                                            $wtdrwllimitno = -1;
                                            $wtdrwllimitamt = 0;
                                            $wtdrwllimittype = "";

                                            $isSelf = "Self";

                                            if ((int) $pAcctID[$i] > 0) {
                                                if ($i == 0) {//LOAN ACCOUNT ID
                                                    $acctstatus = "Authorized";
                                                    $acctcustomer = $row1[1];
                                                } else {

                                                    $acntRslt = get_OneCustAccntInfo($pAcctID[$i]);
                                                    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                                                        $acctstatus = $rowAcnt[10];
                                                        $acctcustomer = $rowAcnt[11];
                                                        $acctlien = (float) $rowAcnt[13];
                                                        $mandate = $rowAcnt[14];
                                                        $wtdrwllimitno = (int) $rowAcnt[15];
                                                        $wtdrwllimitamt = (float) $rowAcnt[16];
                                                        $wtdrwllimittype = $rowAcnt[17];
                                                    }
                                                }

                                                if ($i == 0) {//LOAN ACCOUNT
                                                    //if((float) $ttlInterest > 0){
                                                    $trnsType = "DEPOSIT";
                                                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                                    $recCnt = createAccountTrns($pAcctID[$i], $dateStr, $docType, $gnrtdTrnsNo, "Loan Deferred Interest", "CR", (float) $ttlInterest, $trnsType, (float) $ttlInterest, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);

                                                    if ($recCnt <= 0) {
                                                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Customer Loan Deferred Interest Account Transaction - REVERSAL!</br>$nwMsg</span>";
                                                        echo $dsply;
                                                        exit();
                                                    }

                                                    //INCREASE DAILY BALANCE WITH TTL INTEREST updateMCFDisbmntCstmrAcntBals((int) $row1[34], (float) $row1[4], (int) $row1[16], $row1[23], $nwMsg, $loanRqstID);
                                                    $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, "DEPOSIT")];
                                                    $dateStr11 = getFrmtdDB_Date_time();
                                                    $shdActnBeDone = updateCstmrAcntBalances((int) $row1[34], $ttlInterest, 0.00, 0.00, "DEPOSIT", "I", $docTypPrfx, $row1[16], $dateStr11, $nwMsg);

                                                    if ($shdActnBeDone === FALSE) {
                                                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Loan Account Balances with Interest - REVERSAL!</br>$nwMsg</span>";
                                                        echo $dsply;
                                                        exit();
                                                    }

                                                    //}
                                                } else {//LOAN REPAYMENT ACCOUNT
                                                    $loanPrdtID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstID);
                                                    $resultLPF = get_One_MCFLoanPrcssnFees($loanPrdtID);
                                                    while ($rowLPF = loc_db_fetch_array($resultLPF)) {
                                                        $feeName = $rowLPF[0];
                                                        $feeType = $rowLPF[1];
                                                        $feeFlat = (float) $rowLPF[2];
                                                        if ((float) $row1[4] < 0) {
                                                            $feeFlat = -1 * (float) $rowLPF[2];
                                                        }
                                                        $feePercent = (float) $rowLPF[3];
                                                        $ttlFees = $feeFlat + (($feePercent / 100) * (float) $row1[4]);

                                                        if ((float) $ttlFees > 0) {
                                                            $trnsType = "WITHDRAWAL";
                                                            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                                                            $recCnt = createAccountTrns($pAcctID[$i], $dateStr, $docType, $gnrtdTrnsNo, "Funds Transfer - $feeName ($feeType)  - Reversal", "DR", -1 * (float) $ttlFees, $trnsType, -1 * (float) $ttlFees, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);

                                                            if ($recCnt <= 0) {
                                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Processing Fees Account Transactions for Customer - REVERSAK!</br>$nwMsg</span>";
                                                                echo $dsply;
                                                                exit();
                                                            }

                                                            if ($row1[30] === "Account Deductions" && (int) $row1[31] > 0) {//REPAYMENT ACCOUNT BALANCE UPDATE
                                                                $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                                                                $dateStr11 = getFrmtdDB_Date_time();
                                                                $shdActnBeDone = updateCstmrAcntBalances((int) $row1[31], -1 * $ttlFees, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx, $row1[16], $dateStr11, $nwMsg);

                                                                if ($shdActnBeDone === FALSE) {
                                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Account Balances with Loan Processing Fees - REVERSAL!</br>$nwMsg</span>";
                                                                    echo $dsply;
                                                                    exit();
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //END OF REPLICATE INTEREST AND FEES TRANSACTIONS

				    $refLoanrqstID = (int) $row1[24];
                                    $newLoanrqstID = (int) $row1[0];
                                    $currTtlInterestBal = 0.00;
                                    $currPrincipalAmountBal = 0.00;
                                    if ($row1[22] === "Reschedule Request"){
                                        // LOAN request ID $row[0]
                                        //1. Reverse Loan Amount and create

                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")] . "-" . $usrTrnsCode . "-" . date('ymdHis');
                                        $actRsltCnt = 0;
                                        if ((int) $row1[31] > 0) {
                                            $acntRslt1 = get_OneCustAccntInfo($row1[31]);
                                            while ($rowAcnt = loc_db_fetch_array($acntRslt1)) {
                                                $acctstatus = $rowAcnt[10];
                                                $acctcustomer = $rowAcnt[11];
                                                $acctlien = (float) $rowAcnt[13];
                                                $mandate = $rowAcnt[14];
                                                $wtdrwllimitno = (int) $rowAcnt[15];
                                                $wtdrwllimitamt = (float) $rowAcnt[16];
                                                $wtdrwllimittype = $rowAcnt[17];
                                            }

                                            //GET INTEREST BALANCE for reference LOAN
                                            $result = get_RefLoanRqstDetsForLoanApplctnRescheduled($refLoanrqstID);
                                            while ($row = loc_db_fetch_array($result)) {
                                                $currPrincipalAmountBal = (float) $row[1];
                                                $currTtlInterestBal = (float) $row[5];
                                            }

                                            $LoanRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $newLoanrqstID);
                                            $trnsTypeFull = "Restoration of Loan Principal Balance due to Reschedule Loan Request Void Disbursement ".$LoanRqstNo;
                                            $actRsltCnt = createAccountTrns($row1[31], $dateStr, $docType, $docNum1, $trnsTypeFull, "DR", -1 * (float) $currPrincipalAmountBal, "WITHDRAWAL", (float) $currPrincipalAmountBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                        }

                                        if((int)$actRsltCnt > 0){
                                            $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], (float) $currPrincipalAmountBal, (int) $row1[16], $row1[23], $nwMsg, $refLoanrqstID);
                                            if ($shdActnBeDone === TRUE) {

                                                $shdActnBeDone = createMCFLoanDisbmntAccntngTopUpReschedule((int) $row1[16], (float) $currPrincipalAmountBal, (float) $currTtlInterestBal, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg, $row1[22]);

                                                if ($shdActnBeDone === FALSE) {
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Re-Scheduled Reversal Disbursement!</span>";
                                                    echo $dsply;
                                                    exit();
                                                }
                                            } else {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances -  Re-schedule Reversal!</span>";
                                                echo $dsply;
                                                exit();
                                            }
                                        }

                                    } else if ($row1[22] === "Top-Up Request"){
                                        //GET Reference Loan Request ID $ttlInterest
                                        //$netTtlInterestBal = 0.00;

                                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")] . "-" . $usrTrnsCode . "-" . date('ymdHis');

                                        if ((int) $row1[31] > 0) {
                                            $acntRslt2 = get_OneCustAccntInfo($row1[31]);
                                            while ($rowAcnt = loc_db_fetch_array($acntRslt2)) {
                                                $acctstatus = $rowAcnt[10];
                                                $acctcustomer = $rowAcnt[11];
                                                $acctlien = (float) $rowAcnt[13];
                                                $mandate = $rowAcnt[14];
                                                $wtdrwllimitno = (int) $rowAcnt[15];
                                                $wtdrwllimitamt = (float) $rowAcnt[16];
                                                $wtdrwllimittype = $rowAcnt[17];
                                            }

                                            //GET INTEREST BALANCE for reference LOAN
                                            $result = get_RefLoanRqstDetsForLoanApplctnTopUp($refLoanrqstID);
                                            while ($row = loc_db_fetch_array($result)) {
                                                $currPrincipalAmountBal = (float) $row[1];
                                                $currTtlInterestBal = (float) $row[5];
                                            }

                                            $LoanRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $newLoanrqstID);
                                            $trnsTypeFull = "Restoration of Loan Principal Balance due to Top-Up Loan Request Void Disbursment ".$LoanRqstNo;
                                            $actRsltCnt = createAccountTrns($row1[31], $dateStr, $docType, $docNum1, $trnsTypeFull, "DR", -1 * (float) $currPrincipalAmountBal, "WITHDRAWAL", (float) $currPrincipalAmountBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Paid", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $row1[29], $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
                                        }

                                        if((int)$actRsltCnt > 0){

                                            $shdActnBeDone = updateMCFDisbmntCstmrAcntBals((int) $row1[31], (float) $currPrincipalAmountBal, (int) $row1[16], $row1[23], $nwMsg, $refLoanrqstID);
                                            if ($shdActnBeDone === TRUE) {

                                                $shdActnBeDone = createMCFLoanDisbmntAccntngTopUpReschedule((int) $row1[16], (float) $currPrincipalAmountBal, (float) $currTtlInterestBal, $row1[30], (int) $row1[31], (int) $row1[25], (int) $row1[28], (int) $row1[26], (int) $row1[27], (int) $mappedCrncyID, (int) $row1[16], $docNum, $row1[1], $row1[3], (int) $row1[32], $row1[23], $nwMsg, $row1[22]);

                                                if ($shdActnBeDone === FALSE) {
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Re-Scheduled Reversal Disbursement!</span>";
                                                    echo $dsply;
                                                    exit();
                                                }
                                            } else {
                                                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Customer Account Balances -  Re-schedule Reversal!</span>";
                                                echo $dsply;
                                                exit();
                                            }
                                        }

                                    }


                                }

                                if ($disbmntHdrIDNew > 0) {
                                    $shdBeDone = reverse_Disbursement($disbmntHdrID, $dateStr, $msgDsply, $disbmntHdrIDNew);
                                    $dsply .= $msgDsply;

                                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Disbursement and Accounting Reversal Successfully<br/></span>";
                                    if ($shdBeDone) {
                                        $result2 = get_DisbursementDetLoans($disbmntHdrID);
                                        $noOfRec = loc_db_num_rows($result2);

                                        for ($i = 0; $i < $noOfRec; $i++) {
                                            $row = loc_db_fetch_array($result2);

                                            $ttlLoanTermTimes = calculate_TtlLoanTermTimes($row[10], $row[11], $row[12]);
                                            $approvedAmount = $row[4];

                                            //UPDATE DISBURSEMENT DETAILS WITH TTL TENOR BAL
                                            execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET ttl_tenor_bal = $ttlLoanTermTimes WHERE disbmnt_det_id = $row[16]");

                                            if ($row[22] === "Top-Up Request") {
                                                $result4 = get_RefLoanRqstDetsForLoanApplctn($row[24]);
                                                while ($row4 = loc_db_fetch_array($result4)) {
                                                    $currPrincipalAmountBal = (float) $row4[1];
                                                    $approvedAmount = (float) $approvedAmount + $currPrincipalAmountBal;
                                                }
                                            }

                                            $disbDetArray[$i] = array('loanRqstId' => $row[0], "customer" => $row[1], "custType" => $row[2],
                                                "trnsctnId" => $row[3], "approvedAmount" => -1 * (float) $row[4],
                                                "tenorDisp" => $row[5], "interestRate" => $row[6], "loanType" => $row[23],
                                                "loanRqstId" => $row[8], "chargeInterest" => $row[9],
                                                "loanTenor" => $row[10], "loanTenorType" => $row[11], "loanRepaymentType" => $row[12],
                                                "compoundingPeriod" => $row[13], "gracePeriodNo" => $row[14],
                                                "gracePeriodType" => $row[15], "disbmntDetId" => $row[16],
                                                "interestRatePerPeriod" => $row[17], "ttlLoanTermTimes" => $ttlLoanTermTimes,
                                                "scheduledPrdcPaymntAmnt" => $row[18], "repayStartDate" => $row[19],
                                                "repayEndDate" => $row[20], "interestRateType" => $row[21],
                                                "applctnType" => $row[22], "crdtType" => $row[23], "refLoanrqstID" => $row[24],
                                                "newPrincipalBal" => $approvedAmount);
                                        }
                                    }
                                } else {
                                    echo $dsply;
                                    exit();
                                }
                            }

                            echo json_encode(array("disbDetArray" => $disbDetArray, "finMsg" => $dsply));
                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Save Disbursement Header First!<br/></div>';
                            exit();
                        }
                    }
                }
                else if ($vwtyp == "3") {// SAVE LOAN SCHEDULE
                    //header("content-type:application/json");
                    //var_dump($_POST);
                    $orgid = $_SESSION['ORG_ID'];
                    $disbmntDetId = isset($_POST['disbmntDetId']) ? cleanInputData($_POST['disbmntDetId']) : -1;
                    $loanSchedule = isset($_POST['loanSchedule']) ? cleanInputData($_POST['loanSchedule']) : '';
                    $scheduleEndDte = isset($_POST['scheduleEndDte']) ? cleanInputData($_POST['scheduleEndDte']) : '';
                    if ($scheduleEndDte != "") {
                        $scheduleEndDte = cnvrtDMYToYMD($scheduleEndDte);
                    }

                    $dateStr = getDB_Date_time();

                    if (1 == 1) {

                        delete_LoanSchedule($disbmntDetId);

                        $affctdAns = 0;
                        $rcds = 0;
                        if (trim($loanSchedule, "|~") != "") {
                            //Save Question Answers
                            $variousRows = explode("|", trim($loanSchedule, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $rcds = $rcds + 1;
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 5) {
                                    $pDate = cleanInputData($crntRow[0]);
                                    $begBal = (float) (cleanInputData($crntRow[1]));
                                    $intrst = (float) (cleanInputData($crntRow[2]));
                                    $prncpl = (float) (cleanInputData($crntRow[3]));
                                    $endnBal = (float) (cleanInputData($crntRow[4]));

                                    save_LoanSchedule($disbmntDetId, $pDate, $begBal, $intrst, $prncpl, $endnBal, $dateStr);
                                }
                            }

                            if ($rcds > 0) {
                                execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET repay_end_date = '" . cnvrtDMYToYMD($pDate) . "'
                                     WHERE disbmnt_det_id = $disbmntDetId");
                            }
                        }

                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Loan Schedule Successfully Saved!<br/></div>';

                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                } else if ($vwtyp == "5") {//DISBURSEMENT DETAILS - DELETE
                    //var_dump($_POST);
                    $srcType = isset($_POST['srcType']) ? cleanInputData($_POST['srcType']) : "";
                    $guarantorID = isset($_POST['guarantorID']) ? cleanInputData($_POST['guarantorID']) : -1;
                    $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;
                    $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;

                    $dateStr = getDB_Date_time();

                    if ($guarantorID > 0) {
                        if ($rowID <= 0) {
                            createLoanGuarantor($srcType, $guarantorID, $loanRqstID, $dateStr);
                        } else {
                            updateLoanGuarantor($srcType, $guarantorID, $dateStr, $rowID);
                        }

                        if ($rowID <= 0) {
                            $rowID = getLoanGuarantorID($dateStr, $usrID, $loanRqstID);

                            $localIDNo = getLoanGuarantorLocalIDNo($srcType, $guarantorID);

                            echo json_encode(array("rowID" => $rowID, "localIDNo" => $localIDNo));
                        } else {
                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Loan Guarantor Successfully Saved!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo === "4.3") {//LOAN REPAYMENT
                if ($vwtyp == "0") {//DEPOSIT
                    //var_dump($_POST);
                    //header("content-type:application/json");
                    $orgid = $_SESSION['ORG_ID'];
                    $acctTrnsId = $PKeyID;
                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                    $docType = isset($_POST['docType']) ? cleanInputData($_POST['docType']) : '';
                    $docNum = isset($_POST['docNum']) ? cleanInputData($_POST['docNum']) : '';
                    $mcfPymtCrncyNm = isset($_POST['mcfPymtCrncyNm']) ? cleanInputData($_POST['mcfPymtCrncyNm']) : '';
                    $mcfPymtCrncyID = getPssblValID($mcfPymtCrncyNm, getLovID("Currencies"));
                    $entrdCrncyID = getGnrlRecNm("mcf.mcf_currencies", "mapped_lov_crncy_id", "crncy_id", $mcfPymtCrncyID);
                    $trnsAmntCash = isset($_POST['trnsAmnt']) ? cleanInputData($_POST['trnsAmnt']) : 0.00;
                    $ttlDocAmntVal = isset($_POST['ttlDocAmntVal']) ? cleanInputData($_POST['ttlDocAmntVal']) : 0.00;
                    $acctSignatories = isset($_POST['acctSignatories']) ? cleanInputData($_POST['acctSignatories']) : '';
                    $slctdTrnsChqLines = isset($_POST['slctdTrnsChqLines']) ? cleanInputData($_POST['slctdTrnsChqLines']) : '';
                    $trnsType = 'LOAN_REPAY';
                    $trnsDesc = isset($_POST['trnsDesc']) ? cleanInputData($_POST['trnsDesc']) : '';
                    $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;
                    $isSelf = isset($_POST['isSelf']) ? cleanInputData($_POST['isSelf']) : '';
                    $trnsPersonName = isset($_POST['trnsPersonName']) ? cleanInputData($_POST['trnsPersonName']) : '';
                    $trnsPersonTelNo = isset($_POST['trnsPersonTelNo']) ? cleanInputData($_POST['trnsPersonTelNo']) : '';
                    $trnsPersonAddress = isset($_POST['trnsPersonAddress']) ? cleanInputData($_POST['trnsPersonAddress']) : '';
                    $trnsPersonIDType = isset($_POST['trnsPersonIDType']) ? cleanInputData($_POST['trnsPersonIDType']) : '';
                    $trnsPersonIDNumber = isset($_POST['trnsPersonIDNumber']) ? cleanInputData($_POST['trnsPersonIDNumber']) : '';
                    $loanRepayType = isset($_POST['loanRepayType']) ? cleanInputData($_POST['loanRepayType']) : 'REPAYMENT';

                    $loanRpmntSrcAmnt = isset($_POST['loanRpmntSrcAmnt']) ? cleanInputData($_POST['loanRpmntSrcAmnt']) : 0.00;
                    if ($loanRpmntSrcAmnt == "") {
                        $loanRpmntSrcAmnt = (float) $loanRpmntSrcAmnt;
                    }
                    $loanRpmntSrcAcctID = isset($_POST['loanRpmntSrcAcctID']) ? cleanInputData($_POST['loanRpmntSrcAcctID']) : -1;

                    if ($trnsAmntCash == "") {
                        $trnsAmntCash = 0.00;
                    }
                    $dte = date('ymdHis');
                    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                    $dateStr = getDB_Date_time();
                    $dbOrCrdt = "CR";
                    $voidedTrnsID = -1;
                    $voidedTrnsType = "";
                    $rvrsldesc = "";
                    $accntCurRate = 1;

                    $acctstatus = "";
                    $acctcustomer = "";
                    $acctlien = 0;
                    $mandate = "";
                    $wtdrwllimitno = -1;
                    $wtdrwllimitamt = 0;
                    $wtdrwllimittype = "";
                    $trns_has_other_lines = "1";
                    if ($acctID > 0) {
                        $acntRslt = get_OneCustAccntInfo($acctID);
                        if ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }
                    }
                    if ($docType != "Paperless" && trim($docNum) == "") {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                    if ($docType == "Voucher Slip" && trim($docNum) == "") {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please enter document number for the Voucher Slip!<br/></div>';
                        exit();
                    }
                    if ($isSelf != "Self" && ($trnsPersonName == "" || $trnsPersonTelNo == "" || $trnsPersonIDType == "" || $trnsPersonIDNumber == "")) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                    if ((int) $loanRpmntSrcAcctID <= 0 && (float) $loanRpmntSrcAmnt > 0) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Select Cash Account Number for Loan ' . $loanRepayType . '!<br/></div>';
                        exit();
                    }
                    if ((int) $loanRpmntSrcAcctID > 0 && (trim($loanRpmntSrcAmnt) == "" || (float) $loanRpmntSrcAmnt <= 0)) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Enter non-zero ' . $loanRepayType . ' Amount!<br/></div>';
                        exit();
                    }
                    if ($docType == "Paperless") {
                        $docNum = $gnrtdTrnsNo;
                    }
                    if ($acctID != -1 && $acctstatus != "Suspended" && $entrdCrncyID > 0) {
                        if ($acctTrnsId <= 0) {
                            //CREATE
                            $rsltCnt = createAccountTrns_Loans($acctID, $dateStr, $docType, $docNum, $trnsDesc, $dbOrCrdt, $ttlDocAmntVal, $trnsType, $trnsAmntCash, $isSelf, $trnsPersonName, $trnsPersonTelNo, $trnsPersonAddress, $trnsPersonIDType, $trnsPersonIDNumber, $gnrtdTrnsNo, "Not Submitted", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, $entrdCrncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trns_has_other_lines, -1, -1, "", -1, -1, -1, $loanRepayType, $loanRpmntSrcAcctID, $loanRpmntSrcAmnt);
                            if ($rsltCnt > 0) {
                                $acctTrnsId = getAccountTrnsID($acctID, $dateStr, $orgid, $usrID);
                            }
                        } else {
                            //UPDATE
                            updateAccountTrns_Loans($acctID, $dateStr, $docType, $docNum, $trnsDesc, $dbOrCrdt, $ttlDocAmntVal, $acctTrnsId, $trnsAmntCash, $isSelf, $trnsPersonName, $trnsPersonTelNo, $trnsPersonAddress, $trnsPersonIDType, $trnsPersonIDNumber, "Not Submitted", $rvrsldesc, $entrdCrncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $gnrtdTrnsNo, -1, -1, "", -1, -1, -1, $loanRepayType, $loanRpmntSrcAcctID, $loanRpmntSrcAmnt);
                        }
                        $affctdAns = 0;
                        if (trim($slctdTrnsChqLines, "|~") != "") {
                            $delSQL3 = "DELETE from mcf.mcf_cust_account_trns_cheques WHERE acct_trns_id = $acctTrnsId";
                            execUpdtInsSQL($delSQL3);

                            $variousRows = explode("|", trim($slctdTrnsChqLines, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                //var_dump("Count ".count($crntRow));
                                //var_dump("bnkID ".cleanInputData1($crntRow[1]));
                                if (count($crntRow) == 10) {
                                    $TrnsLnID = (int) (cleanInputData1($crntRow[0]));
                                    $chqType = cleanInputData1($crntRow[1]);
                                    $chqTypeID = getPssblValID(cleanInputData1($crntRow[1]), getLovID("MCF Deposit Cheque Types"));
                                    $bnkID = (int) (cleanInputData1($crntRow[2]));
                                    $brnchID = (int) (cleanInputData1($crntRow[3]));
                                    $chqNo = cleanInputData1($crntRow[4]);
                                    $chqDte = cleanInputData1($crntRow[5]);
                                    $chqVal = cleanInputData1($crntRow[6]);
                                    $chqValDte = cleanInputData1($crntRow[7]);
                                    $chqCurNm = cleanInputData1($crntRow[8]);
                                    $chqCurID = getPssblValID($chqCurNm, getLovID("Currencies"));
                                    $chqCrncyID = getGnrlRecNm("mcf.mcf_currencies", "mapped_lov_crncy_id", "crncy_id", $chqCurID);
                                    $acntCurRate = (float) cleanInputData1($crntRow[9]);
                                    $chqSrcAcntID = -1;
                                    if ($chqValDte != "") {
                                        $chqValDte = cnvrtDMYToYMD($chqValDte);
                                    }
                                    if ($chqDte != "") {
                                        $chqDte = cnvrtDMYToYMD($chqDte);
                                    }
                                    createAccountTrnsChqs($acctTrnsId, $chqTypeID, $bnkID, $brnchID, $chqNo, $chqDte, $chqVal, $chqValDte, $dateStr, $chqType, $chqCrncyID, $acntCurRate, $chqSrcAcntID);
                                }
                            }
                            $chqTotal = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount*accnt_crncy_rate)", $acctTrnsId);
                            $chqTotal1 = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount)", $acctTrnsId);
                            $cashTotal = (float) getGnrlRecNm("mcf.mcf_account_trns_cash_analysis", "acct_trns_id", "SUM(unit_value*qty*accnt_crncy_rate)", $acctTrnsId);
                            $cashTotal1 = (float) getGnrlRecNm("mcf.mcf_account_trns_cash_analysis", "acct_trns_id", "SUM(unit_value*qty)", $acctTrnsId);

                            $loanRpmntSrcAmntTtl = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "SUM(loan_rpmnt_src_amount)", $acctTrnsId);

                            execUpdtInsSQL("UPDATE mcf.mcf_cust_account_transactions "
                                    . "SET amount=" . ($chqTotal + $cashTotal + $loanRpmntSrcAmntTtl) .
                                    ", amount_cash=" . $cashTotal1 .
                                    ", entered_crncy_id=" . $entrdCrncyID .
                                    ", accnt_crncy_rate= " . round(($chqTotal + $cashTotal) / ($chqTotal1 + $cashTotal1), 4) .
                                    " WHERE acct_trns_id=" . $acctTrnsId);
                        }
                        $errMsg = "";
                        if ($shdSbmt > 0 && $acctTrnsId > 0) {

                            $dspMsg1 = "";
                            if (isMCFTrnsCstmrAcntAmtVld_LoayRpmnt_AcctDdctn($acctTrnsId, $dspMsg1) === false) {
                                $errMsg .= "<span style=\"color:red;font-weight:bold;\">Error Occured!<br/>$dspMsg1</span><br/>";
                                echo $errMsg;
                                exit();
                            } else {
                                if (isMCFTrnsQtyVld_LoanRpmnt($acctTrnsId) && isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($acctTrnsId)) {
                                    $srcDocID = $acctTrnsId;
                                    $srcDocType = "Loan Transactions";
                                    $routingID = -1;
                                    $inptSlctdRtngs = "";
                                    $actionToPrfrm = "Initiate";
                                    $errMsg .= "" . mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                                } else {
                                    $errMsg .= "<span style=\"color:red;font-weight:bold;\">Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account! 4.3</span><br/>";
                                }
                            }
                        }

                        $response = array('acctTrnsId' => $acctTrnsId,
                            'sbmtMsg' => $errMsg);
                        echo json_encode($response);
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                } else if ($vwtyp == "2") {// CASH BREAKDOWN
                    //header("content-type:application/json");
                    $orgid = $_SESSION['ORG_ID'];
                    $acctTrnsId = $PKeyID;

                    //var_dump($_POST);

                    $cashBrkdwns = isset($_POST['cashBrkdwns']) ? cleanInputData($_POST['cashBrkdwns']) : '';
                    $bnkPymtDfltVltID = isset($_POST['bnkPymtDfltVltID']) ? (int) cleanInputData($_POST['bnkPymtDfltVltID']) : -1;
                    $bnkPymtDfltCageID = isset($_POST['bnkPymtDfltCageID']) ? (int) cleanInputData($_POST['bnkPymtDfltCageID']) : -1;
                    $bnkPymtDfltItemState = isset($_POST['bnkPymtDfltItemState']) ? cleanInputData($_POST['bnkPymtDfltItemState']) : 'Issuable';
                    $bnkPymtAstAcntID = (int) getGnrlRecNm("inv.inv_shelf", "line_id", "inv_asset_acct_id", $bnkPymtDfltCageID);
                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $bnkPymtAstAcntID);
                    $cashAmountTtl = 0;
                    $cashAmountTtl1 = 0;
                    $dateStr = getDB_Date_time();
                    $crncyID = -1;
                    $mapdCrncyID = -1;
                    if (1 == 1) {
                        $affctdAns = 0;
                        if (trim($cashBrkdwns, "|~") != "") {
                            //Save Question Answers
                            $variousRows = explode("|", trim($cashBrkdwns, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 6) {
                                    $currDenomID = (int) (cleanInputData1($crntRow[0]));
                                    if ($z == 0) {
                                        $crncyID = (int) getGnrlRecNm("mcf.mcf_currency_denominations", "crncy_denom_id", "crncy_id", $currDenomID);
                                        $mapdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $crncyID);
                                    }
                                    $lnTrnsType = (cleanInputData1($crntRow[5]));
                                    $cashBrkdwnQty = (int) (cleanInputData1($crntRow[1]));

                                    if ($lnTrnsType == "Refund") {
                                        $cashBrkdwnQty = -1 * (int) (cleanInputData1($crntRow[1]));
                                    }
                                    $cashBrkdwnUnitValue = (float) (cleanInputData1($crntRow[2]));
                                    $trnsCashAnalysisID = (int) (cleanInputData1($crntRow[3]));
                                    $trnsCashRate = (float) (cleanInputData1($crntRow[4]));

                                    updateCashBreakdown($trnsCashAnalysisID, $cashBrkdwnQty, $dateStr, $trnsCashRate, $bnkPymtDfltVltID, $bnkPymtDfltCageID, $bnkPymtDfltItemState);
                                    $cashAmountTtl = $cashAmountTtl + ($cashBrkdwnQty * $cashBrkdwnUnitValue * $trnsCashRate);
                                    $cashAmountTtl1 = $cashAmountTtl1 + ($cashBrkdwnQty * $cashBrkdwnUnitValue);
                                }
                            }
                        }

                        //var_dump($mapdCrncyID." acctCrncyID ".$acctCrncyID);
                        if ($mapdCrncyID == $acctCrncyID) {
                            $chqTotal = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount*accnt_crncy_rate)", $acctTrnsId);
                            $chqTotal1 = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount)", $acctTrnsId);

                            $loanRpmntSrcAmntTtl = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "SUM(loan_rpmnt_src_amount)", $acctTrnsId);

                            execUpdtInsSQL("UPDATE mcf.mcf_cust_account_transactions "
                                    . "SET amount=" . ($chqTotal + $cashAmountTtl + $loanRpmntSrcAmntTtl) .
                                    ", amount_cash=" . $cashAmountTtl1 .
                                    ", entered_crncy_id=" . $crncyID .
                                    ", accnt_crncy_rate= " . round(($chqTotal + $cashAmountTtl) / (($chqTotal1 + $cashAmountTtl1) == 0 ? 1 : ($chqTotal1 + $cashAmountTtl1)), 4) .
                                    " WHERE acct_trns_id=" . $acctTrnsId);

                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;"/>Cash Breakdown Successfully Saved!<br/></div>';

                            exit();
                        } else {
                            execUpdtInsSQL("DELETE FROM mcf.mcf_account_trns_cash_analysis WHERE acct_trns_id=" . $acctTrnsId);
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Selected Currencies don\'t match your Till!<br/></div>';
                            exit();
                        }
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                }
            } else if ($subPgNo == 4.4) {

            } else if ($subPgNo === "4.5") {
                if ($vwtyp == "0") {//CASH LOAN PAYMENTS
                    //var_dump($_POST);
                    //header("content-type:application/json");
                    $orgid = $_SESSION['ORG_ID'];
                    $acctTrnsId = $PKeyID;

                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                    $docType = isset($_POST['docType']) ? cleanInputData($_POST['docType']) : '';
                    $docNum = isset($_POST['docNum']) ? cleanInputData($_POST['docNum']) : '';
                    $mcfPymtCrncyNm = isset($_POST['mcfPymtCrncyNm']) ? cleanInputData($_POST['mcfPymtCrncyNm']) : '';
                    $mcfPymtCrncyID = getPssblValID($mcfPymtCrncyNm, getLovID("Currencies"));
                    $entrdCrncyID = getGnrlRecNm("mcf.mcf_currencies", "mapped_lov_crncy_id", "crncy_id", $mcfPymtCrncyID);
                    $trnsAmntCash = isset($_POST['trnsAmnt']) ? cleanInputData($_POST['trnsAmnt']) : 0.00;
                    $ttlDocAmntVal = isset($_POST['ttlDocAmntVal']) ? cleanInputData($_POST['ttlDocAmntVal']) : 0.00;
                    $acctSignatories = isset($_POST['acctSignatories']) ? cleanInputData($_POST['acctSignatories']) : '';
                    $trnsType = 'LOAN_PYMNT';
                    $trnsDesc = isset($_POST['trnsDesc']) ? cleanInputData($_POST['trnsDesc']) : '';
                    $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;
                    $isSelf = isset($_POST['isSelf']) ? cleanInputData($_POST['isSelf']) : '';
                    $trnsPersonName = isset($_POST['trnsPersonName']) ? cleanInputData($_POST['trnsPersonName']) : '';
                    $trnsPersonTelNo = isset($_POST['trnsPersonTelNo']) ? cleanInputData($_POST['trnsPersonTelNo']) : '';
                    $trnsPersonAddress = isset($_POST['trnsPersonAddress']) ? cleanInputData($_POST['trnsPersonAddress']) : '';
                    $trnsPersonIDType = isset($_POST['trnsPersonIDType']) ? cleanInputData($_POST['trnsPersonIDType']) : '';
                    $trnsPersonIDNumber = isset($_POST['trnsPersonIDNumber']) ? cleanInputData($_POST['trnsPersonIDNumber']) : '';
                    $disbmntHdrID = isset($_POST['disbmntHdrID']) ? cleanInputData($_POST['disbmntHdrID']) : -1;
                    $disbmntDetID = isset($_POST['disbmntDetID']) ? cleanInputData($_POST['disbmntDetID']) : -1;
                    $appvdLoanAmnt = (float) getGnrlRecNm("mcf.mcf_loan_disbursement_det", "disbmnt_det_id", "principal_amount", $disbmntDetID);

                    $loanRqstID = (int) getGnrlRecNm("mcf.mcf_loan_disbursement_det", "disbmnt_det_id", "loan_rqst_id", $disbmntDetID);
                    $custType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cust_type", $loanRqstID);
                    $isLoanPaid = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "has_been_paid", $loanRqstID);
                    $pymntDate = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "to_char(to_timestamp(pymnt_date,'YYYYMMDD'),'DD-Mon-YYYY')", $loanRqstID);

                    $cashTotal1 = (float) getGnrlRecNm("mcf.mcf_account_trns_cash_analysis", "acct_trns_id", "SUM(unit_value*qty)", $acctTrnsId);


                    if ($trnsAmntCash == "") {
                        $trnsAmntCash = 0.00;
                    }
                    $dte = date('ymdHis');
                    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-" . $dte;
                    $dateStr = getDB_Date_time();
                    $dbOrCrdt = "DR";
                    $voidedTrnsID = -1;
                    $voidedTrnsType = "";
                    $rvrsldesc = "";
                    $accntCurRate = 1;

                    $acctstatus = "";
                    $acctcustomer = "";
                    $acctlien = 0;
                    $mandate = "";
                    $wtdrwllimitno = -1;
                    $wtdrwllimitamt = 0;
                    $wtdrwllimittype = "";
                    $trns_has_other_lines = '1';
                    if ($acctID > 0) {
                        $acntRslt = get_OneCustAccntInfo($acctID);
                        if ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = "Only to sign";
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }
                    }
                    if ($docType != "Paperless" && trim($docNum) == "") {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                    if ($isSelf != "Self" && ($trnsPersonName == "" || $trnsPersonTelNo == "" || $trnsPersonIDType == "" || $trnsPersonIDNumber == "")) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                    if ((float) $cashTotal1 != (float) $trnsAmntCash) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . '<span style="font-family: georgia, times;font-size: 12px;font-style:italic;' .
                        'font-weight:bold;color:red;">Provide Cash Breakdown for total Payment Amount of ' . $mcfPymtCrncyNm . number_format($appvdLoanAmnt, 2) . '!</span><br/></div>';
                        exit();
                    }
                    if ((float) $appvdLoanAmnt != (float) $trnsAmntCash) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . '<span style="font-family: georgia, times;font-size: 14px;font-style:italic;' .
                        'font-weight:bold;color:red;">Payment Amount must be exactly ' . $mcfPymtCrncyNm . number_format($appvdLoanAmnt, 2) . '!</span><br/></div>';
                        exit();
                    }
                    if ((float) $disbmntDetID > 0 && $isLoanPaid === "Yes") {
                        echo '<div><span style="font-family: georgia, times;font-size: 14px;font-style:italic;' .
                        'font-weight:bold;color:red;">Sorry!!! Loan Amount has already been Paid to Applicant on ' . $pymntDate . '!</span><br/></div>';
                        exit();
                    }
                    if ($docType == "Paperless") {
                        $docNum = $gnrtdTrnsNo;
                    }
                    if ($acctID != -1 && $mandate != "" && $acctstatus != "Suspended" && $entrdCrncyID > 0) {
                        if ($acctTrnsId <= 0) {//CREATE
                            $rsltCnt = createAccountTrns($acctID, $dateStr, $docType, $docNum, $trnsDesc, $dbOrCrdt, $ttlDocAmntVal, $trnsType, $trnsAmntCash, $isSelf, $trnsPersonName, $trnsPersonTelNo, $trnsPersonAddress, $trnsPersonIDType, $trnsPersonIDNumber, $gnrtdTrnsNo, "Not Submitted", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, $entrdCrncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trns_has_other_lines, $disbmntHdrID, $disbmntDetID);
                            if ($rsltCnt > 0) {
                                $acctTrnsId = getAccountTrnsID($acctID, $dateStr, $orgid, $usrID);
                            }
                        } else {//UPDATE
                            updateAccountTrns($acctID, $dateStr, $docType, $docNum, $trnsDesc, $dbOrCrdt, $ttlDocAmntVal, $acctTrnsId, $trnsAmntCash, $isSelf, $trnsPersonName, $trnsPersonTelNo, $trnsPersonAddress, $trnsPersonIDType, $trnsPersonIDNumber, "Not Submitted", $rvrsldesc, $entrdCrncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $gnrtdTrnsNo, $disbmntHdrID, $disbmntDetID);
                        }

                        $affctdAns = 0;
                        if (trim($acctSignatories, "|~") != "") {
                            $delSQL3 = "DELETE from mcf.mcf_account_trns_signatories WHERE acct_trns_id = $acctTrnsId";
                            execUpdtInsSQL($delSQL3);

                            $variousRows = explode("|", trim($acctSignatories, "|"));

                            if (count($variousRows) <= 0 && $custType == "Individual") {
                                echo '<div><span style="font-family: georgia, times;font-size: 14px;font-style:italic;' .
                                'font-weight:bold;color:red;">Sorry!!! Mandate for Loan Payment cannot be empty!</span><br/></div>';
                                exit();
                            }

                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 1) {
                                    $acctSignID = (int) (cleanInputData($crntRow[0]));

                                    createAccountTrnsSignatories($acctTrnsId, $acctSignID, $dateStr);
                                }
                            }
                        } else {
                            if ($custType == "Individual") {
                                echo '<div><span style="font-family: georgia, times;font-size: 14px;font-style:italic;' .
                                'font-weight:bold;color:red;">Sorry!!! Mandate for Loan Payment cannot be empty!</span><br/></div>';
                                exit();
                            }
                        }
                        $chqTotal = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount*accnt_crncy_rate)", $acctTrnsId);
                        $chqTotal1 = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount)", $acctTrnsId);
                        $cashTotal = (float) getGnrlRecNm("mcf.mcf_account_trns_cash_analysis", "acct_trns_id", "SUM(unit_value*qty*accnt_crncy_rate)", $acctTrnsId);
                        //$cashTotal1 = (float) getGnrlRecNm("mcf.mcf_account_trns_cash_analysis", "acct_trns_id", "SUM(unit_value*qty)", $acctTrnsId);
                        execUpdtInsSQL("UPDATE mcf.mcf_cust_account_transactions "
                                . "SET amount=" . ($chqTotal + $cashTotal) .
                                ", amount_cash=" . $cashTotal1 .
                                ", entered_crncy_id=" . $entrdCrncyID .
                                ", accnt_crncy_rate= " . round(($chqTotal + $cashTotal) / ($chqTotal1 + $cashTotal1), 4) .
                                " WHERE acct_trns_id=" . $acctTrnsId);

                        $errMsg = "";
                        if ($shdSbmt > 0 && $acctTrnsId > 0) {
                            if (isMCFTrnsQtyVld($acctTrnsId, $errMsg) && isMCFTrnsCstmrAcntAmtVld($acctTrnsId)) {
                                $srcDocID = $acctTrnsId;
                                $srcDocType = "Banking Transactions";
                                $routingID = -1;
                                $inptSlctdRtngs = "";
                                $actionToPrfrm = "Initiate";
                                $errMsg .= "" . mcfTrnsReqMsgActns($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                            } else {
                                $errMsg .= "<span style=\"color:red;font-weight:bold;\">Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account!</span><br/>";

                                //REVERSE IS_PAID for mcf_loan_request
                            }
                        }
                        $response = array('acctTrnsId' => $acctTrnsId,
                            'sbmtMsg' => $errMsg);
                        echo json_encode($response);
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                } else if ($vwtyp == "1") {// MAIN PARAMETERS DATA
                } else if ($vwtyp == "2") {// CASH BREAKDOWN
                    $orgid = $_SESSION['ORG_ID'];
                    $acctTrnsId = $PKeyID;

                    $cashBrkdwns = isset($_POST['cashBrkdwns']) ? cleanInputData($_POST['cashBrkdwns']) : '';
                    $bnkPymtDfltVltID = isset($_POST['bnkPymtDfltVltID']) ? (int) cleanInputData($_POST['bnkPymtDfltVltID']) : -1;
                    $bnkPymtDfltCageID = isset($_POST['bnkPymtDfltCageID']) ? (int) cleanInputData($_POST['bnkPymtDfltCageID']) : -1;
                    $bnkPymtDfltItemState = isset($_POST['bnkPymtDfltItemState']) ? cleanInputData($_POST['bnkPymtDfltItemState']) : 'Issuable';
                    $bnkPymtAstAcntID = (int) getGnrlRecNm("inv.inv_shelf", "line_id", "inv_asset_acct_id", $bnkPymtDfltCageID);
                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $bnkPymtAstAcntID);
                    $cashAmountTtl = 0;
                    $cashAmountTtl1 = 0;
                    $dateStr = getDB_Date_time();
                    $crncyID = -1;
                    $mapdCrncyID = -1;
                    if (1 == 1) {
                        $affctdAns = 0;
                        if (trim($cashBrkdwns, "|~") != "") {
                            //Save Question Answers
                            $variousRows = explode("|", trim($cashBrkdwns, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 5) {
                                    $currDenomID = (int) (cleanInputData1($crntRow[0]));
                                    if ($z == 0) {
                                        $crncyID = (int) getGnrlRecNm("mcf.mcf_currency_denominations", "crncy_denom_id", "crncy_id", $currDenomID);
                                        $mapdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $crncyID);
                                    }
                                    $cashBrkdwnQty = (int) (cleanInputData1($crntRow[1]));
                                    $cashBrkdwnUnitValue = (float) (cleanInputData1($crntRow[2]));
                                    $trnsCashAnalysisID = (int) (cleanInputData1($crntRow[3]));
                                    $trnsCashRate = (float) (cleanInputData1($crntRow[4]));
                                    updateCashBreakdown($trnsCashAnalysisID, $cashBrkdwnQty, $dateStr, $trnsCashRate, $bnkPymtDfltVltID, $bnkPymtDfltCageID, $bnkPymtDfltItemState);
                                    $cashAmountTtl = $cashAmountTtl + ($cashBrkdwnQty * $cashBrkdwnUnitValue * $trnsCashRate);
                                    $cashAmountTtl1 = $cashAmountTtl1 + ($cashBrkdwnQty * $cashBrkdwnUnitValue);
                                }
                            }
                        }
                        if ($mapdCrncyID == $acctCrncyID) {
                            $chqTotal = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount*accnt_crncy_rate)", $acctTrnsId);
                            $chqTotal1 = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "acct_trns_id", "SUM(amount)", $acctTrnsId);

                            execUpdtInsSQL("UPDATE mcf.mcf_cust_account_transactions "
                                    . "SET amount=" . ($chqTotal + $cashAmountTtl) .
                                    ", amount_cash=" . $cashAmountTtl1 .
                                    ", entered_crncy_id=" . $crncyID .
                                    ", accnt_crncy_rate= " . round(($chqTotal + $cashAmountTtl) / (($chqTotal1 + $cashAmountTtl1) == 0 ? 1 : ($chqTotal1 + $cashAmountTtl1)), 4) .
                                    " WHERE acct_trns_id=" . $acctTrnsId);

                            echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                            . 'width:18px;height:18px;">Cash Breakdown Successfully Saved!<br/></div>';
                            exit();
                        } else {
                            execUpdtInsSQL("DELETE FROM mcf.mcf_account_trns_cash_analysis WHERE acct_trns_id=" . $acctTrnsId);
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Selected Currencies don\'t match your Till!<br/></div>';
                            exit();
                        }
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Data Supplied is Incomplete!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 4.6) {
                if ($subVwtyp == 2) {//RISK FACTOR
                    //var_dump($_POST);
                    $riskFactorDesc = isset($_POST['riskFactorDesc']) ? cleanInputData($_POST['riskFactorDesc']) : '';
                    $riskFactorCode = isset($_POST['riskFactorCode']) ? cleanInputData($_POST['riskFactorCode']) : '';
                    $riskFactorId = isset($_POST['riskFactorId']) ? cleanInputData($_POST['riskFactorId']) : -1;
                    $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'No';

                    $dateStr = getDB_Date_time();

                    if ($riskFactorCode != "") {
                        if ($riskFactorId <= 0) {
                            $rsltExts = doesRiskFactorCodeExistsSave($riskFactorCode);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Risk Factor already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = createCreditRiskFactors($riskFactorCode, $riskFactorDesc, $isEnabled, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Risk Profile!<br/></div>';
                                exit();
                            }
                        } else {
                            $rsltExts = doesRiskFactorCodeExistsUpdate($riskFactorId, $riskFactorCode);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Update Failed! Risk Factor already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = updateCreditRiskFactors($riskFactorId, $riskFactorCode, $riskFactorDesc, $isEnabled, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Risk Profile!<br/></div>';
                                exit();
                            }
                        }

                        if ($riskFactorId <= 0) {
                            $riskFactorId = getCreditRiskFactorID($dateStr, $usrID, $riskFactorCode);
                        }
                        echo json_encode(array("riskFactorId" => $riskFactorId));

                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please provide Risk Factor!<br/></div>';
                        exit();
                    }
                }
                if ($subVwtyp == 3) {//RISK PROFILE
                    //var_dump($_POST);
                    if ($actyp == 1) {
                        //PROFILE FACTORS
                        $sbmtdRiskProfileID = isset($_POST['sbmtdRiskProfileID']) ? cleanInputData($_POST['sbmtdRiskProfileID']) : -1;
                        $slctdRiskProfileFctrs = isset($_POST['slctdRiskProfileFctrs']) ? cleanInputData($_POST['slctdRiskProfileFctrs']) : '';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;

                        if (trim($slctdRiskProfileFctrs, "|~") != "") {
                            //$delSQL3 = "DELETE from mcf.mcf_credit_risk_profile_factors WHERE risk_profile_id = $sbmtdRiskProfileID";
                            //execUpdtInsSQL($delSQL3);

                            $variousRows = explode("|", trim($slctdRiskProfileFctrs, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 4) {
                                    $profileFactorId = (int) (cleanInputData1($crntRow[0]));
                                    $riskFactorId = (int) cleanInputData1($crntRow[1]);
                                    $score = (float) cleanInputData1($crntRow[2]);
                                    $sortOrder = (float) cleanInputData1($crntRow[3]);

                                    if ($profileFactorId > 0) {
                                        $recCntUpdt = $recCntUpdt + updateCreditRiskProfileFactors($profileFactorId, $sbmtdRiskProfileID, $riskFactorId, $sortOrder, $score, $dateStr);
                                    } else {
                                        $recCntInst = $recCntInst + createCreditRiskProfileFactors($sbmtdRiskProfileID, $riskFactorId, $sortOrder, $score, $dateStr);
                                    }

                                    $updtSQL3 = "UPDATE mcf.mcf_credit_risk_profiles SET last_update_by = $usrID, last_update_date = '$dateStr'"
                                            . " WHERE risk_profile_id = $sbmtdRiskProfileID";
                                    execUpdtInsSQL($updtSQL3);
                                }
                            }

                            $updtSQL4 = "UPDATE mcf.mcf_credit_risk_profiles SET validity = 'Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE risk_profile_id = $sbmtdRiskProfileID";
                            $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                            echo "<span style='color:green;font-weight:bold !important;'><i>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</i></span>";
                            exit();
                            //echo json_encode(array("riskProfileId" => $riskProfileId, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                            //exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide one Risk Profile Factor Record before saving!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == 2) {
                        //PROFILE FACTOR-OPTIONS
                        $sbmtdRiskProfileFctrID = isset($_POST['sbmtdRiskProfileFctrID']) ? cleanInputData($_POST['sbmtdRiskProfileFctrID']) : -1;
                        $riskProfileID = isset($_POST['riskProfileID']) ? cleanInputData($_POST['riskProfileID']) : -1;
                        $slctdRiskProfileFctrOptns = isset($_POST['slctdRiskProfileFctrOptns']) ? cleanInputData($_POST['slctdRiskProfileFctrOptns']) : '';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;
                        if (trim($slctdRiskProfileFctrOptns, "|~") != "") {

                            $variousRows = explode("|", trim($slctdRiskProfileFctrOptns, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 4) {
                                    $riskProfileFactorOptnID = (int) (cleanInputData1($crntRow[0]));
                                    $optnDesc = cleanInputData1($crntRow[1]);
                                    $score = (float) cleanInputData1($crntRow[2]);
                                    $sortOrder = (float) cleanInputData1($crntRow[3]);

                                    if ($riskProfileFactorOptnID > 0) {
                                        $recCntUpdt = $recCntUpdt + updateCreditRiskProfileFactorOptions($riskProfileFactorOptnID, $sbmtdRiskProfileFctrID, $optnDesc, $score, $sortOrder, $dateStr);
                                    } else {
                                        $recCntInst = $recCntInst + createCreditRiskProfileFactorOptions($sbmtdRiskProfileFctrID, $optnDesc, $score, $sortOrder, $dateStr);
                                    }
                                }
                            }

                            $updtSQL3 = "UPDATE mcf.mcf_credit_risk_profile_factors SET last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE profile_factor_id = $sbmtdRiskProfileFctrID";
                            execUpdtInsSQL($updtSQL3);

                            $updtSQL4 = "UPDATE mcf.mcf_credit_risk_profiles SET validity = 'Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE risk_profile_id = $riskProfileID";
                            $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                            echo "<span style='color:green;font-weight:bold !important;'><i>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</i></span>";
                            exit();
                            //echo json_encode(array("riskProfileId" => $riskProfileId, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                            //exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide one Risk Factor Option Record before saving!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == 3) {
                        //VALIDATE RISK PROFILE
                        $profileDesc = isset($_POST['profileDesc']) ? cleanInputData($_POST['profileDesc']) : '';
                        $profileName = isset($_POST['profileName']) ? cleanInputData($_POST['profileName']) : '';
                        $riskProfileId = isset($_POST['riskProfileId']) ? cleanInputData($_POST['riskProfileId']) : -1;
                        $ttlScore = isset($_POST['ttlScore']) ? cleanInputData($_POST['ttlScore']) : 0;
                        $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'Yes';

                        $rngPrflFctrScoreTtl = isset($_POST['rngPrflFctrScoreTtl']) ? cleanInputData($_POST['rngPrflFctrScoreTtl']) : 0;

                        $sbmtdRiskProfileID = isset($_POST['sbmtdRiskProfileID']) ? cleanInputData($_POST['sbmtdRiskProfileID']) : -1;
                        $slctdRiskProfileFctrs = isset($_POST['slctdRiskProfileFctrs']) ? cleanInputData($_POST['slctdRiskProfileFctrs']) : '';
                        $validity = isset($_POST['validity']) ? cleanInputData($_POST['validity']) : 'Invalid';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;
                        $ttlUnmtchdRows = 0;
                        $dsplyMsg = "";

                        if ($validity == "Invalid") {
                            if ((float) $ttlScore != (float) $rngPrflFctrScoreTtl) {
                                echo "<div><span style='color:red;'><b><i>Total PROFILE SCORE " + $ttlScore + " must be EQUAL to the sum of the PROFILE FACTOR SCORES " + $rngPrflFctrScoreTtl + "</i></b></span></div>";
                                exit();
                            }

                            $variousRows1 = explode("|", trim($slctdRiskProfileFctrs, "|"));
                            for ($z = 0; $z < count($variousRows1); $z++) {
                                $crntRow1 = explode("~", $variousRows1[$z]);
                                if (count($crntRow1) == 6) {
                                    $profileFactorId1 = (int) (cleanInputData1($crntRow1[0]));
                                    $riskFactorId1 = (int) cleanInputData1($crntRow1[1]);
                                    $score1 = (float) cleanInputData1($crntRow1[2]);
                                    $sortOrder1 = (float) cleanInputData1($crntRow1[3]);
                                    $ttlOptnsScore1 = (float) cleanInputData1($crntRow1[4]);
                                    $riskFactorNm = cleanInputData1($crntRow1[5]);

                                    if ($score1 != $ttlOptnsScore1) {
                                        $ttlUnmtchdRows = $ttlUnmtchdRows + 1;
                                        $dsplyMsg = $dsplyMsg . "<span style='color:red;'><b>Row ($z+1) - $riskFactorNm</b></span>: Total Options Score <b>$ttlOptnsScore1</b> must be equal to risk factor score <b>$score1</b></br>";
                                    }
                                }
                            }

                            if ($ttlUnmtchdRows > 0) {
                                echo "<div>$dsplyMsg</div>";
                                exit();
                            }

                            if ((!($riskProfileId == "" || $riskProfileId <= 0)) && $profileName != "" && ($ttlScore != "" && (float) $ttlScore >= 0) && trim($slctdRiskProfileFctrs, "|~") != "") {
                                if ($riskProfileId <= 0) {
                                    $rsltExts = doesRiskProfileNameExistsSave($profileName);
                                    if ($rsltExts) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Sorry! Risk Profile already Exists!<br/></div>';
                                        exit();
                                    }

                                    $rowCnt = createCreditRiskProfiles($profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr);
                                    if ($rowCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Save Risk Profile!<br/></div>';
                                        exit();
                                    }
                                } else {
                                    $rsltExts = doesRiskProfileNameExistsUpdate($riskProfileId, $profileName);
                                    if ($rsltExts) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Sorry! Update Failed! Risk Profile already Exists!<br/></div>';
                                        exit();
                                    }

                                    $rowCnt = updateCreditRiskProfiles($riskProfileId, $profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr);
                                    if ($rowCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Update Risk Profile!<br/></div>';
                                        exit();
                                    }
                                }

                                if ($riskProfileId <= 0) {
                                    $riskProfileId = getCreditRiskProfileID($dateStr, $usrID, $profileName);
                                }

                                $variousRows = explode("|", trim($slctdRiskProfileFctrs, "|"));
                                for ($z = 0; $z < count($variousRows); $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 6) {
                                        $profileFactorId = (int) (cleanInputData1($crntRow[0]));
                                        $riskFactorId = (int) cleanInputData1($crntRow[1]);
                                        $score = (float) cleanInputData1($crntRow[2]);
                                        $sortOrder = (float) cleanInputData1($crntRow[3]);
                                        $ttlOptnsScore = (float) cleanInputData1($crntRow[4]);

                                        if ($profileFactorId > 0) {
                                            $recCntUpdt = $recCntUpdt + updateCreditRiskProfileFactors($profileFactorId, $sbmtdRiskProfileID, $riskFactorId, $sortOrder, $score, $dateStr);
                                        } else {
                                            $recCntInst = $recCntInst + createCreditRiskProfileFactors($sbmtdRiskProfileID, $riskFactorId, $sortOrder, $score, $dateStr);
                                        }

                                        $updtSQL3 = "UPDATE mcf.mcf_credit_risk_profiles SET last_update_by = $usrID, last_update_date = '$dateStr'"
                                                . " WHERE risk_profile_id = $sbmtdRiskProfileID";
                                        execUpdtInsSQL($updtSQL3);
                                    }
                                }

                                $updtSQL4 = "UPDATE mcf.mcf_credit_risk_profiles SET validity = 'Valid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE risk_profile_id = $sbmtdRiskProfileID";
                                $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                                if ($vldtyUpdtCnt <= 0) {
                                    echo "<span style='color:red;font-weight:bold !important;'><i>FAILED to update risk profile to VALID</i></span>";
                                    exit();
                                }

                                echo "<span style='color:green;font-weight:bold !important;'><i>Risk Profile Saved</br>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</br>Risk Profile updated to VALID</br></i></span>";
                                exit();

                                //echo json_encode(array("riskProfileId" => $riskProfileId));
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Please Provide data for all required fields and at least One Risk Profile Factor!<br/></div>';
                                exit();
                            }
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Risk Profile is already VALID!<br/></div>';
                            exit();
                        }
                    } else {
                        //RISK PROFILE
                        $profileDesc = isset($_POST['profileDesc']) ? cleanInputData($_POST['profileDesc']) : '';
                        $profileName = isset($_POST['profileName']) ? cleanInputData($_POST['profileName']) : '';
                        $riskProfileId = isset($_POST['riskProfileId']) ? cleanInputData($_POST['riskProfileId']) : -1;
                        $ttlScore = isset($_POST['ttlScore']) ? cleanInputData($_POST['ttlScore']) : 0;
                        $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'Yes';

                        $dateStr = getDB_Date_time();

                        if ($profileName != "" && ($ttlScore != "" && (float) $ttlScore >= 0)) {
                            if ($riskProfileId <= 0) {
                                $rsltExts = doesRiskProfileNameExistsSave($profileName);
                                if ($rsltExts) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Sorry! Risk Profile already Exists!<br/></div>';
                                    exit();
                                }

                                $rowCnt = createCreditRiskProfiles($profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr);
                                if ($rowCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Save Risk Profile!<br/></div>';
                                    exit();
                                }
                            } else {
                                $rsltExts = doesRiskProfileNameExistsUpdate($riskProfileId, $profileName);
                                if ($rsltExts) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Sorry! Update Failed! Risk Profile already Exists!<br/></div>';
                                    exit();
                                }

                                $rowCnt = updateCreditRiskProfiles($riskProfileId, $profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr);
                                if ($rowCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Update Risk Profile!<br/></div>';
                                    exit();
                                }
                            }

                            if ($riskProfileId <= 0) {
                                $riskProfileId = getCreditRiskProfileID($dateStr, $usrID, $profileName);
                            }

                            $updtSQL4 = "UPDATE mcf.mcf_credit_risk_profiles SET validity = 'Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE risk_profile_id = $riskProfileId";
                            $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                            echo json_encode(array("riskProfileId" => $riskProfileId));

                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide Risk Profile and/or Total Score!<br/></div>';
                            exit();
                        }
                    }
                }
                if ($subVwtyp == 4) {//ASSESSMENT SET
                    //var_dump($_POST);
                    if ($actyp == 1) {
                        //ASSESSMENT SET PROFILES
                        $sbmtdAssessmentSetID = isset($_POST['sbmtdAssessmentSetID']) ? cleanInputData($_POST['sbmtdAssessmentSetID']) : -1;
                        $slctdAssessmentSetPrfls = isset($_POST['slctdAssessmentSetPrfls']) ? cleanInputData($_POST['slctdAssessmentSetPrfls']) : '';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;

                        if (trim($slctdAssessmentSetPrfls, "|~") != "") {

                            $variousRows = explode("|", trim($slctdAssessmentSetPrfls, "|"));
                            for ($z = 0; $z < count($variousRows); $z++) {
                                $crntRow = explode("~", $variousRows[$z]);
                                if (count($crntRow) == 4) {
                                    $assessmentSetPrflId = (int) (cleanInputData1($crntRow[0]));
                                    $assessmentPrflId = (int) cleanInputData1($crntRow[1]);
                                    $score = (float) cleanInputData1($crntRow[2]);
                                    $sortOrder = (float) cleanInputData1($crntRow[3]);

                                    if ($assessmentSetPrflId > 0) {
                                        $recCntUpdt = $recCntUpdt + updateCreditScornsetDet($assessmentSetPrflId, $assessmentPrflId, $sortOrder, $dateStr);
                                    } else {
                                        $recCntInst = $recCntInst + createCreditScornsetDet($sbmtdAssessmentSetID, $assessmentPrflId, $sortOrder, $dateStr);
                                    }
                                }
                            }

                            if (($recCntUpdt + $recCntInst) > 0) {
                                $updtSQL4 = "UPDATE mcf.mcf_credit_scoring_set_hdr SET status = 'Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE scoring_set_hdr_id = $sbmtdAssessmentSetID";
                                $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);
                            }

                            echo "<span style='color:green;font-weight:bold !important;'><i>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</i></span>";
                            exit();
                            //echo json_encode(array("assessmentSetId" => $assessmentSetId, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                            //exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide one Assessment Set Factor Record before saving!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == 3) {
                        //VALIDATE ASSESSMENT SET
                        $assessmentSetDesc = isset($_POST['assessmentSetDesc']) ? cleanInputData($_POST['assessmentSetDesc']) : '';
                        $assessmentSetName = isset($_POST['assessmentSetName']) ? cleanInputData($_POST['assessmentSetName']) : '';
                        $assessmentSetId = isset($_POST['assessmentSetId']) ? cleanInputData($_POST['assessmentSetId']) : -1;
                        $ttlScore = isset($_POST['ttlScore']) ? cleanInputData($_POST['ttlScore']) : 0;
                        $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'Yes';

                        $rngPrflFctrScoreTtl = isset($_POST['rngPrflFctrScoreTtl']) ? cleanInputData($_POST['rngPrflFctrScoreTtl']) : 0;

                        $sbmtdAssessmentSetID = isset($_POST['sbmtdAssessmentSetID']) ? cleanInputData($_POST['sbmtdAssessmentSetID']) : -1;
                        $slctdAssessmentSetPrfls = isset($_POST['slctdAssessmentSetPrfls']) ? cleanInputData($_POST['slctdAssessmentSetPrfls']) : '';
                        $status = isset($_POST['validity']) ? cleanInputData($_POST['validity']) : 'Invalid';

                        $dateStr = getDB_Date_time();
                        $recCntInst = 0;
                        $recCntUpdt = 0;
                        $ttlUnmtchdRows = 0;
                        $dsplyMsg = "";

                        if ($status == "Invalid") {
                            if ((float) $ttlScore > (float) $rngPrflFctrScoreTtl) {
                                echo "<div><span style='color:red;'><b><i>ASSSESSMENT SET PASS SCORE " + $ttlScore + " must be LESS THAN OR EQUAL to the sum of the PROFILE SCORES " + $rngPrflFctrScoreTtl + "</i></b></span></div>";
                                exit();
                            }

                            if ((!($assessmentSetId == "" || $assessmentSetId <= 0)) && $assessmentSetName != "" && ($ttlScore != "" && (float) $ttlScore >= 0) && trim($slctdAssessmentSetPrfls, "|~") != "") {
                                if ($assessmentSetId <= 0) {
                                    $rsltExts = doesAssessmentSetNameExistsSave($assessmentSetName);
                                    if ($rsltExts) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Sorry! Assessment Set already Exists!<br/></div>';
                                        exit();
                                    }

                                    $rowCnt = createCreditScornsetHdr($assessmentSetName, $assessmentSetDesc, $isEnabled, $ttlScore, $dateStr);
                                    if ($rowCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Save Assessment Set!<br/></div>';
                                        exit();
                                    }
                                } else {
                                    $rsltExts = doesAssessmentSetNameExistsUpdate($assessmentSetId, $assessmentSetName);
                                    if ($rsltExts) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Sorry! Update Failed! Assessment Set already Exists!<br/></div>';
                                        exit();
                                    }

                                    $rowCnt = updateCreditScornsetHdr($assessmentSetId, $assessmentSetName, $assessmentSetDesc, $isEnabled, $ttlScore, $dateStr);
                                    if ($rowCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Update Assessment Set!<br/></div>';
                                        exit();
                                    }
                                }

                                if ($assessmentSetId <= 0) {
                                    $assessmentSetId = getCreditScornsetHdrID($dateStr, $usrID, $assessmentSetName);
                                }

                                $variousRows = explode("|", trim($slctdAssessmentSetPrfls, "|"));
                                for ($z = 0; $z < count($variousRows); $z++) {
                                    $crntRow = explode("~", $variousRows[$z]);
                                    if (count($crntRow) == 6) {
                                        $assessmentSetPrflId = (int) (cleanInputData1($crntRow[0]));
                                        $assessmentPrflId = (int) cleanInputData1($crntRow[1]);
                                        $score = (float) cleanInputData1($crntRow[2]);
                                        $sortOrder = (float) cleanInputData1($crntRow[3]);
                                        $ttlOptnsScore = (float) cleanInputData1($crntRow[4]);

                                        if ($assessmentSetId > 0) {
                                            $recCntUpdt = $recCntUpdt + updateCreditScornsetDet($assessmentSetPrflId, $assessmentPrflId, $sortOrder, $dateStr);
                                        } else {
                                            $recCntInst = $recCntInst + createCreditScornsetDet($sbmtdAssessmentSetID, $assessmentPrflId, $sortOrder, $dateStr);
                                        }
                                    }
                                }

                                $updtSQL4 = "UPDATE mcf.mcf_credit_scoring_set_hdr SET status = 'Valid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE scoring_set_hdr_id = $sbmtdAssessmentSetID";
                                $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                                if ($vldtyUpdtCnt <= 0) {
                                    echo "<span style='color:red;font-weight:bold !important;'><i>FAILED to update Assessment Set to VALID</i></span>";
                                    exit();
                                }

                                echo "<span style='color:green;font-weight:bold !important;'><i>Assessment Set Saved</br>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</br>Assessment Set updated to VALID</br></i></span>";
                                exit();

                                //echo json_encode(array("assessmentSetId" => $assessmentSetId));
                            } else {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Please Provide data for all required fields and at least One Assessment Profiles!<br/></div>';
                                exit();
                            }
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Assessment Set is already VALID!<br/></div>';
                            exit();
                        }
                    } else {
                        //ASSESSMENT SET
                        $assessmentSetDesc = isset($_POST['assessmentSetDesc']) ? cleanInputData($_POST['assessmentSetDesc']) : '';
                        $assessmentSetName = isset($_POST['assessmentSetName']) ? cleanInputData($_POST['assessmentSetName']) : '';
                        $assessmentSetId = isset($_POST['assessmentSetId']) ? cleanInputData($_POST['assessmentSetId']) : -1;
                        $ttlScore = isset($_POST['ttlScore']) ? cleanInputData($_POST['ttlScore']) : 0;
                        $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'Yes';

                        $dateStr = getDB_Date_time();

                        if ($assessmentSetName != "" && ($ttlScore != "" && (float) $ttlScore >= 0)) {
                            if ($assessmentSetId <= 0) {
                                $rsltExts = doesAssessmentSetNameExistsSave($assessmentSetName);
                                if ($rsltExts) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Sorry! Assessment Set already Exists!<br/></div>';
                                    exit();
                                }

                                $rowCnt = createCreditScornsetHdr($assessmentSetName, $assessmentSetDesc, $isEnabled, $ttlScore, $dateStr);
                                if ($rowCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Save Assessment Set!<br/></div>';
                                    exit();
                                }
                            } else {
                                $rsltExts = doesAssessmentSetNameExistsUpdate($assessmentSetId, $assessmentSetName);
                                if ($rsltExts) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Sorry! Update Failed! Assessment Set already Exists!<br/></div>';
                                    exit();
                                }

                                $rowCnt = updateCreditScornsetHdr($assessmentSetId, $assessmentSetName, $assessmentSetDesc, $isEnabled, $ttlScore, $dateStr);
                                if ($rowCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Update Assessment Set!<br/></div>';
                                    exit();
                                }
                            }

                            if ($assessmentSetId <= 0) {
                                $assessmentSetId = getCreditScornsetHdrID($dateStr, $usrID, $assessmentSetName);
                            }

                            $updtSQL4 = "UPDATE mcf.mcf_credit_scoring_set_hdr SET status = 'Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE scoring_set_hdr_id = $assessmentSetId";
                            $vldtyUpdtCnt = execUpdtInsSQL($updtSQL4);

                            echo json_encode(array("assessmentSetId" => $assessmentSetId));

                            exit();
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Please provide Assessment Set and/or Total Score!<br/></div>';
                            exit();
                        }
                    }
                }
            }
            else if ($subPgNo == 4.7) {//PROPERTY COLLATERAL
                //var_dump($_POST);
                $prptyColtId = isset($_POST['prptyColtId']) ? cleanInputData($_POST['prptyColtId']) : -1;
                $prptyColtNm = isset($_POST['prptyColtNm']) ? cleanInputData($_POST['prptyColtNm']) : '';
                $prptyColtDesc = isset($_POST['prptyColtDesc']) ? cleanInputData($_POST['prptyColtDesc']) : '';
                $prptyColtType = isset($_POST['prptyColtType']) ? cleanInputData($_POST['prptyColtType']) : '';
                $prptyOwnerCustID = isset($_POST['prptyOwnerCustID']) ? cleanInputData($_POST['prptyOwnerCustID']) : -1;
                $prptyOwnerCustType = isset($_POST['prptyOwnerCustType']) ? cleanInputData($_POST['prptyOwnerCustType']) : '';
                $prptyValue = isset($_POST['prptyValue']) ? cleanInputData($_POST['prptyValue']) : '';
                $prptyValuerSupID = isset($_POST['prptyValuerSupID']) ? cleanInputData($_POST['prptyValuerSupID']) : -1;
                $prptyColtParentID = isset($_POST['prptyColtParentID']) ? cleanInputData($_POST['prptyColtParentID']) : -1;

                $dateStr = getDB_Date_time();

                if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_property_collaterals SET status = 'Withdrawn',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE prpty_collateral_id = $prptyColtId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Property Collateral!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("prptyColtId" => $prptyColtId));
                    exit();
                } else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_property_collaterals SET status = 'Rejected',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE prpty_collateral_id = $prptyColtId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Property Collateral!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("prptyColtId" => $prptyColtId));
                    exit();
                } else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_property_collaterals SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE prpty_collateral_id = $prptyColtId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Property Collateral!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("prptyColtId" => $prptyColtId));
                    exit();
                } else if ($actyp == 6) {
                    //REVERSE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_property_collaterals SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE prpty_collateral_id = $prptyColtId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Property Collateral!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("prptyColtId" => $prptyColtId));
                    exit();
                } else {
                    if ($prptyColtNm != "" && $prptyColtType != "" && $prptyOwnerCustID != -1 && $prptyValue > -1) {
                        if ($prptyColtId <= 0) {
                            $rsltExts = doesPrptyColtNmExistsSave($prptyColtNm);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Collateral already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = createPropertyCollaterals($prptyColtNm, $prptyColtDesc, $prptyColtType, $prptyValuerSupID, $prptyValue, $prptyColtParentID, $prptyOwnerCustID, $prptyOwnerCustType, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Collateral!<br/></div>';
                                exit();
                            }
                        } else {
                            $rsltExts = doesPrptyColtNmExistsUpdate($prptyColtId, $prptyColtNm);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Update Failed! Collateral already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = updatePropertyCollaterals($prptyColtId, $prptyColtNm, $prptyColtDesc, $prptyColtType, $prptyValuerSupID, $prptyValue, $prptyColtParentID, $prptyOwnerCustID, $prptyOwnerCustType, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Collateral!<br/></div>';
                                exit();
                            }
                        }

                        if ($prptyColtId <= 0) {
                            $prptyColtId = getPropertyCollateralID($dateStr, $usrID, $prptyColtNm);
                        }

                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_property_collaterals SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE prpty_collateral_id = $prptyColtId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Property Collateral for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("prptyColtId" => $prptyColtId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 4.8) {//SECTOR CLASSIFICATION
                //var_dump($_POST);
                if ($actyp == 1) {
                    //MINOR SECTOR
                    $sbmtdSectorMajorID = isset($_POST['sbmtdSectorMajorID']) ? cleanInputData($_POST['sbmtdSectorMajorID']) : -1;
                    $slctdSectorMinor = isset($_POST['slctdSectorMinor']) ? cleanInputData($_POST['slctdSectorMinor']) : '';

                    $dateStr = getDB_Date_time();
                    $recCntInst = 0;
                    $recCntUpdt = 0;

                    if (trim($slctdSectorMinor, "|~") != "") {

                        $variousRows = explode("|", trim($slctdSectorMinor, "|"));
                        for ($z = 0; $z < count($variousRows); $z++) {
                            $crntRow = explode("~", $variousRows[$z]);
                            if (count($crntRow) == 4) {
                                $sectorMinorID = (int) (cleanInputData1($crntRow[0]));
                                $minorSectorNm = cleanInputData1($crntRow[1]);
                                $minorSectorDesc = cleanInputData1($crntRow[2]);
                                $isEnabledNm = cleanInputData1($crntRow[3]);

                                if ($sectorMinorID > 0) {
                                    $recCntUpdt = $recCntUpdt + updateSectorMinor($sectorMinorID, $sbmtdSectorMajorID, $minorSectorNm, $isEnabledNm, $minorSectorDesc, $dateStr);
                                } else {
                                    $recCntInst = $recCntInst + createSectorMinor($sbmtdSectorMajorID, $minorSectorNm, $isEnabledNm, $minorSectorDesc, $dateStr);
                                }

                                $updtSQL3 = "UPDATE mcf.mcf_loan_sectors_major SET last_update_by = $usrID, last_update_date = '$dateStr'"
                                        . " WHERE major_sector_id = $sbmtdSectorMajorID";
                                execUpdtInsSQL($updtSQL3);
                            }
                        }

                        echo "<span style='color:green;font-weight:bold !important;'><i>$recCntInst record(s) inserted</br>$recCntUpdt record(s) updated</i></span>";
                        exit();
                        //echo json_encode(array("riskProfileId" => $riskProfileId, "recCntInst" => $recCntInst, "recCntUpdt" => $recCntUpdt));
                        //exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please provide one Risk Profile Factor Record before saving!<br/></div>';
                        exit();
                    }
                } else {
                    //MAJOR SECTOR
                    $sectorDesc = isset($_POST['sectorDesc']) ? cleanInputData($_POST['sectorDesc']) : '';
                    $sectorName = isset($_POST['sectorName']) ? cleanInputData($_POST['sectorName']) : '';
                    $sectorMajorId = isset($_POST['sectorMajorId']) ? cleanInputData($_POST['sectorMajorId']) : -1;
                    $isEnabled = isset($_POST['isEnabled']) ? cleanInputData($_POST['isEnabled']) : 'Yes';

                    $dateStr = getDB_Date_time();

                    if ($sectorName != "") {
                        if ($sectorMajorId <= 0) {
                            $rsltExts = doesSectorMajorNameExistsSave($sectorName);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Sector Name already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = createSectorMajor($sectorName, $sectorDesc, $isEnabled, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Major Sector!<br/></div>';
                                exit();
                            }
                        } else {
                            $rsltExts = doesSectorMajorNameExistsUpdate($sectorMajorId, $sectorName);
                            if ($rsltExts) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Sorry! Update Failed! Major Sector already Exists!<br/></div>';
                                exit();
                            }

                            $rowCnt = updateSectorMajor($sectorMajorId, $sectorName, $sectorDesc, $isEnabled, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Major Sector!<br/></div>';
                                exit();
                            }
                        }

                        if ($sectorMajorId <= 0) {
                            $sectorMajorId = getSectorMajorID($dateStr, $usrID, $sectorName);
                        }

                        echo json_encode(array("sectorMajorId" => $sectorMajorId));

                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please provide Major Sector Name!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 4.9) {//LOAN WRITEOFF
                //var_dump($_POST);
                $loanWriteOffId = isset($_POST['loanWriteOffId']) ? cleanInputData($_POST['loanWriteOffId']) : -1;
                $loanWriteOffTrnsDte = isset($_POST['loanWriteOffTrnsDte']) ? cleanInputData($_POST['loanWriteOffTrnsDte']) : '';
                $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;
                $loanWriteOffReason = isset($_POST['loanWriteOffReason']) ? cleanInputData($_POST['loanWriteOffReason']) : '';
                $loanWriteOffAmount = isset($_POST['loanWriteOffAmount']) ? cleanInputData($_POST['loanWriteOffAmount']) : '';

                $prcsOptn = isset($_POST['prcsOptn']) ? cleanInputData($_POST['prcsOptn']) : 0;

                $dateStr = getDB_Date_time();

                $rslt = 'FAILURE';

                if ($actyp == 1) {
                    $loanRqstID = (int) getGnrlRecNm("mcf.mcf_loan_writeoffs", "loan_writeoff_id", "loan_rqst_id", $loanWriteOffId);
                    $crdtType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "crdt_type", $loanRqstID);
                    $trnsDte = getStartOfDayYMD();
                    $docHdrID = -1;
                    $trnsAmnt = 0.00;
                    $dbtAccntID = -1;
                    $dbtAccntIncrsOrDcrs = "";
                    $crdtAccntID = -1;
                    $crdtAccntIncrsOrDcrs = "";
                    $trnsAmnt2 = 0.00;
                    $dbtAccntID2 = -1;
                    $dbtAccntIncrsOrDcrs2 = "";
                    $crdtAccntID2 = -1;
                    $crdtAccntIncrsOrDcrs2 = "";
                    $trnsCrncyID = -1;
                    $lineid = -1;
                    $detaildTrnsDesc = "";
                    $doctype = "";
                    $prcsActn = "Processing";
                    $prcsActnStatus = "Processed";
                    $evntTyp = "P";

                    $dsply = "";
                    $nwMsg = "";
                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Starting Loan Write-Off.......<br/></span>";

                    if ($crdtType == "Loan") {

                    } else {
                        //OVERDRAFT
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Unable to determine the Overdraft Write-Off Account!</span>";
                        echo $dsply;
                        exit();
                    }

                    //org.get_dflt_accnt_id($prsnid,interest_rcvbl_acct_id)
                    //GET TRANSACTION DETAILS FOR ACCOUNTING
                    $strSql = "SELECT distinct loan_writeoff_id, a.amount,
                     org.get_accnt_id_brnch_eqv(b.branch_id, c.bad_debt_acct_id) bad_debt_acct_id, 'I',
                     org.get_accnt_id_brnch_eqv(b.branch_id, c.principal_rcvbl_acct_id) principal_rcvbl_acct_id, 'D',
                     org.get_accnt_id_brnch_eqv(b.branch_id,  c.deferred_interest_acct_id) deferred_interest_acct_id, 'D',
                     org.get_accnt_id_brnch_eqv(b.branch_id,  c.interest_rcvbl_acct_id)  interest_rcvbl_acct_id,  'D',
                        d.crncy_id, loan_writeoff_id,
                        'Bad Debt Write-Off transaction '||a.trnsctn_id||' for Loan Request No. '||b.trnsctn_id||' for Customer '||mcf.get_customer_name(b.cust_type, b.cust_id), 'LOAN WRITE-OFF',
                        round(y.ttl_interest_bal::numeric,4) int_bal
                        FROM mcf.mcf_loan_writeoffs a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d,
                        mcf.mcf_loan_disbursement_hdr x,
                          mcf.mcf_loan_disbursement_det y
                      WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
                      AND c.currency_id = d.crncy_id AND x.disbmnt_hdr_id = y.disbmnt_hdr_id
                        AND y.loan_rqst_id = b.loan_rqst_id and x.status != 'Void' AND y.principal_amount > 0
                      AND loan_writeoff_id = $loanWriteOffId";


                    //GET LOAN

                    $result = executeSQLNoParams($strSql);
                    $rowCnt = loc_db_num_rows($result);
                    if ($rowCnt <= 0) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>No Loan Write-Off record exists for Processing and Accounting!</span>";
                        echo $dsply;
                        exit();
                    }

                    while ($row = loc_db_fetch_array($result)) {
                        $docHdrID = (int) $row[0];
                        $trnsAmnt = (float) $row[1];
                        $dbtAccntID = (int) $row[2];
                        $dbtAccntIncrsOrDcrs = $row[3];
                        $crdtAccntID = (int) $row[4];
                        $crdtAccntIncrsOrDcrs = $row[5];
                        $trnsAmnt2 = (float) $row[14];
                        $dbtAccntID2 = (int) $row[6];
                        $dbtAccntIncrsOrDcrs2 = $row[7];
                        $crdtAccntID2 = (int) $row[8];
                        $crdtAccntIncrsOrDcrs2 = $row[9];
                        $trnsCrncyID = (int) $row[10];
                        $lineid = (int) $row[11];
                        $detaildTrnsDesc = $row[12];
                        $doctype = $row[13];
                    }

                    if ($prcsOptn == 1) {
                        $trnsAmnt = -1 * (float) $trnsAmnt;
                        $trnsAmnt2 = -1 * (float) $trnsAmnt2;
                        $detaildTrnsDesc = "REVERSAL - " . $detaildTrnsDesc;
                        $prcsActn = "Voiding";
                        $prcsActnStatus = "Unprocessed";
                        $evntTyp = "R";
                    }

		    $ttlWriteOffAmnt = round($trnsAmnt,2) + round($trnsAmnt2,2);
                    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);
                    if ((float)$ttlWriteOffAmnt != 0) {
                        //CUSTOMER BALANCE UPDATE AND ACCOUNT TRANSACTION
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";
                        $dcrsORIncrs = "D";

                        $loanAccountID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "account_id", $loanRqstID);
                        $loanAccountNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $loanAccountID);

                        $acntRslt = get_OneCustAccntInfo($loanAccountID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        if($prcsOptn == 1){//REVERSAL
                            $dcrsORIncrs = "I";
                            $trnsType1 = "DEPOSIT";
			    $ttlWriteOffAmnt = -1 * $ttlWriteOffAmnt;
                        }

                        $nwMsg = "";
                        $dte = date('ymdHis');
                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

                        $recCnt = 0;
                        if($prcsOptn == 1){//REVERSAL
                            $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "LOAN WRITE-OFF Reversal for - A/C No." . $loanAccountNo, "CR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {//WRIRE-OFF
                            $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "LOAN WRITE-OFF - A/C No." . $loanAccountNo, "DR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        }

                        if ($recCnt <= 0) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN SETTLEMENT Account Transactions for Customer!</span>";
                            echo $dsply;
                            exit();
                        }

                        $docTypPrfx1 =  $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($loanAccountID, $ttlWriteOffAmnt, 0.00, 0.00, $trnsType1, $dcrsORIncrs, $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Write-Off Amount!</br>$nwMsg</span>";
                            echo $dsply;
                            exit();
                        }
                    }

                    //LOAN BALANCE WRITE OFF => DB BAD DEBT ACCOUNT and CR PRINCIPAL RECEIVABLE ACCOUNT
                    $shdActnBeDone = createGnrlAccntngTwoEvnts($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsAmnt2, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Principal Balance", $detaildTrnsDesc . " - Deferred Interest Balance", $doctype, $evntTyp, $nwMsg);
//                    $shdActnBeDone = createGrnlAccntng($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs,
//                            $trnsCrncyID, $lineid, $detaildTrnsDesc." - Principal Balance", $doctype, $nwMsg);

                    if ($shdActnBeDone === FALSE) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Loan Write-Off!</span>";
                        echo $dsply;
                        exit();
                    } else {

                        $dsply .= "<span style=\"color:green;font-weight:bold;\">Loan Write-Off " . $prcsActn . " and Accounting done Successfully<br/></span>";
                        //UPDATE LOAN WRITE OFF
                        $recCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET writeoff_status = '$prcsActnStatus', "
                                . "last_update_by = $usrID, last_update_date = '$dateStr', trns_date = '$trnsDte' WHERE loan_writeoff_id = $loanWriteOffId");

                        //UPDATE DISBURSEMENT DETAIL ZERO out INTEREST BALANCE and PRINCIPAL BALANCE => Interrogate
                        //FOR OVERDRAFTS =>
                    }
                    echo $dsply;
                    exit();
                }
                else if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET status = 'Withdrawn',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_writeoff_id = $loanWriteOffId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Loan Write-Off!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("loanWriteOffId" => $loanWriteOffId));
                    exit();
                }
                else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET status = 'Rejected',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_writeoff_id = $loanWriteOffId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Loan Write-Off!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("loanWriteOffId" => $loanWriteOffId));
                    exit();
                }
                else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE loan_writeoff_id = $loanWriteOffId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Loan Write-Off!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("loanWriteOffId" => $loanWriteOffId));
                    exit();
                }
                else if ($actyp == 6) {
                    //REVERSE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET status = 'Reversed',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_writeoff_id = $loanWriteOffId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REVERSE Loan Write-Off!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("loanWriteOffId" => $loanWriteOffId));
                    exit();
                }
                else {
                    if ($loanWriteOffReason != "" && $loanRqstID != -1 && $loanRqstID > 0) {
                        if ($loanWriteOffId <= 0) {

                            $loanWriteOffId = getNewLoanWriteOffID();

                            $rowCnt = createLoanWriteOffs($loanWriteOffId, $loanRqstID, $loanWriteOffReason, $loanWriteOffTrnsDte, $bnkBranchID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Collateral!<br/></div>';
                                exit();
                            }
                        } else {
                            $rowCnt = updateLoanWriteOffs($loanWriteOffId, $loanRqstID, $loanWriteOffReason, $loanWriteOffTrnsDte, $bnkBranchID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Collateral!<br/></div>';
                                exit();
                            }
                        }


                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_loan_writeoffs SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE loan_writeoff_id = $loanWriteOffId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Loan Write-Off for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("loanWriteOffId" => $loanWriteOffId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 4.12) {//OVERDRAFT INTEREST
                //var_dump($_POST);
                $ovdrftIntrstPymntId = isset($_POST['ovdrftIntrstPymntId']) ? cleanInputData($_POST['ovdrftIntrstPymntId']) : -1;
                $ovdrftIntrstPymntTrnsDte = isset($_POST['ovdrftIntrstPymntTrnsDte']) ? cleanInputData($_POST['ovdrftIntrstPymntTrnsDte']) : '';
                $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                $loanRqstID = isset($_POST['loanRqstID']) ? cleanInputData($_POST['loanRqstID']) : -1;
                $ovdrftIntrstPymntReason = isset($_POST['ovdrftIntrstPymntReason']) ? cleanInputData($_POST['ovdrftIntrstPymntReason']) : '';
                $ovdrftIntrstPymntAmount = isset($_POST['ovdrftIntrstPymntAmount']) ? cleanInputData($_POST['ovdrftIntrstPymntAmount']) : 0.00;

                $prcsOptn = isset($_POST['prcsOptn']) ? cleanInputData($_POST['prcsOptn']) : 0;

                $dateStr = getDB_Date_time();

                $rslt = 'FAILURE';

                if ((int)$loanRqstID <= 0) {
                        //OVERDRAFT
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>No Loan Rqst ID</span>";
                        echo $dsply;
                        exit();
                    }

                if ($actyp == 1) {
                    $loanRqstDsbmntDetID = (int) getODLoanRqstDsbmntDetID($loanRqstID);
                    $crdtType = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "crdt_type", $loanRqstID);
                    $trnsDte = getStartOfDayYMD();
                    $docHdrID = -1;
                    $trnsAmnt = 0.00;
                    $dbtAccntID = -1;
                    $dbtAccntIncrsOrDcrs = "";
                    $crdtAccntID = -1;
                    $crdtAccntIncrsOrDcrs = "";
                    $trnsCrncyID = -1;
                    $lineid = -1;
                    $detaildTrnsDesc = "";
                    $doctype = "";
                    $prcsActn = "Processing";
                    $prcsActnStatus = "Processed";
                    $evntTyp = "P";
                    $repaymentAccountId = -1;
                    $dsbmntDetId = -1;

                    $trnsAmnt2 = 0.00;
                    $dbtAccntID2 = -1;
                    $dbtAccntIncrsOrDcrs2 = "";
                    $crdtAccntID2 = -1;
                    $crdtAccntIncrsOrDcrs2 = "";

                    $dsply = "";
                    $nwMsg = "";
                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Starting Overdraft Interest Payment.......<br/></span>";

                    if ((int)$loanRqstDsbmntDetID <= 0) {
                        //OVERDRAFT
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Unable to determine the Overdraft Disbursement Detail ID</span>";
                        echo $dsply;
                        exit();
                    }

                    //org.get_dflt_accnt_id($prsnid,interest_rcvbl_acct_id)
                    //GET TRANSACTION DETAILS FOR ACCOUNTING

		$strSql = "SELECT distinct mnlpymnt_ovdrft_hdr_id, a.ttl_amount_paid,
                        mcf.get_cstacct_gl_liablty_acct_id(repayment_account_id) repayment_account_id, 'D',
                        org.get_accnt_id_brnch_eqv(b.branch_id, c.interest_revenue_acct_id) interest_revenue_acct_id, 'I',
                        d.crncy_id, mnlpymnt_ovdrft_hdr_id,
                        'Manual Overdraft Interest transaction '||a.trnsctn_id||' for Overdraft Request No. '||b.trnsctn_id||' for Customer '||mcf.get_customer_name(b.cust_type, b.cust_id), 'MANUAL OVERDRAFT INTEREST PAYMENT',
                        $ovdrftIntrstPymntAmount int_accrued, repayment_account_id, y.disbmnt_det_id,
                        org.get_accnt_id_brnch_eqv(b.branch_id, c.deferred_interest_acct_id) deferred_interest_acct_id, 'D',
			org.get_accnt_id_brnch_eqv(b.branch_id, c.interest_rcvbl_acct_id) interest_rcvbl_acct_id, 'D'
                        FROM mcf.mcf_manual_ovdrft_interest_pymnt_hdr a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,
                        mcf.mcf_currencies d, mcf.mcf_loan_disbursement_hdr x, mcf.mcf_loan_disbursement_det y
                      WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
                      AND c.currency_id = d.crncy_id AND x.disbmnt_hdr_id = y.disbmnt_hdr_id
                        AND y.loan_rqst_id = b.loan_rqst_id and x.status != 'Void' AND y.principal_amount > 0
                      AND mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId";

                    $result = executeSQLNoParams($strSql);
                    $rowCnt = loc_db_num_rows($result);
                    if ($rowCnt <= 0) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>No Overdraft Interest Payment record exists for Processing and Accounting!</span>";
                        echo $dsply;
                        exit();
                    }

                    while ($row = loc_db_fetch_array($result)) {
                        $docHdrID = (int) $row[0];
                        $trnsAmnt = (float) $row[1];
                        $dbtAccntID = (int) $row[2];
                        $dbtAccntIncrsOrDcrs = $row[3];
                        $crdtAccntID = (int) $row[4];
                        $crdtAccntIncrsOrDcrs = $row[5];
                        $trnsCrncyID = (int) $row[6];
                        $lineid = (int) $row[7];
                        $detaildTrnsDesc = $row[8];
                        $doctype = $row[9];
                        $repaymentAccountId = $row[11];
                        $dsbmntDetId = $row[12];
                        $trnsAmnt2 = (float) $row[1];
                        $dbtAccntID2 = (int) $row[13];
                        $dbtAccntIncrsOrDcrs2 = $row[14];
                        $crdtAccntID2 = (int) $row[15];
                        $crdtAccntIncrsOrDcrs2 = $row[16];
                    }

                    if ($prcsOptn == 1) {
                        $trnsAmnt = -1 * (float) $trnsAmnt;
                        $detaildTrnsDesc = "REVERSAL - " . $detaildTrnsDesc;
                        $prcsActn = "Voiding";
                        $prcsActnStatus = "Unprocessed";
                        $evntTyp = "R";
                    }


                    $ttlODPymntAmt = round($trnsAmnt,2);
                    $rtrnRslt = updateODInterestPayment($dsbmntDetId, $ttlODPymntAmt);
                    if ($rtrnRslt != "SUCCESS") {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\">Failed to Update Overdraft Interest Payment table mcf.mcf_daily_overdraft_interest </br>ERROR".$rtrnRslt."<br/></span>";
                        echo $dsply;
                        exit();
                    }

                    $ttlWriteOffAmnt = round($trnsAmnt,2);
                    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);
                    if ((float)$ttlWriteOffAmnt != 0) {
                        //CUSTOMER BALANCE UPDATE AND ACCOUNT TRANSACTION
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";
                        $dcrsORIncrs = "D";

                        //$loanAccountID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "account_id", $loanRqstID);
                        $repaymentAccountNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $repaymentAccountId);

                        $acntRslt = get_OneCustAccntInfo($repaymentAccountId);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        if($prcsOptn == 1){//REVERSAL
                            $dcrsORIncrs = "I";
                            $trnsType1 = "DEPOSIT";
			    $ttlWriteOffAmnt = -1 * $ttlWriteOffAmnt;
                        }

                        $nwMsg = "";
                        $dte = date('ymdHis');
                        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

                        $recCnt = 0;
                        if($prcsOptn == 1){//REVERSAL
                            $recCnt = createAccountTrns($repaymentAccountId, $dateStr, "Paperless", $gnrtdTrnsNo, "MANUAL OVERDRAFT INTEREST PAYMENT  Reversal for - A/C No." . $repaymentAccountNo, "CR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {//WRIRE-OFF
                            $recCnt = createAccountTrns($repaymentAccountId, $dateStr, "Paperless", $gnrtdTrnsNo, "MANUAL OVERDRAFT INTEREST PAYMENT - A/C No." . $repaymentAccountNo, "DR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        }

                        if ($recCnt <= 0) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create MANUAL OVERDRAFT INTEREST PAYMENT Account Transactions for Customer!</span>";
                            echo $dsply;
                            exit();
                        }

                        $docTypPrfx1 =  $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($repaymentAccountId, $ttlWriteOffAmnt, 0.00, 0.00, $trnsType1, $dcrsORIncrs, $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Account Balances with Accrued Interest Amount!</br>$nwMsg</span>";
                            echo $dsply;
                            exit();
                        }
                    }

                    //LOAN BALANCE WRITE OFF => DB BAD DEBT ACCOUNT and CR PRINCIPAL RECEIVABLE ACCOUNT
                    //$shdActnBeDone = createGrnlAccntngOneEvnt($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Interest Revenue", $doctype, $evntTyp, $nwMsg);
                    $shdActnBeDone = createGnrlAccntngTwoEvnts($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsAmnt2, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Interest Revenue", $detaildTrnsDesc . " - Deferred Interest Balance", $doctype, $evntTyp, $nwMsg);

                    if ($shdActnBeDone === FALSE) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Overdraft Interest Payment!</span>";
                        echo $dsply;
                        exit();
                    } else {

                        $dsply .= "<span style=\"color:green;font-weight:bold;\">Overdraft Interest Payment " . $prcsActn . " and Accounting done Successfully<br/></span>";
                       //UPDATE LOAN WRITE OFF
                        $recCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET pymnt_status = '$prcsActnStatus', "
                               . "last_update_by = $usrID, last_update_date = '$dateStr', trns_date = '$trnsDte' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                    }
                    echo $dsply;
                    exit();
                }
                else if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET status = 'Withdrawn',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Overdraft Interest Payment!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("ovdrftIntrstPymntId" => $ovdrftIntrstPymntId));
                    exit();
                }
                else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET status = 'Rejected',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Overdraft Interest Payment!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("ovdrftIntrstPymntId" => $ovdrftIntrstPymntId));
                    exit();
                }
                else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Overdraft Interest Payment!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("ovdrftIntrstPymntId" => $ovdrftIntrstPymntId));
                    exit();
                }
                else if ($actyp == 6) {
                    //REVERSE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET status = 'Reversed',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REVERSE Overdraft Interest Payment!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("ovdrftIntrstPymntId" => $ovdrftIntrstPymntId));
                    exit();
                }
                else {
                    if ($ovdrftIntrstPymntReason != "" && $loanRqstID != -1 && $loanRqstID > 0) {
                        if ($ovdrftIntrstPymntId <= 0) {

                            $ovdrftIntrstPymntId = getNewLoanWriteOffID();

                            $rowCnt = createOvdrftIntrstPymnts($ovdrftIntrstPymntId, $loanRqstID, $ovdrftIntrstPymntReason, $ovdrftIntrstPymntTrnsDte, $bnkBranchID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Collateral!<br/></div>';
                                exit();
                            }
                        } else {
                            $rowCnt = updateOvdrftIntrstPymnts($ovdrftIntrstPymntId, $loanRqstID, $ovdrftIntrstPymntReason, $ovdrftIntrstPymntTrnsDte, $bnkBranchID, $dateStr, $ovdrftIntrstPymntAmount);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Collateral!<br/></div>';
                                exit();
                            }
                        }


                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Overdraft Interest Payment for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("ovdrftIntrstPymntId" => $ovdrftIntrstPymntId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            }
            else if ($subPgNo == 9999) {//WORKFLOW
            }
        }
        else if ($pgNo == 16) {//CORE BANKING OPERATIONS
            if ($subPgNo == 5.1) {//WITHDRAWAL
                if ($vwtyp == "0") {// WITHDRAWAL SAVING
                } else if ($vwtyp == "1") {// MAIN PARAMETERS DATA
                } else if ($vwtyp == "2") {// CASH BREAKDOWN
                }
            }
        }
        else if ($pgNo == 17) {//CORE BANKING OPERATIONS
            if ($subPgNo == 6.1) {//WITHDRAWAL
                if ($vwtyp == "0") {// WITHDRAWAL SAVING
                } else if ($vwtyp == "1") {// MAIN PARAMETERS DATA
                } else if ($vwtyp == "2") {// CASH BREAKDOWN
                }
            }
        }
        else if ($pgNo == 19) {//CHEQUE MANAGEMENT
            if ($subPgNo == "3.4.1") {//CHEQUE BOOK REGISTER
                if ($vwtyp == "0") {//CHEQUE BOOK REGISTER
                    //var_dump($_POST);
                    $orgid = $_SESSION['ORG_ID'];

                    $chqType = isset($_POST['chqType']) ? cleanInputData($_POST['chqType']) : "";
                    $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
                    $noOfPages = isset($_POST['noOfPages']) ? cleanInputData($_POST['noOfPages']) : -1;
                    $chqNoFirst = isset($_POST['chqNoFirst']) ? cleanInputData($_POST['chqNoFirst']) : -1;
                    $chqNoLast = isset($_POST['chqNoLast']) ? cleanInputData($_POST['chqNoLast']) : -1;
                    $issueDate = isset($_POST['issueDate']) ? cleanInputData($_POST['issueDate']) : "";
                    $status = isset($_POST['status']) ? cleanInputData($_POST['status']) : "";
                    $chqBookId = isset($_POST['chqBookId']) ? cleanInputData($_POST['chqBookId']) : -1;
                    $chqBkFee = isset($_POST['chqBkFee']) ? cleanInputData($_POST['chqBkFee']) : 0.00;
                    $chqBkFeeRvnueAcctID = isset($_POST['chqBkFeeRvnueAcctID']) ? cleanInputData($_POST['chqBkFeeRvnueAcctID']) : -1;
                    $prcsOptn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : 0;
                    $dateStr = getDB_Date_time();


                    $ovrlpCnt = validateChqBookChqRangeSv($chqNoFirst, $chqNoLast, $chqType);
                    if ($chqBookId <= 0 && $ovrlpCnt > 0) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Sorry! Existing cheque number(s) fall within the range provided!<br/></div>';
                        exit();
                    }

                    $updtRwCnt = 0;
                    if ($chqType != "" &&
                            (int) $noOfPages > 0 &&
                            (float) $chqNoFirst > 0 &&
                            (float) $chqNoLast > 0 &&
                            $status != "") {
                        if ($chqBookId <= 0) {
                            
                            $chqBookId = getChqBkID();
                            $rwCnt = createChqBook($chqType, $acctID, $noOfPages, $chqNoFirst, $chqNoLast, $issueDate, $status, $chqBookId, $dateStr, $orgid,$chqBkFee, $chqBkFeeRvnueAcctID);
                            
                            if($rwCnt > 0){
                                $rslt = runChqBookFeeDeduction($chqBookId, $prcsOptn);

                                if ($rslt != 'SUCCESS') {
                                    echo $rslt;
                                    exit();
                                }
                            }
                        } else {
                            $updtRwCnt = updateChqBook($chqType, $acctID, $noOfPages, $chqNoFirst, $chqNoLast, $issueDate, $status, $chqBookId, $dateStr, $chqBkFee, $chqBkFeeRvnueAcctID);

                            //$prcRslt = getGnrlRecNm("mcf.mcf_cheque_book_register", "chq_book_id", "fee_status", $chqBookId);

                            $rslt = runChqBookFeeDeduction($chqBookId, $prcsOptn);

                            if ($rslt != 'SUCCESS') {
                                echo $rslt;
                                exit();
                            }
                            
                            if ($updtRwCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Saving and Submitting Failed!<br/></div>';
                                exit();
                            }
                        }

                        /*if ($chqBookId <= 0) {
                            $chqBookId = getChqBookID($dateStr, $usrID, $chqType);
                        }*/

                        $chqBookNo = getGnrlRecNm("mcf.mcf_cheque_book_register", "chq_book_id", "chq_book_no", $chqBookId);
 
                        echo json_encode(array("chqBookId" => $chqBookId, "chqBookNo" => $chqBookNo));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please ensure that all mandatory fields have been supplied!<br/></div>';
                        exit();
                    }
                }
            } else if ($subPgNo == "3.4.2") {//CHEQUE REGISTER
                if ($vwtyp == "0") {//CHEQUE REGISTER
                    //var_dump($_POST);
                    $orgid = $_SESSION['ORG_ID'];

                    $chqNo = isset($_POST['chqNo']) ? cleanInputData($_POST['chqNo']) : "";
                    $comments = isset($_POST['comments']) ? cleanInputData($_POST['comments']) : "";
                    $status = isset($_POST['status']) ? cleanInputData($_POST['status']) : "";
                    $chqId = isset($_POST['chqId']) ? cleanInputData($_POST['chqId']) : -1;

                    $dateStr = getDB_Date_time();


                    $usdChqCnt = hasChqBeenUsedCnta($chqNo);
                    if ($usdChqCnt > 0) {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Sorry! Cheque cannot be updated!<br/><span style="color:red !important;">Reason: Cheque has been used for a transaction</span></div>';
                        exit();
                    }

                    $updtRwCnt = 0;

                    if ($chqNo != "" &&
                            $comments != "" &&
                            $status != "") {
                        if ($chqId > 0) {
                            $updtRwCnt = updateChq($chqNo, $comments, $status, $chqId, $dateStr);
                        }

                        if ($updtRwCnt > 0) {
                            echo json_encode(array("chqId" => $chqId));
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Saving and Submitting Failed!<br/></div>';
                        }
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please ensure that all mandatory fields have been supplied!<br/></div>';
                        exit();
                    }
                }
            }
        }
        else if ($pgNo == 25) {
            //INVESTMENTS
            //var_dump($_POST);
            $dateStr = getDB_Date_time();
            if ($subPgNo == 5.2) {
                if ($vwtyp == "0") {
                    $invstmntID = isset($_POST['invstmntID']) ? cleanInputData($_POST['invstmntID']) : -1;

                    if ($actyp == "1") {
                        $applctnDate = isset($_POST['applctnDate']) ? cleanInputData($_POST['applctnDate']) : "";
                        $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                        $invstmntOfficerID = isset($_POST['invstmntOfficerID']) ? cleanInputData($_POST['invstmntOfficerID']) : -1;
                        $custType = isset($_POST['custType']) ? cleanInputData($_POST['custType']) : "";
                        $bnkCustomerID = isset($_POST['bnkCustomerID']) ? cleanInputData($_POST['bnkCustomerID']) : -1;
                        $invstmntType = isset($_POST['invstmntType']) ? cleanInputData($_POST['invstmntType']) : "";
                        $mtrtyValue = isset($_POST['mtrtyValue']) ? cleanInputData($_POST['mtrtyValue']) : 0;
                        $prdtTypeID = isset($_POST['prdtTypeID']) ? cleanInputData($_POST['prdtTypeID']) : -1;
                        $invstmntAmount = isset($_POST['invstmntAmount']) ? cleanInputData($_POST['invstmntAmount']) : 0;
                        $invstmntTenor = isset($_POST['invstmntTenor']) ? cleanInputData($_POST['invstmntTenor']) : 0;
                        $invstmntTenorType = isset($_POST['invstmntTenorType']) ? cleanInputData($_POST['invstmntTenorType']) : "";
                        $interestRate = isset($_POST['interestRate']) ? cleanInputData($_POST['interestRate']) : 0;
                        $startDate = isset($_POST['startDate']) ? cleanInputData($_POST['startDate']) : "";
                        $mtrtyDate = isset($_POST['mtrtyDate']) ? cleanInputData($_POST['mtrtyDate']) : "";
                        $shdRollover = isset($_POST['shdRollover']) ? cleanInputData($_POST['shdRollover']) : "No";
                        $pymntMthod = isset($_POST['pymntMthod']) ? cleanInputData($_POST['pymntMthod']) : "";
                        $pymntMtdSrcID = isset($_POST['pymntMtdSrcID']) ? cleanInputData($_POST['pymntMtdSrcID']) : -1;
                        $rolloverType = isset($_POST['rolloverType']) ? cleanInputData($_POST['rolloverType']) : "";
                        $benfName = isset($_POST['benfName']) ? cleanInputData($_POST['benfName']) : "";
                        $benfCntct = isset($_POST['benfCntct']) ? cleanInputData($_POST['benfCntct']) : "";
                        $payBckMthod = isset($_POST['payBckMthod']) ? cleanInputData($_POST['payBckMthod']) : "";
                        $paybackAcctID = isset($_POST['paybackAcctID']) ? cleanInputData($_POST['paybackAcctID']) : -1;
                        $currencyId = isset($_POST['currencyId']) ? cleanInputData($_POST['currencyId']) : -1;
                        $rateType = isset($_POST['rateType']) ? cleanInputData($_POST['rateType']) : "";
                        $chqNo = isset($_POST['chqNo']) ? cleanInputData($_POST['chqNo']) : "";
                        $runningInterestBal = 0;
                        $dscntRate = 0;
                        $intRate = 0;
                        if ($rateType == "Interest") {
                            $intRate = $interestRate;
                        } else {
                            $dscntRate = $interestRate;
                        }

                        $pymntDbtAcctID = 0;
                        $cshChqPymntAcctTrnsID = 0;
                        if ($pymntMthod == "Debit Account") {
                            $pymntDbtAcctID = $pymntMtdSrcID;
                        } else {
                            $cshChqPymntAcctTrnsID = $pymntMtdSrcID;
                        }


                        $optn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : -1;

                        //$dateStr = getDB_Date_time();

                        if ($applctnDate != "" &&
                                $bnkBranchID > 0 &&
                                $invstmntOfficerID > 0 &&
                                $bnkCustomerID > 0 &&
                                $prdtTypeID > 0 &&
                                $invstmntAmount > 0 &&
                                $invstmntTenor > 0 &&
                                $interestRate >= 0 &&
                                $startDate != "" &&
                                $mtrtyDate != "" &&
                                $mtrtyValue != "" &&
                                (($shdRollover == "Yes" && ($rolloverType != "")) || $shdRollover == "No")
                        ) {
                            if ($invstmntID <= 0) {
                                $rsltCnt = createInvestment($prdtTypeID, $invstmntAmount, $invstmntTenor, $invstmntTenorType, $shdRollover, $rolloverType, $benfName, $benfCntct, $intRate, $dscntRate, $rateType, $payBckMthod, $runningInterestBal, $paybackAcctID, "Incomplete", $applctnDate, $bnkBranchID, $pymntMthod, $cshChqPymntAcctTrnsID, $pymntDbtAcctID, $custType, $bnkCustomerID, $invstmntOfficerID, $invstmntType, $startDate, $mtrtyDate, $mtrtyValue, $chqNo, $dateStr);

                                if ($rsltCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Save Investment!<br/></div>';
                                    exit();
                                }
                            } else {
                                $rsltCnt = updateInvestment($invstmntID, $prdtTypeID, $invstmntAmount, $invstmntTenor, $invstmntTenorType, $shdRollover, $rolloverType, $benfName, $benfCntct, $intRate, $dscntRate, $rateType, $payBckMthod, $runningInterestBal, $paybackAcctID, $applctnDate, $bnkBranchID, $pymntMthod, $cshChqPymntAcctTrnsID, $pymntDbtAcctID, $custType, $bnkCustomerID, $invstmntOfficerID, $invstmntType, $startDate, $mtrtyDate, $mtrtyValue, $chqNo, $dateStr);

                                if ($rsltCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Update Investment!<br/></div>';
                                    exit();
                                }
                            }

                            if ($invstmntID <= 0) {
                                $invstmntID = getInvestmentID($dateStr, $usrID, $prdtTypeID);

                                if ($invstmntID <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Save Investment!<br/></div>';
                                    exit();
                                }
                            }

                            $invstmntAcctID = getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "account_id", $invstmntID);

                            $results3 = executeSQLNoParams("SELECT mcf.get_customer_name('" . $custType . "'," . $bnkCustomerID . ")");
                            $row3 = loc_db_fetch_array($results3);
                            $custNm = $row3[0];
                            $shdBeDoneCnt = 0;

                            if ($invstmntAcctID <= 0) {
                                $invstmntAcctID = getCustInvstmntAccountNo($custType, $bnkCustomerID, $prdtTypeID, $bnkBranchID);

                                if ($invstmntAcctID > 0) {
                                    $shdBeDoneCnt = createAccountTrnsBal($invstmntAcctID, $dateStr);
                                    updateInvstmntRequestAccount($invstmntID, $invstmntAcctID);

                                    if ($shdBeDoneCnt <= 0) {
                                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                        . 'Failed to Create Initial Daily Account Balance!<br/></div>';
                                        exit();
                                    }
                                } else {
                                    $ghsCrncyID = getGnrlRecID("mcf.mcf_currencies", "upper(trim(iso_code))", "crncy_id", "GHS", $orgID);

                                    $rowCnt = createCustAccount($orgID, $custType, $bnkCustomerID, '', $custNm, 'Investment', $prdtTypeID, '', '', $ghsCrncyID, 'Investment', '', 'Other Income', '', 0, 0, $bnkBranchID, -1, '', 'Authorized', 'Any to sign', $dateStr);

                                    if ($rowCnt > 0) {
                                        $invstmntAcctID = getInvstmntCustAcctID($dateStr, $orgID, $usrID, $bnkCustomerID, $prdtTypeID);
                                        if ($invstmntAcctID > 0) {
                                            $shdBeDoneCnt = createAccountTrnsBal($invstmntAcctID, $dateStr);
                                            updateInvstmntRequestAccount($invstmntID, $invstmntAcctID);
                                        } else {
                                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                            . 'Failed to Create Account for Investment!<br/></div>';
                                            exit();
                                        }

                                        if ($shdBeDoneCnt <= 0) {
                                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                            . 'Failed to Create Initial Daily Account Balance!<br/></div>';
                                            exit();
                                        }
                                    }
                                }
                            } else {
                                updateInvstmntRequestAccount($invstmntID, $invstmntAcctID);
                            }

                            if ($optn == 0) {
                                echo json_encode(array("invstmntID" => $invstmntID));
                                exit();
                            } else {

                                if ($invstmntType == "Fixed Deposit" && $pymntMthod == "Cash/Cheque Payment") {
                                    if ((int) $pymntMtdSrcID <= 0) {
                                        echo '<div><span style="color:red;font-weight:bold !important;">'
                                        . 'Failed to submit Investment for Authorization</br>Please capture a Cash/Cheque payment document first!<br/></span></div>';
                                        exit();
                                    } else {
                                        $cshChqPymntAcctID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $cshChqPymntAcctTrnsID);
                                        //CHECK FUNDS ON DEPOSIT TRANSACTION VOUCHER
                                        $fundsAvailable = getAcctCollateralCurrAvlblBal($cshChqPymntAcctID);
                                        if ((float) $fundsAvailable <= 0 || (float) $fundsAvailable < (float) $invstmntAmount) {
                                            echo '<div><span style="color:red;font-weight:bold !important;">'
                                            . 'Funds Check Failed</br>Deposit transaction amount is not sufficient to cover this Investment!<br/></span></div>';
                                            exit();
                                        }
                                    }
                                } else {
                                    if ((int) $pymntDbtAcctID <= 0) {
                                        echo '<div><span style="color:red;font-weight:bold !important;">'
                                        . 'Invalid Payment Account</br>Please provide and re-submit!<br/></span></div>';
                                        exit();
                                    }
                                    //check for funds on debit account;
                                    $fundsAvailable = getAcctCollateralCurrAvlblBal($pymntDbtAcctID);
                                    if ((float) $fundsAvailable <= 0 || (float) $fundsAvailable < (float) $invstmntAmount) {
                                        echo '<div><span style="color:red;font-weight:bold !important;">'
                                        . 'Funds Check Failed</br>Payment Account does not have sufficient funds for this Investment!<br/></span></div>';
                                        exit();
                                    }
                                }

                                $uptCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                                        . "status = 'Unauthorized', last_update_by = $usrID, last_update_date = '$dateStr' "
                                        . "WHERE invstmnt_id = $invstmntID");

                                if ($uptCnt <= 0) {
                                    echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                    . 'Failed to Update Investment to Unauthorized!<br/></div>';
                                    exit();
                                } else {
                                    echo json_encode(array("invstmntID" => $invstmntID));
                                    exit();
                                }
                            }
                        } else {
                            echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                            . 'Sorry! Investment Data is supplied is Incomplete!<br/></div>';
                            exit();
                        }
                    } else if ($actyp == "2") {

                        $optn = isset($_POST['optn']) ? cleanInputData($_POST['optn']) : -1;

                        if ($optn == 0) {//WITHDRAW
                            $uptCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                                    . "status = 'Withdrawn', last_update_by = $usrID, last_update_date = '$dateStr' "
                                    . "WHERE invstmnt_id = $invstmntID");

                            if ($uptCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Investment to WITHDRAWN!<br/></div>';
                                exit();
                            } else {
                                echo json_encode(array("invstmntID" => $invstmntID));
                                exit();
                            }
                        } else if ($optn == 1) {//REJECT
                            $uptCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                                    . "status = 'Rejected', last_update_by = $usrID, last_update_date = '$dateStr' "
                                    . "WHERE invstmnt_id = $invstmntID");

                            if ($uptCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Investment to REJECTED!<br/></div>';
                                exit();
                            } else {
                                echo json_encode(array("invstmntID" => $invstmntID));
                                exit();
                            }
                        } else if ($optn == 2) {//VOID
                            $uptCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                                    . "status = 'Voided', last_update_by = $usrID, last_update_date = '$dateStr' "
                                    . "WHERE invstmnt_id = $invstmntID");

                            if ($uptCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Investment to VOIDED!<br/></div>';
                                exit();
                            } else {
                                echo json_encode(array("invstmntID" => $invstmntID));
                                exit();
                            }
                        } else {//AUTHORIZE
                            $uptCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                                    . "status = 'Authorized', last_update_by = $usrID, last_update_date = '$dateStr' "
                                    . "WHERE invstmnt_id = $invstmntID");

                            if ($uptCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Investment to AUTHORIZED!<br/></div>';
                                exit();
                            } else {
                                echo json_encode(array("invstmntID" => $invstmntID));
                                exit();
                            }
                        }
                    } else if ($actyp == "3") {
                        $prcsOptn = isset($_POST['prcsOptn']) ? cleanInputData($_POST['prcsOptn']) : "0";
                        $strSql = "SELECT distinct a.invstmnt_id, a.invstmnt_type, a.pymnt_method, pymnt_dbt_acct_id, cash_chq_pymnt_acct_trns_id, a.amount
                            FROM mcf.mcf_investments a WHERE a.invstmnt_id = $invstmntID";

                        $invstmntType = "Fixed Deposit";
                        $pymntMthod = "";
                        $pymntDbtAcctID = -1;
                        $cshChqPymntAcctTrnsID = -1;
                        $invstmntAmount = 0.00;

                        $result = executeSQLNoParams($strSql);
                        while ($row = loc_db_fetch_array($result)) {
                            $invstmntType = $row[1];
                            $pymntMthod = $row[2];
                            $pymntDbtAcctID = (int) $row[3];
                            $cshChqPymntAcctTrnsID = (int) $row[4];
                            $invstmntAmount = (float) $row[5];
                        }

                        if ($invstmntType == "Fixed Deposit" && $pymntMthod == "Cash/Cheque Payment") {
                            if ((int) $cshChqPymntAcctTrnsID <= 0) {
                                echo '<div><span style="color:red;font-weight:bold !important;">'
                                . 'Failed to process Investment</br>Please capture a Cash/Cheque payment document first!<br/></span></div>';
                                exit();
                            } else {
                                $cshChqPymntAcctID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $cshChqPymntAcctTrnsID);
                                //CHECK FUNDS ON DEPOSIT TRANSACTION VOUCHER
                                $fundsAvailable = getAcctCollateralCurrAvlblBal($cshChqPymntAcctID);
                                if ((float) $fundsAvailable <= 0 || (float) $fundsAvailable < (float) $invstmntAmount) {
                                    echo '<div><span style="color:red;font-weight:bold !important;">'
                                    . 'Funds Check Failed</br>Deposit transaction amount is not sufficient to cover this Investment!<br/></span></div>';
                                    exit();
                                }
                            }
                        } else {
                            if ((int) $pymntDbtAcctID <= 0) {
                                echo '<div><span style="color:red;font-weight:bold !important;">'
                                . 'Invalid Payment Account</br>Please provide and re-submit!<br/></span></div>';
                                exit();
                            }
                            //check for funds on debit account;
                            $fundsAvailable = getAcctCollateralCurrAvlblBal($pymntDbtAcctID);
                            if ((float) $fundsAvailable <= 0 || (float) $fundsAvailable < (float) $invstmntAmount) {
                                echo '<div><span style="color:red;font-weight:bold !important;">'
                                . 'Funds Check Failed</br>Payment Account does not have sufficient funds for this Investment!<br/></span></div>';
                                exit();
                            }
                        }

                        $rslt = runFixedDepositInvstment($invstmntID, $prcsOptn);

                        if ($rslt == 'SUCCESS') {
                            echo "SUCCESS";
                            exit();
                        } else {
                            echo $rslt; //"SORRY";
                            exit();
                        }
                    }
                }
            }
            else if ($subPgNo == 5.3) {//INVESTMENT LIQUIDATION
                //var_dump($_POST);
                $lqdtnId = isset($_POST['lqdtnId']) ? cleanInputData($_POST['lqdtnId']) : -1;
                $lqdtnTrnsDte = isset($_POST['lqdtnTrnsDte']) ? cleanInputData($_POST['lqdtnTrnsDte']) : '';
                $bnkBranchID = isset($_POST['bnkBranchID']) ? cleanInputData($_POST['bnkBranchID']) : -1;
                $invstmntID = isset($_POST['invstmntID']) ? cleanInputData($_POST['invstmntID']) : -1;
		$lqdtnOfficerID = isset($_POST['lqdtnOfficerID']) ? cleanInputData($_POST['lqdtnOfficerID']) : -1;
                $lqdtnReason = isset($_POST['lqdtnReason']) ? cleanInputData($_POST['lqdtnReason']) : '';
                $lqdtnTtlInterest = isset($_POST['lqdtnTtlInterest']) ? cleanInputData($_POST['lqdtnTtlInterest']) : '';

                $prcsOptn = isset($_POST['prcsOptn']) ? cleanInputData($_POST['prcsOptn']) : 0;

                $dateStr = getDB_Date_time();

                $rslt = 'FAILURE';

                if ($actyp == 1) {
                    $invstmntID = (int) getGnrlRecNm("mcf.mcf_investments_liquidation", "lqdtn_id", "invstmnt_id", $lqdtnId);
                    $payBackMethod = getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "pay_back_method", $invstmntID);
                    $payBackAcctID = (int) getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "payback_crdt_acct_id", $invstmntID);
                    $payBackAcctIDType = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_type", $payBackAcctID);
					$invAccountID = getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "account_id", $invstmntID);

                    $invstmntLbltyAccntID = "";

                    $trnsDte = getStartOfDayYMD();
                    $docHdrID = -1;
                    $trnsAmnt = 0.00;
                    $dbtAccntID = -1;
                    $dbtAccntIncrsOrDcrs = "";
                    $crdtAccntID = -1;
                    $crdtAccntIncrsOrDcrs = "";
                    $trnsAmnt2 = 0.00;
                    $dbtAccntID2 = -1;
                    $dbtAccntIncrsOrDcrs2 = "";
                    $crdtAccntID2 = -1;
                    $crdtAccntIncrsOrDcrs2 = "";
                    $trnsCrncyID = -1;
                    $lineid = -1;
                    $detaildTrnsDesc = "";
                    $doctype = "";
                    $prcsActn = "Processing";
                    $prcsActnStatus = "Processed";
                    $evntTyp = "P";
                    $feeFlat = 0;
                    $feePrcnt = 0;
                    $ttlFees = 0;
                    $rvnueAcctID = -1;
                    $feeType = "No Fee";
                    $invstmntSts = "Unprocessed";
					
					$trnsAmntIA = 0.00;

                    $dsply = "";
                    $nwMsg = "";
                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Starting Investment Liquidation.......<br/></span>";

                    if ($payBackMethod == "Credit Account") {

                    } else {
                        //Cheque Payment
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Sorry!!<br/>Cheque Payments don't require Processing!</span>";
                        echo $dsply;
                        exit();
                    }

                    if ($prcsOptn == 1) {
                       $invstmntSts  = "Processed";
                    }

                    //org.get_dflt_accnt_id($prsnid,interest_rcvbl_acct_id)
                    //GET TRANSACTION DETAILS FOR ACCOUNTING
                    $strSql = "SELECT lqdtn_id, a.amount, /*1*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.invstmnt_liability_accnt_id) invstmnt_liability_accnt_id, 'D', /*3*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.interest_payment_crdt_accnt_id) customer_gl_liability_1, 'I', /*5*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.accrued_interest_dbt_accnt_id) interest_expense_account_id, 'I', /*7*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.interest_payment_crdt_accnt_id) customer_gl_liability_2, 'I', /*9*/
                        coalesce(nullif(c.invstmnt_charge_fees,''),'No Fee') invstmnt_charge_fees, c.invstmnt_fees_flat, c.invstmnt_fees_percent, /*12*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.interest_payment_crdt_accnt_id) customer_gl_liability_1, 'D', /*14*/
                        org.get_accnt_id_brnch_eqv(f.branch_id, e.invstmnt_fee_crdt_accnt_id) invstmnt_fee_crdt_accnt_id, 'I', /*16*/
                        d.crncy_id, b.current_interest_value, /*18*/
                        'Investment Liquidation '||b.lqdtn_trnsctn_no||' for Investment No. '||a.trnsctn_no||' for Customer '||mcf.get_customer_name(a.cust_type, a.cust_id), /*19*/
                        'Investment Liquidation', product_type /*21*/
                        FROM mcf.mcf_investments a, mcf.mcf_investments_liquidation b, mcf.mcf_prdt_savings c, mcf.mcf_currencies d,
                        mcf.mcf_prdt_savings_stdevnt_accntn e, mcf.mcf_accounts f
                        WHERE a.invstmnt_id = b.invstmnt_id AND a.svngs_product_id = c.svngs_product_id
                        AND c.currency_id = d.crncy_id AND c.svngs_product_id = e.svngs_product_id
                        AND f.account_id = a.pymnt_dbt_acct_id
                        AND b.status = 'Authorized'
                        /*AND b.lqdtn_invstmnt_status = '$invstmntSts'*/
                      AND lqdtn_id = $lqdtnId";

                    $result1 = executeSQLNoParams($strSql);
                    $rowCnt1 = loc_db_num_rows($result1);
                    if ($rowCnt1 <= 0) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>No Investment Liquidation record exists for Processing and Accounting!</span>";
                        echo $dsply;
                        exit();
                    }

                    while ($row = loc_db_fetch_array($result1)) {
                        $docHdrID = (int) $row[0];
                        $trnsAmnt = (float) $row[1];
                        $invstmntLbltyAccntID = (int) $row[2];
                        $dbtAccntID = (int) $row[2];
                        $dbtAccntIncrsOrDcrs = $row[3];
                        $crdtAccntID = (int) $row[4];
                        $crdtAccntIncrsOrDcrs = $row[5];
                        $trnsAmnt2 = (float) $row[18];
                        $dbtAccntID2 = (int) $row[6];
                        $dbtAccntIncrsOrDcrs2 = $row[7];
                        $crdtAccntID2 = (int) $row[8];
                        $crdtAccntIncrsOrDcrs2 = $row[9];
                        $trnsCrncyID = (int) $row[17];
                        $lineid = (int) $row[0];
                        $detaildTrnsDesc = $row[19];
                        $doctype = $row[20];

                        $feeFlat = $row[11];
                        $feePrcnt = $row[12];
                        $ttlFees = 0;
                        $feeType = $row[10];
                        $rvnueAcctID = (int) $row[16];
                        $crdtAccntIncrsOrDcrs3= "I";
                        $ttlFeeDbtAcctID = (int) $row[4];
                        $dbtAccntIncrsOrDcrs3 = "D";

                    }



                    if($payBackAcctIDType == "Savings"){
                        $strSql = "SELECT lqdtn_id, a.amount, /*1*/
                            org.get_accnt_id_brnch_eqv(f.branch_id, e.invstmnt_liability_accnt_id) invstmnt_liability_accnt_id, 'D', /*3*/
                            /*org.get_accnt_id_brnch_eqv(f.branch_id, e.interest_payment_crdt_accnt_id)*/
                            mcf.invstmnt_cstmr_liablty_accntid(a.invstmnt_id) customer_gl_liability_1, 'I', /*5*/
                            org.get_accnt_id_brnch_eqv(f.branch_id, e.accrued_interest_dbt_accnt_id) interest_expense_account_id, 'I', /*7*/
                            mcf.invstmnt_cstmr_liablty_accntid(a.invstmnt_id) customer_gl_liability_2, 'I', /*9*/
                            coalesce(nullif(c.invstmnt_charge_fees,''),'No Fee') invstmnt_charge_fees, c.invstmnt_fees_flat, c.invstmnt_fees_percent, /*12*/
                            mcf.invstmnt_cstmr_liablty_accntid(a.invstmnt_id) customer_gl_liability_1, 'D', /*14*/
                            org.get_accnt_id_brnch_eqv(f.branch_id, e.invstmnt_fee_crdt_accnt_id) invstmnt_fee_crdt_accnt_id, 'I', /*16*/
                            d.crncy_id, b.current_interest_value, /*18*/
                            'Investment Liquidation '||b.lqdtn_trnsctn_no||' for Investment No. '||a.trnsctn_no||' for Customer '||mcf.get_customer_name(a.cust_type, a.cust_id), /*19*/
                            'Investment Liquidation', product_type /*21*/
                            FROM mcf.mcf_investments a, mcf.mcf_investments_liquidation b, mcf.mcf_prdt_savings c, mcf.mcf_currencies d,
                            mcf.mcf_prdt_savings_stdevnt_accntn e,
                            mcf.mcf_accounts f WHERE a.invstmnt_id = b.invstmnt_id AND f.product_type_id = c.svngs_product_id
                            AND c.currency_id = d.crncy_id AND c.svngs_product_id = e.svngs_product_id
                            AND b.status = 'Authorized' AND a.account_id = f.account_id
                            --AND a.pymnt_dbt_acct_id = f.account_id
                            /*AND b.lqdtn_invstmnt_status = '$invstmntSts'*/
                          AND lqdtn_id = $lqdtnId";
                    }

                    //GET LOAN

                    $result = executeSQLNoParams($strSql);
                    $rowCnt = loc_db_num_rows($result);
                    if ($rowCnt <= 0) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>No Investment Liquidation record exists for Processing and Accounting!</span>";
                        echo $dsply;
                        exit();
                    }

                    while ($row = loc_db_fetch_array($result)) {
                        $docHdrID = (int) $row[0];
                        $trnsAmnt = (float) $row[1];
                        $dbtAccntID = (int) $row[2];
                        $dbtAccntIncrsOrDcrs = $row[3];
                        $crdtAccntID = (int) $row[4];
                        $crdtAccntIncrsOrDcrs = $row[5];
                        $trnsAmnt2 = (float) $row[18];
                        $dbtAccntID2 = (int) $row[6];
                        $dbtAccntIncrsOrDcrs2 = $row[7];
                        $crdtAccntID2 = (int) $row[8];
                        $crdtAccntIncrsOrDcrs2 = $row[9];
                        $trnsCrncyID = (int) $row[17];
                        $lineid = (int) $row[0];
                        $detaildTrnsDesc = $row[19];
                        $doctype = $row[20];

                        $feeFlat = $row[11];
                        $feePrcnt = $row[12];
                        $ttlFees = 0;
                        $feeType = $row[10];
                        $rvnueAcctID = (int) $row[16];
                        $crdtAccntIncrsOrDcrs3= "I";
                        $ttlFeeDbtAcctID = (int) $row[4];
                        $dbtAccntIncrsOrDcrs3 = "D";

                    }

                    if ($prcsOptn == 1) {
                        $trnsAmnt = -1 * (float) $trnsAmnt;
                        $trnsAmnt2 = -1 * (float) $trnsAmnt2;
                        $detaildTrnsDesc = "REVERSAL - " . $detaildTrnsDesc;
                        $prcsActn = "Voiding";
                        $prcsActnStatus = "Unprocessed";
                        $evntTyp = "R";
                    }

                    $ttlWriteOffAmnt = round($trnsAmnt,2) + round($trnsAmnt2,2);
					$trnsAmntIA = round($trnsAmnt,2);

                    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

                    $trnsType1 = "DEPOSIT";
					$trnsType1IA = "WITHDRAWAL";
                    $acctstatus = "";
                    $acctcustomer = "";
                    $acctlien = 0;
                    $mandate = "";
                    $wtdrwllimitno = -1;
                    $wtdrwllimitamt = 0;
                    $wtdrwllimittype = "";
                    $dcrsORIncrs = "I";
					$dcrsORIncrsIA = "D";
                    $lqdtnTrnsctnID = getGnrlRecNm("mcf.mcf_investments_liquidation", "lqdtn_id", "lqdtn_trnsctn_no", $lqdtnId);
                    $invstmntTrnsctnID = getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "trnsctn_no", $invstmntID);
                    $payBackAcctNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $payBackAcctID);

                    $nwMsg = "";
                    $dte = date('ymdHis');
                    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

                    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
					$gnrtdTrnsNoIA = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1IA)] . "-" . $usrTrnsCode . "-" . $dte;

                    if ((float)$ttlWriteOffAmnt != 0) {
                        //CUSTOMER BALANCE UPDATE AND ACCOUNT TRANSACTION
                        //get interest waived

                        $acntRslt = get_OneCustAccntInfo($payBackAcctID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        if($prcsOptn == 1){//REVERSAL
                            $dcrsORIncrs = "D";
                            $trnsType1 = "WITHDRAWAL";
			                $ttlWriteOffAmnt = -1 * $ttlWriteOffAmnt;
                            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
				
				            $dcrsORIncrsIA = "I";
                            $trnsType1IA = "DEPOSIT";
							$trnsAmntIA =  -1 * $trnsAmntIA;
                            $gnrtdTrnsNoIA = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1IA)] . "-" . $usrTrnsCode . "-" . $dte;
                        }

                        $recCnt = 0;
                        if($prcsOptn == 1){//REVERSAL
                            $recCnt = createAccountTrns($payBackAcctID, $dateStr, "Paperless", $gnrtdTrnsNo, "Investment Liquidation Reversal for - Transaction No." . $lqdtnTrnsctnID, "DR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
							createAccountTrns($invAccountID, $dateStr, "Paperless", $gnrtdTrnsNoIA, "Investment Liquidation Reversal for - Transaction No." . $lqdtnTrnsctnID, "CR", (float) $trnsAmntIA, $trnsType1IA, (float) $trnsAmntIA, "Self", "", "", "", "", "", $gnrtdTrnsNoIA, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {//WRIRE-OFF
                            $recCnt = createAccountTrns($payBackAcctID, $dateStr, "Paperless", $gnrtdTrnsNo, "Investment Liquidation - Transaction No." . $lqdtnTrnsctnID, "CR", (float) $ttlWriteOffAmnt, $trnsType1, (float) $ttlWriteOffAmnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
							createAccountTrns($invAccountID, $dateStr, "Paperless", $gnrtdTrnsNoIA, "Investment Liquidation - Transaction No." . $lqdtnTrnsctnID, "DR", (float) $trnsAmntIA, $trnsType1IA, (float) $trnsAmntIA, "Self", "", "", "", "", "", $gnrtdTrnsNoIA, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        }

                        if ($recCnt <= 0) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Investment Liquidation Account Transactions for Customer!</span>";
                            echo $dsply;
                            exit();
                        }

                        $docTypPrfx1 =  $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($payBackAcctID, $ttlWriteOffAmnt, 0.00, 0.00, $trnsType1, $dcrsORIncrs, $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

						$docTypPrfx1IA =  $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1IA)];
                        updateCstmrAcntBalances($invAccountID, $trnsAmntIA, 0.00, 0.00, $trnsType1IA, $dcrsORIncrsIA, $docTypPrfx1IA, $docHdrID, $dateStr11, $nwMsg);
                        if ($shdActnBeDone === FALSE) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Account Balances with Total Liquidation Amount + Interest!</br>$nwMsg</span>";
                            echo $dsply;
                            exit();
                        }
                    }

                    //LOAN BALANCE WRITE OFF => DB BAD DEBT ACCOUNT and CR PRINCIPAL RECEIVABLE ACCOUNT
                    $shdActnBeDone = createGnrlAccntngTwoEvnts($docHdrID, $trnsAmnt, $invstmntLbltyAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs3, $trnsAmnt2, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Investment Amount", $detaildTrnsDesc . " - Interest Earned", $doctype, $evntTyp, $nwMsg);
//                    $shdActnBeDone = createGrnlAccntng($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs,
//                            $trnsCrncyID, $lineid, $detaildTrnsDesc." - Principal Balance", $doctype, $nwMsg);

                    if ($shdActnBeDone === FALSE) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Investment Liquidation!</span>";
                        echo $dsply;
                        exit();
                    } else {

                        if($feeType == "Liquidating"){
                            $feeFlat = $row[11];
                            $feePrcnt = $row[12];
                            $ttlFees = 0;

                            if((float)$feeFlat > 0 && (float)$feePrcnt > 0){
                                $ttlFees = (float)$feeFlat + (1/100 * (float) $row[18]);
                            } else if((float)$feeFlat > 0){
                                $ttlFees = (float)$feeFlat;
                            } else if ((float)$feePrcnt > 0){
                                $ttlFees = (float)$feePrcnt;
                            }

                            if($ttlFees > 0){
                                $ttlFees = round($ttlFees,2);

                                $trnsType1 = "WITHDRAWAL";
                                $dcrsORIncrs = "D";


                                if($prcsOptn == 1){//REVERSAL
                                    $dcrsORIncrs = "I";
                                    $trnsType1 = "DEPOSIT";
                                    $ttlFees = -1 * $ttlFees;
                                }

                                $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . date('ymdHis');

                                $recCnt = 0;
                                if($prcsOptn == 1){//REVERSAL
                                    $recCnt = createAccountTrns($payBackAcctID, $dateStr, "Paperless", $gnrtdTrnsNo, "Investment Liquidation Fee Revenue Reversal for - Transaction No." . $invstmntTrnsctnID, "DR", (float) $ttlFees, $trnsType1, (float) $ttlFees, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                                } else {//WRIRE-OFF
                                    $recCnt = createAccountTrns($payBackAcctID, $dateStr, "Paperless", $gnrtdTrnsNo, "Investment Liquidation Fee Revenue - Transaction No." . $invstmntTrnsctnID, "DR", (float) $ttlFees, $trnsType1, (float) $ttlFees, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                                }

                                if ($recCnt <= 0) {
                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Investment Liquidation Account Transactions for Customer!</span>";
                                    echo $dsply;
                                    exit();
                                }

                                $docTypPrfx1 =  $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)];
                                $dateStr11 = getFrmtdDB_Date_time();
                                $shdActnBeDone = updateCstmrAcntBalances($payBackAcctID, $ttlFees, 0.00, 0.00, $trnsType1, $dcrsORIncrs, $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                                if ($shdActnBeDone === FALSE) {
                                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Account Balances with Total Liquidation Fees!</br>$nwMsg</span>";
                                    echo $dsply;
                                    exit();
                                }

                                $shdActnBeDone = createGrnlAccntngOneEvnt($docHdrID, $ttlFees, $ttlFeeDbtAcctID, $dbtAccntIncrsOrDcrs3, $rvnueAcctID, $crdtAccntIncrsOrDcrs, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Investment Fees", $doctype, $evntTyp, $nwMsg);
                                //$shdActnBeDone = createGnrlAccntngTwoEvnts($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsAmnt2, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $trnsCrncyID, $lineid, $detaildTrnsDesc . " - Investment Amount", $detaildTrnsDesc . " - Interest Earned", $doctype, $evntTyp, $nwMsg);

                            }
                        }

                        if ($shdActnBeDone === FALSE) {
                            $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting for Investment Liquidation Fees!</span>";
                            echo $dsply;
                            exit();
                        } else {
                            $lqdtnStatus = "Processed";
                            if($prcsOptn == 1){//REVERSAL
                                $lqdtnStatus = "Unprocessed";
                            }
                            $affctd += execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET lqdtn_invstmnt_status = '$lqdtnStatus',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                            $dsply .= "<span style=\"color:green;font-weight:bold;\">Investment Liquidation " . $prcsActn . " and Accounting done Successfully<br/></span>";
                        }


                        //UPDATE LOAN WRITE OFF
                        /*$recCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET writeoff_status = '$prcsActnStatus', "
                                . "last_update_by = $usrID, last_update_date = '$dateStr', trns_date = '$trnsDte' WHERE lqdtn_id = $lqdtnId");*/

                        //UPDATE DISBURSEMENT DETAIL ZERO out INTEREST BALANCE and PRINCIPAL BALANCE => Interrogate
                        //FOR OVERDRAFTS =>
                    }
                    echo $dsply;
                    exit();
                }
                else if ($actyp == 3) {
                    //WITHDRAWN
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET status = 'Withdrawn',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to WITHDRAW Investment Liquidation!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("lqdtnId" => $lqdtnId));
                    exit();
                }
                else if ($actyp == 4) {
                    //REJECT
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET status = 'Rejected',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REJECT Investment Liquidation!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("lqdtnId" => $lqdtnId));
                    exit();
                }
                else if ($actyp == 5) {
                    //AUTHORIZE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET status = 'Authorized',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr', authorized_by_person_id = $prsnid, autorization_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                    if($updateCnt > 0) {
                        $invstmntID = (int)getGnrlRecNm("mcf.mcf_investments_liquidation", "lqdtn_id", "invstmnt_id", $lqdtnId);
                        $ExptdTtlInterest = (float)getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "(maturity_value - amount)", $invstmntID);
                        $ActualTtlInterest = (float)getGnrlRecNm("mcf.mcf_investments_liquidation", "lqdtn_id", "current_interest_value", $lqdtnId);
                        $invstmntStatus = "Terminated";

                        if($ExptdTtlInterest == $ActualTtlInterest){
                            $invstmntStatus = "Matured";
                        }

                        $updateCnt1 = execUpdtInsSQL("UPDATE mcf.mcf_investments SET invstmnt_status = '$invstmntStatus', running_interest_bal = $ActualTtlInterest, "
                                . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE invstmnt_id = $invstmntID");
                    }

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to AUTHORIZE Investment Liquidation!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("lqdtnId" => $lqdtnId));
                    exit();
                }
                else if ($actyp == 6) {
                    //REVERSE
                    $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET status = 'Reversed',"
                            . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                    if ($updateCnt <= 0) {
                        echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                        . 'width:18px;height:18px;"/>Failed to REVERSE Loan Write-Off!<br/></div>';
                        exit();
                    }

                    echo json_encode(array("lqdtnId" => $lqdtnId));
                    exit();
                }
                else {
                    if ($lqdtnReason != "" && $invstmntID != -1 && $invstmntID > 0) {
                        if ($lqdtnId <= 0) {
                            $lqdtnId = getInvestmentLqdtnID();
			    $rowCnt = createInvestmentLqdtn($lqdtnId, $invstmntID, $lqdtnOfficerID, $lqdtnTrnsDte, $lqdtnReason, $bnkBranchID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Save Liquidation!<br/></div>';
                                exit();
                            }
                        } else {
                            $rowCnt = updateInvestmentLqdtn($lqdtnId, $invstmntID, $lqdtnOfficerID, $lqdtnTrnsDte, $lqdtnReason, $bnkBranchID, $dateStr);
                            if ($rowCnt <= 0) {
                                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                                . 'Failed to Update Liquidation!<br/></div>';
                                exit();
                            }
                        }


                        if ($actyp == 99) {
                            //SUBMIT
                            $updateCnt = execUpdtInsSQL("UPDATE mcf.mcf_investments_liquidation SET status = 'Unauthorized',"
                                    . "last_update_by = $usrID, last_update_date = '$dateStr' WHERE lqdtn_id = $lqdtnId");

                            if ($updateCnt <= 0) {
                                echo '<div><img src="cmn_images/info.png" style="float:left;margin-right:5px;'
                                . 'width:18px;height:18px;"/>Failed to SUBMIT Investment Liquidation for AUTHORIZATION!<br/></div>';
                                exit();
                            }
                        }

                        echo json_encode(array("lqdtnId" => $lqdtnId));
                        exit();
                    } else {
                        echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                        . 'Please complete all required fields!<br/></div>';
                        exit();
                    }
                }
            }
        }
        else if ($pgNo == 1060) {
            //Submit Data Change Request to Workflow
            $acct_trns_id = isset($_POST['acct_trns_id']) ? cleanInputData($_POST['acct_trns_id']) : -1;
            $RoutingID = -1;
            if (isset($_POST['RoutingID'])) {
                $RoutingID = cleanInputData($_POST['RoutingID']);
            }
            if ($RoutingID <= 0) {
                $srcDocID = $acct_trns_id;
                $srcDocType = "Loan Transactions";
                $routingID = -1;
                $inptSlctdRtngs = "";
                $actionToPrfrm = "Initiate";
                echo mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
            } else {
                $actiontyp = isset($_POST['actiontyp']) ? $_POST['actiontyp'] : "";
                $usrID = $_SESSION['USRID'];
                $arry1 = explode(";", $actiontyp);
                for ($r = 0; $r < count($arry1); $r++) {
                    if ($arry1[$r] !== "") {
                        $srcDocID = -1;
                        $srcDocType = "Loan Transactions";
                        $inptSlctdRtngs = "";
                        $routingID = $RoutingID;
                        $actionToPrfrm = $arry1[$r];
                        echo mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                    }
                }
            }
        }
        if ($actyp == 2) {

            //var_dump($file_name);
            //print_r($_FILES);
            //print_r($_POST);
            //1. Assign Regions codes in a table
            //2. Assign cities codes in a table
            //3. Fetch all regions and codes into an array resultRgn
            //4. Fetch all cities and codes into an array resultCty
            //5. Fetch all agents into array resultAgnts
            //6.
        }
    } else if ($qstr == "DELETE") {
        if ($pgNo == 11) {
            if ($subPgNo == 1.1) {
                if ($actyp == 1) {
                    //NATIONAL ID
                    if ($PKeyID > 0) {

                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custPrsnID = isset($_POST['custPrsnID']) ? cleanInputData($_POST['custPrsnID']) : -1;
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only National IDs for Customers with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deletePrsnCustNtnlID($PKeyID, "Individual Customer", $custPrsnID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "National ID Deleted Successfully";
                            } else {
                                echo "Failed to Delete National ID";
                            }
                            exit();
                        }
                    }
                } else {
                    //INDIVIDUAL CUSTOMER
                    if ($PKeyID > 0) {
                        $rcdExstMsg = "";

                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custRecExists = isCustomerUsdForTrns($PKeyID, $rcdExstMsg);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Customers with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            if ($custRecExists) {
                                echo "SORRY! CUSTOMER DELETION FAILED</br>" . $rcdExstMsg;
                                exit();
                            }

                            $rowCnt = deleteIndividualCustomer($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Customer Deleted Successfully";
                            } else {
                                echo "Failed to Delete Customer";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 1.2) {
                if ($actyp == 1) {
                    //CORP DIRECTORS
                    if ($PKeyID > 0) {

                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Directors for Corporate Custumers with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteCorpDrctr($PKeyID, $custID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "Director Deleted Successfully";
                            } else {
                                echo "Failed to Delete Director";
                            }
                            exit();
                        }
                    }
                } else {
                    //CORPORATE CUSTOMER
                    if ($PKeyID > 0) {
                        $rcdExstMsg = "";
                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custRecExists = isCustomerUsdForTrns($PKeyID, $rcdExstMsg);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Customers with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            if ($custRecExists) {
                                echo "SORRY! PERSON DELETION FAILED</br>" . $rcdExstMsg;
                                exit();
                            }

                            $rowCnt = deleteCorpOrGrpCustomer($PKeyID, $subPgNo);
                            if ($rowCnt > 0) {
                                echo "Customer Deleted Successfully";
                            } else {
                                echo "Failed to Delete Customer";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 1.3) {
                if ($actyp == 1) {
                    //CORP DIRECTORS
                    if ($PKeyID > 0) {

                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custID = isset($_POST['custID']) ? cleanInputData($_POST['custID']) : -1;
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Members of Groups with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteGrpMember($PKeyID, $custID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "Member Deleted Successfully";
                            } else {
                                echo "Member to Delete Director";
                            }
                            exit();
                        }
                    }
                } else {
                    //CUSTOMER GROUPR
                    if ($PKeyID > 0) {
                        $rcdExstMsg = "";
                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custRecExists = isCustomerUsdForTrns($PKeyID, $rcdExstMsg);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Customers with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            if ($custRecExists) {
                                echo "SORRY! CUSTOMER DELETION FAILED</br>" . $rcdExstMsg;
                                exit();
                            }

                            $rowCnt = deleteCorpOrGrpCustomer($PKeyID, $subPgNo);
                            if ($rowCnt > 0) {
                                echo "Customer Deleted Successfully";
                            } else {
                                echo "Failed to Delete Customer";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 1.4) {
                if ($actyp == 1) {
                    //NATIONAL ID
                    if ($PKeyID > 0) {

                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custPrsnID = isset($_POST['custPrsnID']) ? cleanInputData($_POST['custPrsnID']) : -1;
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only National IDs for Persons with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            //CHECK IF PERSON HAS BEEN USED FOR TRANSACTION


                            $rowCnt = deletePrsnCustNtnlID($PKeyID, "Other Person", $custPrsnID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "National ID Deleted Successfully";
                            } else {
                                echo "Failed to Delete National ID";
                            }
                            exit();
                        }
                    }
                } else {
                    //OTHER PERSONS
                    if ($PKeyID > 0) {

                        $rcdExstMsg = "";
                        $custStatus = isset($_POST['custStatus']) ? cleanInputData($_POST['custStatus']) : "";
                        $custRecExists = isPersonUsdForTrns($PKeyID, $rcdExstMsg);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($custStatus == "Incomplete" || $custStatus == "Rejected" || $custStatus == "Withdrawn")) {
                            echo "Sorry! Only Persons with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            if ($custRecExists) {
                                echo "SORRY! CUSTOMER DELETION FAILED</br>" . $rcdExstMsg;
                                exit();
                            }

                            $rowCnt = deletePerson($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Customer Deleted Successfully";
                            } else {
                                echo "Failed to Delete Person";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 1.6) {
                if ($actyp == 1) {
                    $colNum = isset($_POST['colNum']) ? (int) (cleanInputData($_POST['colNum'])) : -1;
                    $extrdataID = isset($_POST['extrdataID']) ? (int) (cleanInputData($_POST['extrdataID'])) : -1;
                    echo deleteMcfExtrDataCol($extrdataID, $colNum);
                }
            }
        } else if ($pgNo == 12) {//PRODUCTS
            if ($subPgNo == 7.1) {//SAVINGS PRODUCT
                //IMPLEMENT CHECKS
                if ($vwtyp == "5") {//DELETE COT LINE
                    if ($PKeyID > 0) {
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";
                        $rowID = isset($_POST['rowID']) ? cleanInputData($_POST['rowID']) : -1;

                        //echo "v=".$rvsnTtl;
                        $tblNm = "mcf.mcf_prdt_savings";
                        if ((int) $rvsnTtl > 0) {
                            $tblNm = "mcf.mcf_prdt_savings_hstrc";
                        }
                        $acctStatus = "Incomplete";
                        $result = executeSQLNoParams("SELECT status FROM $tblNm WHERE svngs_product_id = $PKeyID and rvsn_ttl = $rvsnTtl");
                        while ($row = loc_db_fetch_array($result)) {
                            $acctStatus = $row[0];
                        }

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($acctStatus == "Incomplete" || $acctStatus == "Rejected" || $acctStatus == "Withdrawn")) {
                            echo "Sorry!!!! Only COT Lines for Products with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteSvngsCOTLine($rowID, $PKeyID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "COT Line Deleted Successfully";
                            } else {
                                echo "Failed to Delete COT Line";
                            }
                            exit();
                        }
                    }
                } else {
                    $prdtID = isset($_POST['prdtID']) ? cleanInputData($_POST['prdtID']) : -1;
                    if ($prdtID > 0) {
                        //CHECK THAT ACCOUNT HAS NEVER BEEN USED

                        $rcdsCnt = svngsPrdtExstnce($PKeyID);

                        $acctStatus = getGnrlRecNm("mcf.mcf_prdt_savings", "svngs_product_id", "status", $prdtID);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED

                        if (!($acctStatus == "Incomplete" || $acctStatus == "Rejected" || $acctStatus == "Withdrawn")) {
                            echo "Sorry! Only Products with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            if ($rcdsCnt > 0) {
                                echo "Sorry! This Product cannot be deleted because it has valid Transactions";
                                exit();
                            } else {
                                $rowCnt = deleteSavingsPrdt($$prdtID);
                                if ($rowCnt > 0) {
                                    echo "Product Deleted Successfully";
                                } else {
                                    echo "Failed to Delete Product";
                                }
                                exit();
                            }
                        }
                    }
                }
            } else if ($subPgNo == 7.2) {
                //var_dump($_POST);
                if ($actyp == 1) {
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                    $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";


                    $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts";
                    $tblNm1 = "mcf.mcf_prdt_loans";
                    if ($rvsnTtl > 0) {
                        $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc";
                        $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                    }

                    //PROCESSING FEES
                    $result = executeSQLNoParams("SELECT status FROM $tblNm1 WHERE loan_product_id = "
                            . "(SELECT loan_product_id FROM $tblNm WHERE loanprdt_prcssn_fee_id = $PKeyID AND rvsn_ttl = $rvsnTtl) "
                            . "and rvsn_ttl = $rvsnTtl");
                    while ($row = loc_db_fetch_array($result)) {
                        $loanStatus = $row[0];
                    }

                    if ($loanStatus == "Incomplete" || $loanStatus == "Withdrawn" || $loanStatus == "Rejected") {
                        $rowCnt = deleteLoanPrdt_PrcnFeeNAccts($PKeyID, $rvsnTtl, $isApproved);
                        if ($rowCnt > 0) {
                            echo "Processing Fee record Deleted Successfully";
                        } else {
                            echo "Failed to Delete Processing Fee record";
                        }
                        exit();
                    } else {
                        echo "SORRY1";
                        exit();
                    }
                } else if ($actyp == 2) {
                    $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                    $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";
                    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
                    $tblNm1 = "mcf.mcf_prdt_loans";
                    if ($rvsnTtl > 0) {
                        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
                        $tblNm1 = "mcf.mcf_prdt_loans_hstrc";
                    }
                    //LATE FEES
                    $result = executeSQLNoParams("SELECT status FROM $tblNm1 WHERE loan_product_id = "
                            . "(SELECT loan_product_id FROM $tblNm WHERE loanprdt_late_fee_id = $PKeyID AND rvsn_ttl = $rvsnTtl) "
                            . "and rvsn_ttl = $rvsnTtl");
                    while ($row = loc_db_fetch_array($result)) {
                        $loanStatus = $row[0];
                    }

                    if ($loanStatus == "Incomplete" || $loanStatus == "Withdrawn" || $loanStatus == "Rejected") {
                        $rowCnt = deleteLoanPrdt_LateFeeNAccts($PKeyID, $rvsnTtl, $isApproved);
                        if ($rowCnt > 0) {
                            echo "Late Payment Fee record Deleted Successfully";
                        } else {
                            echo "Failed to Delete Late Payment Fee record";
                        }
                        exit();
                    } else {
                        echo "SORRY1";
                        exit();
                    }
                } else {
                    //CREDIT PRODUCT
                    $loanPrdtInUse = isLoanPrdtInActiveUse($PKeyID);
                    //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                    if ($loanPrdtInUse) {
                        echo "SORRY";
                        exit();
                    } else {
                        //CHECK STATUS
                        $loanStatus = getGnrlRecNm("mcf.mcf_prdt_loans", "loan_product_id", "status", $PKeyID);
                        if ($loanStatus == "Incomplete" || $loanStatus == "Withdrawn" || $loanStatus == "Rejected") {
                            $rowCnt = deleteLoanPrdt($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Late Product record Deleted Successfully";
                            } else {
                                echo "Failed to Delete Late Loan Product record";
                            }
                            exit();
                        } else {
                            echo "SORRY1";
                            exit();
                        }
                    }
                }
            }
        } else if ($pgNo == 13) {//CUSTOMER ACCOUNTS
            if ($subPgNo == 2.1) {

                if ($vwtyp == "5") {//DELETE SIGNATORY
                    if ($PKeyID > 0) {
                        //CHECK THAT ACCOUNT HAS NEVER BEEN USED
                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";
                        $acctSignId = isset($_POST['acctSignId']) ? cleanInputData($_POST['acctSignId']) : -1;
                        //echo "v=".$rvsnTtl;
                        $tblNm = "mcf.mcf_accounts";
                        if ((int) $rvsnTtl > 0) {
                            $tblNm = "mcf.mcf_accounts_hstrc";
                        }
                        $acctStatus = "Incomplete";
                        $result = executeSQLNoParams("SELECT status FROM $tblNm WHERE account_id = $PKeyID and rvsn_ttl = $rvsnTtl");
                        while ($row = loc_db_fetch_array($result)) {
                            $acctStatus = $row[0];
                        }

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($acctStatus == "Incomplete" || $acctStatus == "Rejected" || $acctStatus == "Withdrawn")) {
                            echo "Sorry!!!! Only Signatories for Accounts with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteAccountSignatory($acctSignId, $PKeyID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "Signatory Deleted Successfully";
                            } else {
                                echo "Failed to Delete Signatory";
                            }
                            exit();
                        }
                    }
                } else if ($vwtyp == "6") {//DELETE LIEN
                    if ($PKeyID > 0) {
                        //CHECK THAT LIEN HAS NEVER BEEN USED
                        $acctLienId = isset($_POST['acctLienId']) ? cleanInputData($_POST['acctLienId']) : -1;

                        $rvsnTtl = isset($_POST['rvsnTtl']) ? cleanInputData($_POST['rvsnTtl']) : 0;
                        $isApproved = isset($_POST['isApproved']) ? cleanInputData($_POST['isApproved']) : "No";
                        $acctLienStatus = isset($_POST['lienStatus']) ? cleanInputData($_POST['lienStatus']) : "Inactive";

                        $tblNm = "mcf.mcf_accounts";
                        if ((int) $rvsnTtl > 0) {
                            $tblNm = "mcf.mcf_accounts_hstrc";
                        }

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($acctLienStatus === "Inactive")) {
                            echo "Sorry! Only Account Liens with Status <b>Inactive</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteAccountLien($acctLienId, $PKeyID, $rvsnTtl, $isApproved);
                            if ($rowCnt > 0) {
                                echo "Lien Deleted Successfully";
                            } else {
                                echo "Lien to Delete Signatory";
                            }
                            exit();
                        }
                    }
                } else if ($vwtyp == 7) {
                    $rowCnt = deleteBranchPymntAccts($PKeyID);
                    if ($rowCnt > 0) {
                        echo "Branch Payment Account Deleted Successfully";
                    } else {
                        echo "Failed to Delete Branch Payment Account";
                    }
                    exit();
                } else {//DELETE ACCOUNT
                    if ($PKeyID > 0) {
                        //CHECK THAT ACCOUNT HAS NEVER BEEN USED

                        $rcdsCnt = accountTrnsExstnce($PKeyID);

                        $acctStatus = getGnrlRecNm("mcf.mcf_accounts", "account_id", "status", $PKeyID);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED

                        if (!($acctStatus == "Incomplete" || $acctStatus == "Rejected" || $acctStatus == "Withdrawn")) {
                            echo "Sorry! Only Accounts with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            if ($rcdsCnt > 0) {
                                echo "Sorry! This account cannot be deleted because it has valid Transactions";
                                exit();
                            } else {
                                $rowCnt = deleteCustAccount($PKeyID);
                                if ($rowCnt > 0) {
                                    echo "Customer Account Deleted Successfully";
                                } else {
                                    echo "Failed to Delete Customer Account";
                                }
                                exit();
                            }
                        }
                    }
                }
            } else if ($subPgNo == 2.2) {
                $canDelBatch = canDeleteManualInterestPymntSavings($PKeyID);
                //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                if (!($canDelBatch)) {
                    echo "SORRY";
                    exit();
                } else {
                    $rowCnt = deleteManualInterestPymntSavings($PKeyID);
                    if ($rowCnt > 0) {
                        echo "Payment Batch Deleted Successfully";
                    } else {
                        echo "Failed to Delete Payment Batch";
                    }
                    exit();
                }
            }
        } 
        else if ($pgNo == 15) {//CREDIT MANAGEMENT
            if ($subPgNo == 4.1) {
                //$prdtID = isset($_POST['PKeyID']) ? cleanInputData($_POST['prdtID']) : -1;
                if ($actyp == 1) {
                    if ($PKeyID > 0) {

                        $loanStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", "(SELECT distinct loan_rqst_id FROM mcf.mcf_loanreq_guarantors WHERE loan_gurnta_id = $PKeyID)");

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($loanStatus == "Incomplete" || $loanStatus == "Rejected" || $loanStatus == "Withdrawn")) {
                            echo "Sorry! Only Guarantors for Loan Applications with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteLoanRqstGuarantor($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Loan Guarantor Deleted Successfully";
                            } else {
                                echo "Failed to Delete Loan Guarantor";
                            }
                            exit();
                        }
                    }
                }
                else if ($actyp == 2) {
                    if ($PKeyID > 0) {

                        $rowCnt = deleteLoanRqstGrpMember($PKeyID);
                        if ($rowCnt > 0) {
                            echo "Group Member Deleted Successfully";
                        } else {
                            echo "Failed to Delete Group Member";
                        }
                        exit();
                    }
                } else if ($actyp == 6){//DELETE SUPPLEMENTARY ACCOUNT
                    $rowCnt = deleteSuplmntryRpymntAccnts($PKeyID);
                    if ($rowCnt > 0) {
                        echo "Line Deleted Successfully";
                    } else {
                        echo "Failed to Delete Line";
                    }
                    exit();
                } else {
                    //LOAN APPLICATION DELETION
                    if ($PKeyID > 0) {
                        //CHECK THAT PRODUCT HAS NEVER BEEN USED

                        $loanStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $PKeyID);

                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($loanStatus == "Incomplete" || $loanStatus == "Rejected" || $loanStatus == "Withdrawn")) {
                            echo "Sorry! Only Loan Applications with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {

                            $rowCnt = deleteLoanRqst($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Loan Request Deleted Successfully";
                            } else {
                                echo "Failed to Delete Loan Request";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 4.2) {
                $msg = "";

                if ($actyp == 1) {//Disb Detail Loans
                    if ($PKeyID > 0) {
                        $disbStatus = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "status", "(SELECT distinct disbmnt_hdr_id FROM mcf.mcf_loan_disbursement_det WHERE disbmnt_det_id = $PKeyID)");
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($disbStatus == "Incomplete" || $disbStatus == "Rejected" || $disbStatus == "Withdrawn")) {
                            echo "Sorry! Only Disbursements with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            //DELETE HEADER
                            $delSQL1 = "DELETE from mcf.mcf_loan_disbursement_det WHERE disbmnt_det_id = $PKeyID";
                            $del1 = execUpdtInsSQL($delSQL1);
                            //$msg = $msg + "</span style='color:green;'>Approved Loan record has been cleared</br></span>";
                            if ($del1 > 0) {
                                $msg = $msg . "<span style='color:green;'>Loan Record has been cleared </br></span>";
                            } else {
                                $msg = $msg . "<span style='color:red;'>Error! Failed to clearLoan Record</br></span>";
                            }

                            echo $msg;
                            exit();
                        }
                    }
                } else {//MAIN LIST DELETION
                    if ($PKeyID > 0) {
                        $disbStatus = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "status", $PKeyID);
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if (!($disbStatus == "Incomplete" || $disbStatus == "Rejected" || $disbStatus == "Withdrawn")) {
                            echo "Sorry! Only Disbursements with Status <b>Incomplete</b>, <b>Rejected</b> or <b>Withdrawn</b> can be deleted.";
                            exit();
                        } else {
                            //DELETE HEADER
                            $delSQL1 = "DELETE from mcf.mcf_loan_disbursement_det WHERE disbmnt_hdr_id = $PKeyID";
                            $del1 = execUpdtInsSQL($delSQL1);
                            $msg = $msg . "<span style='color:green;'>" . $del1 . "loan record(s) deleted </br></span>";
                            $delSQL2 = "DELETE from mcf.mcf_loan_disbursement_hdr WHERE disbmnt_hdr_id = $PKeyID";
                            $del2 = execUpdtInsSQL($delSQL2);
                            if ($del2 > 0) {
                                $msg = $msg . "<span style='color:green;'>Disbursement Header deleted successfully </br></span>";
                            } else {
                                $msg = $msg . "<span style='color:red;'>Error! Disbursement header failed deletion </br></span>";
                            }
                            echo $msg;
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 4.3) {
                if ($actyp == 1) {
                    /* Delete MC Trns */
                    $trnsHdrID = isset($_POST['trnsHdrID']) ? cleanInputData($_POST['trnsHdrID']) : -1;
                    $trnsNum = isset($_POST['trnsNum']) ? cleanInputData($_POST['trnsNum']) : -1;
                    $lnkdChqTrnsId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_chq_trns_id", $trnsHdrID);
                    $lnkdOrdrExctnId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_ordr_exctn_id", $trnsHdrID);
                    $lnkdMsclTrnsId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_mscl_trns_id", $trnsHdrID);
                    if ($lnkdChqTrnsId > 0 || $lnkdOrdrExctnId > 0 || $lnkdMsclTrnsId > 0) {
                        echo "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>You must DELETE from the Linked Source Transaction!</span>";
                        exit();
                    } else {
                        if ($canDelTrns) {
                            echo deleteMCFTrnsHdr($trnsHdrID, $trnsNum);
                        } else {
                            restricted();
                        }
                    }
                } else if ($actyp == 2) {
                    /* Delete BNK Trns Lines */
                    $trnsLnID = isset($_POST['trnsLnID']) ? cleanInputData($_POST['trnsLnID']) : -1;
                    $chqNo = isset($_POST['chqNo']) ? cleanInputData($_POST['chqNo']) : -1;
                    $srcDocType = "LOAN_REPAY";
                    $orgnlAcctTrnsId = (float) getGnrlRecNm("mcf.mcf_cust_account_trns_cheques", "trns_cheque_id", "acct_trns_id", $trnsLnID);
                    $lnkdChqTrnsId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_chq_trns_id", $orgnlAcctTrnsId);
                    $lnkdOrdrExctnId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_ordr_exctn_id", $orgnlAcctTrnsId);
                    $lnkdMsclTrnsId = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "lnkd_mscl_trns_id", $orgnlAcctTrnsId);
                    if ($lnkdChqTrnsId > 0 || $lnkdOrdrExctnId > 0 || $lnkdMsclTrnsId > 0) {
                        echo "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>You must DELETE from the Linked Source Transaction!</span>";
                        exit();
                    } else {
                        if ($canDelTrns) {
                            echo deleteMCFTrnsLine($trnsLnID, $srcDocType, $chqNo);
                        } else {
                            restricted();
                        }
                    }
                }
            } else if ($subPgNo == 4.6) {
                if ($subVwtyp == 2) {
                    //RISK FACTOR
                    $riskFactorInUse = isRiskFactorInActiveUse($PKeyID);
                    //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                    if ($riskFactorInUse) {
                        echo "SORRY";
                        exit();
                    } else {
                        $rowCnt = deleteCreditRiskFactors($PKeyID);
                        if ($rowCnt > 0) {
                            echo "Risk Factor Deleted Successfully";
                        } else {
                            echo "Failed to Delete Risk Factor";
                        }
                        exit();
                    }
                } else if ($subVwtyp == 3) {
                    if ($actyp == 1) {//PROFILE FACTORS
                        $riskProfileFactorInUse = isRiskProfileFactorInActiveUse($PKeyID);
                        $riskProfileID = getRiskProfileIDfromProfileFctr($PKeyID);
                        $dateStr = getDB_Date_time();
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if ($riskProfileFactorInUse) {
                            echo "SORRY";
                            exit();
                        } else {
                            $rowCnt = deleteCreditRiskProfileFactors($PKeyID);
                            $updtSQL3 = "UPDATE mcf.mcf_credit_risk_profiles SET validity ='Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE risk_profile_id = $riskProfileID";
                            execUpdtInsSQL($updtSQL3);
                            if ($rowCnt > 0) {
                                echo "Risk Profile Factor Deleted Successfully";
                            } else {
                                echo "Failed to Delete Risk Profile Factor";
                            }
                            exit();
                        }
                    } else if ($actyp == 2) {//PROFILE FACTOR OPTIONS
                        $riskProfileFactorOptnInUse = isRiskProfileFactorOptnInActiveUse($PKeyID);
                        $riskProfileID = isset($_POST['riskProfileID']) ? cleanInputData($_POST['riskProfileID']) : -1;
                        ;
                        $dateStr = getDB_Date_time();
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if ($riskProfileFactorOptnInUse) {
                            echo "SORRY";
                            exit();
                        } else {
                            $rowCnt = deleteCreditRiskProfileFactorOptions($PKeyID);
                            $updtSQL3 = "UPDATE mcf.mcf_credit_risk_profiles SET validity ='Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE risk_profile_id = $riskProfileID";
                            execUpdtInsSQL($updtSQL3);
                            if ($rowCnt > 0) {
                                echo "Risk Factor Option Deleted Successfully";
                            } else {
                                echo "Failed to Delete Risk Factor Option";
                            }
                            exit();
                        }
                    } else {
                        //RISK PROFILES
                        $riskProfileInUse = isRiskProfileInActiveUse($PKeyID);
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if ($riskProfileInUse) {
                            echo "SORRY";
                            exit();
                        } else {
                            $rowCnt = deleteCreditRiskProfiles($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Risk Profile Deleted Successfully";
                            } else {
                                echo "Failed to Delete Risk Profile";
                            }
                            exit();
                        }
                    }
                } else if ($subVwtyp == 4) {
                    if ($actyp == 1) {//ASSESSMENT PROFILES
                        $assessmentSetPrflInUse = isAssessmentSetPrflInActiveUse($PKeyID);
                        $assessmentSetID = getAssessmentSetIDfromAssessmentSetPrfl($PKeyID);
                        $dateStr = getDB_Date_time();
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if ($assessmentSetPrflInUse) {
                            echo "SORRY";
                            exit();
                        } else {
                            $rowCnt = deleteCreditScornsetDet($PKeyID); // deleteCreditRiskProfileFactors($PKeyID);
                            $updtSQL3 = "UPDATE mcf.mcf_credit_scoring_set_hdr SET status ='Invalid', last_update_by = $usrID, last_update_date = '$dateStr'"
                                    . " WHERE scoring_set_hdr_id = $assessmentSetID";
                            execUpdtInsSQL($updtSQL3);
                            if ($rowCnt > 0) {
                                echo "Assessment Profile Deleted Successfully";
                            } else {
                                echo "Failed to Delete Assessment Profile";
                            }
                            exit();
                        }
                    } else {
                        //ASSESSMENT SET
                        $assessmentSetInUse = isAssessmentSetInActiveUse($PKeyID);
                        //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                        if ($assessmentSetInUse) {
                            echo "SORRY";
                            exit();
                        } else {
                            $rowCnt = deleteCreditScornsetHdr($PKeyID);
                            if ($rowCnt > 0) {
                                echo "Assessment Set Deleted Successfully";
                            } else {
                                echo "Failed to Delete Assessment Set";
                            }
                            exit();
                        }
                    }
                }
            } else if ($subPgNo == 4.7) {
                //PROPERTY COLLATERAL
                $prptyColtInUse = isPrptyColtInActiveUse($PKeyID);
                //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                if ($prptyColtInUse) {
                    echo "SORRY";
                    exit();
                } else {
                    $rowCnt = deletePropertyCollaterals($PKeyID);
                    if ($rowCnt > 0) {
                        echo "Collateral Deleted Successfully";
                    } else {
                        echo "Failed to Delete Collateral";
                    }
                    exit();
                }
            } else if ($subPgNo == 4.8) {
                if ($actyp == 1) {//MINOR SECTOR
                    $riskSectorMinorInUse = isSectorMinorInActiveUse($PKeyID);
                    $dateStr = getDB_Date_time();
                    //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                    if ($riskSectorMinorInUse) {
                        echo "SORRY";
                        exit();
                    } else {
                        $rowCnt = deleteSectorMinor($PKeyID);

                        if ($rowCnt > 0) {
                            echo "Minor Sector Deleted Successfully";
                        } else {
                            echo "Failed to Delete Minor Sector";
                        }
                        exit();
                    }
                } else { //MAJOR SECTOR
                    $sectorMajorInUse = isSectorMajorInActiveUse($PKeyID);
                    //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                    if ($sectorMajorInUse) {
                        echo "SORRY";
                        exit();
                    } else {
                        $rowCnt = deleteSectorMajor($PKeyID);
                        if ($rowCnt > 0) {
                            echo "Major Sector Deleted Successfully";
                        } else {
                            echo "Failed to Delete Major Sector";
                        }
                        exit();
                    }
                }
            } else if ($subPgNo == 4.9) {
                //LOAN WRITE-OFF
                $rowCnt = deleteLoanWriteOffs($PKeyID);
                if ($rowCnt > 0) {
                    echo "Loan Write-Off Deleted Successfully";
                } else {
                    echo " Failed to Delete Loan Write-Off";
                }
                exit();
            }  else if ($subPgNo == 4.12) {
                //OVERDRAFT INTEREST PAYMENT
                $rowCnt = deleteOvdrftIntrstPymnts($PKeyID);
                if ($rowCnt > 0) {
                    echo "Overdraft Interest Payment Deleted Successfully";
                } else {
                    echo "Failed to Delete Overdraft Interest Payment";
                }
                exit();
            }
        } else if ($pgNo == 19) {
            if ($subPgNo == "3.4.1") {
                $chqBookId = isset($_POST['chqBookId']) ? cleanInputData($_POST['chqBookId']) : -1;

                if ($chqBookId > 0) {
                    //CHECK THAT ANY CHEQUE  HAS NEVER BEEN USED

                    $usdChqCnta = getUsedChqsInChqBook($chqBookId);

                    //check loan status -> Incomplete, Rejected and Withdrawn CAN BE DELETED
                    if ($usdChqCnta > 0) {
                        echo "Sorry! You cannot delete this Cheque Book</br>Reason:One or more cheques in this Cheque Book have been used for a transaction.";
                        exit();
                    } else {
                        
                        $rcCnt = chqBookFeeDeductionExistsCount($chqBookId);
                        if ($rcCnt > 0) {
                            echo "Sorry! You cannot delete this Cheque Book</br>Reason:ChequeBook has been processed and Fee deducted.";
                            exit();
                        } else {
                            $rowCnt = deleteChqBook($chqBookId);
                            if ($rowCnt > 0) {
                                echo "Cheque Book and Cheques Deleted Successfully";
                            } else {
                                echo "Failed to Delete Cheque Book";
                            }
                            exit();
                        }
                    }
                }
            }
        } else if ($pgNo == 14) {
            var_dump($_POST);
        } else if ($pgNo == 25) {
            if ($subPgNo == 5.2) {
                $invstmntID = isset($_POST['invstmntID']) ? cleanInputData($_POST['invstmntID']) : -1;
                //var_dump($_POST);
                $invstmntStatus = getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "status", $invstmntID);
                if ($invstmntStatus == "Incomplete" || $invstmntStatus == "Withdrawn" || $invstmntStatus == "Rejected") {
                    $rowCnt = deleteInvestment($invstmntID);
                    if ($rowCnt > 0) {
                        echo "Investment Deleted Successfully";
                    } else {
                        echo "Failed to Delete Investment";
                    }
                    exit();
                } else {
                    echo "SORRY";
                    exit();
                }
            } else if ($subPgNo == 5.3) {
                $lqdtnID = isset($_POST['lqdtnID']) ? cleanInputData($_POST['lqdtnID']) : -1;
                //var_dump($_POST);
                $lqdtnStatus = getGnrlRecNm("mcf.mcf_investments_liquidation", "lqdtn_id", "status", $lqdtnID);
                if ($lqdtnStatus == "Incomplete" || $invstmntStatus == "Withdrawn" || $invstmntStatus == "Rejected") {
                    $rowCnt = deleteInvestmentLqdtn($lqdtnID);
                    if ($rowCnt > 0) {
                        echo "Liquidation Deleted Successfully";
                    } else {
                        echo "Failed to Delete Liquidation";
                    }
                    exit();
                } else {
                    echo "SORRY";
                    exit();
                }
            }
        } else if ($pgNo == 1040) {
            $mcfTrnsHdrID = isset($_POST['mcfTrnsHdrID']) ? cleanInputData($_POST['mcfTrnsHdrID']) : -1;
            echo withdrawMCFTrnsRqst_LoanMgmt($mcfTrnsHdrID);
        }
    } else if ($qstr == "FINALIZE") {
        if ($pgNo == 1040) {
            $mcfTrnsHdrID = isset($_POST['mcfTrnsHdrID']) ? cleanInputData($_POST['mcfTrnsHdrID']) : -1;
            echo authorizeMCFTrnsRqst_LoanMgmt($mcfTrnsHdrID);
        } else if ($pgNo == 1041) {
            $mcfTrnsHdrID = isset($_POST['mcfTrnsHdrID']) ? cleanInputData($_POST['mcfTrnsHdrID']) : -1;
            echo payMCFTrnsRqst_LoanMgmt($mcfTrnsHdrID);
        } else if ($pgNo == 2041) {
            $mcfTrnsHdrID = isset($_POST['mcfTrnsHdrID']) ? cleanInputData($_POST['mcfTrnsHdrID']) : -1;
            echo payMCFTrnsRqst_LoanRpmnt($mcfTrnsHdrID);
        }
    } else if ($qstr == "VOID") {
        if ($pgNo == 1040) {
            var_dump($_POST);
        } else if ($pgNo == 1050) {//DISBURSEMENT
        } else if ($pgNo == 1060) {//LOAN REPAYMENT
            //Reverse MCF Transaction
            //var_dump($_POST);
            if (!($canEdtTrns || $canAddTrns)) {
                $arr_content['percent'] = 100;
                $arr_content['message'] = "<span style=\"color:red;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Permission Denied!</span>";
                echo json_encode($arr_content);
                exit();
            }
            $orgid = $_SESSION['ORG_ID'];
            $acctTrnsId = isset($_POST['PKeyID']) ? cleanInputData($_POST['PKeyID']) : -1;
            $acctID = isset($_POST['acctID']) ? cleanInputData($_POST['acctID']) : -1;
            $trnsType = "";
            $rvrsldesc = isset($_POST['trnsDesc']) ? cleanInputData($_POST['trnsDesc']) : '';
            $shdSbmt = isset($_POST['shdSbmt']) ? cleanInputData($_POST['shdSbmt']) : 0;
            $dateStr = getDB_Date_time();
            $gnrtdTrnsNo = "";
            $acctTitle = "";
            $unclrdBal = 0;
            $clrdBal = 0;
            $docType = "";
            $docNum = "";
            $trnsAmount = 0;
            $ttlDocAmntVal = 0;
            $trnsAmntCash = 0;
            $trnsDesc = "";
            $acctNo = "";
            $accntID = -1;
            $acctStatus = "";
            $acctCrncy = $fnccurnm;
            $crncyID = $fnccurid;
            $crncyIDNm = $fnccurnm;
            $acctType = "";
            $acctCustomer = "";
            $prsnTypeEntity = "";
            $acctBranch = "";
            $acctLien = 0;
            $mandate = "";
            $authorizer = "";
            $aprvLimit = 0;
            $wtdrwlLimitNo = 0;
            $wtdrwlLimitAmt = 0;
            $wtdrwlLimitType = "";
            $exchangeRate = 0;
            $voidedTrnsHdrID = -1;
            $voidedTrnsType = "";
            $dbOrCrdt = "DR";
            $trnsPersonName = "";
            $trnsPersonTelNo = "";
            $trnsPersonAddress = "";
            $trnsPersonIDType = "";
            $trnsPersonIDNumber = "";
            $isSelf = "";
            $mkReadOnly = "";
            $mkRmrkReadOnly = "";
            $vwOrAdd = "ADD";
            $pageCaption = "<span style=\"font-weight:bold;\">TOTAL LOAN REPAYMENT: </span><span style=\"font-weight:bold;color:blue;\" id=\"tllrTrnsAmntTtlFld\">" . $acctCrncy . " " . number_format($trnsAmount, 2) . "</span>";
            $brnchLocID = getLatestSiteID($prsnid);
            $brnchLoc = getGnrlRecNm("org.org_sites_locations", "location_id", "location_code_name", $brnchLocID);
            $accntBrnchLocID = -1;
            $accntBrnchLoc = "";
            $accntCurRate = 1;
            $entrdCrncyID = -1;
            $trns_has_other_lines = '1';
            $unclrdColor = "blue";
            $clrdColor = "blue";
            $loanRepayType = "";
            $loanRpmntSrcAcctID = -1;
            $loanRpmntSrcAmnt = 0.00;
            if ($acctTrnsId > 0) {
                //Important! Must Check if One also has prmsn to Edit brought Trns Hdr ID
                $result = get_OneCustAccntTrnsDet_LoanRpmnt($acctTrnsId);
                if ($row = loc_db_fetch_array($result)) {
                    $trnsType = $row[5];
                    $trnsStatus = $row[7];
                    $voidedTrnsHdrID = (float) $row[28];
                    $voidedTrnsType = $row[29];
                    if ($trnsStatus == "Not Submitted" || $trnsStatus == "Withdrawn" || $trnsStatus == "Rejected") {
                        $rqstatusColor = "red";
                        if ($voidedTrnsHdrID <= 0) {
                            $mkReadOnly = "";
                            $mkRmrkReadOnly = "";
                        } else {
                            $mkReadOnly = "readonly=\"true\"";
                            $mkRmrkReadOnly = "";
                            $vwOrAdd = "VIEW";
                        }
                    } else if ($trnsStatus != "Authorized" && $trnsStatus != "Paid" && $trnsStatus != "Received" && $trnsStatus != "Void") {
                        $mkReadOnly = "readonly=\"true\"";
                        $mkRmrkReadOnly = "readonly=\"true\"";
                        $rqstatusColor = "brown";
                        $vwOrAdd = "VIEW";
                    } else if ($trnsStatus == "Void") {
                        $mkReadOnly = "readonly=\"true\"";
                        $mkRmrkReadOnly = "readonly=\"true\"";
                        $rqstatusColor = "red";
                        $vwOrAdd = "VIEW";
                    } else {
                        $rqstatusColor = "green";
                        $mkReadOnly = "readonly=\"true\"";
                        $mkRmrkReadOnly = "readonly=\"true\"";
                        $vwOrAdd = "VIEW";
                    }
                    $gnrtdTrnsNo = $row[12] . "-R";
                    $gnrtdTrnsDate = $row[11];
                    $uName11 = getUserName((float) $row[32]);
                    $prprdBy = "<span style=\"color:blue;font-weight:bold;\">" . $uName11 . "@" . $gnrtdTrnsDate . "</span>";
                    //$brnchLocID = (int) $row[14];
                    //$brnchLoc = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc", $brnchLocID);
                    $accntBrnchLocID = (int) $row[33];
                    $accntBrnchLoc = getGnrlRecNm("org.org_sites_locations", "location_id", "REPLACE(location_code_name || '.' || site_desc, '.' || location_code_name,'')", $accntBrnchLocID);
                    $entrdCrncyID = (int) $row[4];
                    $crncyID = (int) $row[9];
                    $crncyIDNm = $row[10];
                    if ($crncyID <= 0) {
                        $crncyID = $fnccurid;
                        $crncyIDNm = $fnccurnm;
                    }
                    if ($voidedTrnsHdrID <= 0) {
                        $trnsDesc = $row[31];
                    } else {
                        $trnsDesc = $row[30];
                    }
                    $acctTitle = $row[2];
                    $docType = $row[15];
                    $docNum = $row[16];
                    $trnsAmount = $row[6];
                    $ttlDocAmntVal = (float) $row[6];
                    $trnsAmntCash = $row[27];
                    $accntCurRate = (float) $row[48];
                    $trns_has_other_lines = $row[49];
                    $acctNo = $row[1];
                    $accntID = (int) $row[8];
                    $acctCrncy = $row[10];
                    $authorizer = $row[34];
                    $aprvLimit = (float) $row[36];
                    $dbOrCrdt = $row[24];
                    $pageCaption = "<span style=\"font-weight:bold;\">TOTAL LOAN REPAYMENT: </span><span style=\"font-weight:bold;color:blue;\" id=\"tllrTrnsAmntTtlFld\">" . $acctCrncy . " " . number_format($trnsAmount, 2) . "</span>";
                    $unclrdBal = (float) $row[37];
                    $clrdBal = (float) $row[38];
                    if ($unclrdBal > 0) {
                        $unclrdColor = "green";
                    } else {
                        $unclrdColor = "red";
                    }
                    if ($clrdBal > 0) {
                        $clrdColor = "green";
                    } else {
                        $clrdColor = "red";
                    }
                    $acctType = $row[39];
                    $acctStatus = $row[40];
                    $acctCustomer = $row[41];
                    $prsnTypeEntity = $row[42];
                    $acctLien = (float) $row[43];
                    $mandate = $row[44];

                    $wtdrwlLimitNo = $row[45];
                    $wtdrwlLimitAmt = $row[46];
                    $wtdrwlLimitType = $row[47];

                    $trnsPersonName = $row[17];
                    $trnsPersonTelNo = $row[18];
                    $trnsPersonAddress = $row[19];
                    $trnsPersonIDType = $row[20];
                    $trnsPersonIDNumber = $row[21];
                    $isSelf = $row[22];
                    $loanRepayType = $row[53];
                    $loanRpmntSrcAcctID = (int) $row[54];
                    $loanRpmntSrcAmnt = (float) $row[55];
                }
            }
            if ($acctID > 0) {
                $acntRslt = get_OneCustAccntInfo($acctID);
                if ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                    $acctstatus = $rowAcnt[10];
                    $acctcustomer = $rowAcnt[11];
                    //$acctlien = (float) $rowAcnt[13];
                    //$mandate = $rowAcnt[14];
                    //$wtdrwllimitno = (int) $rowAcnt[15];
                    //$wtdrwllimitamt = (float) $rowAcnt[16];
                    //$wtdrwllimittype = $rowAcnt[17];
                }
            }
            if ($docType == "Paperless") {
                $docNum = $gnrtdTrnsNo;
            }
            $affctd1 = 0;
            $affctd2 = 0;
            if ($acctID > 0) {
                if ($voidedTrnsHdrID <= 0) {//CREATE
                    $rvrsldesc = "";
                    $rsltCnt = createAccountTrns($acctID, $dateStr, $docType, $docNum, $trnsDesc, $dbOrCrdt, -1 * $ttlDocAmntVal, $trnsType, -1 * $trnsAmntCash, $isSelf, $trnsPersonName, $trnsPersonTelNo, $trnsPersonAddress, $trnsPersonIDType, $trnsPersonIDNumber, $gnrtdTrnsNo, "Not Submitted", $acctTrnsId, $trnsType, $rvrsldesc, $entrdCrncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctLien, $mandate, $wtdrwlLimitNo, $wtdrwlLimitAmt, $wtdrwlLimitType, $trns_has_other_lines, -1, -1, "", -1, -1, -1, $loanRepayType, $loanRpmntSrcAcctID, -1 * $loanRpmntSrcAmnt);
                    if ($rsltCnt > 0) {
                        $voidedTrnsHdrID = getAccountTrnsID($acctID, $dateStr, $orgid, $usrID);
                    }
                    if ($voidedTrnsHdrID > 0) {
                        //Create and Negate Cash Analysis
                        //Create and Negate Cheques
                        $affctd1 += voidCashBreakdownAnlsys($acctTrnsId, $voidedTrnsHdrID);
                        $affctd2 += voidAccountTrnsChqs($acctTrnsId, $voidedTrnsHdrID, $dateStr);
                    }
                    $acctTrnsId = $voidedTrnsHdrID;
                } else if ($acctTrnsId > 0) {
                    $rsltCnt = updateAccountTrnsVoidRsn($acctTrnsId, $rvrsldesc, $dateStr);
                }
                $errMsg = "";
                if ($shdSbmt > 0 && $acctTrnsId > 0) {
                    if (isMCFTrnsQtyVld_LoanRpmnt($acctTrnsId) && isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($acctTrnsId)) {
                        $srcDocID = $acctTrnsId;
                        $srcDocType = "Banking Transactions";
                        $routingID = -1;
                        $inptSlctdRtngs = "";
                        $actionToPrfrm = "Initiate";
                        $errMsg .= "" . mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
                    } else {
                        $errMsg .= "<span style=\"color:red;font-weight:bold;\">Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account!</span><br/>";
                    }
                }
                $response = array('acctTrnsId' => $acctTrnsId,
                    'sbmtMsg' => $errMsg);
                echo json_encode($response);
            } else {
                echo '<div><img src="cmn_images/error.gif" style="float:left;margin-right:5px;width:30px;height:30px;"/>'
                . 'Data Supplied is Incomplete!<br/></div>';
                exit();
            }
        } else if ($pgNo == 1070) {//LOAN PAYMENT
        }
    } else if ($qstr == "UPLOAD") {
        $attchmntID = isset($_POST['attchmntID']) ? cleanInputData($_POST['attchmntID']) : -1;
        $fileName = isset($_POST['fileName']) ? $_POST['fileName'] : "";
        $fileDesc = isset($_POST['fileDesc']) ? $_POST['fileDesc'] : "";
        $fileType = isset($_POST['fileType']) ? $_POST['fileType'] : "";

        //print_r($_POST);
        //print_r($_FILES);

        if ($actyp == 1) {//INDIVIDUAL CUSTOMERS
            if ($attchmntID > 0) {//UPDDATE
            } else {//INSERT
                global $database;
                global $ftp_base_db_fldr;
                $dateStr = getDB_Date_time();

                $nwImgAdd = "";
                if ($_FILES["attchmntFile"]["error"] > 0 || (float) ($_FILES["attchmntFile"]["size"] / 1024) > 600) {
                    $file_size = round($_FILES["attchmntFile"]["size"] / 1024, 2) . " Kilo Bytes";
                    $error = $_FILES["attchmntFile"]["error"];
                    $response = 'File Upload Failed';
                    echo $response;
                } else {
                    $nwFileName = encrypt1("RHO_INPT_F_" . $custID . session_id() . $lgn_num, $smplTokenWord1);
                    $file_name = $nwFileName . "_" . str_replace(";", "", $_FILES["attchmntFile"]["name"]);
                    $file_tmp_name = $_FILES["attchmntFile"]["tmp_name"];
                    $file_type = $_FILES["attchmntFile"]["type"];
                    $file_size = round($_FILES["attchmntFile"]["size"] / 1024, 2) . " Kilo Bytes";

                    $temp = explode(".", $file_name);
                    $extension = end($temp);
                    $fileNameNoExt = $temp[0];


                    $dest = $pemDestCust . 'Attachment/';
                    $fulldest = $dest . $file_name;

                    move_uploaded_file($_FILES["attchmntFile"]["tmp_name"], $fulldest);

                    $sqlStr = "INSERT INTO mcf.mcf_doc_attchmnts(file_name, attchmnt_desc, file_type, attchmnt_src, src_id,
                    created_by, creation_date, last_update_by, last_update_date)
                    VALUES ('" . loc_db_escape_string($fileName) . "','" . loc_db_escape_string($fileDesc) .
                            "','" . loc_db_escape_string($fileType) . "','Individual Customers'," . $custID . "," .
                            $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

                    $result = execUpdtInsSQL($sqlStr);

                    $fileID = getAttachmentID("Individual Customers", $custID, $fileName, $dateStr);

                    echo $fileID;
                }
            }
        } else if ($actyp == 3) {//CORPORATE CUSTOMERS
        } else {

            //$docName = isset($_POST['docName']) ? $_POST['docName'] : "";
            $errUploadMsg = "";
            $cnt = 0;
            global $database;
            global $ftp_base_db_fldr;
            //$msg = "File Upload Failed";
            $nwImgAdd = "";


            if ($_FILES["inputDoc"]["error"] > 0 || (float) ($_FILES["inputDoc"]["size"] / 1024) > 6000000) {
                $file_name = $_FILES["inputDoc"]["name"];
                $file_size = round($_FILES["inputDoc"]["size"] / 1024, 2) . " Kilo Bytes";
                $error = $_FILES["inputDoc"]["error"];
                $response = array('success' => false,
                    'data' => array('name' => $file_name, 'size' => $file_size),
                    'msg' => 'File Upload Failed');
                echo json_encode($response);
            } else {
                $file_name = $_FILES["inputDoc"]["name"];
                $file_tmp_name = $_FILES["inputDoc"]["tmp_name"];
                $file_type = $_FILES["inputDoc"]["type"];
                $file_size = round($_FILES["inputDoc"]["size"] / 1024, 2) . " Kilo Bytes";

                $temp = explode(".", $file_name);
                $extension = end($temp);
                $fileNameNoExt = $temp[0];

                $row = 1;

                //$dest = '/var/www/html/bogportal/dwnlds/'.$database.'/Person/Request/';


                $dest = $fldrPrfx . 'dwnlds/' . $database . '/';
                //$dest = '/var/www/html/psdcportal/dwnlds/'.$database.'/';
                $fulldest = $dest . $file_name;


                move_uploaded_file($_FILES["inputDoc"]["tmp_name"], $fulldest);

                //$actyp represents PSB TYPE
                if ($actyp == 2) {
                    if (($handle = fopen($fulldest, "r")) !== FALSE) {

                        //loop through the csv file and insert into database
                        while ($data = fgetcsv($handle, 1000, ",", "'")) {
                            $num = count($data);
                            $cnt = 0;

                            if ($num == 5) {
                                if ($row == 1) {
                                    $row++;
                                    continue;
                                }

                                if (!($data[0])) {
                                    $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " column 1 data import failed! MSISDN";
                                    $cnt = $cnt + 1;
                                }

                                if (!($data[1])) {
                                    $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " column 2 data import failed! No name provided";
                                    $cnt = $cnt + 1;
                                }

                                if (!($data[2])) {
                                    $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " column 3 data import failed! No region provided";
                                    $cnt = $cnt + 1;
                                }

                                if (!($data[3])) {
                                    $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " column 4 data import failed! No city provided";
                                    $cnt = $cnt + 1;
                                }

                                if ($data[4]) {
                                    if ($cnt <= 0) { //IF ALL COLUMN REQUIREMENTS ARE MET
                                        addTelcoAgents($data[0], $data[1], $data[2], $data[3], $data[4]);
                                    }
                                } else {
                                    $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " column 5 data import failed! No Telco provided";
                                    $cnt = $cnt + 1;
                                }

                                $row++;
                            } else {
                                $errUploadMsg = $errUploadMsg . "</br>" . "Row " . $row . " data import failed! Expected 5 columns but found " . $num;
                                continue;
                            }
                        }

                        fclose($handle);
                        unlink($fulldest);
                    }
                }

                $response = array('success' => true,
                    'data' => array('name' => $file_name, 'tmp_name' => $file_tmp_name, 'size' => $file_size),
                    'msg' => $errUploadMsg);
                echo json_encode($response);
            }
        }
    } else if ($qstr == "SUBMENUS") {
        $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1');\">
						<span style=\"text-decoration:none;\">Banking & Microfinance Menu</span>
    </li>";
        if ($pgNo == 3) {//CORE BANKING
            if ($subPgNo == 3.1/* || $subPgNo == 3.2 || $subPgNo == 3.3 */) { //TELLER OPERATIONS

                /* $mnuPrfx = "";
                  if ($levelPgNo == "3.1.1"){
                  $mnuPrfx = "";
                  } else if ($levelPgNo == "3.1.2"){
                  $mnuPrfx = "";
                  } else if ($levelPgNo == "3.1.3"){
                  $mnuPrfx = "";
                  } */

                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=3');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Core Banking Menu</span>
            </li>";

                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&q=SUBMENUS&pg=3&subPgNo=3.1');\">
                                                <span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
						<span style=\"text-decoration:none;\">Teller Operations</span>
                                        </li></div>";

                $cntent .= "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>TELLER OPERATIONS MENU ITEMS</h3>
      <p>";
                $grpcntr = 0;
                $No = "3.1.";
                $NoRun = "3.1.";
                //$prsnType = get_LtstPrsnType($prsnid);
for ($i = 0; $i < count($topMenuItems); $i++) {
                    if ($i == 0 && test_prmssns($dfltPrvldgs[47], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 1 && test_prmssns($dfltPrvldgs[48], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 2 && test_prmssns($dfltPrvldgs[49], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 3 && test_prmssns($dfltPrvldgs[50], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 4 && test_prmssns($dfltPrvldgs[51], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 5 && test_prmssns($dfltPrvldgs[52], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 6 && test_prmssns($dfltPrvldgs[53], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 7 && test_prmssns($dfltPrvldgs[54], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 8 && test_prmssns($dfltPrvldgs[55], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 9 && test_prmssns($dfltPrvldgs[56], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 10 && test_prmssns($dfltPrvldgsVMS[52], $mdlNmVMS) == FALSE) {
                        continue;
                    } else if ($i == 11 && test_prmssns($dfltPrvldgs[292], $mdlNm) == FALSE) {
                        continue;
                    }
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    $No = $NoRun . ($i);
                    //showPageDetails('$pageHtmlID', $No);

                    if ($i == 0) {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"chckMyTillPos('ShowDialog','grp=25&typ=1&pg=1&vtyp=3&isFrmBnkng=1');\">
            <img src=\"cmn_images/$topMenuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($topMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    } else if ($i == 3 || $i == 4) {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=25&typ=1&pg=2&vtyp=" . ($i + 3) . "&srcMenu=Banking&subSrcMenu=TO');\">
            <img src=\"cmn_images/$topMenuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($topMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    } else if ($i == 5) {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=4&subPgNo=4.3&isFrmTllrng=1');\">
            <img src=\"cmn_images/$topMenuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($topMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    } else if ($i == 10) {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=25&typ=1&pg=1&vtyp=3&srcMenu=Banking&subSrcMenu=TO&isFrmBnkng=2');\">
            <img src=\"cmn_images/$topMenuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($topMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    } else {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
            <img src=\"cmn_images/$topMenuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($topMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    }
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    //$No = $No . 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            } else if ($subPgNo == 3.4) { //CHEQUE MANAGEMENT
                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=3');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Core Banking Menu</span>
            </li>";

                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&q=SUBMENUS&pg=3&subPgNo=3.4');\">
                                                <span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
						<span style=\"text-decoration:none;\">Cheques Management</span>
                                        </li></div>";

                $cntent .= "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CHEQUES MANAGEMENT MENU ITEMS</h3>
      <p>";



                $grpcntr = 0;
                $No = "3.4.";
                $NoRun = "3.4.";
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($cbCmMenuItems); $i++) {
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    $No = $NoRun . ($i + 1);
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$cbCmMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($cbCmMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    //$No = $No . 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else {
            restricted();
        }
    } else if ($qstr == "LNPYACCT") {
        $nwMsg = "";
        $shdActnBeDone = createDisbmntPymntCustAccount($nwMsg);

        if ($shdActnBeDone) {
            echo $nwMsg;
        } else {
            echo "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>" . $nwMsg . "</span>";
        }
    } else if ($qstr == "WORKFLOW") {
        $pkID = -1;

        if ($actyp == 40) {//LOAN APPLICATIONS
            //Submit Data Change Request to Workflow
            $pkID = isset($_POST['lnRqstID']) ? cleanInputData($_POST['lnRqstID']) : -1;
            $apprvdLoanAmount = isset($_POST['apprvdLoanAmount']) ? cleanInputData($_POST['apprvdLoanAmount']) : 0;
            $apprvdLoanTenor = isset($_POST['apprvdLoanTenor']) ? cleanInputData($_POST['apprvdLoanTenor']) : 0;
            $apprvdLoanTenorType = isset($_POST['apprvdLoanTenorType']) ? cleanInputData($_POST['apprvdLoanTenorType']) : '';
            $apprvdInterestRate = isset($_POST['apprvdInterestRate']) ? cleanInputData($_POST['apprvdInterestRate']) : -1;
            $apprvlCmnts = isset($_POST['apprvlCmnts']) ? cleanInputData($_POST['apprvlCmnts']) : '';

            $dateStr = getDB_Date_time();
            $lnRqstID = $pkID;
            $slctdGrpMembers = isset($_POST['slctdGrpMembers']) ? cleanInputData($_POST['slctdGrpMembers']) : "";
            $recCntUpdt = 0;
            $recCntInst = 0;
            $ttlAmount = 0;
            $ttlAmount1 = 0;
            $affctd5Rslt = array();
            $affctd5RsltCnt = 0;
            $errMsgDsp1 = "";
            $errMsgDsp = "";
            $dsply1 = "";

            if (trim($slctdGrpMembers, "|~") != "") {

                $variousRows1 = explode("|", trim($slctdGrpMembers, "|"));
                for ($x = 0; $x < count($variousRows1); $x++) {
                    $crntRow1 = explode("~", $variousRows1[$x]);
                    if (count($crntRow1) == 7) {
                        $pkeyID1 = (int) (cleanInputData1($crntRow1[0]));
                        $custID1 = (int) cleanInputData1($crntRow1[1]);
                        $aprvdAmount1 = (float) cleanInputData1($crntRow1[2]);
                        $rpmntAcctID1 = (int) cleanInputData1($crntRow1[3]);
                        $cashColtID1= (int) cleanInputData1($crntRow1[4]);
                        $invtmntColtID1 = (int) cleanInputData1($crntRow1[5]);
                        $prptyColtID1 = (int) cleanInputData1($crntRow1[6]);

                        $affctd5Rslt =  validateLoanCollateralsLiens($cashColtID1, $invtmntColtID1, $prptyColtID1, $aprvdAmount1, $lnRqstID, "Loan", $errMsgDsp, $lnRqstID, 0);
                        $affctd5RsltCnt = $affctd5RsltCnt + (int)$affctd5Rslt["lnCntr"]; //$disbDetArray["scheduledPrdcPaymntAmnt"]
                        $errMsgDsp1 = $errMsgDsp1 . "</br>" .$affctd5Rslt["errMsg"]; //array("lnCntr"=>$lnCntr, "errMsg"=>$errMsg);

                        $ttlAmount1 = $ttlAmount1 + $aprvdAmount1;
                    }
                }

                $loanAmount = (float)$apprvdLoanAmount;//getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_amount", $lnRqstID);
                if($ttlAmount1 != $loanAmount){
                    echo '<div><span style="color:red; font-weight:bold !important;"><i>'
                    . 'Sorry! Approved Amount '.number_format($loanAmount,2).' must agree with total approved amount for group Members '.number_format($ttlAmount1,2).'</i></br></span></div>';
                    exit();
                }

                if($affctd5RsltCnt > 0){
                      $dsply1 .= $errMsgDsp1;
                      $dsply1 .= "<br/>|ERROR|-Loan Application Submission Failed!";
                      $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply1</span></p>";
                      echo $msg;
                      exit();
                }

                $variousRows = explode("|", trim($slctdGrpMembers, "|"));
                for ($z = 0; $z < count($variousRows); $z++) {
                    $crntRow = explode("~", $variousRows[$z]);
                    if (count($crntRow) == 7) {
                        $pkeyID = (int) (cleanInputData1($crntRow[0]));
                        $custID = (int) cleanInputData1($crntRow[1]);
                        $aprvdAmount = (float) cleanInputData1($crntRow[2]);
                        $rpmntAcctID = (int) cleanInputData1($crntRow[3]);
                        $cashColtID= (int) cleanInputData1($crntRow[4]);
                        $invtmntColtID = (int) cleanInputData1($crntRow[5]);
                        $prptyColtID = (int) cleanInputData1($crntRow[6]);

                        $ttlAmount = $ttlAmount + $aprvdAmount;

                        $recCntUpdt = $recCntUpdt + updateGrpMemberApplctnsAprvl($pkeyID, $aprvdAmount, $dateStr);
                    }
                }


            }

            $RoutingID = -1;
            if (isset($_POST['RoutingID'])) {
                $RoutingID = cleanInputData($_POST['RoutingID']);
            }
            if ($RoutingID <= 0) {
                $srcDocID = $pkID;
                $srcDocType = "Loan Applications";
                $routingID = -1;
                $inptSlctdRtngs = "";
                $actionToPrfrm = "Initiate";
                echo mcfLoanAppsReqMsgActns($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType, $apprvdLoanAmount, $apprvdLoanTenor, $apprvdLoanTenorType, $apprvdInterestRate, $apprvlCmnts);
            } else {
                $actiontyp = isset($_POST['actiontyp']) ? $_POST['actiontyp'] : "";
                $usrID = $_SESSION['USRID'];
                $arry1 = explode(";", $actiontyp);
                for ($r = 0; $r < count($arry1); $r++) {
                    if ($arry1[$r] !== "") {
                        $srcDocID = -1;
                        $srcDocType = "Loan Applications";
                        $inptSlctdRtngs = "";
                        $routingID = $RoutingID;
                        $actionToPrfrm = $arry1[$r];
                        echo mcfLoanAppsReqMsgActns($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType, $apprvdLoanAmount, $apprvdLoanTenor, $apprvdLoanTenorType, $apprvdInterestRate, $apprvlCmnts);
                    }
                }
            }
        } else if ($actyp == 41) {
            $actiontyp = isset($_POST['actiontyp']) ? $_POST['actiontyp'] : "";
            $routingID = isset($_POST['RoutingID']) ? $_POST['RoutingID'] : "";

            if ($actiontyp == "Approve" && $routingID > 0) {
                $rtngMsgID = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "msg_id", $routingID);
                $srcDocID = getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_id", $rtngMsgID);

                $apprvdAmount = (float) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $srcDocID);

                if ($apprvdAmount <= 0) {
                    echo "<span style='color:red; font-weight:bold !important;'><i>Please OPEN the loan application and Provide Approval Details before APPROVING</i></span>";
                    exit();
                }
            } else {
                echo "<span style='color:red; font-weight:bold !important;'>Invalid Routing</span>";
                exit();
            }
        } else {
            echo "<span style='color:red; font-weight:bold !important;'>Invalid Routing</span>";
            exit();
        }
    } else if ($pgNo == 0) {
        $brnchLoc = getGnrlRecNm("org.org_sites_locations", "location_id", "REPLACE(location_code_name || '.' || site_desc, '.' || location_code_name,'')", $brnchLocID);
        $acsCntrlGrpNm = getGnrlRecNm("org.org_divs_groups", "div_id", "div_code_name", $acsCntrlGrpID);
        $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1');\">
						<span style=\"text-decoration:none;\">Banking & Microfinance Menu</span>
					</li>
                                       </ul>
                                     </div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
                    <!--<h3>FUNCTIONS UNDER THE BANKING & MICROFINANCE MANAGER</h3>-->
                    <div style=\"padding:5px 30px 5px 5px;margin-bottom:2px;\">
                        <span style=\"font-family: georgia, times;font-size: 20px;font-style:italic;
                        font-weight:normal;\"><span style=\"font-family: georgia, times;font-size: 14px;font-style:normal;
                        font-weight:bold;color:black\">Transactions Date:</span>
                            <span style=\"font-family: tahoma;font-size: 14px;font-style:normal;
                        font-weight:bold;color:blue;\">$gnrlTrnsDteDMYHMS</span>
                        <span style=\"font-family: georgia, times;font-size: 20px;font-style:italic;
                        font-weight:normal;\"><span style=\"font-family: georgia, times;font-size: 14px;font-style:normal;
                        font-weight:bold;color:black\">Branch:</span>
                            <span style=\"font-family: tahoma;font-size: 14px;font-style:normal;
                        font-weight:bold;color:blue;\">$brnchLoc</span>
                        <span style=\"font-family: georgia, times;font-size: 20px;font-style:italic;
                        font-weight:normal;\"><span style=\"font-family: georgia, times;font-size: 14px;font-style:normal;
                        font-weight:bold;color:black\">Default Accounts:</span>
                            <span style=\"font-family: tahoma;font-size: 14px;font-style:normal;
                        font-weight:bold;color:blue;\">$acsCntrlGrpNm</span>
                    </div>
      <p>";
        $grpcntr = 0;
        if ($acsCntrlGrpID > 0 && $brnchLocID > 0) {
            for ($i = 0; $i < count($menuItems); $i++) {
                $No = $i + 1;
                if ($i == 0 && $canViewCM == FALSE) {
                    continue;
                } else if ($i == 1 && $canViewCA == FALSE) {
                    continue;
                } else if ($i == 2 && $canViewCB == FALSE) {
                    continue;
                } else if ($i == 3 && $canViewCRDT == FALSE) {
                    continue;
                } else if ($i == 4 && $canViewINVST == FALSE) {
                    continue;
                } else if ($i == 5 && $canViewVM == FALSE) {
                    continue;
                } else if ($i == 6 && $canViewPRDCT == FALSE) {
                    continue;
                } else if ($i == 7 && $canViewCONF == FALSE) {
                    continue;
                } else if ($i == 8 && $canViewTM == FALSE) {
                    continue;
                } else if ($i == 9 && $canViewRpts == FALSE) {
                    continue;
                }
            if ($grpcntr == 0) {
                $cntent .= "<div class=\"row\">";
            }
            if ($i == 5) {
                $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=25&typ=1&pg=0&srcMenu=Banking');\">
            <img src=\"cmn_images/$menuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($menuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
            } else if ($i == 9) {
                $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=40&mMenu=$menuItems[$i]&isStndrdRprtsView=1');\">
            <img src=\"cmn_images/$menuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($menuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
            } else {
                $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:125px;height:123px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$No&mMenu=$menuItems[$i]');\">
            <img src=\"cmn_images/$menuImages[$i]\" style=\"margin:5px auto; height:48px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($menuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
            }
            if ($grpcntr == 3) {
                $cntent .= "</div>";
                $grpcntr = 0;
            } else {
                $grpcntr = $grpcntr + 1;
            }
        }

        $cntent .= "
      </p>
    </div>";

        $cntent .= "<div style=\"display:none !important;\">
                        <select id=\"trnsNtAllwdDysSlt\">";
        $brghtStr = "";
        $isDynmyc = FALSE;
        $titleRslt = getLovValues("%", "Both", 0, 100, $brghtStr, getLovID("Transactions not Allowed Days"), $isDynmyc, -1, "", "");
        while ($titleRow = loc_db_fetch_array($titleRslt)) {
            $selectedTxt = "";
            $cntent .= "<option value=\"$titleRow[0]\" $selectedTxt>$titleRow[0]</option>";
        }
        $cntent .= "</select>
                    </div>";

        $cntent .= "<div style=\"display:none !important;\">
                            <select id=\"trnsNtAllwdDtsSlt\">";
        $brghtStr = "";
        $isDynmyc = FALSE;
        $titleRslt = getLovValues("%", "Both", 0, 100, $brghtStr, getLovID("Transactions not Allowed Dates"), $isDynmyc, -1, "", "");
        while ($titleRow = loc_db_fetch_array($titleRslt)) {
            $selectedTxt = "";
            $cntent .= "<option value=\"$titleRow[0]\" $selectedTxt>$titleRow[0]</option>";
        }
        $cntent .= "</select>
                        </div>";
	} else {
            $cntent .= "<div style=\"text-align: center;\"><span style=\"font-size: 15px; font-weight: bold; color: red !important;\">Sorry! Your Branch and/or Accounts Group has not been Setup!</br> Contact I.T for Assistance. Thanks!</span></div>";
        }
        echo $cntent;
    } else {
        $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1');\">
						<span style=\"text-decoration:none;\">Banking & Microfinance Menu</span>
    </li>";
        if ($pgNo == 1) {//CUSTOMER MANAGEMENT
            if ($subPgNo == 1.1 || $subPgNo == 1.2 || $subPgNo == 1.3 || $subPgNo == 1.4 || $subPgNo == 1.9) {
                require "customers.php";
            } else if ($subPgNo == 1.5) {
                require "customers.php";
            } else if ($subPgNo == 1.6) {
                require "cust_addtnl_data_stps.php";
            } else {

                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=1');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Customer Management Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CUSTOMER MANAGEMENT MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 1.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($cstMenuItems); $i++) {

                    if ($i == 0 && test_prmssns($dfltPrvldgs[14], $mdlNm) == FALSE) {
                        $No = $No + 0.1;
                        continue;
                    } else if ($i == 1 && test_prmssns($dfltPrvldgs[15], $mdlNm) == FALSE) {
                        $No = $No + 0.1;
                        continue;
                    } else if ($i == 2 && test_prmssns($dfltPrvldgs[16], $mdlNm) == FALSE) {
                        $No = $No + 0.1;
                        continue;
                    } else if ($i == 3 && test_prmssns($dfltPrvldgs[17], $mdlNm) == FALSE) {
                        $No = $No + 0.1;
                        continue;
                    } else if ($i == 4 && test_prmssns($dfltPrvldgs[18], $mdlNm) == FALSE) {
                        continue;
                    }

                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$cstMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($cstMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    $No = $No + 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 2) {//CUSTOMER ACCOUNTS
            if ($subPgNo == 2.1 || $subPgNo == 2.2 || $subPgNo == 2.3) {
                require "customer_accounts.php";
            } else {

                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=2');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Customer Accounts Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CUSTOMER ACCOUNTS MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 2.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($cstAcctMenuItems); $i++) {
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$cstAcctMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($cstAcctMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    $No = $No + 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 3) {//CORE BANKING
            if ($subPgNo == 3.1) {
                require "core_banking.php";
            } else if ($subPgNo == 3.2) {
                require "core_banking.php";
            } else if ($subPgNo == 3.3) {
                require "core_banking.php";
            } else if ($subPgNo == 3.5) {
                require "core_banking.php";
            } else if ($subPgNo == 3.4) {
                require "cheques_management.php";
            } else {
                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=3');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Core Banking Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CORE BANKING MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 3.0;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($cbMenuItems); $i++) {
                    $No = $No + 0.1;
                    //$cbMenuItems = array("Teller Operations", "Uncleared Transactions", "Miscellaneous Account Transactions", "Cheques Management", "Account Transfers & Standing Orders");
                    if ($i == 0 && test_prmssns($dfltPrvldgs[21], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 1 && test_prmssns($dfltPrvldgs[22], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 2 && test_prmssns($dfltPrvldgs[23], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 3 && test_prmssns($dfltPrvldgs[24], $mdlNm) == FALSE) {
                        continue;
                    } else if ($i == 4 && test_prmssns($dfltPrvldgs[25], $mdlNm) == FALSE) {
                        continue;
                    }
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }

                    if ($i == 0 || $i == 3) {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:175px;height:173px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&q=SUBMENUS&pg=$pgNo&subPgNo=$No');\">
            <img src=\"cmn_images/$cbMenuImages[$i]\" style=\"margin:5px auto; height:78px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($cbMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    } else {
                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
        <button type=\"button\" class=\"btn btn-default btn-lg btn-block\" style=\"min-height:175px;height:173px;margin-bottom:5px;\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
            <img src=\"cmn_images/$cbMenuImages[$i]\" style=\"margin:5px auto; height:78px; width:auto; position: relative; vertical-align: middle;float:none;\">
            <br/>
            <span class=\"wordwrap3\">" . ($cbMenuItems[$i]) . "</span>
            <br/>&nbsp;
        </button>
            </div>";
                    }
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                }
                $cntent .= "</p>
                </div>";
                echo $cntent;
            }
        } else if ($pgNo == 4) {//CREDIT MANAGEMENT
            if ($subPgNo == 4.1 || $subPgNo == 4.2 || $subPgNo == 4.3 || $subPgNo == 4.5 || $subPgNo == 4.7 || $subPgNo == 4.9 || $subPgNo == 4.12) {
                require "credit_management.php";
            } else if ($subPgNo == 4.4 || $subPgNo == 4.8 || $subPgNo == 4.81 || $subPgNo == 4.82 || $subPgNo == 4.11) {
                require "edit_credit_management.php";
            } else if ($subPgNo == 4.6) {
                if ($subVwtyp == 1 || $subVwtyp == 2) {
                    require "credit_management.php";
                } else if ($subVwtyp == 3 || $subVwtyp == 3.1 || $subVwtyp == 3.2 || $subVwtyp == 3.3 || $subVwtyp == 4 || $subVwtyp == 4.1 || $subVwtyp == 4.2) {
                    require "edit_credit_management.php";
                } else {
                    $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=4');\">
                                                <span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
						<span style=\"text-decoration:none;\">Credit Management Menu</span>
                                        </li><li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=4&subPgNo=4.6');\">
                                                                <span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>
                                                                <span style=\"text-decoration:none;\">Credit Risk Assessment</span>
                            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
                      <h4>CREDIT RISK ASSESSMENT</h3>
                      <p>";

                    $grpcntr = 0;
                    //$No = 4.1;
                    for ($i = 0; $i < count($craMenuItems); $i++) {
                        if (($i == 0 && $canViewCreditRiskAssmnt === $canViewCreditRiskAssmnt) || ($i == 1 && $canViewRiskFactors === false) || ($i == 2 && $canViewRiskProfiles === false) || ($i == 3 && $canViewAssessmentSet === false)) {
                            continue;
                        }

                        $No = $i + 1;
                        if ($grpcntr == 0) {
                            $cntent .= "<div class=\"row\">";
                        }

                        $onclickUrl = "openATab('#allmodules', 'grp=17&typ=1&pg=4&subPgNo=4.6&subVwtyp=$No');";

                        $cntent .= "<div class=\"col-md-3 colmd3special2\">
                        <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"$onclickUrl\">
                            <img src=\"cmn_images/$craMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                            <span class=\"wordwrap2\">" . ($craMenuItems[$i]) . "</span>
                        </button>
                    </div>";
                        if ($grpcntr == 3) {
                            $cntent .= "</div>";
                            $grpcntr = 0;
                        } else {
                            $grpcntr = $grpcntr + 1;
                        }
                        //$No = $No + 0.1;
                    }

                    $cntent .= "
                    </p>
                  </div>";
                    echo $cntent;
                }
            } else {
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=4');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Credit Management Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CREDIT MANAGEMENT MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 4.1;
                $x = 0.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($cmMenuItems); $i++) {

                    if ($i == 0 && $canViewLoanApplctn === false || ($i == 1 && $canViewDisbursment === false) || ($i == 2 && $canViewLoanRpymnt === false) || ($i == 3 && $canViewLoanCalculator === false) || ($i == 5 && $canViewCreditRiskAssmnt === false) || ($i == 6 && $canViewPropertyCollaterals === false) || ($i == 7 && $canViewSectorClassifications === false) || ($i == 8 && $canViewLoanSummaryDshboard === false)) {
			$No = $No + $x;
                        continue;
                    }

                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    if ($i == 9) {
                        $No = 4.11;
                        $x = 0.01;
                    }

		    if($i == 4){
                        if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                        } else {
                            $grpcntr = $grpcntr + 1;
                        }

                        $No = $No + $x;
                        continue;
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $onclickUrl = "openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');";

                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"$onclickUrl\">
                        <img src=\"cmn_images/$cmMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($cmMenuItems[$i]) . "</span>
                    </button>
                </div>";


                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }

                    $No = $No + $x;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 5) {//Investment MANAGEMENT
            //var_dump($_POST);
            if ($subPgNo == 5.1 || $subPgNo == 5.2 || $subPgNo == 5.3) {
                require "investments.php";
            } else {
                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=5');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Investment Management Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>INVESTMENT MANAGEMENT MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 5.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($invstMenuItems); $i++) {
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$invstMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($invstMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    $No = $No + 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 7) {//PRODUCT MANAGEMENT
            if ($subPgNo == 7.1 || $subPgNo == 7.2 || $subPgNo == 7.3 || $subPgNo == 7.4) {
                require "products.php";
            } else {

                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=7');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Product Setup Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>PRODUCT SETUP MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 7.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($pdtMenuItems); $i++) {
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$pdtMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($pdtMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    $No = $No + 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 8) {//CONFIGURATION SETUP
            //echo $subPgNo;
            if ($subPgNo == 1.1 || $subPgNo == 1.2 || $subPgNo == 1.3 || $subPgNo == 1.4 || $subPgNo == 1.5 || $subPgNo == 1.6 || $subPgNo == 1.61 || $subPgNo == 1.62 || $subPgNo == 1.7 || $subPgNo == 1.8 || $subPgNo == 1.9 || $subPgNo == 140.1) {
                require "configuration.php";
            } else {

                //BREADCRUMBS
                $cntent .= "
					<li onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=1');\">
						<span class=\"divider\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span><span style=\"text-decoration:none;\"> Configuration Menu</span>
            </li></div>" . "<div style=\"font-family: Tahoma, Arial, sans-serif;font-size: 1.3em;
                    padding:10px 15px 15px 20px;border:1px solid #ccc;\">
      <h4>CONFIGURATION MENU ITEMS</h3>
      <p>";

                $grpcntr = 0;
                $No = 1.1;
                //$prsnType = get_LtstPrsnType($prsnid);
                for ($i = 0; $i < count($gstMenuItems); $i++) {
                    if ($grpcntr == 0) {
                        $cntent .= "<div class=\"row\">";
                    }
                    //showPageDetails('$pageHtmlID', $No);
                    $cntent .= "<div class=\"col-md-3 colmd3special2\">
                    <button type=\"button\" class=\"btn btn-default btn-lg btn-block modulesButton\" onclick=\"openATab('#allmodules', 'grp=17&typ=1&pg=$pgNo&subPgNo=$No');\">
                        <img src=\"cmn_images/$gstMenuImages[$i]\" style=\"margin:5px; padding-right: 1em; height:58px; width:auto; position: relative; vertical-align: middle;float:left;\">
                        <span class=\"wordwrap2\">" . ($gstMenuItems[$i]) . "</span>
                    </button>
                </div>";
                    if ($grpcntr == 3) {
                        $cntent .= "</div>";
                        $grpcntr = 0;
                    } else {
                        $grpcntr = $grpcntr + 1;
                    }
                    $No = $No + 0.1;
                }

                $cntent .= "
      </p>
    </div>";
                echo $cntent;
            }
        } else if ($pgNo == 9) {//CUSTOMER PROFILE
            require "trsry_mngmnt.php";
        } else if ($pgNo == 10) {//CUSTOMER PROFILE
            require "edit_cust_profile.php";
        } else if ($pgNo == 11) {//CUSTOMERS DETAILS
            require "edit_customers.php";
        } else if ($pgNo == 12) {//PRODUCTS DETAILS
            require "edit_products.php";
        } else if ($pgNo == 13) {//CUSTOMER ACCOUNTS DETAILS
            require "edit_customer_accounts.php";
        } else if ($pgNo == 14 || $pgNo == 1040 || $pgNo == 1041 || $pgNo == 1042 || $pgNo == 1043 || $pgNo == 1044 || $pgNo == 1045 || $pgNo == 1046) {//CUSTOMER ACCOUNTS DETAILS
            require "edit_core_banking.php";
        } else if ($pgNo == 15) {//CREDIT MANAGEMENT DETAILS
            require "edit_credit_management.php";
        } else if ($pgNo == 16) {//INVESTMENTS MANAGEMENT DETAILS
            require "edit_core_banking.php";
        } else if ($pgNo == 18) {//CUSTOMERS DETAILS
            require "edit_configuration.php";
        } else if ($pgNo == 19) {//CHEQUE MANAGEMENT
            require "edit_cheques_management.php";
        } else if ($pgNo == 25) {//INVESTMENT DETAILS
            //var_dump($_POST);
            require "edit_investments.php";
        } else if ($pgNo == 40) {//CUSTOMERS DETAILS
            require "mcf_rpts.php";
        } else {
            restricted();
        }
    }
} else {
    restricted();
}

/* * AGENT ID* */

function addTelcoAgents($msisdn, $agent, $region, $city, $telco) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $insSQL = "INSERT INTO epay.epay_agent_ids(msisdn, agent_name, region, city, telco,
                        created_by, creation_date, last_update_by, last_update_date)
                VALUES ('" . loc_db_escape_string(trim($msisdn)) . "','" .
            loc_db_escape_string(str_replace('*', ',', trim($agent))) . "','" .
            loc_db_escape_string(trim($region)) . "','" . loc_db_escape_string(str_replace('*', ',', trim($city)))
            . "','" . loc_db_escape_string(trim($telco)) . "'," . $usrID . ",'" . $dateStr . "',"
            . $usrID . ",'" . $dateStr . "')";
    execUpdtInsSQL($insSQL);
}

/* CORPORATE CUSTOMER FUNCTIONS */

function get_CorpCustTtl($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $orgID, $searchAll, $custTyp) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Name") {
        $whrcls = " AND (trim(a.cust_name) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Postal Address") {
        $whrcls = " AND (a.pstl_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.contact_nos ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Date of Establishment") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_estblshmnt,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

//    $strSql = "SELECT count(1) " .
//            "FROM mcf.mcf_customers_corp a, mcf.mcf_customers b "
//            . "WHERE (a.cust_id = b.cust_id AND b.cust_type = '" . $custTyp . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ")";
//    $result = executeSQLNoParams($strSql);
//    while ($row = loc_db_fetch_array($result)) {
//        return $row[0];
//    }
//    return 0;

    $strSql1 = "SELECT count(1) " .
            "FROM mcf.mcf_customers_corp a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND b.chngs_pndng = 0 AND b.cust_type = '" . $custTyp . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result1 = executeSQLNoParams($strSql1);
    //var_dump($strSql);
    while ($row1 = loc_db_fetch_array($result1)) {
        $cnt = $row1[0];
    }

    $strSql2 = "SELECT count(1) " .
            "FROM mcf.mcf_customers_corp_hstrc a, mcf.mcf_customers_hstrc b "
            . "WHERE (a.cust_id = b.cust_id AND b.cust_type = '" . $custTyp . "' AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_customers_hstrc c WHERE"
            . " c.cust_id = b.cust_id) AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result2 = executeSQLNoParams($strSql2);
    //var_dump($strSql);
    while ($row2 = loc_db_fetch_array($result2)) {
        $cnt = $cnt + $row2[0];
    }

    return $cnt;
}


function get_CorpCust($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy, $custTyp) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Name") {
        $whrcls = " AND (trim(a.cust_name) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Postal Address") {
        $whrcls = " AND (a.pstl_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.contact_nos ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Date of Establishment") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_estblshmnt,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "last_update_date DESC";
    } else if ($sortBy == "Date of Establishment") {
        $ordrBy = "date_of_estblshmnt ASC";
    } else if ($sortBy == "Name") {
        $ordrBy = "trim(cust_name) ASC";
    } else if ($sortBy == "ID ASC") {
        $ordrBy = "local_id_no ASC";
    } else if ($sortBy == "ID DESC") {
        $ordrBy = "local_id_no DESC";
    }

//    $strSql = "SELECT a.cust_id, a.local_id_no, trim(a.cust_name) fullname, "
//            . "a.nature_of_business, a.classification, a.date_of_estblshmnt, a.firm_brand_name,
//                type_of_organisation, company_reg_num, type_of_incorporation
//          , vat_number, tin_number, ssnit_reg_number,no_of_emplyees,
//          trim(contact_nos), email, pstl_address, res_address, contact_no_fax,
//          date_of_incorporation, is_enabled, a.corp_profile_id mt, b.status
//          FROM mcf.mcf_customers_corp a, mcf.mcf_customers b "
//            . "WHERE (a.cust_id = b.cust_id AND b.cust_type = '" . $custTyp . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);
    $strSql = "SELECT distinct a.cust_id, a.local_id_no, trim(a.cust_name) fullname, "
            . "a.nature_of_business, a.classification, a.date_of_estblshmnt, a.firm_brand_name,
                type_of_organisation, company_reg_num, type_of_incorporation
          , vat_number, tin_number, ssnit_reg_number,no_of_emplyees,
          trim(contact_nos), email, pstl_address, res_address, contact_no_fax,
          date_of_incorporation, is_enabled, a.corp_profile_id mt, b.branch_id, b.status, a.last_update_date
          FROM mcf.mcf_customers_corp a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND b.chngs_pndng = 0 AND b.cust_type = '" . $custTyp . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") UNION " .
            "SELECT distinct a.cust_id, a.local_id_no, trim(a.cust_name) fullname, "
            . "a.nature_of_business, a.classification, a.date_of_estblshmnt, a.firm_brand_name,
                type_of_organisation, company_reg_num, type_of_incorporation
          , vat_number, tin_number, ssnit_reg_number,no_of_emplyees,
          trim(contact_nos), email, pstl_address, res_address, contact_no_fax,
          date_of_incorporation, is_enabled, a.corp_profile_id mt, b.branch_id, b.status, a.last_update_date
          FROM mcf.mcf_customers_corp_hstrc a, mcf.mcf_customers_hstrc b "
            . "WHERE (a.cust_id = b.cust_id AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_customers_hstrc c WHERE"
            . " c.cust_id = b.cust_id) AND b.status NOT IN ('Approved','Authorized') AND b.cust_type = '" . $custTyp . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_CorpCustDet($pkID, $tblNmCustCorp1, $tblNmCust2) {
    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID)";

    if ($tblNmCustCorp1 == "mcf.mcf_customers_corp_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT distinct a.cust_id mt, local_id_no \"ID No.\", trim(a.cust_name) \"Customer Name\", a.nature_of_business, /*3*/
           a.classification, to_char(to_timestamp(a.date_of_estblshmnt,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.firm_brand_name, /*6*/
          type_of_organisation, company_reg_num, type_of_incorporation, /*9*/
          vat_number, tin_number, ssnit_reg_number, /*12*/
          no_of_emplyees, trim(contact_nos) \"Contact Nos\", contact_no_fax, /*15*/
          email, pstl_address, res_address, /*18*/
          to_char(to_timestamp(date_of_incorporation,'YYYY-MM-DD'),'DD-Mon-YYYY'), is_enabled, a.corp_profile_id mt, /*21*/
          b.relation_type \"Relation Type\", b.status \"Cause of Relation\", b.branch_id \"Branch\", /*24*/
            to_char(to_timestamp(b.valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Start Date \", /*25*/
            to_char(to_timestamp(b.valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"End Date \", corp_profile_id, meeting_days, b.rvsn_ttl /*29*/
            FROM $tblNmCustCorp1 a, $tblNmCust2 b "
            . "WHERE (a.cust_id = b.cust_id AND (a.cust_id=$pkID) $andClause)";
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_CorpDirectors($pkID, $prsnType = "") {
//    $strSql = "SELECT director_id, mcf.get_corp_director_name(cust_id, source_type, person_cust_id) director,  source_type,
//        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), person_cust_id, cust_id, mcf.get_corp_director_idNo(cust_id, source_type, person_cust_id)
//  FROM mcf.mcf_corporate_directors a WHERE cust_id = $pkID";

    $cnt = getCustDataChngPndngCount($pkID);
    $tblNm2 = "mcf.mcf_customers";
    if ($cnt > 0) {
        $tblNm2 = "mcf.mcf_customers_hstrc";
    }

    $tblNm = "mcf.mcf_corporate_directors";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_corporate_directors_hstrc";
    }

    $andClause1 = " AND (CASE WHEN b.status IN ('Incomplete','Rejected','Withdrawn') THEN (a.director_id > 0) ELSE (1=1) END)";

    $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID)";
    if ($tblNm2 == "mcf.mcf_customers_hstrc") {
        $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT distinct director_id, mcf.get_corp_director_hstrc_name(a.cust_id, source_type, person_cust_id, $cnt) director,  source_type,
        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), person_cust_id, a.cust_id,
        mcf.get_corp_director_hstrc_idNo(a.cust_id, source_type, person_cust_id, $cnt), is_approved
          FROM $tblNm a, $tblNm2 b WHERE a.cust_id = b.cust_id AND a.rvsn_ttl = b.rvsn_ttl AND ((a.cust_id = $pkID)) $andClause $andClause1";
    $result = executeSQLNoParams($strSql);
    return $result;
}

/* PERSONAL CUSTOMER FUNCTIONS */

function get_IndCustTtl($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql1 = "";
    $strSql2 = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Full Name") {
        $whrcls = " AND (trim(a.title || ' ' || a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Residential Address") {
        $whrcls = " AND (a.res_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.pstl_addrs ilike '" . loc_db_escape_string($searchFor) .
                "' or a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_tel ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_mobl ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_fax ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Linked Firm/Workplace") {
        $whrcls = " AND (scm.get_cstmr_splr_name(a.lnkd_firm_org_id) ilike '" . loc_db_escape_string($searchFor) .
                "' or scm.get_cstmr_splr_site_name(a.lnkd_firm_site_id) ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Date of Birth") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_birth,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Home Town") {
        $whrcls = " AND (a.hometown ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Gender") {
        $whrcls = " AND (a.gender ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Marital Status") {
        $whrcls = " AND (a.marital_status ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

    $strSql1 = "SELECT count(1) " .
            "FROM mcf.mcf_customers_ind a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND b.chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result1 = executeSQLNoParams($strSql1);
    //var_dump($strSql);
    while ($row1 = loc_db_fetch_array($result1)) {
        $cnt = $row1[0];
    }

    $strSql2 = "SELECT count(1) " .
            "FROM mcf.mcf_customers_ind_hstrc a, mcf.mcf_customers_hstrc b "
            . "WHERE (a.cust_id = b.cust_id AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_customers_hstrc c WHERE"
            . " c.cust_id = b.cust_id) AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result2 = executeSQLNoParams($strSql2);
    //var_dump($strSql);
    while ($row2 = loc_db_fetch_array($result2)) {
        $cnt = $cnt + $row2[0];
    }

    return $cnt;
}

function get_IndCust($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Full Name") {
        $whrcls = " AND (trim(a.title || ' ' || a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Residential Address") {
        $whrcls = " AND (a.res_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.pstl_addrs ilike '" . loc_db_escape_string($searchFor) .
                "' or a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_tel ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_mobl ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_fax ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Linked Firm/Workplace") {
        $whrcls = " AND (scm.get_cstmr_splr_name(a.lnkd_firm_org_id) ilike '" . loc_db_escape_string($searchFor) .
                "' or scm.get_cstmr_splr_site_name(a.lnkd_firm_site_id) ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Date of Birth") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_birth,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Home Town") {
        $whrcls = " AND (a.hometown ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Gender") {
        $whrcls = " AND (a.gender ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Marital Status") {
        $whrcls = " AND (a.marital_status ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "last_update_date DESC";
    } else if ($sortBy == "Date of Birth") {
        $ordrBy = "date_of_birth ASC";
    } else if ($sortBy == "Full Name") {
        $ordrBy = "3 ASC";
    } else if ($sortBy == "ID ASC") {
        $ordrBy = "local_id_no ASC";
    } else if ($sortBy == "ID DESC") {
        $ordrBy = "local_id_no DESC";
    }

//    $strSql = "SELECT a.cust_id, a.local_id_no, trim(a.sur_name || " .
//            "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
//            . "a.img_location, a.first_name, a.sur_name, a.other_names,
//                gender, marital_status,date_of_birth,
//          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
//          trim(cntct_no_tel) || trim(cntct_no_mobl),
//          cntct_no_fax, img_location, hometown, nationality,
//          lnkd_firm_org_id,
//          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
//          lnkd_firm_site_id,
//          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
//          a.title, a.ind_profile_id mt, status, branch_id
//          FROM mcf.mcf_customers_ind a, mcf.mcf_customers b "
//            . "WHERE (a.cust_id = b.cust_id AND a.chngs_pndng = 0 (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);

    $strSql = "SELECT a.cust_id, a.local_id_no, trim(a.sur_name || " .
            "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
            . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.title, a.ind_profile_id mt, status, branch_id, a.last_update_date
          FROM mcf.mcf_customers_ind a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND b.chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") UNION " .
            "SELECT a.cust_id, a.local_id_no, trim(a.sur_name || " .
            "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
            . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.title, a.ind_profile_id mt, status, branch_id, a.last_update_date
          FROM mcf.mcf_customers_ind_hstrc a, mcf.mcf_customers_hstrc b "
            . "WHERE (a.cust_id = b.cust_id AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_customers_hstrc c WHERE"
            . " c.cust_id = b.cust_id) AND b.status NOT IN ('Approved','Authorized') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);

    $result = executeSQLNoParams($strSql);

    //var_dump($strSql);
    return $result;
}

function get_IndCustDet($pkID, $tblNmCustInd1, $tblNmCust2) {
//    $tblNm1 = "mcf.mcf_customers_ind";
//    $tblNm2 = "mcf.mcf_customers";
//
//    $cnt = getCustDataChngPndngCount($pkID);
//    if($cnt > 0){
//        $tblNm1 = "mcf.mcf_customers_ind_hstrc";
//        $tblNm2 = "mcf.mcf_customers_hstrc";
//    }
//

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID)";

    if ($tblNmCustInd1 == "mcf.mcf_customers_ind_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT distinct a.ind_profile_id mt, local_id_no \"ID No.\", img_location \"Person's Picture\",
          title, first_name, sur_name \"surname\", other_names, org.get_org_name(b.org_id) organisation,
          gender, marital_status,
          to_char(to_timestamp(date_of_birth,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Date of Birth\",
          place_of_birth, religion,
          res_address residential_address, pstl_addrs postal_address, email,
          cntct_no_tel tel, cntct_no_mobl mobile,
          cntct_no_fax fax, hometown, nationality,
          (CASE WHEN lnkd_firm_org_id>0 THEN
          scm.get_cstmr_splr_name(lnkd_firm_org_id)
              ELSE
              new_company
              END) \"Linked Firm/ Workplace \",
          (CASE WHEN lnkd_firm_org_id>0 THEN
           scm.get_cstmr_splr_site_name(lnkd_firm_site_id)
              ELSE
              new_company_loc
              END) \"Branch \",
              b.relation_type \"Relation Type\",
            b.status \"Status\",
            b.branch_id \"Further Details\",
            to_char(to_timestamp(b.valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Start Date \",
            to_char(to_timestamp(b.valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"End Date \",
            a.cust_id mt, lnkd_firm_org_id, lnkd_firm_site_id, sign_img_location, b.rvsn_ttl
            FROM $tblNmCustInd1 a, $tblNmCust2 b "
            . "WHERE (a.cust_id = b.cust_id AND (a.cust_id=$pkID) $andClause)";


    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function createPrsnBasic($orgid, $custID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr) {
    global $usrID;
    $dobYMD = cnvrtDMYToYMD($dob);

    //$idNoVal
    $bnkBranchCode = getCustBranchCode($custID);
//    $varVal = getMCFglobalVariableValue("Customer ID No. Format");
//    $idNoVal = "(SELECT lpad(trim((" . $custID . ")||''),7,'0'))";
//    if($varVal == "Branch Code->Unique ID"){
//        $idNoVal = "'$bnkBranchCode'||(SELECT lpad(trim((" . $custID . ")||''),7,'0'))";
//    }
    //$idNoVal = getNextCustLocalIDNoSerial($custID, "mcf.mcf_customers_ind");
    $idNoVal = getGnrlRecNm("mcf.mcf_customers", "cust_id", "id_no", $custID);

    //$dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_customers_ind(" .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "cust_id, local_id_no, title, first_name, sur_name, other_names, gender, org_id, " .
            "marital_status, date_of_birth, place_of_birth, religion, " .
            "res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl, " .
            "cntct_no_fax, hometown, nationality, lnkd_firm_org_id, lnkd_firm_site_id, " .
            "new_company, new_company_loc)" .
            "VALUES (" . $usrID . ", '" . $dateStr . "', " .
            $usrID . ", '" . $dateStr . "', " . $custID .
            ",'" . $idNoVal . "', '" . loc_db_escape_string($title) .
            "', '" . loc_db_escape_string($firstName) . "', '" . loc_db_escape_string($surName) .
            "', '" . loc_db_escape_string($otherNames) . "', '" . loc_db_escape_string($gender) . "', " . $orgid . "," .
            "'" . loc_db_escape_string($maritalStatus) . "', '" . $dobYMD .
            "', '" . loc_db_escape_string($pob) . "', '" . loc_db_escape_string($religion) .
            "', '" . loc_db_escape_string($residentialAddress) . "', " .
            "'" . loc_db_escape_string($postalAddress) . "', '" . loc_db_escape_string($email) .
            "', '" . loc_db_escape_string($telNo) . "', '" . loc_db_escape_string($mobileNo) .
            "', '" . loc_db_escape_string($faxNo) . "', '" . loc_db_escape_string($homeTown) .
            "', '" . loc_db_escape_string($nationality) .
            "', " . $lnkdFirmID . ", " . $lnkdFirmLocID .
            ", '" . loc_db_escape_string($lnkdFirmName) . "', '" . loc_db_escape_string($lnkdFirmLoc) .
            "')";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function createCustTblData($startDate, $endDate, $custType, $bnkBranchID, $relation, $dateStr, $custID, $idNo) {

    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    $endDate1 = $endDate;

    if ($endDate == "") {
        $endDate1 = '4000-12-31';
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate);
    }

    $v_startDAte = cnvrtDMYToYMD($startDate);

    $idNoVal = getNextCustLocalIDNoSerial($bnkBranchID);
    if(trim($idNo) != ""){
        $idNoVal = $idNo;
    }


    $updtSQL = "INSERT INTO mcf.mcf_customers(cust_id, created_by, creation_date, last_update_by, last_update_date," .
            " valid_start_date, valid_end_date, cust_type, org_id, branch_id, status, relation_type, id_no) VALUES($custID, " . $usrID . ",'" . $dateStr . "'," . $usrID .
            ",'" . $dateStr . "','" . $v_startDAte . "','" . $endDate1 . "','" . loc_db_escape_string($custType) . "'," . $orgID .
            "," . $bnkBranchID . ",'Incomplete','" . $relation . "','$idNoVal')";
    execUpdtInsSQL($updtSQL);
}


function getCustID($bnkBranchID, $dateStr, $custType, $orgID, $usrID) {

    $sqlStr = "SELECT cust_id FROM mcf.mcf_customers WHERE 1=1 AND branch_id = " . $bnkBranchID .
            " AND creation_date = '" . $dateStr . "' AND cust_type = '" . $custType . "' AND created_by = " . $usrID .
            " AND org_id = " . $orgID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function updatePrsnBasic($orgid, $profileID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $rvsnTtl) {
    global $usrID;
    $dateStr = getDB_Date_time();
    //$dobYMD = cnvrtDMYToYMD($dob);
    $tblNm = "mcf.mcf_customers_ind";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_customers_ind_hstrc";
    }

    $updtSQL = "UPDATE $tblNm " .
            "SET last_update_by=" . $usrID . ", " .
            "last_update_date='" . $dateStr .
            "', local_id_no='" . loc_db_escape_string($idNo) .
            "', title='" . loc_db_escape_string($title) .
            "', first_name='" . loc_db_escape_string($firstName) .
            "', sur_name='" . loc_db_escape_string($surName) .
            "', other_names='" . loc_db_escape_string($otherNames) .
            "', gender='" . loc_db_escape_string($gender) .
            "', org_id=" . $orgid .
            ", marital_status='" . loc_db_escape_string($maritalStatus) .
            "', date_of_birth='" . cnvrtDMYToYMD($dob) .
            "', place_of_birth='" . loc_db_escape_string($pob) .
            "', religion='" . loc_db_escape_string($religion) .
            "', res_address='" . loc_db_escape_string($residentialAddress) .
            "', pstl_addrs='" . loc_db_escape_string($postalAddress) .
            "', email='" . loc_db_escape_string($email) .
            "', cntct_no_tel='" . loc_db_escape_string($telNo) .
            "', cntct_no_mobl='" . loc_db_escape_string($mobileNo) .
            "', cntct_no_fax='" . loc_db_escape_string($faxNo) .
            "', hometown='" . loc_db_escape_string($homeTown) .
            "', nationality='" . loc_db_escape_string($nationality) .
            "', lnkd_firm_org_id=" . $lnkdFirmID .
            ", lnkd_firm_site_id=" . $lnkdFirmLocID .
            ", new_company='" . loc_db_escape_string($lnkdFirmName) .
            "', new_company_loc='" . loc_db_escape_string($lnkdFirmLoc) .
            "' WHERE ind_profile_id= $profileID AND rvsn_ttl = $rvsnTtl";
    execUpdtInsSQL($updtSQL);
}

function updateCustTblData($startDate, $endDate, $custID, $bnkBranchID, $relation, $rvsnTtl, $idNo) {

    global $usrID;
    $dateStr = getDB_Date_time();

    $tblNm = "mcf.mcf_customers";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_customers_hstrc";
    }

    $endDate1 = $endDate;

    if ($endDate == "") {
        $endDate1 = '4000-12-31';
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate);
    }

    $v_startDAte = cnvrtDMYToYMD($startDate);

    $updtSQL = "UPDATE $tblNm " .
            "SET last_update_by=" . $usrID . ", " .
            "last_update_date='" . $dateStr .
            "', valid_start_date='" . $v_startDAte .
            "', valid_end_date='" . $endDate1 .
            "', branch_id = " . $bnkBranchID .
            ", relation_type = '" . $relation .
            "', id_no = '". $idNo.
            "' WHERE cust_id= $custID AND rvsn_ttl = $rvsnTtl";
    execUpdtInsSQL($updtSQL);
}

function uploadDaImage($custID, &$nwImgLoc, $subFolder, $rvsnTtl) {
    global $database;
    global $ftp_base_db_fldr;
    global $usrID;
    global $fldrPrfx;
    global $smplTokenWord1;
    $imgImptID = "";

    if ($subFolder == "Picture") {
        $imgImptID = "custPicture";
    } else if ($subFolder == "Signature") {
        $imgImptID = "signPicture";
    }

    $tblNm = "mcf.mcf_customers_ind";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_customers_ind_hstrc";
    }


    $msg = "";
    //if (isset($_FILES["custPicture"])) {
    $allowedExts = array("gif", "jpeg", "jpg", "png");
//$files = multiple($_FILES);
    $flnm = $_FILES[$imgImptID]["name"];
    $msg .= $flnm;
    $temp = explode(".", $flnm);
    $extension = end($temp);
    if ($_FILES[$imgImptID]["error"] > 0) {
        $msg .= "Return Code: " . $_FILES[$imgImptID]["error"] . "<br>";
    } else {
        $msg .= "Upload: " . $_FILES[$imgImptID]["name"] . "<br>";
        $msg .= "Type: " . $_FILES[$imgImptID]["type"] . "<br>";
        $msg .= "Size: " . ($_FILES[$imgImptID]["size"]) . " bytes<br>";
        $msg .= "Temp file: " . $_FILES[$imgImptID]["tmp_name"] . "<br>";
        if ((($_FILES[$imgImptID]["type"] == "image/gif") ||
                ($_FILES[$imgImptID]["type"] == "image/jpeg") ||
                ($_FILES[$imgImptID]["type"] == "image/jpg") ||
                ($_FILES[$imgImptID]["type"] == "image/pjpeg") ||
                ($_FILES[$imgImptID]["type"] == "image/x-png") ||
                ($_FILES[$imgImptID]["type"] == "image/png") ||
                in_array($extension, $allowedExts)) &&
                ($_FILES[$imgImptID]["size"] < 6000000)) {
            $nwFileName = encrypt($custID . "." . $extension, $smplTokenWord1) . ".png";
            $img_src = $fldrPrfx . "dwnlds/tmp/$nwFileName";
            move_uploaded_file($_FILES[$imgImptID]["tmp_name"], $img_src);
            $ftp_src = $ftp_base_db_fldr . "/Mcf/Customers/$subFolder/$custID" . "." . $extension;
            if (file_exists($img_src) && !is_dir($img_src)) {
                copy("$img_src", "$ftp_src");

                $dateStr = getDB_Date_time();
                $updtSQL = "";
                if ($subFolder == "Picture") {
                    $updtSQL = "UPDATE $tblNm " .
                            "SET last_update_by=" . $usrID . ", " .
                            "last_update_date='" . $dateStr .
                            "', img_location = '" . $custID . "." . $extension . "' WHERE cust_id=" . $custID ." AND rvsn_ttl = $rvsnTtl";
                } else if ($subFolder == "Signature") {
                    $updtSQL = "UPDATE $tblNm " .
                            "SET last_update_by=" . $usrID . ", " .
                            "last_update_date='" . $dateStr .
                            "', sign_img_location = '" . $custID . "." . $extension . "' WHERE cust_id=" . $custID ." AND rvsn_ttl = $rvsnTtl";
                }
                execUpdtInsSQL($updtSQL);
            }
            $msg .= "Stored in: " . "uploaded/" . $_FILES[$imgImptID]["name"][0];
            $nwImgLoc = "$custID" . "." . $extension;
            return TRUE;
        } else {
            $msg .= "<br/>Invalid file";
            $nwImgLoc = $msg;
        }
    }
    //}
    //return FALSE;
}

function get_PersonAllNtnlty($pkID, $prsnType) {
//    $strSql = "SELECT ntnlty_id mt, nationality \"Country\", national_id_typ national_id_type,
//        id_number, to_char(to_timestamp(date_issued,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(expiry_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), other_info other_information
//          FROM mcf.mcf_prsn_names_nos WHERE person_type = '" . $prsnType . "' AND ((a.person_id = $pkID))";
    $andClause1 = " AND (CASE WHEN b.status IN ('Incomplete','Rejected','Withdrawn') THEN (a.ntnlty_id > 0) ELSE (1=1) END)";

    $cnt = getCustDataChngPndngCount($pkID);
    $tblNm2 = "mcf.mcf_customers";
    if ($prsnType === "Other Person") {
        $cnt = getOtherPrsnDataChngPndngCount($pkID);
        $tblNm2 = "mcf.mcf_prsn_names_nos";
    }

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
        if ($prsnType === "Other Person") {
            $tblNm2 = "mcf.mcf_prsn_names_nos_hstrc";
        } else {
            $tblNm2 = "mcf.mcf_customers_hstrc";
        }
    }

    $andClause = "";
    if ($prsnType === "Other Person") {
        $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prsn_names_nos where person_id = $pkID)";
        if ($tblNm2 == "mcf.mcf_prsn_names_nos_hstrc") {
            $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prsn_names_nos where person_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
        }
    } else {
        $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID)";
        if ($tblNm2 == "mcf.mcf_customers_hstrc") {
            $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
        }
    }

    $strSql = "";

    if ($prsnType === "Other Person") {
        $strSql = "SELECT distinct ntnlty_id mt, a.nationality \"Country\", national_id_typ national_id_type,
                id_number, to_char(to_timestamp(date_issued,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(expiry_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), other_info other_information, is_approved, ntnlty_id
                  FROM $tblNm a, $tblNm2 b WHERE a.person_id = b.person_id AND a.rvsn_ttl = b.rvsn_ttl AND person_type = '" . $prsnType . "' AND ((a.person_id = $pkID)) $andClause $andClause1";
    } else {
        $strSql = "SELECT distinct ntnlty_id mt, a.nationality \"Country\", national_id_typ national_id_type,
                id_number, to_char(to_timestamp(date_issued,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(expiry_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), other_info other_information, is_approved, ntnlty_id
                  FROM $tblNm a, $tblNm2 b WHERE a.person_id = b.cust_id AND a.rvsn_ttl = b.rvsn_ttl AND person_type = '" . $prsnType . "' AND ((person_id = $pkID)) $andClause $andClause1";
    }
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

/* * CUSTOMER GROUPS* */



/* * OTHER PERSONS* */

function get_OtherPrsnTtl($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $orgID, $searchAll, $prsnType) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Full Name") {
        $whrcls = " AND (trim(a.title || ' ' || a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Residential Address") {
        $whrcls = " AND (a.res_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.pstl_addrs ilike '" . loc_db_escape_string($searchFor) .
                "' or a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_tel ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_mobl ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_fax ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Linked Firm/Workplace") {
        $whrcls = " AND (scm.get_cstmr_splr_name(a.lnkd_firm_org_id) ilike '" . loc_db_escape_string($searchFor) .
                "' or scm.get_cstmr_splr_site_name(a.lnkd_firm_site_id) ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Date of Birth") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_birth,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Home Town") {
        $whrcls = " AND (a.hometown ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Gender") {
        $whrcls = " AND (a.gender ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Marital Status") {
        $whrcls = " AND (a.marital_status ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($prsnType == "All") {
        $strSql1 = "SELECT count(1) " .
                "FROM mcf.mcf_prsn_names_nos a "
                . "WHERE (1 = 1 AND chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ")";

        $result1 = executeSQLNoParams($strSql1);
        //var_dump($strSql);
        while ($row1 = loc_db_fetch_array($result1)) {
            $cnt = $row1[0];
        }

        $strSql2 = "SELECT count(1) " .
                "FROM mcf.mcf_prsn_names_nos_hstrc a "
                . "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prsn_names_nos_hstrc c WHERE"
                . " c.person_id = a.person_id) AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ")";
        $result2 = executeSQLNoParams($strSql2);
        //var_dump($strSql);
        while ($row2 = loc_db_fetch_array($result2)) {
            $cnt = $cnt + $row2[0];
        }
    } else {

        $strSql1 = "SELECT count(1) " .
                "FROM mcf.mcf_prsn_names_nos a "
                . "WHERE (a.prsn_type = '" . $prsnType . "' AND chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ")";

        $result1 = executeSQLNoParams($strSql1);
        //var_dump($strSql);
        while ($row1 = loc_db_fetch_array($result1)) {
            $cnt = $row1[0];
        }

        $strSql2 = "SELECT count(1) " .
                "FROM mcf.mcf_prsn_names_nos_hstrc a "
                . "WHERE (1 = 1  AND a.prsn_type = '" . $prsnType . "' AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prsn_names_nos_hstrc c WHERE"
                . " c.person_id = a.person_id) AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ")";

        $result2 = executeSQLNoParams($strSql2);
        //var_dump($strSql);
        while ($row2 = loc_db_fetch_array($result2)) {
            $cnt = $cnt + $row2[0];
        }
    }

//    $result = executeSQLNoParams($strSql);
//    while ($row = loc_db_fetch_array($result)) {
//        return $row[0];
//    }
//    return 0;

    return $cnt;
}


function get_OtherPrsn($statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy, $prsnType) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "ID") {
        $whrcls = " AND (a.local_id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Full Name") {
        $whrcls = " AND (trim(a.title || ' ' || a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Residential Address") {
        $whrcls = " AND (a.res_address ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Contact Information") {
        $whrcls = " AND (a.pstl_addrs ilike '" . loc_db_escape_string($searchFor) .
                "' or a.email ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_tel ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_mobl ilike '" . loc_db_escape_string($searchFor) .
                "' or a.cntct_no_fax ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Linked Firm/Workplace") {
        $whrcls = " AND (scm.get_cstmr_splr_name(a.lnkd_firm_org_id) ilike '" . loc_db_escape_string($searchFor) .
                "' or scm.get_cstmr_splr_site_name(a.lnkd_firm_site_id) ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Date of Birth") {
        $whrcls = " AND (to_char(to_timestamp(a.date_of_birth,"
                . "'YYYY-MM-DD'),'DD-Mon-YYYY') ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Home Town") {
        $whrcls = " AND (a.hometown ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Gender") {
        $whrcls = " AND (a.gender ilike '" . loc_db_escape_string($searchFor) .
                "')";
    } else if ($searchIn == "Marital Status") {
        $whrcls = " AND (a.marital_status ilike '" . loc_db_escape_string($searchFor) .
                "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "last_update_date DESC";
    } else if ($sortBy == "Date of Birth") {
        $ordrBy = "date_of_birth ASC";
    } else if ($sortBy == "Full Name") {
        $ordrBy = "trim(sur_name || " .
                "', ' || first_name || ' ' || other_names) ASC";
    } else if ($sortBy == "ID ASC") {
        $ordrBy = "local_id_no ASC";
    } else if ($sortBy == "ID DESC") {
        $ordrBy = "local_id_no DESC";
    }

    if ($prsnType == "All") {
//        $strSql = "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
//                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
//                . "a.img_location, a.first_name, a.sur_name, a.other_names,
//                gender, marital_status,date_of_birth,
//          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
//          trim(cntct_no_tel) || trim(cntct_no_mobl),
//          cntct_no_fax, img_location, hometown, nationality,
//          lnkd_firm_org_id,
//          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
//          lnkd_firm_site_id,
//          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
//          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
//          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status
//          FROM mcf.mcf_prsn_names_nos a "
//                . "WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//                ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//                " OFFSET " . abs($offset * $limit_size);

        $strSql = "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
                . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status, a.last_update_date
          FROM mcf.mcf_prsn_names_nos a "
                . "WHERE (1 = 1 AND a.chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ") UNION " .
                "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
                . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status, a.last_update_date
          FROM mcf.mcf_prsn_names_nos_hstrc a "
                . "WHERE (1 = 1  AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prsn_names_nos_hstrc c WHERE"
                . " c.person_id = a.person_id) AND a.status NOT IN ('Approved','Authorized') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
                " OFFSET " . abs($offset * $limit_size);
    } else {

//        $strSql = "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
//                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
//                . "a.img_location, a.first_name, a.sur_name, a.other_names,
//                gender, marital_status,date_of_birth,
//          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
//          trim(cntct_no_tel) || trim(cntct_no_mobl),
//          cntct_no_fax, img_location, hometown, nationality,
//          lnkd_firm_org_id,
//          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
//          lnkd_firm_site_id,
//          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
//          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
//          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status
//          FROM mcf.mcf_prsn_names_nos a "
//                . "WHERE (a.prsn_type = '" . $prsnType . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//                ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//                " OFFSET " . abs($offset * $limit_size);

        $strSql = "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
                . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status, a.last_update_date
          FROM mcf.mcf_prsn_names_nos a "
                . "WHERE (1 = 1 AND a.chngs_pndng = 0 AND a.prsn_type = '" . $prsnType . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ") UNION " .
                "SELECT a.person_id, a.local_id_no, trim(a.sur_name || " .
                "', ' || a.first_name || ' ' || a.other_names || ' (' || a.title ||')'  ) fullname, "
                . "a.img_location, a.first_name, a.sur_name, a.other_names,
                gender, marital_status,date_of_birth,
          place_of_birth, religion, res_address, pstl_addrs, email, cntct_no_tel,
          trim(cntct_no_tel) || trim(cntct_no_mobl),
          cntct_no_fax, img_location, hometown, nationality,
          lnkd_firm_org_id,
          CASE WHEN lnkd_firm_org_id <=0 THEN new_company ELSE scm.get_cstmr_splr_name(lnkd_firm_org_id) END,
          lnkd_firm_site_id,
          CASE WHEN lnkd_firm_site_id <=0 THEN new_company_loc ELSE scm.get_cstmr_splr_site_name(lnkd_firm_site_id) END,
          a.prsn_type, branch_id, to_timestamp(a.valid_start_date,'YYYY-MM-DD HH24:MI:SS') valid_start_date,
          to_timestamp(a.valid_end_date,'YYYY-MM-DD HH24:MI:SS') valid_end_date, status, a.last_update_date
          FROM mcf.mcf_prsn_names_nos_hstrc a "
                . "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prsn_names_nos_hstrc c WHERE"
                . " c.person_id = a.person_id) AND a.status NOT IN ('Approved','Authorized') AND a.prsn_type = '" . $prsnType . "' AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
                ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
                " OFFSET " . abs($offset * $limit_size);
    }


    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_OtherPrsnDet($pkID, $tblNmOtherPrsn) {

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prsn_names_nos where person_id = $pkID)";

    if ($tblNmOtherPrsn == "mcf.mcf_prsn_names_nos_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prsn_names_nos where person_id = $pkID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT distinct a.person_id mt, local_id_no \"ID No.\", img_location \"Person's Picture\",
          title, first_name, sur_name \"surname\", other_names, org.get_org_name(a.org_id) organisation,
          gender, marital_status,
          to_char(to_timestamp(date_of_birth,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Date of Birth\",
          place_of_birth, religion,
          res_address residential_address, pstl_addrs postal_address, email,
          cntct_no_tel tel, cntct_no_mobl mobile,
          cntct_no_fax fax, hometown, nationality,
          (CASE WHEN lnkd_firm_org_id>0 THEN
          scm.get_cstmr_splr_name(lnkd_firm_org_id)
              ELSE
              new_company
              END) \"Linked Firm/ Workplace \",
          (CASE WHEN lnkd_firm_org_id>0 THEN
           scm.get_cstmr_splr_site_name(lnkd_firm_site_id)
              ELSE
              new_company_loc
              END) \"Site \",
              a.prsn_type \"Relation Type\",
            a.status, branch_id, to_char(to_timestamp(a.valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') valid_start_date,
          to_char(to_timestamp(a.valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') valid_end_date, is_signatory,
          linked_cust_id, sign_img_location, lnkd_firm_org_id, lnkd_firm_site_id,  a.rvsn_ttl
            FROM $tblNmOtherPrsn a "
            . "WHERE ((a.person_id=$pkID) $andClause)";
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function createPrsnBasicOP($orgid, $personID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $startDate, $endDate, $bnkCustomerID, $isSignatory, $prsnType, $bnkBranchID) {
    global $usrID;
    $dobYMD = cnvrtDMYToYMD($dob);
    $endDate1 = $endDate;
    $startDate1 = cnvrtDMYToYMD($startDate);
    if ($endDate1 == "") {
        $endDate1 = "4000-12-31";
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate1);
    }
    //$dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_prsn_names_nos(person_id," .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "title, first_name, sur_name, other_names, gender, org_id, " .
            "marital_status, date_of_birth, place_of_birth, religion, " .
            "res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl, " .
            "cntct_no_fax, hometown, nationality, lnkd_firm_org_id, lnkd_firm_site_id, " .
            "new_company, new_company_loc, valid_start_date, valid_end_date, linked_cust_id, is_signatory,"
            . " prsn_type, branch_id, status)" .
            "VALUES ($personID," . $usrID . ", '" . $dateStr . "', " .
            $usrID . ", '" . $dateStr . "','" . loc_db_escape_string($title) .
            "', '" . loc_db_escape_string($firstName) . "', '" . loc_db_escape_string($surName) .
            "', '" . loc_db_escape_string($otherNames) . "', '" . loc_db_escape_string($gender) . "', " . $orgid . "," .
            "'" . loc_db_escape_string($maritalStatus) . "', '" . $dobYMD .
            "', '" . loc_db_escape_string($pob) . "', '" . loc_db_escape_string($religion) .
            "', '" . loc_db_escape_string($residentialAddress) . "', " .
            "'" . loc_db_escape_string($postalAddress) . "', '" . loc_db_escape_string($email) .
            "', '" . loc_db_escape_string($telNo) . "', '" . loc_db_escape_string($mobileNo) .
            "', '" . loc_db_escape_string($faxNo) . "', '" . loc_db_escape_string($homeTown) .
            "', '" . loc_db_escape_string($nationality) .
            "', " . $lnkdFirmID . ", " . $lnkdFirmLocID .
            ", '" . loc_db_escape_string($lnkdFirmName) . "', '" . loc_db_escape_string($lnkdFirmLoc) .
            "','" . $startDate1 . "','" . $endDate1 . "'," . $bnkCustomerID . ",'" . $isSignatory .
            "','" . $prsnType . "'," . $bnkBranchID . ",'Incomplete')";
    //var_dump($insSQL);

    execUpdtInsSQL($insSQL);
}

function getOtherPersonID($dateStr, $usrID, $bnkBranchID) {

    $sqlStr = "SELECT person_id FROM mcf.mcf_prsn_names_nos WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND branch_id = " . $bnkBranchID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function updatePrsnBasicOP($orgid, $personID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $startDate, $endDate, $bnkCustomerID, $isSignatory, $prsnType, $bnkBranchID, $rvsnTtl) {
    global $usrID;
    $dateStr = getDB_Date_time();

    //$dobYMD = cnvrtDMYToYMD($dob);
    $endDate1 = $endDate;
    $startDate1 = cnvrtDMYToYMD($startDate);
    if ($endDate1 == "") {
        $endDate1 = "4000-12-31";
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate1);
    }

    $tblNm = "mcf.mcf_prsn_names_nos";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_names_nos_hstrc";
    }

    $updtSQL = "UPDATE $tblNm " .
            "SET last_update_by=" . $usrID . ", " .
            "last_update_date='" . $dateStr .
            "', local_id_no='" . loc_db_escape_string($idNo) .
            "', title='" . loc_db_escape_string($title) .
            "', first_name='" . loc_db_escape_string($firstName) .
            "', sur_name='" . loc_db_escape_string($surName) .
            "', other_names='" . loc_db_escape_string($otherNames) .
            "', gender='" . loc_db_escape_string($gender) .
            "', org_id=" . $orgid .
            ", marital_status='" . loc_db_escape_string($maritalStatus) .
            "', date_of_birth='" . cnvrtDMYToYMD($dob) .
            "', place_of_birth='" . loc_db_escape_string($pob) .
            "', religion='" . loc_db_escape_string($religion) .
            "', res_address='" . loc_db_escape_string($residentialAddress) .
            "', pstl_addrs='" . loc_db_escape_string($postalAddress) .
            "', email='" . loc_db_escape_string($email) .
            "', cntct_no_tel='" . loc_db_escape_string($telNo) .
            "', cntct_no_mobl='" . loc_db_escape_string($mobileNo) .
            "', cntct_no_fax='" . loc_db_escape_string($faxNo) .
            "', hometown='" . loc_db_escape_string($homeTown) .
            "', nationality='" . loc_db_escape_string($nationality) .
            "', lnkd_firm_org_id=" . $lnkdFirmID .
            ", lnkd_firm_site_id=" . $lnkdFirmLocID .
            ", new_company='" . loc_db_escape_string($lnkdFirmName) .
            "', new_company_loc='" . loc_db_escape_string($lnkdFirmLoc) .
            "', valid_start_date='" . $startDate1 .
            "', valid_end_date='" . $endDate1 .
            "', linked_cust_id =" . $bnkCustomerID .
            ", branch_id = " . $bnkBranchID .
            ", is_signatory='" . $isSignatory .
            "', prsn_type ='" . $prsnType .
            "' WHERE person_id= $personID AND rvsn_ttl = $rvsnTtl";
    //echo $updtSQL;
    execUpdtInsSQL($updtSQL);
}

function uploadDaImageOP($personID, &$nwImgLoc, $subFolder, $rvsnTtl) {
    global $database;
    global $ftp_base_db_fldr;
    global $usrID;
    global $fldrPrfx;
    global $smplTokenWord1;
    $imgImptID = "";

    if ($subFolder == "OP_Picture") {
        $imgImptID = "custPicture";
    } else if ($subFolder == "OP_Signature") {
        $imgImptID = "signPicture";
    }

    $tblNm = "mcf.mcf_prsn_names_nos";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_names_nos_hstrc";
    }


    $msg = "";
    //if (isset($_FILES["custPicture"])) {
    $allowedExts = array("gif", "jpeg", "jpg", "png");
//$files = multiple($_FILES);
    $flnm = $_FILES[$imgImptID]["name"];
    $msg .= $flnm;
    $temp = explode(".", $flnm);
    $extension = end($temp);
    if ($_FILES[$imgImptID]["error"] > 0) {
        $msg .= "Return Code: " . $_FILES[$imgImptID]["error"] . "<br>";
    } else {
        $msg .= "Upload: " . $_FILES[$imgImptID]["name"] . "<br>";
        $msg .= "Type: " . $_FILES[$imgImptID]["type"] . "<br>";
        $msg .= "Size: " . ($_FILES[$imgImptID]["size"]) . " bytes<br>";
        $msg .= "Temp file: " . $_FILES[$imgImptID]["tmp_name"] . "<br>";
        if ((($_FILES[$imgImptID]["type"] == "image/gif") ||
                ($_FILES[$imgImptID]["type"] == "image/jpeg") ||
                ($_FILES[$imgImptID]["type"] == "image/jpg") ||
                ($_FILES[$imgImptID]["type"] == "image/pjpeg") ||
                ($_FILES[$imgImptID]["type"] == "image/x-png") ||
                ($_FILES[$imgImptID]["type"] == "image/png") ||
                in_array($extension, $allowedExts)) &&
                ($_FILES[$imgImptID]["size"] < 6000000)) {
            $nwFileName = encrypt($personID . "." . $extension, $smplTokenWord1) . ".png";
            $img_src = $fldrPrfx . "dwnlds/tmp/$nwFileName";
            move_uploaded_file($_FILES[$imgImptID]["tmp_name"], $img_src);
            $ftp_src = $ftp_base_db_fldr . "/Mcf/Customers/$subFolder/$personID" . "." . $extension;
            if (file_exists($img_src) && !is_dir($img_src)) {
                copy("$img_src", "$ftp_src");

                $dateStr = getDB_Date_time();
                $updtSQL = "";
                if ($subFolder == "OP_Picture") {
                    $updtSQL = "UPDATE $tblNm " .
                            "SET last_update_by=" . $usrID . ", " .
                            "last_update_date='" . $dateStr .
                            "', img_location = '" . $personID . "." . $extension . "' WHERE person_id=" . $personID. " AND rvsn_ttl = $rvsnTtl";
                } else if ($subFolder == "OP_Signature") {
                    $updtSQL = "UPDATE $tblNm " .
                            "SET last_update_by=" . $usrID . ", " .
                            "last_update_date='" . $dateStr .
                            "', sign_img_location = '" . $personID . "." . $extension . "' WHERE person_id=" . $personID. " AND rvsn_ttl = $rvsnTtl";
                }
                execUpdtInsSQL($updtSQL);
            }
            $msg .= "Stored in: " . "uploaded/" . $_FILES[$imgImptID]["name"][0];
            $nwImgLoc = "$personID" . "." . $extension;
            return TRUE;
        } else {
            $msg .= "<br/>Invalid file";
            $nwImgLoc = $msg;
        }
    }
}


//ATTACHMENTS
function getAttachmentDocs($src, $src_id) {

    $sqlStr = "SELECT attchmnt_id, file_name, attchmnt_desc, file_type
    FROM mcf.mcf_doc_attchmnts WHERE 1=1 AND attchmnt_src = '" . $src .
            "' AND file_name != '' AND src_id = " . $src_id;

    //var_dump($sqlStr);
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function getAttachmentID($src, $src_id, $fileName, $dateTime) {

    $sqlStr = "SELECT attchmnt_id FROM mcf.mcf_doc_attchmnts WHERE 1=1 AND attchmnt_src = '" . $src .
            "' AND file_name = '" . loc_db_escape_string($fileName) .
            "' AND src_id = " . $src_id . " AND creation_date = '" . $dateTime . "'";

    //var_dump($sqlStr);
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function loadAttachments() {

}

//2.0 CUSTOMER ACCOUNTS
function createDisbmntPymntCustAccount(&$errMsg) {
    global $usrID;
    global $orgID;
    $dateStr = getDB_Date_time();
    $rowCnt1 = 0;
    $rowCnt2 = 0;
    $rowCnt3 = 0;
    $rowCnt5 = 0;
    $custID = -1;
    $rowCnt = 0;
    $errMsg = "";
    $acctNO = "";

    $result4 = executeSQLNoParams("SELECT distinct location_id, location_code_name, site_desc
        FROM org.org_sites_locations a left outer join mcf.mcf_accounts b
        ON a.location_id = b.branch_id
        WHERE b.account_title ilike 'Branch Loan Payments -%'
        AND a.is_enabled = '1' AND a.org_id = $orgID ORDER BY 1 ASC");

    $rowCnt4 = loc_db_num_rows($result4);

    if ($rowCnt4 > 0) {

        $sqlStr = "SELECT cust_id FROM mcf.mcf_customers_corp WHERE "
                . "cust_name = 'Yilo Star Company Ltd' AND org_id = $orgID";

        $result5 = executeSQLNoParams($sqlStr);
        while ($row5 = loc_db_fetch_array($result5)) {
            $custID = (int) $row5[0];
        }

        //GET LIST OF BRANCHES WITHOUT ACCOUNTS
        $result = executeSQLNoParams("
                SELECT distinct location_id, location_code_name, site_desc
                    FROM org.org_sites_locations a
                    WHERE is_enabled = '1' AND a.org_id = $orgID
                EXCEPT
                SELECT distinct location_id, location_code_name, site_desc
                    FROM org.org_sites_locations a, mcf.mcf_accounts b
                    WHERE a.location_id = b.branch_id
                    AND b.account_title ilike 'Branch Loan Payments -%'
                    AND is_enabled = '1' AND a.org_id = $orgID ORDER BY 1 ASC");

        while ($row = loc_db_fetch_array($result)) {
            $branchID = (int) $row[0];

            $rslt = executeSQLNoParams("SELECT mcf.generate_account_no(" . $orgID . "," . $branchID . ", (SELECT svngs_product_id FROM mcf.mcf_prdt_savings WHERE product_name =
                                    'Loans Payment Account Product' AND product_code = '999' AND org_id = $orgID)::integer, " . $custID .
                    ", 'Corporate', 'Current')");

            while ($rowRslt = loc_db_fetch_array($rslt)) {
                $acctNO = $rowRslt[0];
            }

            if (trim($acctNO) == "") {
                $errMsg .= "<span style='color:red !important;'>Failed to create Loan Payment Account No</span>";
                return false;
            }

            $insSQL2 = "INSERT INTO mcf.mcf_accounts(
                            account_title, account_type, product_type_id, purpose_other,
                            source_of_funds_other, account_trns_type, exptd_trns_per_mnth,
                            exptd_amount_per_mnth, branch_id, mandate, created_by, creation_date,
                            last_update_by, last_update_date, account_number, org_id,
                            status, comments, currency_id, cust_type, cust_id,
                            purpose_type, source_of_funds_type, relationship_officer, prsn_type_or_entity,
                            overdraft_bal)
                            VALUES ('Branch Loan Payments -$row[2]', 'Current', (SELECT svngs_product_id FROM mcf.mcf_prdt_savings WHERE product_name =
                            'Loans Payment Account Product' AND product_code = '999' AND org_id = $orgID), 'N/A',
                                    'N/A', '', 0,
                                    0, $branchID, '', $usrID, '$dateStr',
                                    $usrID, '$dateStr', '$acctNO', $orgID,
                                    'Approved', '', (SELECT distinct crncy_id FROM mcf.mcf_currencies WHERE iso_code = 'GHS'), 'Corporate', $custID,
                                    '', '', -1, '', 0.00)";
            $rowCnt3 = execUpdtInsSQL($insSQL2);

            if ($rowCnt3 > 0) {
                $acctID = -1;
                //GET ACCOUNT ID
                $rslt8 = executeSQLNoParams("SELECT account_id FROM mcf.mcf_accounts WHERE created_by =  $usrID AND "
                        . "account_number = '$acctNO' AND org_id = " . $orgID);

                while ($rowRslt8 = loc_db_fetch_array($rslt8)) {
                    $acctID = (int) $rowRslt8[0];
                }

                //INSERT INTO ACCOUNT BALANCE
                $rowCnt5 = createAccountTrnsBal($acctID, $dateStr);
            } else {
                $errMsg .= "<span style='color:green !important;'>Created Account No for Bank Branch $row[2]</span></br><span style='color:red !important;'>Failed to Loan Payment Account for Branch $row[2]</span>";
                return false;
            }

            if ($rowCnt5 <= 0) {
                $errMsg .= "<span style='color:green !important;'>Created Loan Payment Account for  Branch $row[2]</span></br><span style='color:red !important;'>Failed to Create Account Daily Balance for Branch $row[2]</span>";
                return false;
            }
        }
    } else {
        //CREATE CORPORATE CUSTOMER - Yilo Star
        $insSQL = "INSERT INTO mcf.mcf_customers(
                cust_type, created_by, creation_date, last_update_by,
                last_update_date, relation_type, status, valid_start_date, valid_end_date,
                org_id, branch_id)
        VALUES ('Corporate', $usrID, '$dateStr',
                $usrID, '$dateStr', 'Owner', 'Approved', '$dateStr', '4000-12-31 11:59:59', $orgID, 1)";
        $rowCnt = execUpdtInsSQL($insSQL);

        if ($rowCnt > 0) {

            $sqlStr = "SELECT cust_id FROM mcf.mcf_customers WHERE "
                    . "created_by = $usrID AND creation_date = '$dateStr' AND cust_type = 'Corporate' AND branch_id = 1";

            $result = executeSQLNoParams($sqlStr);
            while ($row = loc_db_fetch_array($result)) {
                $custID = (int) $row[0];
            }

            //$idNoVal
            $bnkBranchCode = getCustBranchCode($custID);
//            $varVal = getMCFglobalVariableValue("Customer ID No. Format");
//            $idNoVal = "(SELECT lpad(trim((" . $custID . ")||''),7,'0'))";
//            if($varVal == "Branch Code->Unique ID"){
//                $idNoVal = "'$bnkBranchCode'||(SELECT lpad(trim((" . $custID . ")||''),7,'0'))";
//            }
            //$idNoVal = getNextCustLocalIDNoSerial($custID, "mcf.mcf_customers_corp");
            $idNoVal = getGnrlRecNm("mcf.mcf_customers", "cust_id", "id_no", $custID);

            $insSQL1 = "INSERT INTO mcf.mcf_customers_corp(
                    cust_id, cust_name, cust_desc, classification,
                    org_id, date_of_estblshmnt, created_by, creation_date, last_update_by,
                    last_update_date, local_id_no, is_enabled, no_of_emplyees)
            VALUES ($custID, 'Yilo Star Company Ltd', 'Yilo Star Company Ltd', 'Limited Liability Company',
                    $orgID, '2000-01-01', $usrID, '$dateStr',
                    $usrID, '$dateStr','" . $idNoVal . "', '1',200)";

            $rowCnt1 = execUpdtInsSQL($insSQL1);
        } else {
            $errMsg .= "<span style='color:red !important;'>Failed to insert into mcf.mcf_customers</span></br>";
            return false;
        }

        //CREATE CUSTOMER ACCOUNT - Yilo Star Loan Payments
        if ($rowCnt1 > 0) {

            //INSERT CURRENT PRODUCT
            $insSQL1 = "INSERT INTO mcf.mcf_prdt_savings(
                product_name, product_desc, cust_type_ind,
                currency_id, initial_amount_min, balance_min, interest_rate,
                interest_accrual_frequency, interest_posting_frequency, interest_calc_method,
                withdrawal_limit_no, withdrawal_limit_amount, allow_overdraft,
                overdraft_limit, entry_fees, close_fees, reopen_fees, product_code,
                interest_calc_type, charge_cot, cot_free_withdrawals_max, created_by,
                creation_date, last_update_by, last_update_date, use_as_collateral,
                product_type, withdrawal_limit, overdraft_penalty_flat,
                overdraft_penalty_percent, cust_type_corp, cust_type_custgrp,
                org_id, charge_interest, discount_rate)
                VALUES ('Loans Payment Account Product', 'Loans Payment Account Product', 'NO',
                (SELECT distinct crncy_id FROM mcf.mcf_currencies WHERE iso_code = 'GHS'), 0, 0, 0,
                        '', '','',
                        0, 0, 'NO',
                        0, 0, 0, 0, '999',
                        '', 'NO', 0,  $usrID,
                        '$dateStr', $usrID, '$dateStr', 'NO',
                        'Current', 'NO LIMIT', 0,
                        0, 'YES', 'NO',
                        $orgID, 'NO', 0)";

            $rowCnt2 = execUpdtInsSQL($insSQL1);
        } else {
            $errMsg .= "<span style='color:green !important;'>Inserted into mcf.mcf_customers Successfully</span></br><span style='color:red !important;'>Failed to insert into mcf.mcf_customers_corp</span></br>";
            return false;
        }

        if ($rowCnt2 > 0) {
            //GET LIST OF BRANCHES
            $result = executeSQLNoParams("SELECT distinct location_id, location_code_name, site_desc  FROM org.org_sites_locations WHERE org_id = $orgID ORDER BY 1");
            while ($row = loc_db_fetch_array($result)) {
                $branchID = (int) $row[0];
                $svngsPrdtID = 0;

                $rslt1 = executeSQLNoParams("SELECT svngs_product_id FROM mcf.mcf_prdt_savings WHERE product_name =
                                    'Loans Payment Account Product' AND product_code = '999' AND org_id = $orgID");
                while ($rowRslt1 = loc_db_fetch_array($rslt1)) {
                    $svngsPrdtID = (int) $rowRslt1[0];
                }

                $rslt = executeSQLNoParams("SELECT mcf.generate_account_no($orgID, $branchID, $svngsPrdtID, $custID , 'Corporate', 'Current')");

                while ($rowRslt = loc_db_fetch_array($rslt)) {
                    $acctNO = $rowRslt[0];
                }

                if (trim($acctNO) == "") {
                    $errMsg .= "<span style='color:green !important;'>Inserted into mcf.mcf_customers Successfully</span></br><span style='color:green !important;'>Insert into mcf.mcf_customers_corp Successfully</span></br><span style='color:green !important;'>Create Savings Product</span></br><span style='color:red !important;'>Failed to create Loan Payment Account No</span>";
                    return false;
                }

                $insSQL2 = "INSERT INTO mcf.mcf_accounts(
                            account_title, account_type, product_type_id, purpose_other,
                            source_of_funds_other, account_trns_type, exptd_trns_per_mnth,
                            exptd_amount_per_mnth, branch_id, mandate, created_by, creation_date,
                            last_update_by, last_update_date, account_number, org_id,
                            status, comments, currency_id, cust_type, cust_id,
                            purpose_type, source_of_funds_type, relationship_officer, prsn_type_or_entity,
                            overdraft_bal)
                            VALUES ('Branch Loan Payments -$row[2]', 'Current', (SELECT svngs_product_id FROM mcf.mcf_prdt_savings WHERE product_name =
                            'Loans Payment Account Product' AND product_code = '999' AND org_id = $orgID), 'N/A',
                                    'N/A', '', 0,
                                    0, $branchID, '', $usrID, '$dateStr',
                                    $usrID, '$dateStr', '$acctNO', $orgID,
                                    'Approved', '', (SELECT distinct crncy_id FROM mcf.mcf_currencies WHERE iso_code = 'GHS'), 'Corporate', $custID,
                                    '', '', -1, '', 0.00)";
                $rowCnt3 = execUpdtInsSQL($insSQL2);

                if ($rowCnt3 > 0) {
                    $acctID = -1;
                    //GET ACCOUNT ID
                    $rslt8 = executeSQLNoParams("SELECT account_id FROM mcf.mcf_accounts WHERE created_by =  $usrID AND "
                            . "account_number = '$acctNO' AND org_id = " . $orgID);

                    while ($rowRslt8 = loc_db_fetch_array($rslt8)) {
                        $acctID = (int) $rowRslt8[0];
                    }

                    //INSERT INTO ACCOUNT BALANCE
                    $rowCnt5 = createAccountTrnsBal($acctID, $dateStr);
                } else {
                    $errMsg .= "<span style='color:green !important;'>Inserted into mcf.mcf_customers Successfully</span></br><span style='color:green !important;'>Insert into mcf.mcf_customers_corp Successfully</span></br><span style='color:green !important;'>Create Savings Product Successfully</span></br><span style='color:red !important;'>Failed to create Loan Payment Account for Bank Branche $row[2]</span>";
                    return false;
                }

                if ($rowCnt5 <= 0) {
                    $errMsg .= "<span style='color:green !important;'>Inserted into mcf.mcf_customers Successfully</span></br><span style='color:green !important;'>Insert into mcf.mcf_customers_corp Successfully</span></br>"
                            . "<span style='color:green !important;'>Create Savings Product Successfully</span></br><span style='color:green !important;'>Create Loan Payment Account for Branch Successfully</span></br></br><span style='color:red !important;'>Failed to create Daily Balance for Bank Branch</span>";
                    return false;
                }
            }
        } else {
            $errMsg .= "<span style='color:green !important;'>Inserted into mcf.mcf_customers Successfully</span></br><span style='color:green !important;'>Insert into mcf.mcf_customers_corp Successfully</span></br><span style='color:red !important;'>Failed to Create Savings Product</span></br>";
            return false;
        }
    }

    $errMsg .= "<span style='color:green !important;'>Successfully Created Loan Payment Accounts for Bank Branch(s)</span></br>";
    return true;
}

function getDB_Date_timeYYYYMMDD() {
    $sqlStr = "select to_char(now(), 'YYYY-MM-DD')";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return "$row[0]";
    }
    return "";
}

function getCustAccountBals($acctID, $balDate) {
    $sqlStr = "SELECT mcf.get_cstacnt_unclrd_bals($acctID,'" . $balDate . "'), mcf.get_cstacnt_unclrd_funds($acctID,'" . $balDate . "'),"
            . "mcf.get_cstacnt_lien_bals($acctID,'" . $balDate . "'), mcf.get_cstacnt_avlbl_bals($acctID,'" . $balDate . "')";
    $result = executeSQLNoParams($sqlStr);

    return $result;
}

function submitCustAccount($acctID, $rvsnTtl) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $tblNm = "mcf.mcf_accounts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_accounts_hstrc";
    }

    $insSQL = "UPDATE $tblNm
        SET status= 'Unauthorized', last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE account_id = $acctID";

    return execUpdtInsSQL($insSQL);
}

function withdrawCustAccount($acctID) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $insSQL = "UPDATE mcf.mcf_accounts
        SET status= 'Withdrawn', last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE account_id = $acctID";

    return execUpdtInsSQL($insSQL);
}

function deleteCustAccount($pkID) {
    //TABLES mcf.mcf_loan_request, mcf.mcf_loanreq_guarantors, mcf.mcf_loan_assessments

    $delSQL1 = "DELETE from mcf.mcf_account_liens WHERE account_id = $pkID";
    $delSQL11 = "DELETE from mcf.mcf_account_liens_hstrc WHERE account_id = $pkID";
    $delSQL2 = "DELETE from mcf.mcf_account_signatories WHERE account_id = $pkID";
    $delSQL22 = "DELETE from mcf.mcf_account_signatories_hstrc WHERE account_id = $pkID";
    $delSQL3 = "DELETE from mcf.mcf_accounts WHERE account_id = $pkID";
    $delSQL33 = "DELETE from mcf.mcf_accounts_hstrc WHERE account_id = $pkID";

    execUpdtInsSQL($delSQL1);
    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL11);
    execUpdtInsSQL($delSQL22);
    execUpdtInsSQL($delSQL33);
    return execUpdtInsSQL($delSQL3);
}

function get_BankBranchIds($siteName) {
    $site_ids = ',';

    $strSql = "select location_id from org.org_sites_locations "
            . "where site_desc ilike '" . loc_db_escape_string($siteName) . "'";

    $result = executeSQLNoParams($strSql);
    $rowNo = loc_db_num_rows($result);
    if ($rowNo <= 0) {
        return -1;
    }
    while ($row = loc_db_fetch_array($result)) {
        $site_ids = $site_ids . $row[0] . ",";
    }

    $site_ids = rtrim(ltrim($site_ids, ","), ",");
    return $site_ids;
}

function get_CustAccountsTtl($statusSrchIn, $branchSrchIn, $prdtTypeSrchIn, $bnkPrdtTypeSrchInID, $isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $tblJoin = " WHERE ";
    $tblJoinHstrc = " WHERE ";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }
    $cnt = 0;
    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Title") {
        $whrcls = " AND (a.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Number") {
        $whrcls = " AND (a.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Type") {
        $whrcls = " AND (a.account_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (a.branch_id IN (" . $v_branch_ids . "))";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($prdtTypeSrchIn == "All Account Types") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and account_type = '" . loc_db_escape_string($prdtTypeSrchIn) . "'";
        if($prdtTypeSrchIn == "Loan"){
           $tblJoin = ", mcf.mcf_prdt_loans b WHERE a.product_type_id = b.loan_product_id AND ";
           $tblJoinHstrc = ", mcf.mcf_prdt_loans_hstrc b WHERE a.product_type_id = b.loan_product_id AND ";
        } else {
           $tblJoin = ", mcf.mcf_prdt_savings b WHERE a.product_type_id = b.svngs_product_id AND ";
           $tblJoinHstrc = ", mcf.mcf_prdt_savings_hstrc b WHERE a.product_type_id = b.svngs_product_id AND ";
        }

    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($bnkPrdtTypeSrchInID == "-1") {
        $whrcls .= " and 1 = 1";
    } else {
        if($prdtTypeSrchIn == "Loan"){
           $whrcls .= " AND b.loan_product_id = $bnkPrdtTypeSrchInID ";
        } else {
           $whrcls .= " AND b.svngs_product_id = $bnkPrdtTypeSrchInID ";
        }
    }

    $strSql1 = "SELECT count(1) " .
            "FROM mcf.mcf_accounts a  "
            . "$tblJoin ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result1 = executeSQLNoParams($strSql1);
    //var_dump($strSql);
    while ($row1 = loc_db_fetch_array($result1)) {
        $cnt = $row1[0];
    }

    $strSql2 = "SELECT count(1) " .
            "FROM mcf.mcf_accounts_hstrc a "
            . "$tblJoinHstrc (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_accounts_hstrc c WHERE a.account_id = c.account_id) "
            . "AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result2 = executeSQLNoParams($strSql2);
    //var_dump($strSql);
    while ($row2 = loc_db_fetch_array($result2)) {
        $cnt = $cnt + $row2[0];
    }

    return $cnt;
}


function get_CustAccounts($statusSrchIn, $branchSrchIn, $prdtTypeSrchIn, $bnkPrdtTypeSrchInID, $isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";
    $tblJoin = " WHERE ";
    $tblJoinHstrc = " WHERE ";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Title") {
        $whrcls = " AND (a.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Number") {
        $whrcls = " AND (a.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Type") {
        $whrcls = " AND (a.account_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (a.branch_id IN (" . $v_branch_ids . "))";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($prdtTypeSrchIn == "All Account Types") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and account_type = '" . loc_db_escape_string($prdtTypeSrchIn) . "'";
        if($prdtTypeSrchIn == "Loan"){
           $tblJoin = ", mcf.mcf_prdt_loans b WHERE a.product_type_id = b.loan_product_id AND ";
           $tblJoinHstrc = ", mcf.mcf_prdt_loans_hstrc b WHERE a.product_type_id = b.loan_product_id AND ";
        } else {
           $tblJoin = ", mcf.mcf_prdt_savings b WHERE a.product_type_id = b.svngs_product_id AND ";
           $tblJoinHstrc = ", mcf.mcf_prdt_savings_hstrc b WHERE a.product_type_id = b.svngs_product_id AND ";
        }
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($bnkPrdtTypeSrchInID == "-1") {
        $whrcls .= " and 1 = 1";
    } else {
        if($prdtTypeSrchIn == "Loan"){
           $whrcls .= " AND b.loan_product_id = $bnkPrdtTypeSrchInID ";
        } else {
           $whrcls .= " AND b.svngs_product_id = $bnkPrdtTypeSrchInID ";
        }
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "last_update_date DESC";
    } else if ($sortBy == "Account Title DESC") {
        $ordrBy = "account_title DESC";
    } else if ($sortBy == "Account Title ASC") {
        $ordrBy = "account_title ASC";
    } else if ($sortBy == "Account Number") {
        $ordrBy = "account_number ASC";
    } else if ($sortBy == "Account Type ASC") {
        $ordrBy = "account_type ASC";
    }

//    $strSql = "SELECT account_id, account_title, account_number, account_type, " .
//            "(SELECT site_desc||' ('||location_code_name||')' FROM org.org_sites_locations WHERE location_id = a.branch_id) branch, status " .
//            "FROM mcf.mcf_accounts a " .
//            "WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);

    $strSql = "SELECT account_id, account_title, account_number, CASE WHEN account_type = 'Loan' THEN (SELECT product_code||'.'||product_name FROM mcf.mcf_prdt_loans x WHERE a.product_type_id = x.loan_product_id) "
            . "ELSE (SELECT product_code||'.'||product_name FROM mcf.mcf_prdt_savings x WHERE a.product_type_id = x.svngs_product_id) END prdt_code, " .
            "(SELECT site_desc||' ('||location_code_name||')' FROM org.org_sites_locations WHERE location_id = a.branch_id) branch, a.status, a.last_update_date, account_type " .
            "FROM mcf.mcf_accounts a " .
            "$tblJoin ( 1 = 1 AND a.chngs_pndng = 0 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") UNION "
            . "SELECT account_id, account_title, account_number, CASE WHEN account_type = 'Loan' THEN (SELECT distinct product_code||'.'||product_name FROM mcf.mcf_prdt_loans_hstrc x WHERE a.product_type_id = x.loan_product_id) "
            . "ELSE (SELECT distinct product_code||'.'||product_name FROM mcf.mcf_prdt_savings_hstrc x WHERE a.product_type_id = x.svngs_product_id) END prdt_code, " .
            "(SELECT site_desc||' ('||location_code_name||')' FROM org.org_sites_locations WHERE location_id = a.branch_id) branch, a.status, a.last_update_date, account_type " .
            "FROM mcf.mcf_accounts_hstrc a " .
            "$tblJoinHstrc (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_accounts_hstrc c WHERE"
            . " c.account_id = a.account_id) AND a.status NOT IN ('Approved','Authorized') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}


function getCustAcctID($dateStr, $orgID, $usrID) {

    $tblNm = "mcf.mcf_accounts";

    $sqlStr = "SELECT account_id FROM $tblNm WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID .
            " AND org_id = " . $orgID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCustAccountNo($acctID) {
    $sqlStr = "SELECT account_number FROM mcf.mcf_accounts y WHERE y.account_id = " . $acctID;
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return "";
}

function createCustAccount($orgID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType = "Everyone", $groupID = "-1", $canOverdrawAcct="No") {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    $reltnOfficerID = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $reltnOfficerID, $orgID);

    $insSQL = "INSERT INTO mcf.mcf_accounts( " .
            "account_title, account_type, product_type_id, account_trns_type, prsn_type_or_entity, " .
            "currency_id, purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, " .
            "exptd_trns_per_mnth, exptd_amount_per_mnth, branch_id, relationship_officer, " .
            "comments, status, mandate, cust_type, cust_id, allwd_group_type, allwd_group_value, " .
            "account_number, org_id, created_by, creation_date, last_update_by, last_update_date, can_overdraw_acct)" .
            "VALUES ( '" .
            loc_db_escape_string($acctTitle) . "', '" . loc_db_escape_string($acctType) .
            "', " . $prdtTypeID . ", '" . loc_db_escape_string($acctTrnsTyp) .
            "', '" . loc_db_escape_string($prsnTypeEntity) . "', (SELECT mcf.get_account_prdt_crncy_id('" . loc_db_escape_string($acctType) . "'," . $prdtTypeID . ")) " .
            ", '" . loc_db_escape_string($prpsOfAcct) . "', '" . loc_db_escape_string($prpsOfAcctOther) .
            "', '" . loc_db_escape_string($srcOfFunds) . "', '" . loc_db_escape_string($srcOfFundsOther) .
            "', " . $trnsPerMnthNo . ", " . $amountPerMnth . ", " . $bnkBranchID .
            ",'" . loc_db_escape_string($reltnOfficerID) .
            "', '" . loc_db_escape_string($statusReason) . "', '" . loc_db_escape_string($status) .
            "', '" . loc_db_escape_string($accMndte) . "', '" . loc_db_escape_string($custType) .
            "'," . $bnkCustomerID . ", '" . loc_db_escape_string($grpType) . "', '" . loc_db_escape_string($groupID) .
            "', (SELECT mcf.generate_account_no(" . $orgID . "," . $bnkBranchID . ", " . $prdtTypeID . ", " . $bnkCustomerID .
            ", '" . $custType . "', '" . $acctType . "'))," . $orgID .
            ", " . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "','$canOverdrawAcct')";

    return execUpdtInsSQL($insSQL);
}

function updateCustAccount($acctID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $rvsnTtl, $grpType = "Everyone", $groupID = "-1", $canOverdrawAcct="No", $smsTriggers) {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    //GENERATE CUST ACCOUNT

    $tblNm = "mcf.mcf_accounts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_accounts_hstrc";
    }

    $reltnOfficerID = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $reltnOfficerID, $orgID);

    //CHECK IF ACCOUNT NUMBER HAS TRANSACTIONS

    $insSQL = "UPDATE $tblNm SET " .
            "account_title = '" . loc_db_escape_string($acctTitle) .
            "', account_type = '" . loc_db_escape_string($acctType) .
            "', product_type_id = $prdtTypeID, account_trns_type = '" . loc_db_escape_string($acctTrnsTyp) .
            "', prsn_type_or_entity ='" . loc_db_escape_string($prsnTypeEntity) .
            "', purpose_type = '" . loc_db_escape_string($prpsOfAcct) .
            "', purpose_other = '" . loc_db_escape_string($prpsOfAcctOther) .
            "', source_of_funds_type = '" . loc_db_escape_string($srcOfFunds) .
            "', source_of_funds_other = '" . loc_db_escape_string($srcOfFundsOther) .
            "', exptd_trns_per_mnth = $trnsPerMnthNo, exptd_amount_per_mnth = $amountPerMnth, branch_id = $bnkBranchID " .
            ", relationship_officer ='" . loc_db_escape_string($reltnOfficerID) .
            "', comments = '" . loc_db_escape_string($statusReason) .
            "', mandate = '" . loc_db_escape_string($accMndte) .
            "', cust_type = '" . loc_db_escape_string($custType) .
            "', cust_id = $bnkCustomerID " .
            ", allwd_group_type = '" . loc_db_escape_string($grpType) .
            "', allwd_group_value = '" . loc_db_escape_string($groupID) .
            "', account_number = '" . $acctNumber . "', last_update_by = $usrID, last_update_date = '" . $dateStr .
            "', status='Incomplete', can_overdraw_acct = '$canOverdrawAcct', sms_alert_triggers='" . loc_db_escape_string($smsTriggers) . "' WHERE account_id = $acctID AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function constructAccountNo($branchID, $prdtType, $custID) {

    $sqlStr = "SELECT loan_rqst_id FROM mcf.mcf_loan_request WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND branch_id = " . $branchID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getDB_Trns_time() {
    $sqlStr = "select to_char(now(), 'DD-Mon-YYYY')";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return "$row[0]";
    }
    return "";
}

function createAccountSignatory($srcType, $bnkSignatoryID, $endDate, $acctID, $dateStr, $toSignMndtry, $rvsnTtl) {
    global $usrID;

    $insSQL = "";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_account_signatories_hstrc";
        $insSQL = "INSERT INTO $tblNm(acct_sign_id,
                source_type, person_cust_id, end_date, created_by, creation_date, last_update_by, last_update_date, account_id,
                to_sign_mndtry, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_account_signatories_acct_sign_id_seq')),'" . $srcType . "'," . $bnkSignatoryID . ",'" . $endDate .
                "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $acctID . ",'" . $toSignMndtry . "',$rvsnTtl,'No')";
    } else {
        $tblNm = "mcf.mcf_account_signatories";
        $insSQL = "INSERT INTO $tblNm(acct_sign_id,
                source_type, person_cust_id, end_date, created_by, creation_date, last_update_by, last_update_date, account_id,
                to_sign_mndtry, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_account_signatories_acct_sign_id_seq')),'" . $srcType . "'," . $bnkSignatoryID . ",'" . $endDate .
                "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $acctID . ",'" . $toSignMndtry . "',$rvsnTtl)";
    }

    execUpdtInsSQL($insSQL);
}

function updateAccountSignatory($srcType, $bnkSignatoryID, $endDate, $dateStr, $rowID, $toSignMndtry, $rvsnTtl) {
    global $usrID;
    $tblNm = "mcf.mcf_account_signatories";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_account_signatories_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET " .
            "source_type = '" . $srcType . "', person_cust_id=$bnkSignatoryID, end_date= '" . $endDate . "', "
            . "last_update_by =$usrID, last_update_date='" . $dateStr .
            "', to_sign_mndtry = '" . $toSignMndtry .
            "' WHERE acct_sign_id = $rowID AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function deleteAccountSignatory($acctSignId, $acctID, $rvsnTtl, $isApproved) {
    $insSQL1 = "";
    $cnt = getCustAcctDataChngPndngCount($acctID);

    $tblNm = "mcf.mcf_account_signatories";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_signatories_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET acct_sign_id = -1*acct_sign_id WHERE acct_sign_id = $acctSignId AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE acct_sign_id = $acctSignId AND rvsn_ttl = $rvsnTtl";
    }

    return execUpdtInsSQL($insSQL1);
}

function getAccountSignatoryID($dateStr, $usrID, $acctID) {

    $sqlStr = "SELECT acct_sign_id FROM mcf.mcf_account_signatories WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND account_id = " . $acctID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getSignatoryLocalIDNo($srcType, $bnkSignatoryID) {
    $sqlStr = "";

    if ($srcType == "Individual Customers" || $srcType == "") {
        $sqlStr = "SELECT distinct local_id_no FROM mcf.mcf_customers_ind WHERE 1=1 AND cust_id = " . $bnkSignatoryID;
    } if ($srcType == "Other Persons") {
        $sqlStr = "SELECT distinct local_id_no FROM  mcf.mcf_prsn_names_nos WHERE 1=1 AND person_id = " . $bnkSignatoryID;
    }

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return "";
}

function getCustAccountDets($acctID, $tblNmCustInd1) {
    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";

    if ($tblNmCustInd1 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT account_id, cust_type, mcf.get_customer_name(cust_type, cust_id), cust_id, account_number, /**4**/
        account_title, account_type, mcf.get_account_prdt_name(account_type, product_type_id) prdt_typ, product_type_id, /**8**/
        account_trns_type, prsn_type_or_entity, mcf.get_account_prdt_crncy(account_type, product_type_id) crncy, currency_id, /**12**/
        purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, exptd_trns_per_mnth, /**17**/
       exptd_amount_per_mnth, branch_id, relationship_officer, comments, status, overdraft_bal, mandate, /**24**/
       allwd_group_type, allwd_group_value, coalesce(accrued_interest,0.00), CASE WHEN UPPER(is_dormant) = 'YES' THEN 'Dormant' ELSE '' END dormancy, /**28**/
       account_status, account_status_reason, old_account_number, /**31**/
       a.rvsn_ttl, can_overdraw_acct, sms_alert_triggers, account_clsfctn /**35**/
  FROM $tblNmCustInd1 a WHERE account_id = $acctID $andClause";

    // echo $strSql;

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustAccount_Signatories_OLD($acctID) {
    $strSql = "";
    $custType = "";

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'fullname') fullname,
            mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'local_id_no') local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id
            AND a.account_id = $acctID";
    } else if ($custType == "Group") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID";
    }


    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustAccount_Signatories($acctID) {
    $strSql = "";
    $custType = "";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.acct_sign_id > 0) ELSE (1=1) END)";

    $cnt = getCustAcctDataChngPndngCount($acctID);
    $tblNm2 = "mcf.mcf_accounts";
    $tblNm = "mcf.mcf_account_signatories";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_signatories_hstrc";
        $tblNm2 = "mcf.mcf_accounts_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";
    if ($tblNm2 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual" || $custType == "Joint") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'fullname',$cnt) fullname,
            mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'local_id_no',$cnt) local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";
    } else if ($custType == "Group") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";
    }

    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustAccount_SignatoryDets($acctSignId, $acctID) {
    $strSql = "";
    $custType = "";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.acct_sign_id > 0) ELSE (1=1) END)";

    $cnt = getCustAcctDataChngPndngCount($acctID);
    $tblNm2 = "mcf.mcf_accounts";
    $tblNm = "mcf.mcf_account_signatories";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_signatories_hstrc";
        $tblNm2 = "mcf.mcf_accounts_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";
    if ($tblNm2 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1
            AND b.acct_sign_id = $acctSignId";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'fullname',$cnt) fullname,
            mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'local_id_no',$cnt) local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 AND b.acct_sign_id = $acctSignId";
    } else if ($custType == "Group") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, is_approved, a.account_id
            FROM $tblNm2 a, $tblNm b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 AND b.acct_sign_id = $acctSignId";
    }

    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustAccount_SignatoryDets_OLD($acctSignId, $acctID) {
    $strSql = "";
    $custType = "";

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type,  prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignId";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'fullname') fullname,
            mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'local_id_no') local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type, prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id
            AND b.acct_sign_id = $acctSignId";
    } else if ($custType == "Group") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type, prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignId";
    }

    //echo $strSql;

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_SignatoryDets($acctSignId, $acctID) {
    $strSql = "";
    $custType = "";

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type,  prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE 1 = 1
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignId";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'fullname') fullname,
            mcf.get_corporate_signatory_wdID($acctID, source_type, b.person_cust_id, 'local_id_no') local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type, prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b
            WHERE 1 = 1
            AND a.account_id = b.account_id
            AND b.acct_sign_id = $acctSignId";
    } else /* if ($custType == "Group") */ {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id, a.cust_type, prsn_type_or_entity
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE 1 = 1
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignId";
    }

//echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function accountTrnsExstnce($acctID) {

    $sqlStr = "SELECT count(b.*) FROM mcf.mcf_accounts a, mcf.mcf_cust_account_transactions b"
            . " WHERE a.account_id = b.account_id AND a.account_id =  $acctID";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }

    return -1;
}

//ACCOUNT LIEN
function get_CustAccount_Liens($acctID) {
    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.acct_lien_id > 0) ELSE (1=1) END)";

    $cnt = getCustAcctDataChngPndngCount($acctID);
    $tblNm2 = "mcf.mcf_accounts";
    $tblNm = "mcf.mcf_account_liens";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_liens_hstrc";
        $tblNm2 = "mcf.mcf_accounts_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";
    if ($tblNm2 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT acct_lien_id, lien_no, amount, to_char(to_timestamp(b.start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'),
        to_char(to_timestamp(b.end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), narration, lien_status, b.account_id, b.start_date_active, is_approved, loan_rqst_id
          FROM $tblNm2 a, $tblNm b WHERE a.account_id = b.account_id AND (a.account_id = $acctID) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 "
            . "ORDER BY b.last_update_date DESC";
    $result = executeSQLNoParams($strSql);
    //echo $strSql;
    return $result;
}

function get_CustAccount_LienDets($acctLienId, $acctID) {
    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.acct_lien_id > 0) ELSE (1=1) END)";

    $cnt = getCustAcctDataChngPndngCount($acctID);
    $tblNm2 = "mcf.mcf_accounts";
    $tblNm = "mcf.mcf_account_liens";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_liens_hstrc";
        $tblNm2 = "mcf.mcf_accounts_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";
    if ($tblNm2 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }


    $strSql = "SELECT acct_lien_id, lien_no, amount, to_char(to_timestamp(b.start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'),
        to_char(to_timestamp(b.end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), narration, lien_status, b.account_id
       FROM $tblNm2 a, $tblNm b
        WHERE a.account_id = b.account_id
        AND a.account_id = $acctID AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 AND b.acct_lien_id = $acctLienId";


    $result = executeSQLNoParams($strSql);
    return $result;
}

function createAccountLien($lienAmnt, $startDate, $endDate, $acctID, $dateStr, $narration, $status, $loanRqstID, $rvsnTtl = 0) {
    global $usrID;

    $startDate = cnvrtDMYToYMD($startDate);
    $endDate = cnvrtDMYToYMD($endDate);

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "";
    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_account_liens_hstrc(acct_lien_id,
        amount, start_date_active, end_date_active, account_id, narration, lien_no, created_by, creation_date, last_update_by, last_update_date,
        lien_status, loan_rqst_id, rvsn_ttl, is_approved)
    VALUES ((SELECT nextval('mcf.mcf_account_liens_acct_lien_id_seq'))," . $lienAmnt . ",'" . $startDate . "','" . $endDate . "'," . $acctID . ",'" . $narration .
                "','AL-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
                "','$status',$loanRqstID,$rvsnTtl,'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_account_liens(acct_lien_id,
        amount, start_date_active, end_date_active, account_id, narration, lien_no, created_by, creation_date, last_update_by, last_update_date,
        lien_status, loan_rqst_id, rvsn_ttl)
    VALUES ((SELECT nextval('mcf.mcf_account_liens_acct_lien_id_seq'))," . $lienAmnt . ",'" . $startDate . "','" . $endDate . "'," . $acctID . ",'" . $narration .
                "','AL-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
                "','$status',$loanRqstID,$rvsnTtl)";
    }
    return execUpdtInsSQL($insSQL);
}

function updateAccountLien($lienAmnt, $startDate, $endDate, $dateStr, $rowID, $narration, $rvsnTtl, $lienStatus) {
    global $usrID;

    $startDate = cnvrtDMYToYMD($startDate);
    $endDate = cnvrtDMYToYMD($endDate);

    $tblNm = "mcf.mcf_account_liens";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_account_liens_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET " .
            "amount =  $lienAmnt, start_date_active= '" . $startDate . "', end_date_active= '" . $endDate .
            "', last_update_by =$usrID, last_update_date='" . $dateStr .
            "', narration = '" . $narration .
            "', lien_status = '$lienStatus' WHERE acct_lien_id = $rowID AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function deleteAccountLien($acctLienId, $acctID, $rvsnTtl, $isApproved) {
    $insSQL1 = "";
    $cnt = getCustAcctDataChngPndngCount($acctID);

    $tblNm = "mcf.mcf_account_liens";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_liens_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET acct_lien_id = -1*acct_lien_id WHERE acct_lien_id = $acctLienId AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE acct_lien_id = $acctLienId AND rvsn_ttl = $rvsnTtl";
    }

    return execUpdtInsSQL($insSQL1);
}

function getAccountLienID($dateStr, $usrID, $acctID, $rvsnTtl) {
    //$insSQL1 = "";
    $cnt = getCustAcctDataChngPndngCount($acctID);

    $tblNm = "mcf.mcf_account_liens";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_account_liens_hstrc";
    }

    $sqlStr = "SELECT acct_lien_id FROM $tblNm WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND account_id = " . $acctID . " AND rvsn_ttl = $rvsnTtl";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getLienIDNo($acctLienId) {

    $sqlStr = "SELECT distinct lien_no FROM mcf.mcf_account_liens WHERE 1=1 AND acct_lien_id = " . $acctLienId;

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return "";
}

//7.0 PRODUCT SETUP
//SAVINGS PRODUCT
function get_SavingsPrdtTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "Product Code") {
        $whrcls = " AND (a.product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Desc") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (a.product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql1 = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_savings a "
            . "WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result1 = executeSQLNoParams($strSql1);
    //var_dump($strSql);
    while ($row1 = loc_db_fetch_array($result1)) {
        $cnt = $row1[0];
    }

    $strSql2 = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_savings a "
            . "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prdt_savings_hstrc c WHERE a.svngs_product_id = c.svngs_product_id) "
            . "AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result2 = executeSQLNoParams($strSql2);
    //var_dump($strSql);
    while ($row2 = loc_db_fetch_array($result2)) {
        $cnt = $cnt + $row2[0];
    }

    return $cnt;
}

function get_SavingsPrdt($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Product Code") {
        $whrcls = " AND (a.product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.product_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (a.product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "creation_date DESC";
    } else if ($sortBy == "Product Code") {
        $ordrBy = "product_code ASC";
    } else if ($sortBy == "Product Name ASC") {
        $ordrBy = "product_name ASC";
    } else if ($sortBy == "Product Type ASC") {
        $ordrBy = "product_type ASC";
    } else if ($sortBy == "Product Name DESC") {
        $ordrBy = "product_name DESC";
    }

//    $strSql = "SELECT svngs_product_id, product_code, product_name, product_desc, currency_id, product_type, " .
//            "case when cust_type_ind = 'YES' AND cust_type_corp = 'YES' then 'Individual Customer, Corporate Customer' " .
//            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'Yes' then 'Individual Customer, Corporate Customer, Customer Group' " .
//            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Individual Customer, Corporate Customer' " .
//            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then 'Individual Customer' " .
//            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Individual Customer, Customer Group' " .
//            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'YES' then 'Corporate Customer, Customer Group' " .
//            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Customer Group' " .
//            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Corporate Customer' " .
//            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then '' " .
//            "end, use_as_collateral, allow_overdraft " .
//            "FROM mcf.mcf_prdt_savings a "
//            . "WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);

    $strSql = "SELECT svngs_product_id, product_code, product_name, product_desc, currency_id, product_type, status, creation_date, " .
            "case when cust_type_ind = 'YES' AND cust_type_corp = 'YES' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'Yes' then 'Individual Customer, Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then 'Individual Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Individual Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'YES' then 'Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Corporate Customer' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then '' " .
            "end, use_as_collateral, allow_overdraft " .
            "FROM mcf.mcf_prdt_savings a "
            . "WHERE ((a.org_id = " . $orgID . " AND a.chngs_pndng = 0)" . $whrcls .
            ") UNION "
            . "SELECT svngs_product_id, product_code, product_name, product_desc, currency_id, product_type, status, creation_date, " .
            "case when cust_type_ind = 'YES' AND cust_type_corp = 'YES' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'Yes' then 'Individual Customer, Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then 'Individual Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Individual Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'YES' then 'Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Corporate Customer' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then '' " .
            "end, use_as_collateral, allow_overdraft " .
            "FROM mcf.mcf_prdt_savings_hstrc a " .
            "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prdt_savings_hstrc c WHERE"
            . " c.svngs_product_id = a.svngs_product_id) AND a.status NOT IN ('Approved','Authorized') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_SavingsPrdtDet($pkID, $tblNm) {
    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_savings where svngs_product_id = $pkID)";

    if ($tblNm == "mcf.mcf_prdt_savings_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_savings where svngs_product_id = $pkID AND a.status NOT IN ('Approved','Authorized'))";
    }


    $strSql = "SELECT svngs_product_id, product_code, product_name, product_desc, currency_id, product_type, /**5**/
        charge_interest, interest_rate, interest_accrual_frequency, interest_posting_frequency, interest_calc_method, interest_calc_type, /**11**/
        cust_type_ind, cust_type_corp, cust_type_custgrp,  /**14**/
        withdrawal_limit, withdrawal_limit_no, withdrawal_limit_amount, overdraft_penalty_flat, overdraft_penalty_percent, /**19**/
       charge_cot, cot_free_withdrawals_max, /**21**/
       initial_amount_min, balance_min,  /**23**/
       allow_overdraft, use_as_collateral, /**25**/
       entry_fees, close_fees, reopen_fees, overdraft_limit, org_id, /**30**/
       interest_crediting_period, interest_crediting_type, daily_minbal_for_interest, /**33**/
       invstmnt_duration_no, invstmnt_duration_type, invstmnt_type, discount_rate, invstmnt_max_amount, invstmnt_min_amount, /**39**/
       status, a.rvsn_ttl, /**41**/
       invstmnt_fees_flat, invstmnt_fees_percent, invstmnt_charge_fees /**44**/,
       is_staff_account_product, coalesce(sms_alert_fee,0.00) sms_alert_fee, sms_alert_revenue_id /**47**/
  FROM $tblNm a WHERE svngs_product_id = $pkID $andClause";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function createSavingsPrdt($orgid, $pdtCode, $prdtName, $prdtDesc, $prdtCrncy, $prdtType, $chrgInterest, $intRate, $accrualFrqncy, $pstnFrqncy, $calcMethod, $calcType, $indCust, $corpCust, $custGrp, $wtdwlLimitType, $wtdwlLimitNo, $wtdwlLimitAmt, $wtdwlPnltyFlat, $wtdwlPnltyPercent, $chrgCOT, $cotFreeWtdwlNo, $ovdrftAllowed, $useAsColtrl, $entryFees, $closeFees, $reOpenFees, $dateStr, $depstOpnBal, $accBalMin, $crdtnFrqncy, $crdtnType, $invstmntType, $drtnNo, $drtnType, $dscntRate, $minAmount, $maxAmount, $invstmntFeeFlat, $invstmntFeePrcnt, $feeApplctnType, $isStaffAccountProduct="No",
        $minBalForInterest, $smsAlertFee, $smsAlertFeeRvnueAcctID) {
    global $usrID;
    //$dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_prdt_savings(" .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "product_code, product_name, product_desc, currency_id, product_type, charge_interest, interest_rate, interest_accrual_frequency, " .
            "interest_posting_frequency, interest_calc_method, interest_calc_type, cust_type_ind, cust_type_corp, cust_type_custgrp, " .
            "withdrawal_limit, withdrawal_limit_no, withdrawal_limit_amount, overdraft_penalty_flat, " .
            "overdraft_penalty_percent, charge_cot, cot_free_withdrawals_max, allow_overdraft, " .
            "use_as_collateral, entry_fees, close_fees, reopen_fees, org_id, initial_amount_min, balance_min,"
            . "interest_crediting_period, interest_crediting_type, invstmnt_type, invstmnt_duration_no, invstmnt_duration_type,"
            . "discount_rate, invstmnt_min_amount, invstmnt_max_amount, invstmnt_fees_flat, invstmnt_fees_percent, "
            . "invstmnt_charge_fees, is_staff_account_product, daily_minbal_for_interest, sms_alert_fee, sms_alert_revenue_id)" .
            "VALUES (" . $usrID . ", '" . $dateStr . "', " .
            $usrID . ", '" . $dateStr .
            "','" . loc_db_escape_string($pdtCode) . "', '" . loc_db_escape_string($prdtName) .
            "', '" . loc_db_escape_string($prdtDesc) . "', " . $prdtCrncy .
            ", '" . loc_db_escape_string($prdtType) . "', '" . loc_db_escape_string($chrgInterest) .
            "', " . $intRate .
            ", '" . loc_db_escape_string($accrualFrqncy) . "', '" . loc_db_escape_string($pstnFrqncy) .
            "', '" . loc_db_escape_string($calcMethod) . "', '" . loc_db_escape_string($calcType) .
            "', '" . loc_db_escape_string($indCust) . "', '" . loc_db_escape_string($corpCust) .
            "','" . loc_db_escape_string($custGrp) . "', '" . loc_db_escape_string($wtdwlLimitType) .
            "', " . $wtdwlLimitNo . ", " . $wtdwlLimitAmt . ", " . $wtdwlPnltyFlat . ", " . $wtdwlPnltyPercent .
            ", '" . loc_db_escape_string($chrgCOT) . "', " . $cotFreeWtdwlNo .
            ", '" . loc_db_escape_string($ovdrftAllowed) . "', '" . loc_db_escape_string($useAsColtrl) .
            "', " . $entryFees . ", " . $closeFees . ", " . $reOpenFees .
            ", " . $orgid . "," . $depstOpnBal . "," . $accBalMin . ",'" . loc_db_escape_string($crdtnFrqncy) .
            "','" . loc_db_escape_string($crdtnType) . "','" . loc_db_escape_string($invstmntType) .
            "'," . $drtnNo . ",'" . loc_db_escape_string($drtnType) . "'," . $dscntRate . "," . $minAmount . "," . $maxAmount .
            "," . $invstmntFeeFlat . "," . $invstmntFeePrcnt . ",'" . loc_db_escape_string($feeApplctnType) . "','$isStaffAccountProduct',$minBalForInterest, $smsAlertFee, $smsAlertFeeRvnueAcctID)";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function updateSavingsPrdt($prdtID, $pdtCode, $prdtName, $prdtDesc, $prdtCrncy, $prdtType, $chrgInterest, $intRate, $accrualFrqncy, $pstnFrqncy, $calcMethod, $calcType, $indCust, $corpCust, $custGrp, $wtdwlLimitType, $wtdwlLimitNo, $wtdwlLimitAmt, $wtdwlPnltyFlat, $wtdwlPnltyPercent, $chrgCOT, $cotFreeWtdwlNo, $ovdrftAllowed, $useAsColtrl, $entryFees, $closeFees, $reOpenFees, $dateStr, $depstOpnBal, $accBalMin, $crdtnFrqncy, $crdtnType, $invstmntType, $drtnNo, $drtnType, $dscntRate, $minAmount, $maxAmount, $invstmntFeeFlat, $invstmntFeePrcnt, $feeApplctnType, $rvsnTtl, $isStaffAccountProduct="No",$minBalForInterest, $smsAlertFee, $smsAlertFeeRvnueAcctID) {
    global $usrID;
    $tblNm = "mcf.mcf_prdt_savings";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_savings_hstrc";
    }
    $insSQL = "UPDATE $tblNm SET " .
            "last_update_by = " . $usrID . ", last_update_date = '" . $dateStr .
            "', product_code = '" . loc_db_escape_string($pdtCode) . "', product_name = '" . loc_db_escape_string($prdtName) .
            "', product_desc = '" . loc_db_escape_string($prdtDesc) . "', currency_id= " . $prdtCrncy .
            ", product_type= '" . loc_db_escape_string($prdtType) . "', charge_interest = '" . loc_db_escape_string($chrgInterest) .
            "', interest_rate = " . $intRate . ", interest_accrual_frequency = '" . loc_db_escape_string($accrualFrqncy) .
            "', interest_posting_frequency = '" . loc_db_escape_string($pstnFrqncy) .
            "', interest_calc_method= '" . loc_db_escape_string($calcMethod) .
            "', interest_calc_type ='" . loc_db_escape_string($calcType) .
            "', cust_type_ind = '" . loc_db_escape_string($indCust) .
            "', cust_type_corp = '" . loc_db_escape_string($corpCust) .
            "', cust_type_custgrp = '" . loc_db_escape_string($custGrp) .
            "', withdrawal_limit = '" . loc_db_escape_string($wtdwlLimitType) .
            "', withdrawal_limit_no = " . $wtdwlLimitNo . ", withdrawal_limit_amount = " . $wtdwlLimitAmt .
            ", overdraft_penalty_flat = " . $wtdwlPnltyFlat . ", overdraft_penalty_percent = " . $wtdwlPnltyPercent .
            ", charge_cot = '" . loc_db_escape_string($chrgCOT) . "', cot_free_withdrawals_max = " . $cotFreeWtdwlNo .
            ", allow_overdraft = '" . loc_db_escape_string($ovdrftAllowed) .
            "', use_as_collateral = '" . loc_db_escape_string($useAsColtrl) .
            "', entry_fees =" . $entryFees . ", close_fees=" . $closeFees . ", reopen_fees=" . $reOpenFees .
            ", initial_amount_min = " . $depstOpnBal . ", balance_min = " . $accBalMin .
            ", interest_crediting_period = '" . loc_db_escape_string($crdtnFrqncy) .
            "', interest_crediting_type= '" . loc_db_escape_string($crdtnType) .
            "', invstmnt_type= '" . loc_db_escape_string($invstmntType) .
            "', invstmnt_duration_no = $drtnNo, invstmnt_duration_type= '" . loc_db_escape_string($drtnType) .
            "', discount_rate = $dscntRate, invstmnt_min_amount = $minAmount,
            invstmnt_max_amount = $maxAmount, invstmnt_fees_flat=$invstmntFeeFlat,
            invstmnt_fees_percent=$invstmntFeePrcnt, invstmnt_charge_fees = '$feeApplctnType', is_staff_account_product='$isStaffAccountProduct',
            daily_minbal_for_interest=$minBalForInterest, sms_alert_fee = $smsAlertFee, sms_alert_revenue_id=$smsAlertFeeRvnueAcctID
             WHERE svngs_product_id = " . $prdtID . " AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function deleteSavingsPrdt($prdtID) {
    $delSQL1 = "DELETE from mcf.mcf_prdt_savings WHERE svngs_product_id = $prdtID";
    $delSQL11 = "DELETE from mcf.mcf_prdt_savings_hstrc WHERE svngs_product_id = $prdtID";
    $delSQL2 = "DELETE from mcf.mcf_prdt_savings_stdevnt_accntn WHERE svngs_product_id = $prdtID";
    $delSQL22 = "DELETE from mcf.mcf_prdt_savings_stdevnt_accntn_hstrc WHERE svngs_product_id = $prdtID";
    $delSQL3 = "DELETE from mcf.mcf_svngs_wthdrwl_comm WHERE product_id = $prdtID";
    $delSQL33 = "DELETE from mcf.mcf_svngs_wthdrwl_comm_hstrc WHERE product_id = $prdtID";


    execUpdtInsSQL($delSQL3);
    execUpdtInsSQL($delSQL33);
    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL22);
    execUpdtInsSQL($delSQL11);
    return execUpdtInsSQL($delSQL1);
}

function getPrdtID($dateStr, $orgID, $usrID) {

    $sqlStr = "SELECT svngs_product_id FROM mcf.mcf_prdt_savings WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID .
            " AND org_id = " . $orgID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createSavingsPrdtStdAccEvnts($cashDepositDbtAccID, $cashDepositCrdtAccID, $chqDepositDbtAccID, $chqDepositCrdtAccID, $cashWtdwlDbtAccID, $cashWtdwlCrdtAccID, $entryFeesDbtAccID, $entryFeesCrdtAccID, $closeFeesDbtAccID, $closeFeesCrdtAccID, $reopenFeesDbtAccID, $reopenFeesCrdtAccID, $wtdwlPnltyFlatDbtAccID, $wtdwlPnltyFlatCrdtAccID, $wtdwlPnltyPrcntDbtAccID, $wtdwlPnltyPrcntCrdtAccID, $cotFeeFlatDbtAccID, $cotFeeFlatCrdtAccID, $invstmntFeeDbtAccID, $invstmntFeeCrdtAccID, $interesPyblDbtAccID, $interesPyblCrdtAccID, $interesExpenseDbtAccID, $interesExpenseCrdtAccID, $orgid, $dateStr, $prdtID) {
    global $usrID;
    //$dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_prdt_savings_stdevnt_accntn(svngs_product_id, deposit_cash_dbt_accnt_id,
            deposit_cash_crdt_accnt_id, withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
            deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id, entry_fees_dbt_accnt_id,
            entry_fees_crdt_accnt_id, close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
            reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id, overdraft_pnlty_dbt_accnt_id,
            overdraft_pnlty_crdt_accnt_id, wthdrwl_pnlty_pcnt_dbt_accnt_id, wthdrwl_pnlty_pcnt_crdt_accnt_id,
            invstmnt_liability_accnt_id, invstmnt_fee_crdt_accnt_id, cot_amnt_flat_dbt_accnt_id,
            cot_amnt_flat_crdt_accnt_id, accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
            interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id, org_id,
            created_by, creation_date, last_update_by, last_update_date)" .
            "VALUES (" . $prdtID . "," . $cashDepositDbtAccID . ", " . $cashDepositCrdtAccID . ", " . $cashWtdwlDbtAccID .
            ", " . $cashWtdwlCrdtAccID . ", " . $chqDepositDbtAccID . ", " . $chqDepositCrdtAccID . ", " . $entryFeesDbtAccID .
            ", " . $entryFeesCrdtAccID . ", " . $closeFeesDbtAccID . ", " . $closeFeesCrdtAccID .
            ", " . $reopenFeesDbtAccID . ", " . $reopenFeesCrdtAccID . "," . $wtdwlPnltyFlatDbtAccID .
            ", " . $wtdwlPnltyFlatCrdtAccID . ", " . $wtdwlPnltyPrcntDbtAccID . ", " . $wtdwlPnltyPrcntCrdtAccID .
            ", " . $invstmntFeeDbtAccID . ", " . $invstmntFeeCrdtAccID . ", " . $cotFeeFlatDbtAccID .
            ", " . $cotFeeFlatCrdtAccID . ", " . $interesPyblDbtAccID . ", " . $interesPyblCrdtAccID .
            ", " . $interesExpenseDbtAccID . ", " . $interesExpenseCrdtAccID . ", " . $orgid . "," .
            $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "')";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function updateSavingsPrdtStdAccEvnts($cashDepositDbtAccID, $cashDepositCrdtAccID, $chqDepositDbtAccID, $chqDepositCrdtAccID, $cashWtdwlDbtAccID, $cashWtdwlCrdtAccID, $entryFeesDbtAccID, $entryFeesCrdtAccID, $closeFeesDbtAccID, $closeFeesCrdtAccID, $reopenFeesDbtAccID, $reopenFeesCrdtAccID, $wtdwlPnltyFlatDbtAccID, $wtdwlPnltyFlatCrdtAccID, $wtdwlPnltyPrcntDbtAccID, $wtdwlPnltyPrcntCrdtAccID, $cotFeeFlatDbtAccID, $cotFeeFlatCrdtAccID, $invstmntFeeDbtAccID, $invstmntFeeCrdtAccID, $interesPyblDbtAccID, $interesPyblCrdtAccID, $interesExpenseDbtAccID, $interesExpenseCrdtAccID, $orgid, $dateStr, $prdtID, $rvsnTtl) {
    global $usrID;
    //$dateStr = getDB_Date_time();
    $tblNm = "mcf.mcf_prdt_savings_stdevnt_accntn";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_savings_stdevnt_accntn_hstrc";
    }

    $updtSQL = "UPDATE $tblNm SET deposit_cash_dbt_accnt_id=$cashDepositDbtAccID,
            deposit_cash_crdt_accnt_id=$cashDepositCrdtAccID, withdrawal_dbt_accnt_id=$cashWtdwlDbtAccID, withdrawal_crdt_accnt_id=$cashWtdwlCrdtAccID,
            deposit_cheque_dbt_accnt_id=$chqDepositDbtAccID, deposit_cheque_crdt_accnt_id=$chqDepositCrdtAccID, entry_fees_dbt_accnt_id=$entryFeesDbtAccID,
            entry_fees_crdt_accnt_id=$entryFeesCrdtAccID, close_fees_dbt_accnt_id=$closeFeesDbtAccID, close_fees_crdt_accnt_id=$closeFeesCrdtAccID,
            reopen_fees_dbt_accnt_id=$reopenFeesDbtAccID, reopen_fees_crdt_accnt_id=$reopenFeesCrdtAccID, overdraft_pnlty_dbt_accnt_id=$wtdwlPnltyFlatDbtAccID,
            overdraft_pnlty_crdt_accnt_id=$wtdwlPnltyFlatCrdtAccID, wthdrwl_pnlty_pcnt_dbt_accnt_id=$wtdwlPnltyPrcntDbtAccID,
            wthdrwl_pnlty_pcnt_crdt_accnt_id=$wtdwlPnltyPrcntCrdtAccID, invstmnt_liability_accnt_id=$invstmntFeeDbtAccID,
            invstmnt_fee_crdt_accnt_id=$invstmntFeeCrdtAccID, cot_amnt_flat_dbt_accnt_id=$cotFeeFlatDbtAccID, cot_amnt_flat_crdt_accnt_id=$cotFeeFlatCrdtAccID,
            accrued_interest_dbt_accnt_id=$interesPyblDbtAccID, accrued_interest_crdt_accnt_id=$interesPyblCrdtAccID,
            interest_payment_dbt_accnt_id=$interesExpenseDbtAccID, interest_payment_crdt_accnt_id=$interesExpenseCrdtAccID,
                last_update_by=$usrID, last_update_date= '" . $dateStr . "' WHERE svngs_product_id = $prdtID AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    return execUpdtInsSQL($updtSQL);
}

function get_SavingsPrdtStdAccEvtnsDet1($pkID, $rvsnTtlAPD, $tblNm) {

    $strSql2 = "select -1, -1,-1, -1,-1, -1,-1, -1,-1, -1,-1, -1,-1, -1, -1, -1,-1, -1,-1, -1,-1, -1,-1, -1, -1, -1";
    $strSql = "SELECT svngs_product_id,
       deposit_cash_dbt_accnt_id, deposit_cash_crdt_accnt_id,
       deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id,
       withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
       entry_fees_dbt_accnt_id, entry_fees_crdt_accnt_id,
       close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
       reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id,
       overdraft_pnlty_dbt_accnt_id, overdraft_pnlty_crdt_accnt_id,
       wthdrwl_pnlty_pcnt_dbt_accnt_id, wthdrwl_pnlty_pcnt_crdt_accnt_id,
       cot_amnt_flat_dbt_accnt_id, cot_amnt_flat_crdt_accnt_id,
       invstmnt_liability_accnt_id, invstmnt_fee_crdt_accnt_id,
       accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
       interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id,
       svngs_accntn_evnt_id
  FROM $tblNm WHERE svngs_product_id = $pkID AND rvsn_ttl = $rvsnTtlAPD";

    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        return $result;
    } else {
        //var_dump($strSql);
        $result2 = executeSQLNoParams($strSql2);
        return $result2;
    }
}

function get_SavingsPrdtStdAccEvtnsDet($pkID, $rvsnTtlAPD, $tblNm) {

    $strSql = "SELECT svngs_product_id,
       deposit_cash_dbt_accnt_id, deposit_cash_crdt_accnt_id,
       deposit_cheque_dbt_accnt_id, deposit_cheque_crdt_accnt_id,
       withdrawal_dbt_accnt_id, withdrawal_crdt_accnt_id,
       entry_fees_dbt_accnt_id, entry_fees_crdt_accnt_id,
       close_fees_dbt_accnt_id, close_fees_crdt_accnt_id,
       reopen_fees_dbt_accnt_id, reopen_fees_crdt_accnt_id,
       overdraft_pnlty_dbt_accnt_id, overdraft_pnlty_crdt_accnt_id,
       wthdrwl_pnlty_pcnt_dbt_accnt_id, wthdrwl_pnlty_pcnt_crdt_accnt_id,
       cot_amnt_flat_dbt_accnt_id, cot_amnt_flat_crdt_accnt_id,
       invstmnt_liability_accnt_id, invstmnt_fee_crdt_accnt_id,
       accrued_interest_dbt_accnt_id, accrued_interest_crdt_accnt_id,
       interest_payment_dbt_accnt_id, interest_payment_crdt_accnt_id,
       svngs_accntn_evnt_id
  FROM $tblNm WHERE svngs_product_id = $pkID AND rvsn_ttl = $rvsnTtlAPD";
    //var_dump($strSql);

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSvngsAccntnEvntId($dateStr, $usrID) {

    $sqlStr = "SELECT svngs_accntn_evnt_id FROM mcf.mcf_prdt_savings_stdevnt_accntn WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createSavingsWtdwlCmmsn($lowRange, $highRange, $amountFlat, $amountPrcnt, $remarks, $prdtID, $dateStr, $rvsnTtl) {
    global $usrID;
    $insSQL = "";
    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_svngs_wthdrwl_comm_hstrc(row_id,
            range_low, range_high, comm_flat, comm_percent, remarks,
                created_by, creation_date, last_update_by, last_update_date,
                product_id, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_svngs_wthdrwl_comm_row_id_seq'))," . $lowRange . "," . $highRange . "," . $amountFlat . "," . $amountPrcnt . ",'" . loc_db_escape_string($remarks) .
                "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $prdtID . ",$rvsnTtl,'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_svngs_wthdrwl_comm(row_id,
            range_low, range_high, comm_flat, comm_percent, remarks,
                created_by, creation_date, last_update_by, last_update_date,
                product_id, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_svngs_wthdrwl_comm_row_id_seq'))," . $lowRange . "," . $highRange . "," . $amountFlat . "," . $amountPrcnt . ",'" . loc_db_escape_string($remarks) .
                "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $prdtID . ",$rvsnTtl)";
    }
    execUpdtInsSQL($insSQL);
}

function updateSavingsWtdwlCmmsn($lowRange, $highRange, $amountFlat, $amountPrcnt, $remarks, $dateStr, $rowID, $rvsnTtl) {
    global $usrID;
    $tblNm = "mcf.mcf_svngs_wthdrwl_comm";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_svngs_wthdrwl_comm_hstrc";
    }


    $insSQL = "UPDATE $tblNm SET " .
            "range_low = $lowRange, range_high=$highRange, comm_flat=$amountFlat, comm_percent=$amountPrcnt, " .
            "remarks ='" . loc_db_escape_string($remarks) . "',  last_update_by =$usrID, last_update_date='" . $dateStr .
            "' WHERE row_id = $rowID AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function get_SavingsWtdwlCmmsn($pkID) {
    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.row_id > 0) ELSE (1=1) END)";

    $cnt = getSvngsPrdtDataChngPndngCount($pkID);
    $tblNm2 = "mcf.mcf_prdt_savings";
    $tblNm = "mcf.mcf_svngs_wthdrwl_comm";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_svngs_wthdrwl_comm_hstrc";
        $tblNm2 = "mcf.mcf_prdt_savings_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_savings where svngs_product_id = $pkID)";
    if ($tblNm2 == "mcf.mcf_prdt_savings_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_savings where svngs_product_id = $pkID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT b.row_id, range_low, range_high, comm_flat, comm_percent, remarks, b.row_id, is_approved, product_id
          FROM $tblNm2 a, $tblNm b WHERE a.svngs_product_id = b.product_id AND (product_id = $pkID) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSvngsCmsnRowID($dateStr, $usrID, $prdtID) {

    $sqlStr = "SELECT row_id FROM mcf.mcf_svngs_wthdrwl_comm WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND product_id = " . $prdtID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function get_SvngsPrdtDetsForAccnt($pkID) {
    $strSql = "SELECT svngs_product_id, product_name, product_desc, prdt_type_id, cust_type_ind,
       currency_id, initial_amount_min, balance_min, interest_rate,
       interest_accrual_frequency, interest_posting_frequency, interest_calc_method, withdrawal_limit_no,
        withdrawal_limit_amount, allow_overdraft, overdraft_limit, entry_fees,
        close_fees, reopen_fees, product_code, interest_calc_type,
        charge_cot, cot_free_withdrawals_max, use_as_collateral, product_type,
       withdrawal_limit, overdraft_penalty_flat, overdraft_penalty_percent,
       cust_type_corp, cust_type_custgrp, org_id, charge_interest, invstmnt_duration_no,
        invstmnt_duration_type, invstmnt_type
  FROM mcf.mcf_prdt_savings WHERE svngs_product_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

//CREDIT PRODUCT
function get_CreditPrdtTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "Product Code") {
        $whrcls = " AND (a.product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Desc") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (a.product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    }

//    $strSql = "SELECT count(1) " .
//            "FROM mcf.mcf_prdt_loans a "
//            . "WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
//            ")";
//    $result = executeSQLNoParams($strSql);
//    while ($row = loc_db_fetch_array($result)) {
//        return $row[0];
//    }
//    return 0;

    $strSql1 = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_loans a "
            . "WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result1 = executeSQLNoParams($strSql1);
    //var_dump($strSql);
    while ($row1 = loc_db_fetch_array($result1)) {
        $cnt = $row1[0];
    }

    $strSql2 = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_loans a "
            . "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prdt_loans_hstrc c WHERE a.loan_product_id = c.loan_product_id) "
            . "AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . ")";
    $result2 = executeSQLNoParams($strSql2);
    //var_dump($strSql);
    while ($row2 = loc_db_fetch_array($result2)) {
        $cnt = $cnt + $row2[0];
    }

    return $cnt;
}

function get_CreditPrdt($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Product Code") {
        $whrcls = " AND (a.product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.product_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (a.product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "creation_date DESC";
    } else if ($sortBy == "Product Code") {
        $ordrBy = "product_code ASC";
    } else if ($sortBy == "Product Name ASC") {
        $ordrBy = "product_name ASC";
    } else if ($sortBy == "Product Type ASC") {
        $ordrBy = "product_type ASC";
    } else if ($sortBy == "Product Name DESC") {
        $ordrBy = "product_name DESC";
    }

    $strSql = "SELECT loan_product_id, product_code, product_name, product_desc, currency_id, product_type, " .
            "case when cust_type_ind = 'YES' AND cust_type_corp = 'YES' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'Yes' then 'Individual Customer, Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then 'Individual Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Individual Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'YES' then 'Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Corporate Customer' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then '' " .
            "end, charge_interest, interest_rate, status, creation_date " .
            "FROM mcf.mcf_prdt_loans a WHERE ((a.org_id = " . $orgID . " AND a.chngs_pndng = 0)" . $whrcls .
            ") UNION " .
            "SELECT loan_product_id, product_code, product_name, product_desc, currency_id, product_type, " .
            "case when cust_type_ind = 'YES' AND cust_type_corp = 'YES' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'Yes' then 'Individual Customer, Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Individual Customer, Corporate Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then 'Individual Customer' " .
            "when cust_type_ind = 'YES' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Individual Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'YES' then 'Corporate Customer, Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'YES' then 'Customer Group' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'YES' and cust_type_custgrp = 'NO' then 'Corporate Customer' " .
            "when cust_type_ind = 'NO' AND cust_type_corp = 'NO' and cust_type_custgrp = 'NO' then '' " .
            "end, charge_interest, interest_rate, status, creation_date " .
            "FROM mcf.mcf_prdt_loans_hstrc a "
            . "WHERE (1 = 1 AND a.rvsn_ttl = (SELECT max(rvsn_ttl) FROM mcf.mcf_prdt_loans_hstrc c WHERE"
            . " c.loan_product_id = a.loan_product_id) AND a.status NOT IN ('Approved','Authorized') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_CreditPrdtDet($pkID, $tblNm) {
    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $pkID)";

    if ($tblNm == "mcf.mcf_prdt_loans_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $pkID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT loan_product_id, product_name, product_desc, product_code, /**3**/
       loan_max_amount, loan_min_amount, loan_repayment_type, grace_period_no, /**7**/
       grace_period_type, max_loan_tenor, max_loan_tenor_type, guarantor_required, /**11**/
       guarantor_no, sector_clsfctn_major_id, sector_clsfctn_minor_id,  /**14**/
       -1, product_type, posting_frequency, charge_interest,  /**18**/
       interest_rate, cust_type_custgrp, cust_type_corp, cust_type_ind, /**22**/
       to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-MON-YYYY') start_date_active,  /**23**/
       to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-MON-YYYY') end_date_active, /**24**/
       compounding_period, principal_rcvbl_acct_id,  /**26**/
       interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id,  /**29**/
       is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral, /**32**/
       value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral,  /**35**/
       value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd,  /**37**/
       value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,  /**39**/
       min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id,  /**43**/
       interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat,  /**46**/
       scoring_set_hdr_id, status, a.org_id, iso_code, a.rvsn_ttl  /**51**/,
       bad_debt_acct_id, loan_provision_dbt_acct_id, loan_provision_crdt_acct_id /**54**/,
       is_staff_loan_product, allwd_group_type, allwd_group_value /**57**/
  FROM $tblNm a, mcf.mcf_currencies b
  WHERE a.currency_id = b.crncy_id AND loan_product_id = $pkID $andClause";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

//CHEQUE MANAGEMENT
//Cheque Book Register
function get_ChqBookRegisterTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (b.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (b.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book No.") {
        $whrcls = " AND (a.chq_book_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Type") {
        $whrcls = " AND (a.chq_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Approval Status") {
        $whrcls = " AND (a.approval_status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_cheque_book_register a LEFT OUTER JOIN mcf.mcf_accounts b "
            . "ON a.account_id = b.account_id WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_ChqBookRegister($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (b.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (b.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book No.") {
        $whrcls = " AND (a.chq_book_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Type") {
        $whrcls = " AND (a.chq_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Approval Status") {
        $whrcls = " AND (a.approval_status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Account Number") {
        $ordrBy = "b.account_number ASC";
    } else if ($sortBy == "Account Title ASC") {
        $ordrBy = "b.account_title ASC";
    } else if ($sortBy == "Cheque Book No. ASC") {
        $ordrBy = "b.chq_book_no ASC";
    } else if ($sortBy == "Cheque Type ASC") {
        $ordrBy = "a.chq_type ASC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT chq_book_id, chq_book_no, b.account_number, b.account_title, chq_type,
                    chq_serial_no_first||' - '||chq_serial_no_last, a.status, a.approval_status, a.account_id " .
            "FROM mcf.mcf_cheque_book_register a LEFT OUTER JOIN mcf.mcf_accounts b "
            . "ON a.account_id = b.account_id WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_ChqBookRegisterDets($chqBkId) {
    $strSql = "SELECT chq_book_id, chq_book_no, chq_type, b.account_id, b.account_number, b.account_title,  no_of_pages,
        chq_serial_no_first, chq_serial_no_last, a.status, to_char(to_timestamp(issue_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.approval_status, a.org_id,
        book_fee, book_fee_revenue_id, fee_status
        FROM mcf.mcf_cheque_book_register a LEFT OUTER JOIN mcf.mcf_accounts b ON a.account_id = b.account_id
        WHERE chq_book_id = $chqBkId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function createChqBook($chqType, $acctID, $noOfPages, $chqNoFirst, $chqNoLast, $issueDate, $status, $chqBookId, $dateStr, $orgid,
        $chqBkFee, $chqBkFeeRvnueAcctID) {
    global $usrID;


    $issueDate1 = $issueDate;
    if ($issueDate != "") {
        $issueDate1 = cnvrtDMYToYMD($issueDate);
    }

    if ($acctID == "") {
        $acctID = -1;
    }

    $prfx = "";
    if ($chqType == "Personal Cheque") {
        $prfx = "PSC";
    } else if ($chqType == "Corporate Cheque") {
        $prfx = "CPC";
    } else if ($chqType == "Group Cheque") {
        $prfx = "GPC";
    } else if ($chqType == "Counter Cheque") {
        $prfx = "CTC";
    } else if ($chqType == "Banker's Draft") {
        $prfx = "BKD";
    } else if ($chqType == "Withdrawal Slip") {
        $prfx = "WDS";
    } else if ($chqType == "Deposit Slip") {
        $prfx = "DPS";
    } else if ($chqType == "Passbook") {
        $prfx = "PSB";
    } else if ($chqType == "Loan Application Form") {
        $prfx = "LAF";
    }

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_cheque_book_register(chq_book_id, account_id, issue_date, chq_type, no_of_pages, chq_serial_no_first,
            chq_serial_no_last, status, created_by, creation_date, last_update_by,
            last_update_date, chq_book_no, org_id, book_fee, book_fee_revenue_id)
    VALUES ($chqBookId," . $acctID . ",'" . $issueDate1 . "','" . loc_db_escape_string($chqType) . "'," . $noOfPages . ",'" . $chqNoFirst .
            "','" . $chqNoLast . "','" . $status . "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
            "','" . $prfx . "-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "',$orgid,$chqBkFee,$chqBkFeeRvnueAcctID)";
    return execUpdtInsSQL($insSQL);
}

function updateChqBook($chqType, $acctID, $noOfPages, $chqNoFirst, $chqNoLast, $issueDate, $status, $chqBookId, $dateStr, $chqBkFee, $chqBkFeeRvnueAcctID) {
    global $usrID;

    $issueDate1 = $issueDate;
    if ($issueDate != "") {
        $issueDate1 = cnvrtDMYToYMD($issueDate);
    }

    if ($acctID == "") {
        $acctID = -1;
    }

    $prfx = "";
    if ($chqType == "Personal Cheque") {
        $prfx = "PSC";
    } else if ($chqType == "Corporate Cheque") {
        $prfx = "CPC";
    } else if ($chqType == "Group Cheque") {
        $prfx = "GPC";
    } else if ($chqType == "Counter Cheque") {
        $prfx = "CTC";
    } else if ($chqType == "Banker's Draft") {
        $prfx = "BKD";
    } else if ($chqType == "Withdrawal Slip") {
        $prfx = "WDS";
    } else if ($chqType == "Deposit Slip") {
        $prfx = "DPS";
    } else if ($chqType == "Passbook") {
        $prfx = "PSB";
    } else if ($chqType == "Loan Application Form") {
        $prfx = "LAF";
    }

    $currChqBookNo = getGnrlRecNm("mcf.mcf_cheque_book_register", "chq_book_id", "chq_book_no", $chqBookId);

    $insSQL = "UPDATE mcf.mcf_cheque_book_register
            SET account_id= " . $acctID .
            ", issue_date= '" . $issueDate1 .
            "', chq_type= '" . loc_db_escape_string($chqType) .
            "', no_of_pages=" . $noOfPages .
            ", chq_serial_no_first= '" . $chqNoFirst .
            "', chq_serial_no_last= '" . $chqNoLast .
            "', status= '" . $status .
            "', chq_book_no = '" . $prfx . substr($currChqBookNo, 3) .
            "', approval_status = 'Initiated', last_update_by=" . $usrID .
            ", last_update_date='" . $dateStr . "', book_fee = $chqBkFee, book_fee_revenue_id = $chqBkFeeRvnueAcctID WHERE chq_book_id = $chqBookId";

    return execUpdtInsSQL($insSQL);
}

function deleteChqBook($chqBookId) {
    $insSQL1 = "DELETE FROM mcf.mcf_cheque_register WHERE chq_book_id = $chqBookId";
    $insSQL2 = "DELETE FROM mcf.mcf_cheque_book_register WHERE chq_book_id = $chqBookId";

    execUpdtInsSQL($insSQL1);
    return execUpdtInsSQL($insSQL2);
}

function getChqBookID($dateStr, $usrID, $chqType) {

    $sqlStr = "SELECT chq_book_id FROM mcf.mcf_cheque_book_register WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND chq_type = '" . loc_db_escape_string($chqType) . "'";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function validateChqBookChqRangeSv($chqNoFirst, $chqNoLast, $chqType) {

    $sqlStr = "SELECT count(*) FROM  mcf.mcf_cheque_register a LEFT OUTER JOIN mcf.mcf_cheque_book_register b
    ON a.chq_book_id = b.chq_book_id WHERE chq_no between '" . $chqNoFirst .
            "' AND '" . $chqNoLast . "' AND chq_type = '" . loc_db_escape_string($chqType) . "'";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getUsedChqsInChqBook($chqBookId) {

    $sqlStr = "SELECT  mcf.has_chq_been_used($chqBookId);";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

//Cheques Register
function get_ChqRegisterTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (c.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (c.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book No.") {
        $whrcls = " AND (b.chq_book_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque No.") {
        $whrcls = " AND (a.chq_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Approval Status") {
        $whrcls = " AND (a.approval_status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_cheque_register a INNER JOIN mcf.mcf_cheque_book_register b "
            . " ON a.chq_book_id = b.chq_book_id LEFT OUTER JOIN mcf.mcf_accounts c "
            . " ON b.account_id = c.account_id WHERE (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_ChqRegister($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (c.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (c.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Book No.") {
        $whrcls = " AND (b.chq_book_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque No.") {
        $whrcls = " AND (a.chq_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Cheque Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Approval Status") {
        $whrcls = " AND (a.approval_status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Account Number") {
        $ordrBy = "c.account_number ASC";
    } else if ($sortBy == "Cheque No. ASC") {
        $ordrBy = "a.chq_no ASC";
    } else if ($sortBy == "Cheque No. DESC") {
        $ordrBy = "a.chq_no DESC";
    } else if ($sortBy == "Cheque Book No.") {
        $ordrBy = "b.chq_book_no ASC";
    } else if ($sortBy == "Cheque Status ASC") {
        $ordrBy = "a.status ASC";
    } else if ($sortBy == "Approval Status ASC") {
        $ordrBy = "a.approval_status ASC";
    } else if ($sortBy == "Date Changed") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT chq_id, chq_no, b.chq_book_no, b.chq_type, c.account_number, a.status, a.approval_status, a.chq_book_id " .
            " FROM mcf.mcf_cheque_register a INNER JOIN mcf.mcf_cheque_book_register b "
            . " ON a.chq_book_id = b.chq_book_id LEFT OUTER JOIN mcf.mcf_accounts c "
            . " ON b.account_id = c.account_id WHERE (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_ChqRegisterDets($chqId) {
    $strSql = "SELECT chq_id, chq_no, a.status, comments, a.approval_status
        FROM mcf.mcf_cheque_register a  WHERE chq_id = $chqId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function hasChqBeenUsedCnta($chqNo) {

    $sqlStr = "SELECT count(*) FROM mcf.mcf_cust_account_trns_cheques WHERE cheque_no = '" . $chqNo . "'";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function updateChq($chqNo, $comments, $status, $chqId, $dateStr) {
    global $usrID;

    $insSQL = "UPDATE mcf.mcf_cheque_register
            SET status= '" . $status .
            "', comments = '" . loc_db_escape_string($comments) .
            "', approval_status = 'Initiated', last_update_by=" . $usrID .
            ", last_update_date='" . $dateStr .
            "' WHERE chq_id = $chqId";

    return execUpdtInsSQL($insSQL);
}

//CREDIT MANAGEMENT PRODUCTS
//LOAN PRODUCT

/* * NEW FUNCTIONS 03-06-2017 * */

function get_GroupMembers($pkID) {
//    $strSql = "SELECT grp_member_id, trim(c.title || ' ' || c.sur_name ||
//                ', ' || c.first_name || ' ' || c.other_names) fullname,  position,
//        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.cust_id, grp_cust_id, c.local_id_no
//  FROM mcf.mcf_group_members a, mcf.mcf_customers_ind c WHERE a.cust_id = c.cust_id AND a.grp_cust_id = $pkID";

    $cnt = getCustDataChngPndngCount($pkID);
    $tblNm2 = "mcf.mcf_customers";
    if ($cnt > 0) {
        $tblNm2 = "mcf.mcf_customers_hstrc";
    }

    $tblNm = "mcf.mcf_group_members";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_group_members_hstrc";
    }

    $andClause1 = " AND (CASE WHEN b.status IN ('Incomplete','Rejected','Withdrawn') THEN (a.grp_member_id > 0) ELSE (1=1) END)";

    $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID)";
    if ($tblNm2 == "mcf.mcf_customers_hstrc") {
        $andClause = "AND b.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_customers where cust_id = $pkID AND b.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT grp_member_id, trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names) fullname,  position,
        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'),
        a.cust_id, grp_cust_id, c.local_id_no, is_approved
  FROM $tblNm a, $tblNm2 b, mcf.mcf_customers_ind c WHERE a.cust_id = c.cust_id AND a.grp_cust_id = b.cust_id "
            . "AND a.rvsn_ttl = b.rvsn_ttl AND a.grp_cust_id = $pkID $andClause $andClause1";

    //var_dump($strSql);
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_Group_MemberDets($grpMemberID, $custID, $rvsnTtl) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_group_members";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_group_members_hstrc";
    }

    $strSql = "SELECT grp_member_id, trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names) fullname,  position, a.cust_id,
        a.grp_cust_id, to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY')
  FROM $tblNm a, mcf.mcf_customers_ind c WHERE a.cust_id = c.cust_id AND grp_member_id = $grpMemberID AND a.rvsn_ttl = $rvsnTtl";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_Corp_DirectorDets($corpDirectorID, $custID, $rvsnTtl) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_corporate_directors";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_corporate_directors_hstrc";
    }

    $strSql = "SELECT director_id, mcf.get_corp_director_hstrc_name(cust_id, source_type, person_cust_id, $cnt) director,  source_type, person_cust_id,
        cust_id, to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY')
  FROM $tblNm a WHERE director_id = $corpDirectorID AND rvsn_ttl = $rvsnTtl";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function saveAddtnlCstmrData($custID, $srcType, $addtnlCstmrDataCol1, $addtnlCstmrDataCol2, $addtnlCstmrDataCol3, $addtnlCstmrDataCol4, $addtnlCstmrDataCol5, $addtnlCstmrDataCol6, $addtnlCstmrDataCol7, $addtnlCstmrDataCol8, $addtnlCstmrDataCol9, $addtnlCstmrDataCol10, $addtnlCstmrDataCol11, $addtnlCstmrDataCol12, $addtnlCstmrDataCol13, $addtnlCstmrDataCol14, $addtnlCstmrDataCol15, $addtnlCstmrDataCol16, $addtnlCstmrDataCol17, $addtnlCstmrDataCol18, $addtnlCstmrDataCol19, $addtnlCstmrDataCol20, $addtnlCstmrDataCol21, $addtnlCstmrDataCol22, $addtnlCstmrDataCol23, $addtnlCstmrDataCol24, $addtnlCstmrDataCol25, $addtnlCstmrDataCol26, $addtnlCstmrDataCol27, $addtnlCstmrDataCol28, $addtnlCstmrDataCol29, $addtnlCstmrDataCol30, $addtnlCstmrDataCol31, $addtnlCstmrDataCol32, $addtnlCstmrDataCol33, $addtnlCstmrDataCol34, $addtnlCstmrDataCol35, $addtnlCstmrDataCol36, $addtnlCstmrDataCol37, $addtnlCstmrDataCol38, $addtnlCstmrDataCol39, $addtnlCstmrDataCol40, $addtnlCstmrDataCol41, $addtnlCstmrDataCol42, $addtnlCstmrDataCol43, $addtnlCstmrDataCol44, $addtnlCstmrDataCol45, $addtnlCstmrDataCol46, $addtnlCstmrDataCol47, $addtnlCstmrDataCol48, $addtnlCstmrDataCol49, $addtnlCstmrDataCol50, $rvsnTtl) {
    $adDataExsts = 0;
    $data_cols = array("", $addtnlCstmrDataCol1, $addtnlCstmrDataCol2, $addtnlCstmrDataCol3, $addtnlCstmrDataCol4, $addtnlCstmrDataCol5, $addtnlCstmrDataCol6, $addtnlCstmrDataCol7, $addtnlCstmrDataCol8, $addtnlCstmrDataCol9, $addtnlCstmrDataCol10,
        $addtnlCstmrDataCol11, $addtnlCstmrDataCol12, $addtnlCstmrDataCol13, $addtnlCstmrDataCol14, $addtnlCstmrDataCol15, $addtnlCstmrDataCol16, $addtnlCstmrDataCol17, $addtnlCstmrDataCol18, $addtnlCstmrDataCol19, $addtnlCstmrDataCol20,
        $addtnlCstmrDataCol21, $addtnlCstmrDataCol22, $addtnlCstmrDataCol23, $addtnlCstmrDataCol24, $addtnlCstmrDataCol25, $addtnlCstmrDataCol26, $addtnlCstmrDataCol27, $addtnlCstmrDataCol28, $addtnlCstmrDataCol29, $addtnlCstmrDataCol30,
        $addtnlCstmrDataCol31, $addtnlCstmrDataCol32, $addtnlCstmrDataCol33, $addtnlCstmrDataCol34, $addtnlCstmrDataCol35, $addtnlCstmrDataCol36, $addtnlCstmrDataCol37, $addtnlCstmrDataCol38, $addtnlCstmrDataCol39, $addtnlCstmrDataCol40,
        $addtnlCstmrDataCol41, $addtnlCstmrDataCol42, $addtnlCstmrDataCol43, $addtnlCstmrDataCol44, $addtnlCstmrDataCol45, $addtnlCstmrDataCol46, $addtnlCstmrDataCol47, $addtnlCstmrDataCol48, $addtnlCstmrDataCol49, $addtnlCstmrDataCol50);
    for ($y = 0; $y < count($data_cols); $y++) {
        if ($data_cols[$y] != "") {
            $adDataExsts++;
        }
    }
    $extrDataID = -1;
    $extrDataIDStr = "";
    //$extrDataIDStr = getGnrlRecNm("prs.prsn_extra_data", "person_id", "extra_data_id", $inptDaPersonID);

    $result = executeSQLNoParams("SELECT extra_data_id FROM mcf.mcf_extra_data WHERE src_pk_id = $custID AND src_type = '$srcType'");
    while ($row = loc_db_fetch_array($result)) {
        $extrDataIDStr = $row[0];
        break;
    }

    if ($extrDataIDStr != "") {
        $extrDataID = (float) $extrDataIDStr;
    }

    //INSERT FIRST RECORD
    if ($rvsnTtl == 0 && $extrDataID < 0) {
        createCstmrExtrData($custID, $data_cols, $srcType);
    }

    if ($adDataExsts > 0) {
        if ($extrDataID > 0) {
            updateCstmrExtrData($custID, $data_cols, $srcType, $rvsnTtl);
        } else {
            createCstmrExtrData($custID, $data_cols, $srcType);
        }
    }

    return true;
}

function get_CreditScoreSetHdrIDForLoanRqst1($loanRqstID) {

    $sqlStr = "SELECT distinct a.scoring_set_hdr_id
FROM mcf.mcf_credit_scoring_set_hdr a, mcf.mcf_credit_scornset_hdr_loanprdts b,
mcf.mcf_prdt_loans c, mcf.mcf_loan_request d
WHERE a.scoring_set_hdr_id = b.scoring_set_hdr_id
AND c.loan_product_id = d.loan_product_id
AND b.loan_product_id = c.loan_product_id
AND a.is_enabled = 'YES' AND d.loan_rqst_id = $loanRqstID";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

/* * START personal customer and Other Persons FXNS* */

//TABLE mcf.mcf_prsn_national_ids
function createPrsnCustNtnlID($custID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, $prsnType, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    $ntnlIDCardsDateIssd = cnvrtDMYToYMD($ntnlIDCardsDateIssd);
    if ($ntnlIDCardsExpDate == "") {
        $ntnlIDCardsExpDate = "4000-12-31";
    } else {
        $ntnlIDCardsExpDate = cnvrtDMYToYMD($ntnlIDCardsExpDate);
    }

    //$tblNm = "mcf.mcf_prsn_national_ids";
    $insSQL = "";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
        $insSQL = "INSERT INTO $tblNm(ntnlty_id,
                person_id, nationality, id_number, created_by, creation_date,
                last_update_by, last_update_date, national_id_typ,
                date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_cust_national_ids_ntnlty_id_seq'))," . $custID . ",'" . loc_db_escape_string($ntnlIDCardsCountry) . "','" . loc_db_escape_string($ntnlIDCardsIDNo) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "','" . loc_db_escape_string($ntnlIDCardsIDTyp) .
                "','" . $ntnlIDCardsDateIssd . "','" . $ntnlIDCardsExpDate .
                "','" . loc_db_escape_string($ntnlIDCardsOtherInfo) . "','" . loc_db_escape_string($prsnType) . "',$rvsnTtl,'No')";
    } else {
        $tblNm = "mcf.mcf_prsn_national_ids";
        $insSQL = "INSERT INTO $tblNm(ntnlty_id,
                person_id, nationality, id_number, created_by, creation_date,
                last_update_by, last_update_date, national_id_typ,
                date_issued, expiry_date, other_info, person_type, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_cust_national_ids_ntnlty_id_seq'))," . $custID . ",'" . loc_db_escape_string($ntnlIDCardsCountry) . "','" . loc_db_escape_string($ntnlIDCardsIDNo) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "','" . loc_db_escape_string($ntnlIDCardsIDTyp) .
                "','" . $ntnlIDCardsDateIssd . "','" . $ntnlIDCardsExpDate .
                "','" . loc_db_escape_string($ntnlIDCardsOtherInfo) . "','" . loc_db_escape_string($prsnType) . "',$rvsnTtl)";
    }

    return execUpdtInsSQL($insSQL);
}

function updatePrsnCustNtnlID($custID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, $prsnType, $ntnlIDpKey, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    $ntnlIDCardsDateIssd = cnvrtDMYToYMD($ntnlIDCardsDateIssd);
    if ($ntnlIDCardsExpDate == "") {
        $ntnlIDCardsExpDate = "4000-12-31";
    } else {
        $ntnlIDCardsExpDate = cnvrtDMYToYMD($ntnlIDCardsExpDate);
    }

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
    }


    $insSQL = "UPDATE $tblNm SET
            person_id = $custID, nationality = '" . loc_db_escape_string($ntnlIDCardsCountry) .
            "', id_number = '" . loc_db_escape_string($ntnlIDCardsIDNo) .
            "', last_update_by = " . $usrID .
            ", last_update_date = '" . $dateStr .
            "', national_id_typ = '" . loc_db_escape_string($ntnlIDCardsIDTyp) .
            "', date_issued = '" . $ntnlIDCardsDateIssd .
            "', expiry_date = '" . $ntnlIDCardsExpDate .
            "', other_info = '" . loc_db_escape_string($ntnlIDCardsOtherInfo) .
            "', person_type = '" . loc_db_escape_string($prsnType) .
            "' WHERE ntnlty_id = $ntnlIDpKey AND rvsn_ttl = $rvsnTtl";
    //echo "$insSQL";

    return execUpdtInsSQL($insSQL);
}

function deletePrsnCustNtnlID($ntnlIDpKey, $prsnType = "Individual Customer", $custPrsnID, $rvsnTtl, $isApproved) {

    $insSQL1 = "";
    $cnt = getCustDataChngPndngCount($custPrsnID);
    if ($prsnType === "Other Person") {
        $cnt = getOtherPrsnDataChngPndngCount($custPrsnID);
    }

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET ntnlty_id = -1*ntnlty_id WHERE ntnlty_id = $ntnlIDpKey AND rvsn_ttl = $rvsnTtl AND person_type = '$prsnType'";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE ntnlty_id = $ntnlIDpKey AND rvsn_ttl = $rvsnTtl AND person_type = '$prsnType'";
    }
    return execUpdtInsSQL($insSQL1);
}

/* * START personal customer FXNS* */

/* * START customer group FXNS* */

//TABLE mcf.mcf_customers_corp
function createCorpCust($custID, $custName, $custDesc, $clsfctn, $orgID, $dateOfEstblshmnt, $firmBrandName, $typeOfOrganisation, $companyRegNum, $dateOfIncorporation, $typeOfIncorporation, $vatNumber, $tinNumber, $ssnitRegNumber, $noOfEmplyees, $contactNos, $email, $pstlAddress, $natureOfBusiness, $resAddress, $contactNoFax, $meetingDays) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $dateOfEstblshmnt = cnvrtDMYToYMD($dateOfEstblshmnt);
    if ($dateOfIncorporation == "") {
        $dateOfIncorporation = "4000-12-31";
    } else {
        $dateOfIncorporation = cnvrtDMYToYMD($dateOfIncorporation);
    }

    //$idNoVal
    $bnkBranchCode = getCustBranchCode($custID);
    //$varVal = getMCFglobalVariableValue("Customer ID No. Format");
    //$idNoVal = "(SELECT lpad(trim((" . $custID . ")||''),7,'0'))";
    //if($varVal == "Branch Code->Unique ID"){
    //    $idNoVal = "'$bnkBranchCode'||(SELECT .(trim((" . $custID . ")||''),7,'0'))";
    //}
    //$idNoVal = getNextCustLocalIDNoSerial($custID, "mcf.mcf_customers_corp");
    $idNoVal = getGnrlRecNm("mcf.mcf_customers", "cust_id", "id_no", $custID);
    //$idNoVal

    $insSQL = "INSERT INTO mcf.mcf_customers_corp(
            cust_id, local_id_no, cust_name,
            cust_desc, classification,
            org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
            company_reg_num, date_of_incorporation, type_of_incorporation,
            vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
            email, pstl_address, created_by, creation_date, last_update_by,
            last_update_date, nature_of_business,
            res_address, contact_no_fax, meeting_days)
            VALUES (" . $custID . ",'" . $idNoVal . "','" . loc_db_escape_string($custName) .
            "','" . loc_db_escape_string($custDesc) . "','" . loc_db_escape_string($clsfctn) .
            "'," . $orgID . ",'" . $dateOfEstblshmnt . "','" . loc_db_escape_string($firmBrandName) . "','" . loc_db_escape_string($typeOfOrganisation) .
            "','" . loc_db_escape_string($companyRegNum) . "','" . loc_db_escape_string($dateOfIncorporation) .
            "','" . loc_db_escape_string($typeOfIncorporation) . "','" . loc_db_escape_string($vatNumber) .
            "','" . loc_db_escape_string($tinNumber) . "','" . loc_db_escape_string($ssnitRegNumber) .
            "'," . $noOfEmplyees . ",'" . loc_db_escape_string($contactNos) .
            "','" . loc_db_escape_string($email) . "','" . loc_db_escape_string($pstlAddress) .
            "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr .
            "','" . loc_db_escape_string($natureOfBusiness) . "','" . loc_db_escape_string($resAddress) .
            "','" . loc_db_escape_string($contactNoFax) . "','" . loc_db_escape_string($meetingDays) . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCorpCust($profileID, $custID, $custName, $custDesc, $clsfctn, $orgID, $dateOfEstblshmnt, $firmBrandName, $typeOfOrganisation, $companyRegNum, $dateOfIncorporation, $typeOfIncorporation, $vatNumber, $tinNumber, $ssnitRegNumber, $noOfEmplyees, $contactNos, $email, $pstlAddress, $natureOfBusiness, $resAddress, $contactNoFax, $meetingDays, $rvsnTtl, $idNo) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $dateOfEstblshmnt = cnvrtDMYToYMD($dateOfEstblshmnt);

    if ($dateOfIncorporation == "") {
        $dateOfIncorporation = "4000-12-31";
    } else {
        $dateOfIncorporation = cnvrtDMYToYMD($dateOfIncorporation);
    }

    $tblNm = "mcf.mcf_customers_corp";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_customers_corp_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET
            local_id_no = '" . loc_db_escape_string($idNo) . "',
           cust_name = '" . loc_db_escape_string($custName) . "',cust_desc = '" . loc_db_escape_string($custDesc) . "',
           classification = '" . loc_db_escape_string($clsfctn) . "',
           date_of_estblshmnt = '" . $dateOfEstblshmnt . "', firm_brand_name = '" . loc_db_escape_string($firmBrandName) . "',
           type_of_organisation = '" . loc_db_escape_string($typeOfOrganisation) . "',
           company_reg_num  ='" . loc_db_escape_string($companyRegNum) . "', date_of_incorporation ='" . loc_db_escape_string($dateOfIncorporation) . "',
           type_of_incorporation = '" . loc_db_escape_string($typeOfIncorporation) . "',
           vat_number = '" . loc_db_escape_string($vatNumber) . "', tin_number = '" . loc_db_escape_string($tinNumber) . "',
           ssnit_reg_number = '" . loc_db_escape_string($ssnitRegNumber) . "', no_of_emplyees = $noOfEmplyees,
           contact_nos = '" . loc_db_escape_string($contactNos) . "',
           email ='" . loc_db_escape_string($email) . "', pstl_address = '" . loc_db_escape_string($pstlAddress) . "',
           last_update_by = $usrID, last_update_date = '" . $dateStr . "', nature_of_business = '" . loc_db_escape_string($natureOfBusiness) . "',
           res_address = '" . loc_db_escape_string($resAddress) . "', contact_no_fax = '" . loc_db_escape_string($contactNoFax) . "',
           meeting_days = '" . loc_db_escape_string($meetingDays) . "' WHERE corp_profile_id = $profileID AND rvsn_ttl = $rvsnTtl";

    //echo $insSQL." rvsnttl".$rvsnTtl;

    return execUpdtInsSQL($insSQL);
}

function get_CorpCustID($custID) {
    $profileID = getGnrlRecNm("mcf.mcf_customers_corp", "cust_id", "corp_profile_id", $custID);

    return $profileID;
}

function deleteCorpCust($custID, $entityType) {
    if ($entityType == "Corporate") {
        $delSQL1 = "DELETE FROM mcf.mcf_corporate_directors WHERE cust_id = $custID";
        execUpdtInsSQL($delSQL1);
    } else {
        $delSQL1 = "DELETE FROM mcf.mcf_group_members WHERE grp_cust_id = $custID";
        execUpdtInsSQL($delSQL1);
    }
    $insSQL1 = "DELETE FROM mcf.mcf_customers_corp WHERE cust_id = $custID";
    return execUpdtInsSQL($insSQL1);
}

//TABLE mcf.mcf_group_members
function createGrpMember($grpCustId, $custID, $position, $startDateActive, $endDateActive, $dateStr, $rvsnTtl) {
    global $usrID;
    //global $dateStr;
    global $orgID;
    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_group_members_hstrc(grp_member_id,
                grp_cust_id, cust_id, position, start_date_active, end_date_active, created_by,
                creation_date, last_update_by, last_update_date, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_group_members_grp_member_id_seq')), $grpCustId, $custID, '" . loc_db_escape_string($position) .
                "','" . $startDateActive . "','" . $endDateActive . "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl,'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_group_members(grp_member_id,
                grp_cust_id, cust_id, position, start_date_active, end_date_active, created_by,
                creation_date, last_update_by, last_update_date, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_group_members_grp_member_id_seq')), $grpCustId, $custID, '" . loc_db_escape_string($position) .
                "','" . $startDateActive . "','" . $endDateActive . "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl)";
    }

    return execUpdtInsSQL($insSQL);
}

function updateGrpMember($grpMemberId, $grpCustId, $custID, $position, $startDateActive, $endDateActive, $dateStr, $rvsnTtl) {
    global $usrID;
    //global $dateStr;
    global $orgID;
    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    $tblNm = "mcf.mcf_group_members";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_group_members_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET
            grp_cust_id = $grpCustId, cust_id = $custID, position = '" . loc_db_escape_string($position) . "',
                start_date_active = '" . $startDateActive . "', end_date_active ='" . $endDateActive . "',
            last_update_by = " . $usrID . ", last_update_date = '" . $dateStr . "' WHERE grp_member_id = $grpMemberId AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function deleteGrpMember($grpMemberId, $custID, $rvsnTtl, $isApproved) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_group_members";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_group_members_hstrc";
    }
    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET grp_member_id = -1*grp_member_id WHERE grp_member_id = $grpMemberId AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE grp_member_id = $grpMemberId AND rvsn_ttl = $rvsnTtl";
    }
    return execUpdtInsSQL($insSQL1);
}

function getGrpMemberID($dateStr, $usrID, $memberID, $custID, $rvsnTtl) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_group_members";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_group_members_hstrc";
    }

    $sqlStr = "SELECT grp_member_id FROM $tblNm WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND cust_id = " . $memberID . " AND grp_cust_id = $custID AND rvsn_ttl =$rvsnTtl";

    //var_dump($sqlStr);
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

//TABLE mcf.mcf_corporate_directors
function createCorpDrctr($prsnCustID, $custID, $srcType, $startDateActive, $endDateActive, $dateStr, $rvsnTtl) {
    global $usrID;
    //global $dateStr;
    global $orgID;
    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    $insSQL = "";
    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_corporate_directors_hstrc(director_id,
                cust_id, person_cust_id, start_date_active, end_date_active, source_type,
                created_by, creation_date, last_update_by, last_update_date, rvsn_ttl, is_approved)
       VALUES ((SELECT nextval('mcf.mcf_corporate_directors_director_id_seq')),$custID, $prsnCustID, '" . $startDateActive . "','" . $endDateActive . "','" . loc_db_escape_string($srcType) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl,'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_corporate_directors(director_id,
                cust_id, person_cust_id, start_date_active, end_date_active, source_type,
                created_by, creation_date, last_update_by, last_update_date, rvsn_ttl)
       VALUES ((SELECT nextval('mcf.mcf_corporate_directors_director_id_seq')),$custID, $prsnCustID, '" . $startDateActive . "','" . $endDateActive . "','" . loc_db_escape_string($srcType) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl)";
    }

    return execUpdtInsSQL($insSQL);
}

function updateCorpDrctr($corpDirectorID, $prsnCustID, $custID, $srcType, $startDateActive, $endDateActive, $dateStr, $rvsnTtl) {
    global $usrID;
    //global $dateStr;
    global $orgID;
    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    $tblNm = "mcf.mcf_corporate_directors";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_corporate_directors_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET
            cust_id =$custID, person_cust_id =$prsnCustID, start_date_active ='" . $startDateActive . "',
                end_date_active = '" . $endDateActive . "', source_type = '" . loc_db_escape_string($srcType) . "',
            last_update_by =$usrID, last_update_date ='" . $dateStr . "' WHERE director_id = $corpDirectorID AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function deleteCorpDrctr($directorID, $custID, $rvsnTtl, $isApproved) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_corporate_directors";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_corporate_directors_hstrc";
    }
    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET director_id = -1*director_id WHERE director_id = $directorID AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE director_id = $directorID AND rvsn_ttl = $rvsnTtl";
    }
    return execUpdtInsSQL($insSQL1);
}

function getCorpDirectorID($dateStr, $usrID, $prsnCustID, $custID, $rvsnTtl) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_corporate_directors";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_corporate_directors_hstrc";
    }

    $sqlStr = "SELECT director_id FROM $tblNm WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND person_cust_id = " . $prsnCustID . " AND cust_id = $custID AND rvsn_ttl =$rvsnTtl";

    //var_dump($sqlStr." ".$cnt);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

/* * END customer group FXNS* */


/* * START Credit Risk Assessment FXNS* */

//TABLE mcf.mcf_credit_scoring_set_hdr
function createCreditScornsetHdr($setName, $setDesc, $isEnabled, $passScore, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_credit_scoring_set_hdr(
            set_name, set_desc, is_enabled, pass_score,
            org_id, status, created_by,
            creation_date, last_update_by, last_update_date )
    VALUES ('" . loc_db_escape_string($setName) . "','" . loc_db_escape_string($setDesc) .
            "','" . $isEnabled . "',$passScore,$orgID,'Invalid'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditScornsetHdr($scoringSetHdrId, $setName, $setDesc, $isEnabled, $passScore, $dateStr) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_credit_scoring_set_hdr SET
            set_name = '" . loc_db_escape_string($setName) . "', set_desc ='" . loc_db_escape_string($setDesc) . "',
                is_enabled = '" . $isEnabled . "', pass_score =" . $passScore . ",
            org_id=$orgID, last_update_by=$usrID, last_update_date = '" . $dateStr . "'
             WHERE scoring_set_hdr_id = $scoringSetHdrId";

    return execUpdtInsSQL($insSQL);
}

function deleteCreditScornsetHdr($scoringSetHdrId) {
    //CASCADE DELETION
    $insSQL1 = "DELETE FROM mcf.mcf_credit_scoring_set_hdr WHERE scoring_set_hdr_id = $scoringSetHdrId";
    $insSQL2 = "DELETE FROM mcf.mcf_credit_scoring_set_det WHERE scoring_set_hdr_id = $scoringSetHdrId";
    execUpdtInsSQL($insSQL2);
    return execUpdtInsSQL($insSQL1);
}

function getCreditScornsetHdrID($dateStr, $usrID, $setName) {

    $sqlStr = "SELECT scoring_set_hdr_id FROM mcf.mcf_credit_scoring_set_hdr WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND set_name = '" . loc_db_escape_string($setName) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCreditScornsetHdrDets($scoringSetHdrId) {
    $strSql = "SELECT scoring_set_hdr_id, set_name, set_desc, pass_score, is_enabled, org_id, status
    FROM mcf.mcf_credit_scoring_set_hdr a  WHERE scoring_set_hdr_id = $scoringSetHdrId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCreditScornsetHdrTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Set Name") {
        $whrcls = " AND (a.set_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (set_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $ordrBy = "a.last_update_date DESC";

    $strSql = "SELECT scoring_set_hdr_id, set_name, set_desc, is_enabled, pass_score, org_id, status
  FROM mcf.mcf_credit_scoring_set_hdr a  WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getCreditScornsetHdrTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Set Name") {
        $whrcls = " AND (a.set_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (set_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_credit_scoring_set_hdr a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

//TABLE mcf.mcf_credit_scoring_set_det
function createCreditScornsetDet($scoringSetHdrId, $riskProfileId, $sortOrder, $dateStr) {
    global $usrID;
    //global $dateStr;

    $insSQL = "INSERT INTO mcf.mcf_credit_scoring_set_det(
            scoring_set_hdr_id, risk_profile_id, sort_order,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ($scoringSetHdrId, $riskProfileId, $sortOrder, $usrID ,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditScornsetDet($scoringSetDetId, $riskProfileId, $sortOrder, $dateStr) {
    global $usrID;
    //global $dateStr;

    $insSQL = "UPDATE mcf.mcf_credit_scoring_set_det SET risk_profile_id = $riskProfileId, sort_order = $sortOrder,
            last_update_by=$usrID, last_update_date = '" . $dateStr . "'
            WHERE scoring_set_det_id = $scoringSetDetId";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function deleteCreditScornsetDet($scoringSetDetId) {
    //CASCADE DELETION
    $insSQL1 = "DELETE FROM mcf.mcf_credit_scoring_set_det WHERE scoring_set_det_id = $scoringSetDetId";
    return execUpdtInsSQL($insSQL1);
}

//TABLE mcf.mcf_credit_risk_profiles
function createCreditRiskProfiles($profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_credit_risk_profiles(
            profile_name, profile_desc, is_enabled, ttl_score, org_id, created_by,
            creation_date, last_update_by, last_update_date)
    VALUES ('" . loc_db_escape_string($profileName) . "','" . loc_db_escape_string($profileDesc) .
            "','" . $isEnabled . "'," . $ttlScore . "," . $orgID .
            "," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditRiskProfiles($riskProfileId, $profileName, $profileDesc, $isEnabled, $ttlScore, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_credit_risk_profiles SET
            profile_name ='" . loc_db_escape_string($profileName) . "', profile_desc ='" . loc_db_escape_string($profileDesc) . "',
                is_enabled ='" . $isEnabled . "', ttl_score =" . $ttlScore . ",  last_update_by =" . $usrID . ",
             last_update_date = '" . $dateStr . "' WHERE risk_profile_id = $riskProfileId";

    return execUpdtInsSQL($insSQL);
}

function deleteCreditRiskProfiles($riskProfileId) {
    //CASCADE DELETION
    $delSQL1 = "DELETE FROM mcf.mcf_credit_risk_profiles WHERE risk_profile_id = $riskProfileId";
    $delSQL2 = "DELETE FROM mcf.mcf_credit_risk_profile_factors WHERE risk_profile_id = $riskProfileId";
    $delSQL3 = "DELETE FROM mcf.mcf_credit_risk_profile_factor_options WHERE profile_factor_id = "
            . "(SELECT distinct risk_profile_id FROM mcf.mcf_credit_risk_profile_factors WHERE risk_profile_id = $riskProfileId)";
    execUpdtInsSQL($delSQL3);
    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL1);
}

function getCreditRiskProfileID($dateStr, $usrID, $profileName) {

    $sqlStr = "SELECT risk_profile_id FROM mcf.mcf_credit_risk_profiles WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND profile_name = '" . loc_db_escape_string($profileName) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCreditRiskProfilesDets($riskProfileId) {
    $strSql = "SELECT risk_profile_id, profile_name, profile_desc, ttl_score, is_enabled,  org_id, validity, created_by,
       creation_date, last_update_by, last_update_date
  FROM mcf.mcf_credit_risk_profiles a  WHERE risk_profile_id = $riskProfileId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCreditRiskProfilesTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Risk Profile") {
        $whrcls = " AND (a.profile_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (profile_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $ordrBy = "a.last_update_date DESC";

    $strSql = "SELECT risk_profile_id, profile_name, profile_desc, is_enabled, ttl_score, org_id, validity
  FROM mcf.mcf_credit_risk_profiles a  WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getCreditRiskProfilesTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Risk Profile") {
        $whrcls = " AND (a.profile_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (profile_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_credit_risk_profiles a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

//TABLE mcf.mcf_credit_risk_factors
function createCreditRiskFactors($riskFactorCode, $riskFactorDesc, $isEnabled, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_credit_risk_factors(
            risk_factor_code, risk_factor_desc, is_enabled, org_id,
            created_by, creation_date, last_update_by, last_update_date)
            VALUES ('" . loc_db_escape_string($riskFactorCode) . "','" . loc_db_escape_string($riskFactorDesc) .
            "','" . $isEnabled . "'," . $orgID .
            "," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditRiskFactors($riskFactorId, $riskFactorCode, $riskFactorDesc, $isEnabled, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_credit_risk_factors SET
            risk_factor_code = '" . loc_db_escape_string($riskFactorCode) . "', risk_factor_desc = '" . loc_db_escape_string($riskFactorDesc) . "',
                is_enabled = '" . $isEnabled . "', org_id = $orgID,
            last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "' WHERE risk_factor_id = $riskFactorId";

    return execUpdtInsSQL($insSQL);
}

function deleteCreditRiskFactors($riskFactorId) {
    $delSQL1 = "DELETE FROM mcf.mcf_credit_risk_factors WHERE risk_factor_id = $riskFactorId";
    return execUpdtInsSQL($delSQL1);
}

function getCreditRiskFactorID($dateStr, $usrID, $riskFactorCode) {
    $sqlStr = "SELECT risk_factor_id FROM mcf.mcf_credit_risk_factors WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND risk_factor_code = '" . loc_db_escape_string($riskFactorCode) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCreditRiskFactorDets($riskFactorId) {
    $strSql = "SELECT risk_factor_id, risk_factor_code, risk_factor_desc, created_by,
       creation_date, last_update_by, last_update_date, org_id, is_enabled
  FROM mcf.mcf_credit_risk_factors a  WHERE risk_factor_id = $riskFactorId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCreditRiskFactorTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Risk Factor") {
        $whrcls = " AND (a.risk_factor_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (risk_factor_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    if ($sortBy == "Risk Factor ASC") {
        $ordrBy = "a.risk_factor_code ASC";
    } else if ($sortBy == "Risk Factor DESC") {
        $ordrBy = "a.risk_factor_code DESC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT risk_factor_id, risk_factor_code, risk_factor_desc, is_enabled, org_id
  FROM mcf.mcf_credit_risk_factors a  WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getCreditRiskFactorTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Risk Factor") {
        $whrcls = " AND (a.risk_factor_code ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (risk_factor_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_credit_risk_factors a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

//TABLE mcf.mcf_credit_risk_profile_factors
function createCreditRiskProfileFactors($riskProfileId, $riskFactorId, $sortOrder, $score, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_credit_risk_profile_factors(
            risk_profile_id, risk_factor_id, sort_order, score,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ($riskProfileId, $riskFactorId, $sortOrder, $score,
            $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditRiskProfileFactors($profileFactorId, $riskProfileId, $riskFactorId, $sortOrder, $score, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_credit_risk_profile_factors SET
            risk_profile_id =$riskProfileId, risk_factor_id =$riskFactorId, sort_order =$sortOrder, score =$score,
           last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "' WHERE profile_factor_id = $profileFactorId";

    return execUpdtInsSQL($insSQL);
}

function deleteCreditRiskProfileFactors($profileFactorId) {
    $delSQL1 = "DELETE FROM mcf.mcf_credit_risk_profile_factors WHERE profile_factor_id = $profileFactorId";
    $delSQL2 = "DELETE FROM mcf.mcf_credit_risk_profile_factor_options WHERE profile_factor_id = $profileFactorId";
    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL1);
}

//TABLE mcf.mcf_credit_risk_profile_factor_options
function createCreditRiskProfileFactorOptions($profileFactorId, $optionDesc, $score, $sortOrder, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_credit_risk_profile_factor_options(
            profile_factor_id, option_desc, score, sort_order,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ($profileFactorId,'" . loc_db_escape_string($optionDesc) . "', $score, $sortOrder,
            $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCreditRiskProfileFactorOptions($profactorOptionId, $profileFactorId, $optionDesc, $score, $sortOrder, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_credit_risk_profile_factor_options SET
            profile_factor_id =$profileFactorId, option_desc ='" . loc_db_escape_string($optionDesc) . "', score =$score, sort_order =$sortOrder,
            last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "' WHERE profactor_option_id = $profactorOptionId";

    return execUpdtInsSQL($insSQL);
}

function deleteCreditRiskProfileFactorOptions($profactorOptionId) {
    $delSQL1 = "DELETE FROM mcf.mcf_credit_risk_profile_factor_options WHERE profactor_option_id = $profactorOptionId";
    return execUpdtInsSQL($delSQL1);
}

/* * END Credit Risk Assessment FXNS* */

/* * START Loan Product FXNS* */

//TABLE mcf.mcf_prdt_loans
function createLoanPrdt($productName, $productDesc, $loanMaxAmount, $loanMinAmount, $loanRepaymentType, $gracePeriodNo, $gracePeriodType, $maxLoanTenor, $maxLoanTenorType, $guarantorRequired, $guarantorNo, $sectorClsfctnMajorId, $sectorClsfctnMinorId, $orgID, $productCode, $productType, $postingFrequency, $chargeInterest, $interestRate, $custTypeCustgrp, $custTypeCorp, $custTypeInd, $startDateActive, $endDateActive, $compoundingPeriod, $principalRcvblAcctId, $interestRcvblAcctId, $deferredInterestAcctId, $loansPayableAcctId, $isAccountRqrd, $cashCollateralRqrd, $valueFlatMinCashCollateral, $valueFlatPrcntCashCollateral, $prptyCollateralRqrd, $valueFlatMinPrptyCollateral, $valueFlatPrcntPrptyCollateral, $invstmntCollateralRqrd, $valueFlatMinInvstmntCollateral, $valueFlatPrcntInvstmntCollateral, $minLoanTenor, $minLoanTenorType, $rcvryOfficerRqrd, $currencyId, $interestRateType, $interestRevenueAcctId, $ttl_allwdPrincipalRcvblAmntFlat, $scoringSetHdrId, $status, $badDebtExpnsAccID, $prvsnExpnsAccID, $prvsnContraAccID,
        $grpType = "Everyone", $groupID = "-1", $isStaffLoanProduct="No") {
    global $usrID;
    global $dateStr;
    global $orgID;

    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    $insSQL = "INSERT INTO mcf.mcf_prdt_loans(
            product_name, product_desc,
            loan_max_amount, loan_min_amount, loan_repayment_type, grace_period_no,
            grace_period_type, max_loan_tenor, max_loan_tenor_type, guarantor_required,
            guarantor_no, sector_clsfctn_major_id, sector_clsfctn_minor_id,
            org_id, created_by, creation_date, last_update_by, last_update_date,
            product_code, product_type, posting_frequency, charge_interest,
            interest_rate, cust_type_custgrp, cust_type_corp, cust_type_ind,
            start_date_active, end_date_active, compounding_period, principal_rcvbl_acct_id,
            interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id,
            is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral,
            value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral,
            value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd,
            value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
            min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id,
            interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat,
            scoring_set_hdr_id, status, bad_debt_acct_id, loan_provision_dbt_acct_id, loan_provision_crdt_acct_id,
            allwd_group_type, allwd_group_value, is_staff_loan_product)
    VALUES ('" . loc_db_escape_string($productName) . "','" . loc_db_escape_string($productDesc) .
            "'," . $loanMaxAmount . "," . $loanMinAmount .
            ",'" . loc_db_escape_string($loanRepaymentType) . "'," . $gracePeriodNo .
            ",'" . loc_db_escape_string($gracePeriodType) . "'," . $maxLoanTenor .
            ",'" . loc_db_escape_string($maxLoanTenorType) . "','" . loc_db_escape_string($guarantorRequired) .
            "'," . $guarantorNo . "," . $sectorClsfctnMajorId .
            "," . $sectorClsfctnMinorId . "," . $orgID . "," . $usrID . ",'" . $dateStr . "'," . $usrID .
            ",'" . $dateStr . "','" . loc_db_escape_string($productCode) .
            "','" . loc_db_escape_string($productType) . "','" . loc_db_escape_string($postingFrequency) .
            "','" . loc_db_escape_string($chargeInterest) . "'," . $interestRate .
            ",'" . loc_db_escape_string($custTypeCustgrp) . "','" . loc_db_escape_string($custTypeCorp) .
            "','" . loc_db_escape_string($custTypeInd) . "','" . loc_db_escape_string($startDateActive) .
            "','" . loc_db_escape_string($endDateActive) . "','" . loc_db_escape_string($compoundingPeriod) .
            "'," . $principalRcvblAcctId . "," . $interestRcvblAcctId .
            "," . $deferredInterestAcctId . "," . $loansPayableAcctId .
            ",'" . loc_db_escape_string($isAccountRqrd) . "','" . loc_db_escape_string($cashCollateralRqrd) .
            "'," . $valueFlatMinCashCollateral . "," . $valueFlatPrcntCashCollateral .
            ",'" . loc_db_escape_string($prptyCollateralRqrd) . "'," . $valueFlatMinPrptyCollateral .
            "," . $valueFlatPrcntPrptyCollateral . ",'" . loc_db_escape_string($invstmntCollateralRqrd) .
            "'," . $valueFlatMinInvstmntCollateral . "," . $valueFlatPrcntInvstmntCollateral .
            "," . $minLoanTenor . ",'" . loc_db_escape_string($minLoanTenorType) .
            "','" . loc_db_escape_string($rcvryOfficerRqrd) . "'," . $currencyId .
            ",'" . loc_db_escape_string($interestRateType) . "'," . $interestRevenueAcctId .
            "," . $ttl_allwdPrincipalRcvblAmntFlat . "," . $scoringSetHdrId . ",'" . $status .
            "'," . $badDebtExpnsAccID . "," . $prvsnExpnsAccID . "," . $prvsnContraAccID .
            ", '" . loc_db_escape_string($grpType) . "', '" . loc_db_escape_string($groupID) ."','$isStaffLoanProduct')";

    return execUpdtInsSQL($insSQL);
}

function updateLoanPrdt($loanProductId, $productName, $productDesc, $loanMaxAmount, $loanMinAmount, $loanRepaymentType, $gracePeriodNo, $gracePeriodType, $maxLoanTenor, $maxLoanTenorType, $guarantorRequired, $guarantorNo, $sectorClsfctnMajorId, $sectorClsfctnMinorId, $orgID, $productCode, $productType, $postingFrequency, $chargeInterest, $interestRate, $custTypeCustgrp, $custTypeCorp, $custTypeInd, $startDateActive, $endDateActive, $compoundingPeriod, $principalRcvblAcctId, $interestRcvblAcctId, $deferredInterestAcctId, $loansPayableAcctId, $isAccountRqrd, $cashCollateralRqrd, $valueFlatMinCashCollateral, $valueFlatPrcntCashCollateral, $prptyCollateralRqrd, $valueFlatMinPrptyCollateral, $valueFlatPrcntPrptyCollateral, $invstmntCollateralRqrd, $valueFlatMinInvstmntCollateral, $valueFlatPrcntInvstmntCollateral, $minLoanTenor, $minLoanTenorType, $rcvryOfficerRqrd, $currencyId, $interestRateType, $interestRevenueAcctId, $ttl_allwdPrincipalRcvblAmntFlat, $scoringSetHdrId, $rvsnTtl, $badDebtExpnsAccID, $prvsnExpnsAccID, $prvsnContraAccID,
        $grpType = "Everyone", $groupID = "-1", $isStaffLoanProduct="No") {
    global $usrID;
    global $dateStr;
    global $orgID;
    $startDateActive = cnvrtDMYToYMD($startDateActive);
    if ($endDateActive == "") {
        $endDateActive = "4000-12-31";
    } else {
        $endDateActive = cnvrtDMYToYMD($endDateActive);
    }

    $tblNm = "mcf.mcf_prdt_loans";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_loans_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET
        product_name='" . loc_db_escape_string($productName) . "',product_desc='" . loc_db_escape_string($productDesc) .
            "',loan_max_amount=" . $loanMaxAmount . ",loan_min_amount=" . $loanMinAmount .
            ",loan_repayment_type='" . loc_db_escape_string($loanRepaymentType) . "',grace_period_no=" . $gracePeriodNo .
            ",grace_period_type='" . loc_db_escape_string($gracePeriodType) . "',max_loan_tenor=" . $maxLoanTenor .
            ",max_loan_tenor_type='" . loc_db_escape_string($maxLoanTenorType) . "',guarantor_required='" . loc_db_escape_string($guarantorRequired) .
            "',guarantor_no=" . $guarantorNo . ",sector_clsfctn_major_id=" . $sectorClsfctnMajorId .
            ",sector_clsfctn_minor_id=" . $sectorClsfctnMinorId .
            ",org_id=" . $orgID . ",created_by=" . $usrID .
            ",creation_date='" . $dateStr . "',last_update_by=" . $usrID .
            ",last_update_date='" . $dateStr . "',product_code='" . loc_db_escape_string($productCode) .
            "',product_type='" . loc_db_escape_string($productType) . "',posting_frequency='" . loc_db_escape_string($postingFrequency) .
            "',charge_interest='" . loc_db_escape_string($chargeInterest) . "',interest_rate=" . $interestRate .
            ",cust_type_custgrp='" . loc_db_escape_string($custTypeCustgrp) . "',cust_type_corp='" . loc_db_escape_string($custTypeCorp) .
            "',cust_type_ind='" . loc_db_escape_string($custTypeInd) . "',start_date_active='" . loc_db_escape_string($startDateActive) .
            "',end_date_active='" . loc_db_escape_string($endDateActive) . "',compounding_period='" . loc_db_escape_string($compoundingPeriod) .
            "',principal_rcvbl_acct_id=" . $principalRcvblAcctId . ",interest_rcvbl_acct_id=" . $interestRcvblAcctId .
            ",deferred_interest_acct_id=" . $deferredInterestAcctId . ",loans_payable_acct_id=" . $loansPayableAcctId .
            ",is_account_rqrd='" . loc_db_escape_string($isAccountRqrd) . "',cash_collateral_rqrd='" . loc_db_escape_string($cashCollateralRqrd) .
            "',value_flat_min_cash_collateral=" . $valueFlatMinCashCollateral . ",value_flat_prcnt_cash_collateral=" . $valueFlatPrcntCashCollateral .
            ",prpty_collateral_rqrd='" . loc_db_escape_string($prptyCollateralRqrd) . "',value_flat_min_prpty_collateral=" . $valueFlatMinPrptyCollateral .
            ",value_flat_prcnt_prpty_collateral=" . $valueFlatPrcntPrptyCollateral . ",invstmnt_collateral_rqrd='" . loc_db_escape_string($invstmntCollateralRqrd) .
            "',value_flat_min_invstmnt_collateral=" . $valueFlatMinInvstmntCollateral . ",value_flat_prcnt_invstmnt_collateral=" . $valueFlatPrcntInvstmntCollateral .
            ",min_loan_tenor=" . $minLoanTenor . ",min_loan_tenor_type='" . loc_db_escape_string($minLoanTenorType) .
            "',rcvry_officer_rqrd='" . loc_db_escape_string($rcvryOfficerRqrd) . "',currency_id=" . $currencyId .
            ",interest_rate_type='" . loc_db_escape_string($interestRateType) . "',interest_revenue_acct_id=" . $interestRevenueAcctId .
            ",ttl_allwd_principal_rcvbl_amnt_flat=" . $ttl_allwdPrincipalRcvblAmntFlat . ",scoring_set_hdr_id=" . $scoringSetHdrId .
            ", bad_debt_acct_id=" . $badDebtExpnsAccID . ", loan_provision_dbt_acct_id=" . $prvsnExpnsAccID . ", loan_provision_crdt_acct_id=" . $prvsnContraAccID .
            ", allwd_group_type ='". loc_db_escape_string($grpType) . "', allwd_group_value = '" . loc_db_escape_string($groupID) .
            "', is_staff_loan_product = '$isStaffLoanProduct' WHERE loan_product_id = $loanProductId AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function deleteLoanPrdt($loanProductId) {
    $delSQL1 = "DELETE FROM mcf.mcf_prdt_loans WHERE loan_product_id = $loanProductId";
    $delSQL11 = "DELETE FROM mcf.mcf_prdt_loans_hstrc WHERE loan_product_id = $loanProductId";
    $delSQL2 = "DELETE FROM mcf.mcf_loanprdt_collaterals WHERE loan_product_id = $loanProductId";
    $delSQL22 = "DELETE FROM mcf.mcf_loanprdt_collaterals_hstrc WHERE loan_product_id = $loanProductId";
    $delSQL3 = "DELETE FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loan_product_id = $loanProductId";
    $delSQL33 = "DELETE FROM mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc WHERE loan_product_id = $loanProductId";
    $delSQL4 = "DELETE FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loan_product_id = $loanProductId";
    $delSQL44 = "DELETE FROM mcf.mcf_loanprdt_latefees_n_accts_hstrc WHERE loan_product_id = $loanProductId";
    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL22);
    execUpdtInsSQL($delSQL3);
    execUpdtInsSQL($delSQL33);
    execUpdtInsSQL($delSQL4);
    execUpdtInsSQL($delSQL44);
    execUpdtInsSQL($delSQL11);

    return execUpdtInsSQL($delSQL1);
}

function get_LoanPrdtID($dateStr, $usrID, $productName) {

    $sqlStr = "SELECT loan_product_id FROM mcf.mcf_prdt_loans WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND product_name = '" . loc_db_escape_string($productName) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function get_LoanPrdtTblTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (product_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Repayment Type") {
        $whrcls = " AND (loan_repayment_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Compounding Frequency") {
        $whrcls = " AND (compounding_period ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Interest Rate Type") {
        $whrcls = " AND (interest_rate_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Code") {
        $whrcls = " AND (product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_loans a WHERE a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_LoanPrdtTbl($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (product_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Repayment Type") {
        $whrcls = " AND (loan_repayment_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Type") {
        $whrcls = " AND (product_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Compounding Frequency") {
        $whrcls = " AND (compounding_period ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Interest Rate Type") {
        $whrcls = " AND (interest_rate_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Product Code") {
        $whrcls = " AND (product_code ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Product Name ASC") {
        $ordrBy = "a.product_name ASC";
    } else if ($sortBy == "Product Name DESC") {
        $ordrBy = "a.product_name DESC";
    } else if ($sortBy == "Product Type") {
        $ordrBy = "a.product_type ASC";
    } else if ($sortBy == "Compounding Frequency DESC") {
        $ordrBy = "a.compounding_period DESC";
    } else if ($sortBy == "Compounding Frequency ASC") {
        $ordrBy = "a.compounding_period ASC";
    } else if ($sortBy == "Interest Rate Type") {
        $ordrBy = "a.interest_rate_type ASC";
    } else if ($sortBy == "Product Code ASC") {
        $ordrBy = "a.product_code ASC";
    } else if ($sortBy == "Product Code DESC") {
        $ordrBy = "a.product_code DESC";
    } else if ($sortBy == "Date Changed") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT loan_product_id, product_name, product_desc,  /**2**/
       loan_max_amount, loan_min_amount, loan_repayment_type, grace_period_no, /**6**/
       grace_period_type, max_loan_tenor, max_loan_tenor_type, guarantor_required, /**10**/
       guarantor_no, sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, /**14**/
       product_code, product_type, posting_frequency, charge_interest, /**18**/
       interest_rate, cust_type_custgrp, cust_type_corp, cust_type_ind, /**22**/
       start_date_active, end_date_active, compounding_period, principal_rcvbl_acct_id, /**26**/
       interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id, /**29**/
       is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral, /**32**/
       value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral, /**35**/
       value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd, /**37**/
       value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral, /**39**/
       min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id, /**43**/
       interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat, scoring_set_hdr_id, /**47**/
       status
  FROM mcf.mcf_prdt_loans a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_LoanPrdtDetsNew($loanProductId) {
    $strSql = "SELECT loan_product_id, product_name, product_desc,  /**2**/
       loan_max_amount, loan_min_amount, loan_repayment_type, grace_period_no, /**6**/
       grace_period_type, max_loan_tenor, max_loan_tenor_type, guarantor_required, /**10**/
       guarantor_no, sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, /**14**/
       product_code, product_type, posting_frequency, charge_interest, /**18**/
       interest_rate, cust_type_custgrp, cust_type_corp, cust_type_ind, /**22**/
       start_date_active, end_date_active, compounding_period, principal_rcvbl_acct_id, /**26**/
       interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id, /**29**/
       is_account_rqrd, cash_collateral_rqrd, value_flat_min_cash_collateral, /**32**/
       value_flat_prcnt_cash_collateral, prpty_collateral_rqrd, value_flat_min_prpty_collateral, /**35**/
       value_flat_prcnt_prpty_collateral, invstmnt_collateral_rqrd, /**37**/
       value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral, /**39**/
       min_loan_tenor, min_loan_tenor_type, rcvry_officer_rqrd, currency_id, /**43**/
       interest_rate_type, interest_revenue_acct_id, ttl_allwd_principal_rcvbl_amnt_flat, scoring_set_hdr_id, /**47**/
       status
  FROM mcf.mcf_prdt_loans a  WHERE loan_product_id = $loanProductId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function loanPrdtNameExists($productName, $prdtType, $loanProductId, $rvsnTtl) {
    $sqlStr = "";

    $tblNm = "mcf.mcf_prdt_loans";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_loans_hstrc";
    }

    if ($loanProductId > 0) {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_loans WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($prdtType) . "' "
                . "AND loan_product_id != $loanProductId";
    } else {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_loans WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($productName) . "'";
    }


    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    if ($loanProductId > 0) {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_loans_hstrc WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($prdtType) . "' "
                . "AND loan_product_id != $loanProductId";
    } else {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_loans_hstrc WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($productName) . "'";
    }


    $result1 = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result1)) {
        return true;
    }

    return false;
}

function loanPrdtCodeExists($productCode, $loanProductId, $rvsnTtl) {
    $sqlStr = "";

    $tblNm = "mcf.mcf_prdt_loans";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_loans_hstrc";
    }

    if ($loanProductId > 0) {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_loans WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "') "
                . "AND loan_product_id != $loanProductId";
    } else {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_loans WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "')";
    }

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    if ($loanProductId > 0) {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_loans_hstrc WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "') "
                . "AND loan_product_id != $loanProductId";
    } else {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_loans_hstrc WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "')";
    }

    $result1 = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result1)) {
        return true;
    }

    return false;
}

//TABLE mcf.mcf_loanprdt_prcssnfees_n_accts
function createLoanPrdt_PrcnFeeNAccts($loanProductId, $feeName, $feeType, $feeFlat, $feePercent, $remarks, $crdtAccntId, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $insSQL = "";
    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc(loanprdt_prcssn_fee_id,
                loan_product_id, fee_name, fee_type,
                fee_flat, fee_percent, remarks, crdt_accnt_id, created_by, creation_date, last_update_by,
                last_update_date, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_prdt_loan_fees_loan_fee_id_seq')),$loanProductId,'" . loc_db_escape_string($feeName) . "','" . loc_db_escape_string($feeType) . "', $feeFlat,
            $feePercent,'" . loc_db_escape_string($remarks) . "', $crdtAccntId, $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl,'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_loanprdt_prcssnfees_n_accts(loanprdt_prcssn_fee_id,
                loan_product_id, fee_name, fee_type,
                fee_flat, fee_percent, remarks, crdt_accnt_id, created_by, creation_date, last_update_by,
                last_update_date, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_prdt_loan_fees_loan_fee_id_seq')),$loanProductId,'" . loc_db_escape_string($feeName) . "','" . loc_db_escape_string($feeType) . "', $feeFlat,
            $feePercent,'" . loc_db_escape_string($remarks) . "', $crdtAccntId, $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',$rvsnTtl)";
    }
    return execUpdtInsSQL($insSQL);
}

function updateLoanPrdt_PrcnFeeNAccts($loanprdtPrcssnFeeId, $loanProductId, $feeName, $feeType, $feeFlat, $feePercent, $remarks, $crdtAccntId, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc";
    }


    $insSQL = "UPDATE $tblNm SET
            loan_product_id =$loanProductId, fee_name ='" . loc_db_escape_string($feeName) . "', fee_type ='" . loc_db_escape_string($feeType) . "',
            fee_flat =$feeFlat, fee_percent =$feePercent, remarks ='" . loc_db_escape_string($remarks) . "', crdt_accnt_id =$crdtAccntId,
            last_update_by =$usrID, last_update_date= '" . $dateStr . "' WHERE loanprdt_prcssn_fee_id = $loanprdtPrcssnFeeId AND rvsn_ttl = $rvsnTtl";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function deleteLoanPrdt_PrcnFeeNAccts($loanprdtPrcssnFeeId, $rvsnTtl, $isApproved) {
    $insSQL1 = "";

    $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET loanprdt_prcssn_fee_id = -1*loanprdt_prcssn_fee_id WHERE loanprdt_prcssn_fee_id = $loanprdtPrcssnFeeId AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE loanprdt_prcssn_fee_id = $loanprdtPrcssnFeeId AND rvsn_ttl = $rvsnTtl";
    }
    return execUpdtInsSQL($insSQL1);
}

//TABLE mcf.mcf_loanprdt_latefees_n_accts
function createLoanPrdt_LateFeeNAccts($loanProductId, $feeName, $target, $feeFlat, $feePercent, $dbtAccntId, $crdtAccntId, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $insSQL = "";
    if ($rvsnTtl > 0) {
        $insSQL = "INSERT INTO mcf.mcf_loanprdt_latefees_n_accts_hstrc(loanprdt_late_fee_id,
                loan_product_id, fee_name, target, fee_flat, fee_percent, dbt_accnt_id, crdt_accnt_id, frequency, frequency_no,
                created_by, creation_date, last_update_by, last_update_date, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_loanprdt_late_fees_loanprdt_late_fee_id_seq')),$loanProductId,'" . loc_db_escape_string($feeName) . "','" . loc_db_escape_string($target) . "', $feeFlat,
            $feePercent, $dbtAccntId, $crdtAccntId, 'Repayment Date',0, $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "', $rvsnTtl, 'No')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_loanprdt_latefees_n_accts(loanprdt_late_fee_id,
                loan_product_id, fee_name, target, fee_flat, fee_percent, dbt_accnt_id, crdt_accnt_id, frequency, frequency_no,
                created_by, creation_date, last_update_by, last_update_date, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_loanprdt_late_fees_loanprdt_late_fee_id_seq')),$loanProductId,'" . loc_db_escape_string($feeName) . "','" . loc_db_escape_string($target) . "', $feeFlat,
            $feePercent, $dbtAccntId, $crdtAccntId, 'Repayment Date',0, $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "', $rvsnTtl)";
    }
    return execUpdtInsSQL($insSQL);
}

function updateLoanPrdt_LateFeeNAccts($loanprdtLateFeeId, $loanProductId, $feeName, $target, $feeFlat, $feePercent, $dbtAccntId, $crdtAccntId, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
    }
    $insSQL = "UPDATE $tblNm SET
            loan_product_id=$loanProductId, fee_name='" . loc_db_escape_string($feeName) . "', target='" . loc_db_escape_string($target) . "',
                fee_flat=$feeFlat, fee_percent=$feePercent, dbt_accnt_id=$dbtAccntId, crdt_accnt_id=$crdtAccntId,
                last_update_by=$usrID, last_update_date= '" . $dateStr . "'
            WHERE loanprdt_late_fee_id = $loanprdtLateFeeId AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function deleteLoanPrdt_LateFeeNAccts($loanprdtLateFeeId, $rvsnTtl, $isApproved) {
    $insSQL1 = "";

    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET loanprdt_late_fee_id = -1*loanprdt_late_fee_id WHERE loanprdt_late_fee_id = $loanprdtLateFeeId AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE loanprdt_late_fee_id = $loanprdtLateFeeId AND rvsn_ttl = $rvsnTtl";
    }
    return execUpdtInsSQL($insSQL1);
}

/* * END Loan Product FXNS* */

/* * START Investment FXNS* */

//TABLE mcf.mcf_investments
function createInvestment($svngsProductId, $amount, $tenor, $tenorType, $shdRollover, $rolloverType, $ifoName, $ifoContact, $interestRate, $discountRate, $rateType, $payBackMethod, $runningInterestBal, $payBackAcctId, $status, $applicationDate, $branchID, $pymntMethod, $cashChqPymntAcctTrnsId, $pymntDbtAcctId, $cust_type, $cust_id, $invstmnt_officer_id, $invstmnt_type, $start_date, $end_date, $maturity_value, $payback_chq_no, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $applicationDate = cnvrtDMYToYMD($applicationDate);
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $start_date = cnvrtDMYToYMD($start_date);
    $end_date = cnvrtDMYToYMD($end_date);

    $invTypPrfx = "TB";
    if ($invstmnt_type == "Fixed Deposit") {
        $invTypPrfx = "FD";
    }

    $insSQL = "INSERT INTO mcf.mcf_investments(
            svngs_product_id, amount, tenor, tenor_type, shd_rollover,
            rollover_type, ifo_name, ifo_contact, interest_rate,
            discount_rate, rate_type, pay_back_method, running_interest_bal, payback_crdt_acct_id,
            status, trnsctn_no, application_date, branch_id, pymnt_method, cash_chq_pymnt_acct_trns_id, pymnt_dbt_acct_id,
            cust_type, cust_id, invstmnt_officer_id, invstmnt_type, start_date, end_date, maturity_value, payback_chq_no,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ($svngsProductId, $amount, $tenor, '" . loc_db_escape_string($tenorType) . "','" . loc_db_escape_string($shdRollover) .
            "','" . loc_db_escape_string($rolloverType) . "','" . loc_db_escape_string($ifoName) . "','" . loc_db_escape_string($ifoContact) .
            "', $interestRate, $discountRate, '" . loc_db_escape_string($rateType) . "','" . loc_db_escape_string($payBackMethod) . "',
            $runningInterestBal, $payBackAcctId, 'Incomplete','IV-" . $invTypPrfx . "-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() .
            "','$applicationDate', $branchID, '" . $pymntMethod . "', $cashChqPymntAcctTrnsId, $pymntDbtAcctId,
            '$cust_type', $cust_id, $invstmnt_officer_id, '$invstmnt_type', '$start_date', '$end_date', $maturity_value,'"
            . loc_db_escape_string($payback_chq_no) . "', $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateInvestment($invstmntId, $svngsProductId, $amount, $tenor, $tenorType, $shdRollover, $rolloverType, $ifoName, $ifoContact, $interestRate, $discountRate, $rateType, $payBackMethod, $runningInterestBal, $payBackAcctId, $applicationDate, $branchID, $pymntMethod, $cashChqPymntAcctTrnsId, $pymntDbtAcctId, $cust_type, $cust_id, $invstmnt_officer_id, $invstmnt_type, $start_date, $end_date, $maturity_value, $payback_chq_no, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $applicationDate = cnvrtDMYToYMD($applicationDate);
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $start_date = cnvrtDMYToYMD($start_date);
    $end_date = cnvrtDMYToYMD($end_date);

    $invTypPrfx = "TB";
    if ($invstmnt_type == "Fixed Deposit") {
        $invTypPrfx = "FD";
    }

    $insSQL = "UPDATE mcf.mcf_investments SET
            svngs_product_id=$svngsProductId, amount=$amount, tenor=$tenor, tenor_type='" . loc_db_escape_string($tenorType) . "',
                shd_rollover='" . loc_db_escape_string($shdRollover) . "',
            rollover_type='" . loc_db_escape_string($rolloverType) . "', ifo_name='" . loc_db_escape_string($ifoName) . "',
                ifo_contact='" . loc_db_escape_string($ifoContact) . "', interest_rate=$interestRate,
            discount_rate=$discountRate, rate_type='" . loc_db_escape_string($rateType) . "', pay_back_method='" . loc_db_escape_string($payBackMethod) . "',
            payback_crdt_acct_id=$payBackAcctId,
            trnsctn_no = 'IV-" . $invTypPrfx . "-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "',
            application_date='" . $applicationDate . "',
            branch_id=$branchID, pymnt_method='" . $pymntMethod . "', cash_chq_pymnt_acct_trns_id=$cashChqPymntAcctTrnsId, pymnt_dbt_acct_id=$pymntDbtAcctId,
            cust_type = '$cust_type', cust_id = $cust_id, invstmnt_officer_id=$invstmnt_officer_id,
                invstmnt_type='$invstmnt_type', start_date='$start_date', end_date='$end_date',
            maturity_value=$maturity_value, payback_chq_no='$payback_chq_no',
            last_update_by=$usrID, last_update_date='" . $dateStr . "' WHERE invstmnt_id = $invstmntId";

    return execUpdtInsSQL($insSQL);
}

function deleteInvestment($invstmntId) {
    $delSQL1 = "DELETE FROM mcf.mcf_investments WHERE invstmnt_id = $invstmntId";
    return execUpdtInsSQL($delSQL1);
}

function getInvestmentID($dateStr, $usrID, $svngsProductId) {
    $sqlStr = "SELECT invstmnt_id FROM mcf.mcf_investments WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND svngs_product_id = " . $svngsProductId;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getInvestmentTblTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Transaction No") {
        $whrcls = " AND (a.trnsctn_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer") {
        $whrcls = " AND (mcf.get_customer_name(a.cust_type, a.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_investments a, mcf.mcf_prdt_savings b WHERE a.svngs_product_id = b.svngs_product_id
       AND (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function getInvestmentTbl($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Transaction No") {
        $whrcls = " AND (a.trnsctn_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer") {
        $whrcls = " AND (mcf.get_customer_name(a.cust_type, a.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Transaction No ASC") {
        $ordrBy = "a.trnsctn_no ASC";
    } else if ($sortBy == "Status DESC") {
        $ordrBy = "a.status DESC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT invstmnt_id, trnsctn_no, mcf.get_customer_name(a.cust_type, a.cust_id) customer, b.product_name, b.currency_id, amount, /**5**/
       CASE WHEN rate_type = 'Interest' THEN a.interest_rate ELSE a.discount_rate END rate, a.status, rate_type, running_interest_bal, invstmnt_status  /**12**/
       FROM mcf.mcf_investments a, mcf.mcf_prdt_savings b WHERE a.svngs_product_id = b.svngs_product_id
       AND (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getInvestmentDet($invstmntId) {
    $strSql = "SELECT invstmnt_id, svngs_product_id, amount, tenor, tenor_type, shd_rollover, /**5**/
        rollover_type, cust_id, ifo_name, ifo_contact, CASE WHEN rate_type = 'Intererst' THEN interest_rate ELSE discount_rate END, /**10**/
        CASE WHEN rate_type = 'Discount' THEN discount_rate ELSE interest_rate END, rate_type, pay_back_method, running_interest_bal, /**14**/
        payback_crdt_acct_id, /**15**/
        status, trnsctn_no, to_char(to_timestamp(application_date,'YYYY-MM-DD'),'DD-Mon-YYYY') application_date, /**18**/
        branch_id, account_id, pymnt_method, cash_chq_pymnt_acct_trns_id, /**22**/
        pymnt_dbt_acct_id, cust_type, cash_payback_acct_trns_id, /**25**/
        CASE WHEN rdscnt_rqst_date = '' THEN '' ELSE to_char(to_timestamp(rdscnt_rqst_date,'YYYY-MM-DD'),'DD-Mon-YYYY') END rdscnt_rqst_date, /**26**/
        invstmnt_officer_id, invstmnt_type, to_char(to_timestamp(start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date, /**29**/
        to_char(to_timestamp(end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date, maturity_value, payback_chq_no, invstmnt_status /**33**/
       FROM mcf.mcf_investments WHERE invstmnt_id=$invstmntId";

    $result = executeSQLNoParams($strSql);
    //echo($strSql);
    return $result;
}

function onInvstmntMaturity($invstmntId) {
    //FOLLOW INSTRUCTIONS
}

/* * END Investment FXNS* */

/* * START Property & Invesement Collaterals FXNS* */

//TABLE mcf.mcf.mcf_property_collaterals
function createPrptyInvstmntColt($collateralName, $description, $type, $valuerSupId, $prptyValue, $parentPrptyCollateralId, $collateralCode, $ownerCustId, $status) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $insSQL = "INSERT INTO mcf.mcf_property_collaterals(
            collateral_name, description, type, valuer_sup_id,
            prpty_value, parent_prpty_collateral_id, collateral_code, owner_cust_id, org_id, status,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ('" . loc_db_escape_string($collateralName) . "','" . loc_db_escape_string($description) .
            "','" . loc_db_escape_string($type) . "',$valuerSupId, $prptyValue, $parentPrptyCollateralId,'" . loc_db_escape_string($collateralCode) .
            "',$ownerCustId, $orgID, '" . $status . "',  $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function updatePrptyInvstmntColt($prptyCollateralId, $collateralName, $description, $type, $valuerSupId, $prptyValue, $parentPrptyCollateralId, $collateralCode, $ownerCustId) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $insSQL = "UPDATE mcf.mcf_property_collaterals SET
            collateral_name='" . loc_db_escape_string($collateralName) . "', description=" . loc_db_escape_string($description) . "',
                type='" . loc_db_escape_string($type) . "', valuer_sup_id=$valuerSupId,
            prpty_value=$prptyValue, parent_prpty_collateral_id=$parentPrptyCollateralId, collateral_code='" . loc_db_escape_string($collateralCode) . "',
                owner_cust_id=$ownerCustId, org_id=$orgID, last_update_by=$usrID, last_update_date='" . $dateStr . "'
            WHERE prpty_collateral_id = $prptyCollateralId";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function deletePrptyInvstmntColt($prptyCollateralId) {
    $delSQL1 = "DELETE FROM mcf.mcf_property_collaterals WHERE prpty_collateral_id = $prptyCollateralId";
    return execUpdtInsSQL($delSQL1);
}

function getPrptyInvstmntColtID($dateStr, $usrID, $collateralName) {
    $sqlStr = "SELECT prpty_collateral_id FROM mcf.mcf_property_collaterals WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND collateral_name = '" . $collateralName . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getPrptyInvstmntColtTblTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Collateral Name") {
        $whrcls = " AND (a.collateral_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_property_collaterals a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function getPrptyInvstmntColtTbl($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Collateral Name") {
        $whrcls = " AND (a.collateral_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Collateral Name ASC") {
        $ordrBy = "a.collateral_name ASC";
    } else if ($sortBy == "Collateral Name DESC") {
        $ordrBy = "a.collateral_name DESC";
    } else if ($sortBy == "Status DESC") {
        $ordrBy = "a.status DESC";
    }

    $strSql = "SELECT prpty_collateral_id, collateral_name, description, type, valuer_sup_id,
       prpty_value, parent_prpty_collateral_id, collateral_code, owner_cust_id, status, org_id
  FROM mcf.mcf_property_collaterals a  WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getPRptyInvstmntDet($prptyCollateralId) {
    $strSql = "SELECT prpty_collateral_id, collateral_name, description, type, valuer_sup_id,
       prpty_value, parent_prpty_collateral_id, collateral_code, owner_cust_id,
       created_by, creation_date, last_update_by, last_update_date,
       status, org_id
  FROM mcf.mcf_property_collaterals WHERE prpty_collateral_id = $prptyCollateralId";
    $result = executeSQLNoParams($strSql);
    return $result;
}

/* * END Property & Invesement Collaterals FXNS* */

/* * START End Of Day Activities FXNS OUTSTANDING.............* */

//TABLE mcf.mcf_cob_trns_records
function createCobTrnsRecord() {

}

function updateCobTrnsRecord() {

}

function deleteCobTrnsRecord() {

}

function getCobTrnsRecordID() {

}

function getCobTrnsRecordTblTtl() {

}

function getCobTrnsRecordTbl() {

}

function startCobOperations() {

}

function rollbackCobOperations() {

}

/* * END End Of Day Activities FXNS* */

/* * START Additional Person Data Setup FXNS* */

//TABLE mcf.mcf_extra_data --> WORK IN PROGRESS
function createCstmrExtrData($srcPkID, $data_col, $srcType) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_extra_data(
            src_pk_id, data_col1, data_col2, data_col3, data_col4,
            data_col5, data_col6, data_col7, data_col8, data_col9, data_col10,
            data_col11, data_col12, data_col13, data_col14, data_col15, data_col16,
            data_col17, data_col18, data_col19, data_col20, data_col21, data_col22,
            data_col23, data_col24, data_col25, data_col26, data_col27, data_col28,
            data_col29, data_col30, data_col31, data_col32, data_col33, data_col34,
            data_col35, data_col36, data_col37, data_col38, data_col39, data_col40,
            data_col41, data_col42, data_col43, data_col44, data_col45, data_col46,
            data_col47, data_col48, data_col49, data_col50, src_type, created_by, creation_date,
            last_update_by, last_update_date)
            VALUES($srcPkID, '" . loc_db_escape_string($data_col[1]) .
            "', '" . loc_db_escape_string($data_col[2]) . "', '" . loc_db_escape_string($data_col[3]) .
            "', '" . loc_db_escape_string($data_col[4]) . "', '" . loc_db_escape_string($data_col[5]) .
            "', '" . loc_db_escape_string($data_col[6]) . "', '" . loc_db_escape_string($data_col[7]) .
            "', '" . loc_db_escape_string($data_col[8]) . "', '" . loc_db_escape_string($data_col[9]) .
            "', '" . loc_db_escape_string($data_col[10]) . "', '" . loc_db_escape_string($data_col[11]) .
            "', '" . loc_db_escape_string($data_col[12]) . "', '" . loc_db_escape_string($data_col[13]) .
            "', '" . loc_db_escape_string($data_col[14]) . "', '" . loc_db_escape_string($data_col[15]) .
            "', '" . loc_db_escape_string($data_col[16]) . "', '" . loc_db_escape_string($data_col[17]) .
            "', '" . loc_db_escape_string($data_col[18]) . "', '" . loc_db_escape_string($data_col[19]) .
            "', '" . loc_db_escape_string($data_col[20]) . "', '" . loc_db_escape_string($data_col[21]) .
            "', '" . loc_db_escape_string($data_col[22]) . "', '" . loc_db_escape_string($data_col[23]) .
            "', '" . loc_db_escape_string($data_col[24]) . "', '" . loc_db_escape_string($data_col[25]) .
            "', '" . loc_db_escape_string($data_col[26]) . "', '" . loc_db_escape_string($data_col[27]) .
            "', '" . loc_db_escape_string($data_col[28]) . "', '" . loc_db_escape_string($data_col[29]) .
            "', '" . loc_db_escape_string($data_col[30]) . "', '" . loc_db_escape_string($data_col[31]) .
            "', '" . loc_db_escape_string($data_col[32]) . "', '" . loc_db_escape_string($data_col[33]) .
            "', '" . loc_db_escape_string($data_col[34]) . "', '" . loc_db_escape_string($data_col[35]) .
            "', '" . loc_db_escape_string($data_col[36]) . "', '" . loc_db_escape_string($data_col[37]) .
            "', '" . loc_db_escape_string($data_col[38]) . "', '" . loc_db_escape_string($data_col[39]) .
            "', '" . loc_db_escape_string($data_col[40]) . "', '" . loc_db_escape_string($data_col[41]) .
            "', '" . loc_db_escape_string($data_col[42]) . "', '" . loc_db_escape_string($data_col[43]) .
            "', '" . loc_db_escape_string($data_col[44]) . "', '" . loc_db_escape_string($data_col[45]) .
            "', '" . loc_db_escape_string($data_col[46]) . "', '" . loc_db_escape_string($data_col[47]) .
            "', '" . loc_db_escape_string($data_col[48]) . "', '" . loc_db_escape_string($data_col[49]) .
            "', '" . loc_db_escape_string($data_col[50]) . "', '" . loc_db_escape_string($srcType) .
            "', $usrID, '$dateStr', $usrID, '$dateStr')";
    return execUpdtInsSQL($insSQL);
}

function updateCstmrExtrData($srcPkID, $data_col, $srcType, $rvsnTtl) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $tblNm = "mcf.mcf_extra_data";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_extra_data_hstrc";
    }

    $updtSQL = "UPDATE $tblNm
   SET data_col1='" . loc_db_escape_string($data_col[1]) .
            "', data_col2='" . loc_db_escape_string($data_col[2]) . "', data_col3='" . loc_db_escape_string($data_col[3]) .
            "', data_col4='" . loc_db_escape_string($data_col[4]) . "', data_col5='" . loc_db_escape_string($data_col[5]) .
            "', data_col6='" . loc_db_escape_string($data_col[6]) . "', data_col7='" . loc_db_escape_string($data_col[7]) .
            "', data_col8='" . loc_db_escape_string($data_col[8]) . "', data_col9='" . loc_db_escape_string($data_col[9]) .
            "', data_col10='" . loc_db_escape_string($data_col[10]) . "', data_col11='" . loc_db_escape_string($data_col[11]) .
            "', data_col12='" . loc_db_escape_string($data_col[12]) . "', data_col13='" . loc_db_escape_string($data_col[13]) .
            "', data_col14='" . loc_db_escape_string($data_col[14]) . "', data_col15='" . loc_db_escape_string($data_col[15]) .
            "', data_col16='" . loc_db_escape_string($data_col[16]) . "', data_col17='" . loc_db_escape_string($data_col[17]) .
            "', data_col18='" . loc_db_escape_string($data_col[18]) . "', data_col19='" . loc_db_escape_string($data_col[19]) .
            "', data_col20='" . loc_db_escape_string($data_col[20]) . "', data_col21='" . loc_db_escape_string($data_col[21]) .
            "', data_col22='" . loc_db_escape_string($data_col[22]) . "', data_col23='" . loc_db_escape_string($data_col[23]) .
            "', data_col24='" . loc_db_escape_string($data_col[24]) . "', data_col25='" . loc_db_escape_string($data_col[25]) .
            "', data_col26='" . loc_db_escape_string($data_col[26]) . "', data_col27='" . loc_db_escape_string($data_col[27]) .
            "', data_col28='" . loc_db_escape_string($data_col[28]) . "', data_col29='" . loc_db_escape_string($data_col[29]) .
            "', data_col30='" . loc_db_escape_string($data_col[30]) . "', data_col31='" . loc_db_escape_string($data_col[31]) .
            "', data_col32='" . loc_db_escape_string($data_col[32]) . "', data_col33='" . loc_db_escape_string($data_col[33]) .
            "', data_col34='" . loc_db_escape_string($data_col[34]) . "', data_col35='" . loc_db_escape_string($data_col[35]) .
            "', data_col36='" . loc_db_escape_string($data_col[36]) . "', data_col37='" . loc_db_escape_string($data_col[37]) .
            "', data_col38='" . loc_db_escape_string($data_col[38]) . "', data_col39='" . loc_db_escape_string($data_col[39]) .
            "', data_col40='" . loc_db_escape_string($data_col[40]) . "', data_col41='" . loc_db_escape_string($data_col[41]) .
            "', data_col42='" . loc_db_escape_string($data_col[42]) . "', data_col43='" . loc_db_escape_string($data_col[43]) .
            "', data_col44='" . loc_db_escape_string($data_col[44]) . "', data_col45='" . loc_db_escape_string($data_col[45]) .
            "', data_col46='" . loc_db_escape_string($data_col[46]) . "', data_col47='" . loc_db_escape_string($data_col[47]) .
            "', data_col48='" . loc_db_escape_string($data_col[48]) . "', data_col49='" . loc_db_escape_string($data_col[49]) .
            "', data_col50='" . loc_db_escape_string($data_col[50]) . "', src_type='" . loc_db_escape_string($srcType) .
            "', last_update_by=$usrID,
        last_update_date='$dateStr' WHERE src_pk_id =$srcPkID AND src_type = '$srcType' AND rvsn_ttl = $rvsnTtl";
    //echo $updtSQL;
    return execUpdtInsSQL($updtSQL, "Extra Person Data Update");
}

//TABLE mcf.mcf_extra_data_cols --> WORK IN PROGRESS
function createMcfExtrDataCol($colno, $collabel, $lovnm, $datatyp
, $catgry, $lngth, $dsplytyp, $orgid, $tblrnumcols, $ordr, $csvTblColNms, $isrqrd, $srcType) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_extra_data_cols(
            column_no, column_label, attchd_lov_name,
            column_data_type, column_data_category, data_length, data_dsply_type,
            org_id, no_cols_tblr_dsply, col_order, csv_tblr_col_nms, created_by, creation_date,
            last_update_by, last_update_date,is_required, src_type)" .
            "VALUES (" . $colno .
            ", '" . loc_db_escape_string($collabel) .
            "', '" . loc_db_escape_string($lovnm) .
            "', '" . loc_db_escape_string($datatyp) .
            "', '" . loc_db_escape_string($catgry) .
            "', " . loc_db_escape_string($lngth) .
            ", '" . loc_db_escape_string($dsplytyp) .
            "', " . $orgid .
            ", " . $tblrnumcols . ", " . $ordr .
            ", '" . loc_db_escape_string($csvTblColNms) .
            "', " . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr .
            "', '" . cnvrtBoolToBitStr($isrqrd) . "','" . loc_db_escape_string($srcType) . "')";
    return execUpdtInsSQL($insSQL);
}

function updateMcfExtrDataCol($colno, $collabel, $lovnm, $datatyp
, $catgry, $lngth, $dsplytyp, $orgid, $tblrnumcols, $rowid, $ordr, $csvTblColNms, $isrqrd, $srcType) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $updtSQL = "UPDATE mcf.mcf_extra_data_cols SET
            column_no=" . $colno .
            ", column_label='" . loc_db_escape_string($collabel) .
            "', attchd_lov_name='" . loc_db_escape_string($lovnm) .
            "', column_data_type='" . loc_db_escape_string($datatyp) .
            "', column_data_category='" . loc_db_escape_string($catgry) .
            "', data_length=" . loc_db_escape_string($lngth) .
            ", data_dsply_type='" . loc_db_escape_string($dsplytyp) .
            "', org_id=" . $orgid .
            ", no_cols_tblr_dsply=" . $tblrnumcols .
            ", col_order=" . $ordr .
            ", csv_tblr_col_nms='" . loc_db_escape_string($csvTblColNms) .
            "', last_update_by=" . $usrID .
            ", last_update_date='" . $dateStr .
            "', is_required='" . cnvrtBoolToBitStr($isrqrd) .
            "', src_type = '" . loc_db_escape_string($srcType)
            . "' WHERE extra_data_cols_id = " . $rowid;
    //echo $updtSQL;
    return execUpdtInsSQL($updtSQL);
}

function deleteMcfExtrDataCol($pkeyID, $extrInfo = "") {
    $insSQL = "DELETE FROM mcf.mcf_extra_data_cols WHERE extra_data_cols_id = " . $pkeyID;
    $affctd1 = execUpdtInsSQL($insSQL, "Additional Data Column:" . $extrInfo);
    if ($affctd1 > 0) {
        $dsply = "Successfully Deleted the ff Records-";
        $dsply .= "<br/>$affctd1 Additional Data Column(s)!";
        return "<p style = \"text-align:left; color:#32CD32;font-weight:bold;font-style:italic;\">$dsply</p>";
    } else {
        $dsply = "No Record Deleted";
        return "<p style = \"text-align:left; color:red;font-weight:bold;font-style:italic;\">$dsply</p>";
    }
}

function get_CstmrExtrDataGrpCols($grpnm, $org_ID, $srcType) {
    $strSql = "SELECT extra_data_cols_id, column_no, column_label, attchd_lov_name,
       column_data_type, column_data_category, data_length,
       CASE WHEN data_dsply_type='T' THEN 'Tabular' ELSE 'Detail' END,
       org_id, no_cols_tblr_dsply, col_order, csv_tblr_col_nms
        FROM mcf.mcf_extra_data_cols
        WHERE column_data_category= '" . loc_db_escape_string($grpnm) .
            "' and org_id = " . $org_ID . " and column_label !='' AND src_type = '$srcType' ORDER BY col_order, column_no, extra_data_cols_id";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllCstmrExtrDataCols($org_ID, $srcType) {
    $strSql = "SELECT extra_data_cols_id, column_no, column_label, attchd_lov_name,
       column_data_type, column_data_category, data_length,
       CASE WHEN data_dsply_type='T' THEN 'Tabular' ELSE 'Detail' END,
       org_id, no_cols_tblr_dsply, col_order, csv_tblr_col_nms, is_required, src_type
        FROM mcf.mcf_extra_data_cols
        WHERE org_id = " . $org_ID . " AND src_type = '" . loc_db_escape_string($srcType) . "' ORDER BY column_no";
    //echo($strSql);
    $result = executeSQLNoParams($strSql);

    return $result;
}

function get_CstmrExtrDataGrpCols1($colNum, $org_ID, $srcType) {
    $strSql = "SELECT extra_data_cols_id, column_no, column_label, attchd_lov_name,
       column_data_type, column_data_category, data_length,
       CASE WHEN data_dsply_type='T' THEN 'Tabular' ELSE 'Detail' END,
       org_id, no_cols_tblr_dsply, col_order, csv_tblr_col_nms
        FROM mcf.mcf_extra_data_cols
        WHERE column_no= '" . $colNum .
            "' and org_id = " . $org_ID . " AND src_type = '$srcType' ORDER BY col_order, column_no, extra_data_cols_id";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CstmrExtrDataGrps($org_ID, $srcType) {
    $strSql = "SELECT column_data_category, MIN(extra_data_cols_id) , MIN(col_order)
        FROM mcf.mcf_extra_data_cols
        WHERE org_id =$org_ID and column_label !='' AND src_type = '$srcType'
            GROUP BY column_data_category ORDER BY 3, 2, 1";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CstmrExtrData($pkID, $srcType, $colNum = "1", $rvsnTtlAPD) {

    $cnt = getCustDataChngPndngCount($pkID);
    if ($srcType === "Other Person") {
        $cnt = getOtherPrsnDataChngPndngCount($pkID);
    }

    $tblNm = "mcf.mcf_extra_data";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_extra_data_hstrc";
    }

    $colNms = array("data_col1", "data_col2", "data_col3", "data_col4",
        "data_col5", "data_col6", "data_col7", "data_col8", "data_col9", "data_col10",
        "data_col11", "data_col12", "data_col13", "data_col14", "data_col15", "data_col16",
        "data_col17", "data_col18", "data_col19", "data_col20", "data_col21", "data_col22",
        "data_col23", "data_col24", "data_col25", "data_col26", "data_col27", "data_col28",
        "data_col29", "data_col30", "data_col31", "data_col32", "data_col33", "data_col34",
        "data_col35", "data_col36", "data_col37", "data_col38", "data_col39", "data_col40",
        "data_col41", "data_col42", "data_col43", "data_col44", "data_col45", "data_col46",
        "data_col47", "data_col48", "data_col49", "data_col50");
    $strSql = "SELECT " . $colNms[$colNum - 1] . ", extra_data_id
  FROM $tblNm a WHERE ((src_pk_id = $pkID) AND src_type = '$srcType' AND rvsn_ttl = $rvsnTtlAPD)";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

/* * END Additional Person Data Setup FXNS* */

/* * START Standing Orders FXNS* */

//TABLE mcf.mcf_loan_sectors_major
function createLoanSectorMajor($majorSectorId, $sectorName, $sectorDesc, $isEnabled) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_loan_sectors_major(
            sector_name, sector_desc, org_id, is_enabled, created_by,
            creation_date, last_update_by, last_update_date)
    VALUES ('" . loc_db_escape_string($sectorName) . "','" . loc_db_escape_string($sectorDesc) .
            "','" . $isEnabled . "', $orgID ,$usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function updateLoanSectorMajor($majorSectorId, $sectorName, $sectorDesc, $isEnabled) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_loan_sectors_major SET
            sector_name='" . loc_db_escape_string($sectorName) . "', sector_desc='" . loc_db_escape_string($sectorDesc) . "',
                org_id=$orgID, is_enabled='" . $isEnabled . "', last_update_by=$usrID, last_update_date = '" . $dateStr .
            "' WHERE major_sector_id = $majorSectorId";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function deleteLoanSectorMajor($majorSectorId) {
    $delSQL1 = "DELETE FROM mcf.mcf_loan_sectors_major WHERE major_sector_id = $majorSectorId";
    $delSQL2 = "DELETE FROM mcf.mcf_loan_sectors_minor WHERE major_sector_id = $majorSectorId";

    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL1);
}

function getLoanSectorMajorID($dateStr, $usrID, $sectorName) {
    $sqlStr = "SELECT major_sector_id FROM mcf.mcf_loan_sectors_major WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND sector_name = '" . $sectorName . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

//TABLE mcf.mcf_loan_sectors_minor
function createLoanSectorMinor($majorSectorId, $sectorName, $sectorDesc, $isEnabled) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_loan_sectors_minor(major_sector_id,
            sector_name, sector_desc, is_enabled, created_by,
            creation_date, last_update_by, last_update_date)
    VALUES ($majorSectorId,'" . loc_db_escape_string($sectorName) . "','" . loc_db_escape_string($sectorDesc) .
            "','" . $isEnabled . "', $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function updateLoanSectorMinor($minorSectorId, $majorSectorId, $sectorName, $sectorDesc, $isEnabled) {
    global $usrID;
    global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_loan_sectors_minor SET
            major_sector_id = $majorSectorId,
            sector_name='" . loc_db_escape_string($sectorName) . "', sector_desc='" . loc_db_escape_string($sectorDesc) . "',
            is_enabled='" . $isEnabled . "', last_update_by=$usrID, last_update_date = '" . $dateStr .
            "' WHERE minor_sector_id = $minorSectorId";

    $result = execUpdtInsSQL($insSQL);
    return $result;
}

function deleteLoanSectorMinor($minorSectorId) {
    $delSQL1 = "DELETE FROM mcf.mcf_loan_sectors_minor WHERE minor_sector_id = $minorSectorId";
    return execUpdtInsSQL($delSQL1);
}

/* * END Sector Classification FXNS* */

/* * START Services FXNS* */
/* * END Services FXNS* */

/* * START Service Fees FXNS* */
/* * END Service Fees FXNS* */

function getAllwdGrpVal($grpType, $groupID) {
    $groupNm = "";
    if ($grpType != "Everyone") {
        if ($grpType === "Divisions/Groups") {
            $groupNm = getGnrlRecNm("org.org_divs_groups", "div_id", "div_code_name", $groupID);
        } else if ($grpType === "Grade") {
            $groupNm = getGnrlRecNm("org.org_grades", "grade_id", "grade_code_name", $groupID);
        } else if ($grpType === "Job") {
            $groupNm = getGnrlRecNm("org.org_jobs", "job_id", "job_code_name", $groupID);
        } else if ($grpType === "Position") {
            $groupNm = getGnrlRecNm("org.org_positions", "position_id", "position_code_name", $groupID);
        } else if ($grpType === "Site/Location") {
            $groupNm = getGnrlRecNm("org.org_sites_locations", "location_id", "location_code_name", $groupID);
        } else if ($grpType === "Person Type") {
            $groupNm = getLovNm($groupID);
        }

        return $groupNm;
    }

    return "";
}

function createLoanRqstApprvlRvsl($loanRqstID, &$errMsg) {
    global $usrID;
    global $dateStr;
    $msg = "";
    //CREATE RECORD OF APPROVAL
    $insSQL = "INSERT INTO mcf.mcf_loan_request_apprvl_rvsls(
            loan_rqst_id, approved_amount, apprvd_loan_tenor, apprvd_loan_tenor_type,
            apprvd_interest_rate, authorized_by_person_id, autorization_date,
            approval_limit_id, authorizer_comments, created_by, creation_date,
            last_update_by, last_update_date, rvsl_comments)
            SELECT $loanRqstID, approved_amount, apprvd_loan_tenor, apprvd_loan_tenor_type,
            apprvd_interest_rate, authorized_by_person_id, autorization_date,
            approval_limit_id, authorizer_comments, $usrID, '$dateStr',
            $usrID, '$dateStr', rvsl_comments FROM mcf.mcf_loan_request WHERE loan_rqst_id = $loanRqstID";

    $ttlCnt = execUpdtInsSQL($insSQL);

    if ($ttlCnt > 0) {
        $insSQL1 = "UPDATE mcf.mcf_loan_request SET
            approved_amount = 0.00,
            apprvd_loan_tenor = -1, apprvd_loan_tenor_type = NULL,
            apprvd_interest_rate = -1, authorized_by_person_id = -1, autorization_date = NULL,
            approval_limit_id = -1, authorizer_comments = '', last_update_by =$usrID,
            last_update_date = '$dateStr' WHERE loan_rqst_id = $loanRqstID";

        $ttlCnt1 = execUpdtInsSQL($insSQL1);
    } else {
        $msg .= "Failed to create Approval Reversal Transaction</br>";
    }

    if ($ttlCnt1 > 0) {
        $errMsg = $msg;
        return true;
    } else {
        $msg .= "Failed to Clear Loan Approval Details</br>";
        $errMsg = $msg;
        return false;
    }
}

function getCustLoanAccountNo($custType, $custId, $prdtId, $bnkBranchID) {
    $sqlStr = "SELECT distinct account_id, account_number FROM mcf.mcf_accounts y WHERE account_type = 'Loan' "
            . " AND product_type_id = $prdtId AND branch_id = $bnkBranchID AND cust_id = $custId "
            . " AND cust_type = '$custType' LIMIT 1";
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createInvstmntOrPrptyColtLien($lienAmnt, $startDate, $endDate, $srcID, $coltType, $dateStr, $narration, $status, $loanRqstID) {
    global $usrID;

    $startDate = cnvrtDMYToYMD($startDate);
    $endDate = cnvrtDMYToYMD($endDate);

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_prpry_n_invstmnt_colt_liens(
        lien_value, start_date_active, end_date_active, colt_src_id, colt_type, narration, lien_no, created_by, creation_date, last_update_by, last_update_date,
        lien_status, loan_rqst_id)
    VALUES (" . $lienAmnt . ",'" . $startDate . "','" . $endDate . "'," . $srcID . ",'" . $coltType . "','" . $narration .
            "','AL-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
            "','$status',$loanRqstID)";
    return execUpdtInsSQL($insSQL);
}

function deleteLoanRqstGuarantor($pkID) {

    $delSQL2 = "DELETE from mcf.mcf_loanreq_guarantors WHERE loan_gurnta_id = $pkID";

    return execUpdtInsSQL($delSQL2);
}

function get_Loan_Guarantor($loanGurntaID) {
    $strSql = "SELECT loan_gurnta_id, mcf.get_loan_guarantor_name(loan_rqst_id, source_type, person_cust_id) guarantor,  source_type, person_cust_id,
        loan_rqst_id
  FROM mcf.mcf_loanreq_guarantors WHERE loan_gurnta_id = $loanGurntaID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function hasInvstmntOrPrptyLien($srcID, $coltOptn) {
    $sqlStr = "SELECT COUNT(*) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
        WHERE to_char(now(), 'YYYY-MM-DD') between start_date_active AND end_date_active
        AND colt_type = '$coltOptn'
        AND colt_src_id = $srcID";

    $result = executeSQLNoParams($sqlStr);
    $cntTtl = 0;

    while ($row = loc_db_fetch_array($result)) {
        $cntTtl = (int) $row[0];
    }

    if ($cntTtl > 0) {
        return "Yes";
    }
    return "No";
}

function getInvstmntOrPrptyActvLienTtl($srcID, $coltOptn) {
    $sqlStr = "SELECT coalesce(sum(lien_value),0) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
        WHERE now() between to_timestamp(start_date_active,'YYYY-MM-DD')
  AND to_timestamp(end_date_active,'YYYY-MM-DD')
        AND colt_type = '$coltOptn'
        AND colt_src_id = $srcID";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }

    return 0.00;
}

function getInvstmntOrPrptyCurVal($srcID, $coltOptn) {
    $sqlStr = "";
    if ($coltOptn == "Property") {
        $sqlStr = "SELECT prpty_value from mcf.mcf_property_collaterals WHERE prpty_collateral_id = $srcID;";
    } else {
        $sqlStr = "SELECT (amount + running_interest_bal) from mcf.mcf_investments WHERE invstmnt_id = $srcID;";
    }

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }

    return 0.00;
}

function getInvstmntOrPrptyNetVal($srcID, $coltOptn) {
    return ((float) getInvstmntOrPrptyCurVal($srcID, $coltOptn) - (float) getInvstmntOrPrptyActvLienTtl($srcID, $coltOptn));
}

function hasAcctActvCollateral($acctID) {
    $sqlStr = "SELECT COUNT(*) FROM mcf.mcf_account_liens
        WHERE to_char(now(), 'YYYY-MM-DD') between start_date_active AND end_date_active
        AND account_id = $acctID";

    $result = executeSQLNoParams($sqlStr);
    $cntTtl = 0;

    while ($row = loc_db_fetch_array($result)) {
        $cntTtl = (int) $row[0];
    }

    if ($cntTtl > 0) {
        return "Yes";
    }
    return "No";
}

function getAcctCollateralCurrAvlblBal($acctID) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    $sqlStr = "SELECT mcf.get_cstacnt_avlbl_bals($acctID, '" . $balDte . "');";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }

    return 0.00;
}

function getExptdColtrlValsForLoanRqst($loanRqstID) {
    $sqlStr = "SELECT distinct value_flat_min_cash_collateral, value_flat_prcnt_cash_collateral, value_flat_min_prpty_collateral,
        value_flat_prcnt_prpty_collateral, value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
        cash_collateral_id, property_collateral_id, invstmnt_collateral_id FROM mcf.mcf_prdt_loans a, mcf.mcf_loan_request b
        WHERE a.loan_product_id = b.loan_product_id
        AND b.loan_rqst_id = $loanRqstID";

    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function getLoanCalcAmortizationSchedule($prncplAmount, $loanTenor, $loanTenorType, $loanRepaymentType, $cmpndPrdType, $gracePeriodNo, $gracePeriodType, $interestRate, $dsbmntDate, $interestRateType) {
    global $usrID;

    $refDate = cnvrtDMYToYMD($dsbmntDate);
    $repayStartDate = get_loanrepay_stardateYMD($refDate, $gracePeriodNo, $gracePeriodType);

    $schdlDy = 0;
    $schdlPrd = "year";

    $loanTenorInYears = 0;
    $yearlyRepayments = 1;
    $cmpndPrd = 1;
    if ($loanTenorType == "Year(s)") {
        $loanTenorInYears = $loanTenor;
        $schdlDy = $loanTenor;
    } else {
        $loanTenorInYears = $loanTenor * (float) (1 / 12);
        $schdlPrd = "month";
        $schdlDy = $loanTenor;
    }



    if ($loanRepaymentType == "daily") {
        $yearlyRepayments = 365.25;
    } else if ($loanRepaymentType == "weekly") {
        $yearlyRepayments = 52;
    } else if ($loanRepaymentType == "biweekly") {
        $yearlyRepayments = 26;
    } else if ($loanRepaymentType == "halfmonth") {
        $yearlyRepayments = 24;
    } else if ($loanRepaymentType == "month") {
        $yearlyRepayments = 12;
    } else if ($loanRepaymentType == "quarter") {
        $yearlyRepayments = 4;
    } else if ($loanRepaymentType == "halfyear") {
        $yearlyRepayments = 2;
    } else {
        $yearlyRepayments = 1;
    }

    //$repayEndDate = get_loanrepay_stardateYMD($refDate, $loanTenorInYears, 'year');
    $repayEndDate = get_loanrepay_stardateYMD($repayStartDate, $schdlDy, $schdlPrd);

    if ($cmpndPrdType == "daily") {
        $cmpndPrd = 365.25;
    } else if ($cmpndPrdType == "weekly") {
        $cmpndPrd = 52;
    } else if ($cmpndPrdType == "biweekly") {
        $cmpndPrd = 26;
    } else if ($cmpndPrdType == "semimonthly") {
        $cmpndPrd = 24;
    } else if ($cmpndPrdType == "monthly") {
        $cmpndPrd = 12;
    } else if ($cmpndPrdType == "quarterly") {
        $cmpndPrd = 4;
    } else if ($cmpndPrdType == "semiannually") {
        $cmpndPrd = 2;
    } else if ($cmpndPrdType == "simple") {
        $cmpndPrd = -1;
    } else {
        $cmpndPrd = 1;
    }

    $approvedAmount = $prncplAmount;
    $interestRatePerPeriod = -1;
    $ttlLoanTermTimes = calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType);
    $scheduledPrdcPaymntAmnt = -1;
    $ttlIntrst = -1;



    $result2 = executeSQLNoParams("SELECT (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))");
    while ($row2 = loc_db_fetch_array($result2)) {
        $interestRatePerPeriod = (float) $row2[0];
    }

    if($cmpndPrd <= 0){
        $prncplPymnt = $prncplAmount/$ttlLoanTermTimes;
        $intrstPymnt = $interestRatePerPeriod * $prncplAmount;
        $scheduledPrdcPaymntAmnt = $intrstPymnt + $prncplPymnt;
        $ttlIntrst = $intrstPymnt * $ttlLoanTermTimes;
    } else {
        $result3 = executeSQLNoParams("SELECT (SELECT mcf.xx_loan_amortization_amnt($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))");
        while ($row3 = loc_db_fetch_array($result3)) {
            $scheduledPrdcPaymntAmnt = (float) $row3[0];
        }

        $result4 = executeSQLNoParams("SELECT (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)");
        while ($row4 = loc_db_fetch_array($result4)) {
            $ttlIntrst = (float) $row4[0];
        }
    }
    $repayStartDate = cnvrtYMDToDMY($repayStartDate);
    $repayEndDate = cnvrtYMDToDMY($repayEndDate);

    $disbDetArray = array("approvedAmount" => $approvedAmount,
        "interestRatePerPeriod" => $interestRatePerPeriod, "ttlLoanTermTimes" => $ttlLoanTermTimes,
        "scheduledPrdcPaymntAmnt" => $scheduledPrdcPaymntAmnt, "loanRepaymentType" => $loanRepaymentType,
        "repayStartDate" => $repayStartDate, "repayEndDate" => $repayEndDate, "myFormsModalBodyLgz" => "myFormsModalBodyLgz",
        "disbmntDetId" => -1, "interestRateType" => $interestRateType, "ttlIntrst" => $ttlIntrst);

    return $disbDetArray;
}


function updateMCFCstmrAcntBals_Collaterals($cashAccntID, $invstmntColtID, $prptyColtID, $apprvdAmnt, $lineid, $crdtType, &$errMsg, $loanRqstID, $optn) {//$docHdrID = accntID for Account Deductions
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;
    global $prsnid;
    $dsplyErrMsg = "";
    $balUpdtErrMsg = "";
    $dateStr = getFrmtdDB_Date_time();
    $unClearedQty = 0;
    //$optn == 0 => APPROVE, $optn == 1 => REVERSE
    //$lienQty = 0;
    //$clearedQty = 0;
    //$doctype = "LOAN DISBURSEMENT";

    $lnPrdtID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstID);
    $trnsCrncyID = getGnrlRecNm("mcf.mcf_prdt_loans", "loan_product_id", "currency_id", $lnPrdtID);

    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

    $trnsType1 = "LIEN_TRNS";
    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";
    $dcrsORIncrs = "D";
    $cashColtAccntID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $loanRqstID);
    $loanTrnsctnID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
    $cashColtAcctNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $cashColtAccntID);

    $nwMsg = "";
    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

    $acntRslt = get_OneCustAccntInfo($cashColtAccntID);
    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
        $acctstatus = $rowAcnt[10];
        $acctcustomer = $rowAcnt[11];
        $acctlien = (float) $rowAcnt[13];
        $mandate = $rowAcnt[14];
        $wtdrwllimitno = (int) $rowAcnt[15];
        $wtdrwllimitamt = (float) $rowAcnt[16];
        $wtdrwllimittype = $rowAcnt[17];
    }

    //HAS LOAN REFERENCE LOAN REQUEST
    $refLoanRqstID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "ref_loanrqst_id", $loanRqstID);
    if($refLoanRqstID != ""){
        if((int)$refLoanRqstID > 0){
            $refCashAccntID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $refLoanRqstID);
            $refInvstmntColtID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $refLoanRqstID);
            $refPrptyColtID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $refLoanRqstID);

            if($optn == 0){
                if($refCashAccntID != "" && (int)$refCashAccntID > 0){
                    $rtrnRslt =  rvrsLoanRqstAcctLien($refLoanRqstID, $dsplyErrMsg);
                    $errMsg = $dsplyErrMsg;

                    if ($rtrnRslt === false) {
                        return false;
                    }
                }

                if($refInvstmntColtID != "" && (int)$refInvstmntColtID > 0){
                    execUpdtInsSQL("UPDATE mcf.mcf_prpry_n_invstmnt_colt_liens SET lien_status = 'Removed', end_date_active = to_char(now(),'YYYY-MM-DD') WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $refInvstmntColtID"
                        . " AND colt_type = 'Investment'");
                }

                if($refPrptyColtID != "" && (int)$refPrptyColtID > 0){
                    execUpdtInsSQL("UPDATE mcf.mcf_prpry_n_invstmnt_colt_liens SET lien_status = 'Removed', end_date_active = to_char(now(),'YYYY-MM-DD') WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $refPrptyColtID"
                        . " AND colt_type = 'Property'");
                }

            } else {

                if($refCashAccntID != "" && (int)$refCashAccntID > 0){
                    $rtrnRslt =  rvrsLoanRqstAcctLien($refLoanRqstID, $dsplyErrMsg, 0);
                    $errMsg = $dsplyErrMsg;

                    if ($rtrnRslt === false) {
                        return false;
                    }
                }

                if($refInvstmntColtID != "" && (int)$refInvstmntColtID > 0){
                    execUpdtInsSQL("UPDATE mcf.mcf_prpry_n_invstmnt_colt_liens SET lien_status = 'Active', end_date_active = '4000-12-31' WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $refInvstmntColtID"
                        . " AND colt_type = 'Investment'");
                }
                if($refPrptyColtID != "" && (int)$refPrptyColtID > 0){
                    execUpdtInsSQL("UPDATE mcf.mcf_prpry_n_invstmnt_colt_liens SET lien_status = 'Active', end_date_active = '4000-12-31' WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $refPrptyColtID"
                        . " AND colt_type = 'Property'");
                }

            }
        }
    }

    $doctype = "LOAN_APPL";

    $loanRqstTrnsID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);

    $succs = FALSE;
    $lnCntr = 0;

    $isdlvrd = false;
    //$lnCntr++;

    $xptdCashColtValue = 0.00;
    $valFlatCashColt = 0.00;
    $valPrcntCashColt = 0.00;

    $xptdInvstmntColtValue = 0.00;
    $valFlatInvstmntColt = 0.00;
    $valPrcntInvstmntColt = 0.00;

    $xptdPrptyColtValue = 0.00;
    $valFlatPrptyColt = 0.00;
    $valPrcntPrptyColt = 0.00;

    $result = getExptdColtrlValsForLoanRqst($loanRqstID);
    while ($row = loc_db_fetch_array($result)) {
        $valFlatCashColt = (float) $row[0];
        $valPrcntCashColt = (float) $row[1];
        $xptdCashColtValue = round(($valFlatCashColt + (($valPrcntCashColt / 100) * (float) $apprvdAmnt)), 2);

        $valFlatPrptyColt = (float) $row[2];
        $valPrcntPrptyColt = (float) $row[3];
        $xptdPrptyColtValue = round(($valFlatPrptyColt + (($valPrcntPrptyColt / 100) * (float) $apprvdAmnt)), 2);


        $valFlatInvstmntColt = (float) $row[4];
        $valPrcntInvstmntColt = (float) $row[5];
        $xptdInvstmntColtValue = round(($valFlatInvstmntColt + (($valPrcntInvstmntColt / 100) * (float) $apprvdAmnt)), 2);
    }

    $itmType = "LOAN APPLICATION";
    $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];

    $InvstmntColtTtlCnt = 0;
    $prptyColtTtlCnt = 0;
    $cashColtTtlCnt = 0;

    if ($prptyColtID > 0) {

        $lienQtyPrpty = 0.00;
        if ($optn == 0) {//APPROVE
            $lienQtyPrpty = (float) $xptdPrptyColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $lienQtyPrpty = -1 * (float) $xptdPrptyColtValue; //$apprvdAmnt;
        }
        //VALIDATE COLLATERAL AMOUNT
        $srcPrptyNetVal = (float) getInvstmntOrPrptyNetVal($prptyColtID, "Property");

        $dsplyErrMsg .= "Property Collateral Value is not sufficient to guarantee this Loan Request lienQtyPrpty" . $lienQtyPrpty . " srcPrptyNetVal=" . $srcPrptyNetVal . " optn" . $optn;
        if ((float) $srcPrptyNetVal < (float) $lienQtyPrpty && $optn == 0) {
            $dsplyErrMsg .= "Property Collateral Value is not sufficient to guarantee this Loan Request lienQtyPrpty" . $lienQtyPrpty . " srcPrptyNetVal=" . $srcPrptyNetVal;
            $lnCntr = $lnCntr + 1;
        } else {
            if ($lienQtyPrpty > 0) {
                $prptyColtTtlCnt = createInvstmntOrPrptyColtLien($lienQtyPrpty, $dateStr, "31-Dec-4000 11:59:59", $prptyColtID, "Property", $dateStr, "$itmType $docTypPrfx - $loanRqstTrnsID", "Approved", $loanRqstID);
                if ($prptyColtTtlCnt <= 0) {
                    $dsplyErrMsg .= "Failed to Create Property Collateral Lien";
                    $lnCntr = $lnCntr + 1;
                }
            } else {
                $endDate = cnvrtDMYToYMD($dateStr);
                $endDate1 = cnvrtDMYTmToYMDTm($dateStr);
                $prptyColtTtlCnt = execUpdtInsSQL("DELETE FROM mcf.mcf_prpry_n_invstmnt_colt_liens WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $prptyColtID"
                        . " AND colt_type = 'Property'");
                if ($prptyColtTtlCnt <= 0) {
                    $dsplyErrMsg .= "Failed to DELETE Property Collateral Lien";
                    $lnCntr = $lnCntr + 1;
                }
            }
        }
    }

    if ($invstmntColtID > 0) {
        $lienQtyInvstmnt = 0.00;
        if ($optn == 0) {//APPROVE
            $lienQtyInvstmnt = (float) $xptdInvstmntColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $lienQtyInvstmnt = -1 * (float) $xptdInvstmntColtValue; //$apprvdAmnt;
        }

        //VALIDATE COLLATERAL AMOUNT
        $srcInvstmntNetVal = (float) getInvstmntOrPrptyNetVal($invstmntColtID, "Investment");
        if ((float) $srcInvstmntNetVal < (float) $lienQtyInvstmnt && $optn == 0) {
            $dsplyErrMsg .= "Investment Collateral Value is not sufficient to guarantee this Loan Request";
            $lnCntr = $lnCntr + 1;
        } else {
            if ($invstmntColtID > 0) {
                $InvstmntColtTtlCnt = createInvstmntOrPrptyColtLien($lienQtyInvstmnt, $dateStr, "31-Dec-4000 11:59:59", $invstmntColtID, "Investment", $dateStr, "$itmType $docTypPrfx - $loanRqstTrnsID", "Approved", $loanRqstID);

                if ($InvstmntColtTtlCnt <= 0) {
                    $dsplyErrMsg .= "Failed to Create Investment Collateral Lien";
                    $lnCntr = $lnCntr + 1;
                }
            } else {
                $endDate = cnvrtDMYToYMD($dateStr);
                $endDate1 = cnvrtDMYTmToYMDTm($dateStr);
                $InvstmntColtTtlCnt = execUpdtInsSQL("DELETE FROM mcf.mcf_prpry_n_invstmnt_colt_liens WHERE loan_rqst_id = $loanRqstID AND colt_src_id = $invstmntColtID"
                        . " AND colt_type = 'Investment'");

                if ($InvstmntColtTtlCnt <= 0) {
                    $dsplyErrMsg .= "Failed to DELETE Investment Collateral Lien";
                    $lnCntr = $lnCntr + 1;
                }
            }
        }
    }

    if ($cashAccntID > 0) {
        $lienQty = 0.00; //$apprvdAmnt;
        $clearedQty = 0.00; //$apprvdAmnt;

        if ($optn == 0) {//APPROVE
            $lienQty = (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $dcrsORIncrs = "I";
            $lienQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = (float) $xptdCashColtValue; //$apprvdAmnt;
        }

        //VALIDATE COLLATERAL AMOUNT
        $srcCashBal = getAcctCollateralCurrAvlblBal($cashAccntID);
        if ((float) $srcCashBal < (float) $lienQty && $optn == 0) {
            $dsplyErrMsg .= "Available Balance on Cash Collateral Account is not sufficient to guarantee this Loan Request";
            $lnCntr = $lnCntr + 1;
        } else {
            //if ($doctype == "DEPOSIT") {
            if ($isdlvrd == false) {

                $recCnt = 0;
                if ($lienQty > 0) {
                    //APPROVE
                    $dateStr1 = cnvrtDMYTmToYMDTm($dateStr);
                    $cashColtTtlCnt = createAccountLien($lienQty, $dateStr, "31-Dec-4000 11:59:59", $cashAccntID, $dateStr1, "$itmType $docTypPrfx - $loanRqstTrnsID", "Active", $loanRqstID);

                    if ($cashColtTtlCnt <= 0) {
                        $dsplyErrMsg .= "Failed to Create Cash Collateral Lien";
                        $lnCntr = $lnCntr + 1;
                    } else {
                        //validate lien
                        $succs = validateCstmrAcntBalanceTrns($cashAccntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lineid, $dateStr, $balUpdtErrMsg);

                        if($succs){
                            $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN on Loan Transaction No." . $loanTrnsctnID, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {
                           $cashColtTtlCnt = execUpdtInsSQL("DELETE FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND account_id = $cashAccntID");
                           if ($cashColtTtlCnt <= 0) {
                                $dsplyErrMsg .= "Failed to DELETE Cash Collateral Lien";
                                $lnCntr = $lnCntr + 1;
                            }
                        }
                    }
                } else {
                    //REVERSE
                    $endDate = cnvrtDMYToYMD($dateStr);
                    $endDate1 = cnvrtDMYTmToYMDTm($dateStr);
                    $cashColtTtlCnt = execUpdtInsSQL("DELETE FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND account_id = $cashAccntID");

                    if ($cashColtTtlCnt <= 0) {
                        $dsplyErrMsg .= "Failed to DELETE Cash Collateral Lien";
                        $lnCntr = $lnCntr + 1;
                    }

                    $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN Reversal - Loan Transaction No." . $loanTrnsctnID, "CR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                }

                if($recCnt > 0){
                    $succs = updateCstmrAcntBalances($cashAccntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lineid, $dateStr, $balUpdtErrMsg);
                }
            }

            if ($succs) {

            } else {
                $dsplyErrMsg .= $balUpdtErrMsg;
                $lnCntr = $lnCntr + 1;
            }
        }
    }

    $dsplyErrMsg .= "</br> lnCntr Cash=" . $lnCntr;

    $errMsg = $dsplyErrMsg;



    if ($lnCntr <= 0) {
        $succs = true;
    }

    return $succs;
}

function hasCrdtAssmntBnCmpltd($loanRqstId) {
    //1. ANSWERED QSTNS CNT
    $answdCnt = 0;
    $ttlQstnCnt = 0;
    $result1 = executeSQLNoParams("SELECT COUNT(distinct profile_factor_id) FROM mcf.mcf_loan_assessments
        WHERE loan_rqst_id = $loanRqstId AND ticked_yesno = 'YES'");
    while ($row1 = loc_db_fetch_array($result1)) {
        $answdCnt = (int) $row1[0];
    }

    $result2 = executeSQLNoParams("SELECT COUNT(distinct profile_factor_id) FROM mcf.mcf_loan_assessments
        WHERE loan_rqst_id = $loanRqstId");
    while ($row2 = loc_db_fetch_array($result2)) {
        $ttlQstnCnt = (int) $row2[0];
    }

    if ($answdCnt == $ttlQstnCnt) {
        return true;
    } else {
        return false;
    }
}

function getNextMCFLoanAppsApprvrs($siteID, $trnsTyp, $crncyID, $trnsAmnt) {
    $strSql = "SELECT a.authorizer_person_id, a.authorizer_limit_id
        FROM vms.vms_authorizers_limit a
        WHERE ((a.site_id = $siteID or a.site_id<=0) "
            . "and (a.currency_id = $crncyID or a.currency_id<=0) "
            . "and ($trnsAmnt>=a.min_amount) "
            . "and ($trnsAmnt<=a.max_amount) "
            . "and (a.transaction_type ='" . loc_db_escape_string($trnsTyp) . "')) ";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function getMCFLoanAppsRdOnlyDsply_OLD($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType) {
//    global $canview;
//    if (!$canview) {
//        restricted();
//        exit();
//    }
    $trnsType = "LOAN APPLICATION";
    $formTitle = "Loan Application Attached Document";
    $pgNo = 15;
    $subPgNo = 4.1;
    $pkID = $srcDocID;
    $trnsStatus = "Incomplete";
    $rqstatusColor = "red";
    $ttlColor = "blue";
    $mkReadOnly = "readonly=\"true\"";
    $mkReadOnlyDsbld = "disabled=\"true\"";
    $btnDontDsply = 'style="display:none !important;"';
    $mkRmrkReadOnly = "";
    $trnsTtl = 0.00;
    $crncy = "GHS";
    $crncyID = "";
    $isDisbursed = "NO";
    $payDate = "";
    $vwtypActn = "VIEW";

//var_dump($_POST);
    $result = get_LoanRqstDet($pkID);
    while ($row = loc_db_fetch_array($result)) {

        $trnsStatus = $row[8];
        //$voidedTrnsHdrID = (int) $row[6];
        $trnsTtl = (float) $row[27];
        $isDisbursed = $row[28];

        $result3 = get_LoanPrdtDetsForLoanApplctn($row[14]);
        $row3 = loc_db_fetch_array($result3);

        $bnkBranch = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc||' ('||location_code_name||')'", $row[3]);
        $rcvryOfficer = getGnrlRecNm("prs.prsn_names_nos", "person_id", "trim(title || ' ' || sur_name || ', ' || first_name || ' ' || other_names)", $row[7]);
        $rpymntAccNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $row[19]);
        $cashColtAccNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $row[20]);
        /* Add */
        $topUpRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $row[24]);
        $crncyIsoCode = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "iso_code", $row3[1]);

        $actn = "ADD";
        $pMode = 0; //NEW
        if ($trnsStatus == "Initiated" || $trnsStatus == "Approved" || $trnsStatus == "Rescheduled" || $trnsStatus == "Topped-Up") {
            $actn = "SMRYPAGE";
            $pMode = 1; //NEW
        }
        ?>
        <div class="row" style="margin: 0px 0px 10px 0px !important;" >
            <input type="hidden" id="lnRqstID" value="<?php echo $row[0]; ?>"/>
            <input type="hidden" id="lnprflFctrId" value="-1"/>
            <input type="hidden" id="assmntCmnts" value="<?php echo $row[24]; ?>"/>
            <input class="form-control" id="addOrEditForm" type = "hidden" placeholder="addOrEditForm" value="Edit"/>
        </div>
        <div class="row" style="margin: 0px 0px 10px 0px !important;">
            <div class="col-md-12" style="padding:0px 0px 0px 0px !important;">
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#allmodules', 'grp=17&typ=1&pg=2&vtyp=0');">Main Parameters</button>
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#prflCMDataEDT', 'grp=17&typ=1&pg=2&vtyp=1');">Standard Events Accounting</button>
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#prflCMAttchmntEDT', 'grp=17&typ=1&pg=2&vtyp=2');">Custom Events Accounting</button>
            </div>
        </div>
        <div class="">
            <ul class="nav nav-tabs rho-hideable-tabs" style="margin-top:-10px !important;">
                <li class="active"><a data-toggle="tab" data-rhodata="&pg=2&vtyp=0" href="#prflCMHomeEDT" id="prflCMHomeEDTtab">Application Details</a></li>
                <li id="standardEvtns" style="display: block;"><a data-toggle="tabajxprfledt" data-rhodata="&pg=2&vtyp=1" href="#prflCMDataEDT" onclick="newLoanRequestOpenATab('#prflCMDataEDT', 'grp=17&typ=1&pg=<?php echo $pgNo; ?>&subPgNo=<?php echo $subPgNo; ?>&vtyp=1&vtypActn=<?php echo $actn; ?>&pMode=<?php echo $pMode; ?>&onlyViewMode=<?php echo $vwtypActn; ?>');" id="prflCMDataEDTtab">Credit Risk Assessment</a></li>
                <li id="customEvnts" style="display: block;"><a data-toggle="tabajxprfledt" data-rhodata="&pg=2&vtyp=2" href="#prflCMAttchmntEDT" onclick="newLoanRequestOpenATab('#prflCMAttchmntEDT', 'grp=17&typ=1&pg=<?php echo $pgNo; ?>&subPgNo=<?php echo $subPgNo; ?>&vtyp=2&vtypActn=EDIT&routingID=<?php echo $routingID; ?>&inptSlctdRtngs=<?php echo $inptSlctdRtngs; ?>&actionToPrfrm=<?php echo $actionToPrfrm; ?>&srcDocID=<?php echo $srcDocID; ?>&srcDocType=<?php echo $srcDocType; ?>&onlyViewMode=<?php echo $vwtypActn; ?>');" id="prflCMAttchmntEDTtab">Workflow Approval</a></li>
            </ul>
            <div class="row">
                <div class="col-md-12">
                    <div class="custDiv">
                        <div class="tab-content">
                            <div id="prflCMHomeEDT" class="tab-pane fadein active" style="border:none !important;">
                                <div class="col-md-12" style="padding:0px 0px 10px 1px !important;">
                                    <div style="padding:0px 1px 0px 15px !important;float:left;">
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsStatusBtn">
                                            <span style="font-weight:bold;">Status: </span><span style="color:<?php echo $rqstatusColor; ?>;font-weight: bold;"><?php echo $trnsStatus; ?></span>
                                        </button>
                                        <button type="button"  <?php echo $btnDontDsply; ?>  class="btn btn-default btn-sm" style="height:30px;" onclick="getLoanRqstForm('myFormsModalLg', 'myFormsModalBodyLg', 'myFormsModalTitleLg', 'Edit Loan Request', 15, <?php echo $subPgNo; ?>, 0, 'EDIT', <?php echo $sbmtdTrnsHdrID; ?>, 'indCustTable', 'indCustTableRow1');" data-toggle="tooltip" title="Reload Transaction">
                                            <img src="cmn_images/refresh.bmp" style="padding-right: 2px; height:17px; width:auto; position: relative; vertical-align: middle;">
                                        </button>
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsTtlBtn">
                                            <span style="font-weight:bold;">Approved Amount: </span><span style="color:<?php echo $ttlColor; ?>;font-weight: bold;"><?php
                                                echo $crncyIsoCode . " " . number_format($trnsTtl, 2);
                                                ?></span>
                                        </button>
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsIsPaidBtn">
                                            <span style="font-weight:bold;">Disbursed: </span><span style="color:<?php echo $ttlColor; ?>;font-weight: bold;"><?php echo $isDisbursed; ?></span>
                                        </button>
                                        <button type="button" class="btn btn-default" style="height:30px;" onclick="getOneMcfDocsForm_Gnrl(<?php echo $pkID; ?>, '<?php echo $trnsType; ?>', 140, '<?php echo $formTitle; ?>');" data-toggle="tooltip" data-placement="bottom" title = "Attached Documents">
                                            <img src="cmn_images/adjunto.png" style="height:20px; width:auto; position: relative; vertical-align: middle;">
                                        </button>
                                    </div>
                                    <div style="padding:0px 1px 0px 1px !important;float:right;">
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="checkWkfRqstStatus(<?php echo $routingID; ?>, 'Teller Trns. Authorization Progress History');"><img src="cmn_images/workflow.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;">Progress&nbsp;</button>
                                        <?php if ($trnsStatus == "Approved" && $isDisbursed == "NO") { ?>
                                            <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="checkWkfRqstStatus(<?php echo $routingID; ?>, 'Teller Trns. Authorization Progress History');"><img src="cmn_images/workflow.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;" data-toggle="tooltip" title="Authorization Progress History">Progress&nbsp;</button>
                                            <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="saveAccountTrnsRvrs(<?php echo $pgNo; ?>, '<?php echo $subPgNo; ?>', <?php echo $vwtyp; ?>, 'LOAN_PYMNT', 0);"><img src="cmn_images/90.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;">Void Transaction&nbsp;</button>
                                        <?php } ?>
                                    </div>
                                </div>
                                <form class="form-horizontal" id="customerAccountForm">
                                    <div style="display:none;">
                                        <!--DATA FOR VALIDATIONS-->
                                        <input type="hidden" id="currencyId" value="<?php echo $row3[1]; ?>">
                                        <input type="hidden" id="isAccountRqrd" value="<?php echo $row3[2]; ?>">
                                        <input type="hidden" id="loanMaxAmount" value="<?php echo $row3[3]; ?>">
                                        <input type="hidden" id="loanMinAmount" value="<?php echo $row3[4]; ?>">
                                        <input type="hidden" id="maxLoanTenor" value="<?php echo $row3[5]; ?>">
                                        <input type="hidden" id="maxLoanTenorType" value="<?php echo $row3[6]; ?>">
                                        <input type="hidden" id="guarantorRequired" value="<?php echo $row3[7]; ?>">
                                        <input type="hidden" id="guarantorNo" value="<?php echo $row3[8]; ?>">
                                        <input type="hidden" id="productType" value="<?php echo $row3[9]; ?>">
                                        <input type="hidden" id="custTypeCustgrp" value="<?php echo $row3[10]; ?>">
                                        <input type="hidden" id="custTypeCorp" value="<?php echo $row3[11]; ?>">
                                        <input type="hidden" id="custTypeInd" value="<?php echo $row3[12]; ?>">
                                        <input type="hidden" id="cashCollateralRqrd" value="<?php echo $row3[13]; ?>">
                                        <input type="hidden" id="valueFlatCashColt" value="<?php echo $row3[14]; ?>">
                                        <input type="hidden" id="valuePrcntCashColt" value="<?php echo $row3[15]; ?>">
                                        <input type="hidden" id="prptyCollateralRqrd" value="<?php echo $row3[16]; ?>">
                                        <input type="hidden" id="valueFlatPrptyColt" value="<?php echo $row3[17]; ?>">
                                        <input type="hidden" id="valuePrcntPrptyColt" value="<?php echo $row3[18]; ?>">
                                        <input type="hidden" id="invstmntCollateralRqrd" value="<?php echo $row3[19]; ?>">
                                        <input type="hidden" id="valueInvstmntCashColt" value="<?php echo $row3[20]; ?>">
                                        <input type="hidden" id="valueInvstmntPrcntColt" value="<?php echo $row3[21]; ?>">
                                        <input type="hidden" id="minLoanTenor" value="<?php echo $row3[22]; ?>">
                                        <input type="hidden" id="minLoanTenorType" value="<?php echo $row3[23]; ?>">
                                        <input type="hidden" id="baseIntRate" value="<?php echo $row3[24]; ?>">
                                    </div>
                                    <div class="row"><!-- ROW 1 -->
                                        <div class="col-lg-12">
                                            <!--<fieldset class="basic_person_fs5">-->
                                            <legend class="basic_person_lg1" style="margin-top:5px !important;margin-bottom: 10px !important;">Application Header</legend>
                                            <div class="col-lg-4">
                                                <input class="form-control" id="loanRqstID" type = "hidden" placeholder="Loan Request ID" value="<?php echo $row[0]; ?>"/>
                                                <div class="form-group form-group-sm">
                                                    <label for="rqsNumber" class="control-label col-md-4">Request No:</label>
                                                    <div class="col-md-8">
                                                        <input class="form-control" id="rqsNumber" type = "text" placeholder="" value="<?php echo $row[1]; ?>" readonly/>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="applctnDate" class="control-label col-md-4">Appl. Date:</label>
                                                    <div  class="col-md-8">
                                                        <div class="input-group date form_date" data-date="" data-date-format="dd-M-yyyy" data-link-field="dtp_input3" data-link-format="yyyy-mm-dd">
                                                            <input class="form-control" size="16" type="text" id="applctnDate" value="<?php echo $row[2]; ?>" readonly="">
                                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="bnkBranch" class="control-label col-md-4">Branch:</label>
                                                    <div  class="col-md-8">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control" aria-label="..." id="bnkBranch" value="<?php echo $bnkBranch; ?>" readonly="">
                                                            <input type="hidden" id="bnkBranchID" value="<?php echo $row[3]; ?>">
                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Sites/Locations New', 'gnrlOrgID', '', '', 'radio', true, '', 'bnkBranchID', 'bnkBranch', 'clear', 1, '');">
                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group form-group-sm">
                                                    <label for="prpsOfLoan" class="control-label col-md-3">Purpose:</label>
                                                    <div  class="col-md-9">
                                                        <textarea <?php echo $mkReadOnly; ?> class="form-control" id="prpsOfLoan" cols="2" placeholder="Purpose of Loan" rows="5"><?php echo $row[4]; ?></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-5">
                                                <div class="form-group form-group-sm">
                                                    <label for="acctNumber" class="control-label col-md-5">Loan Account Number:</label>
                                                    <div class="col-md-7">
                                                        <input class="form-control" id="acctNumber" type = "text" placeholder="" value="<?php echo $row[6]; ?>" readonly/>
                                                        <!--LOAN APPLICATION ID-->
                                                        <input class="form-control" id="acctID" type = "hidden" placeholder="Account ID" value="<?php echo $row[5]; ?>"/>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="rcvryOfficer" class="control-label col-md-5">Recovery Officer:</label>
                                                    <div  class="col-md-7">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control" aria-label="..." id="rcvryOfficer" value="<?php echo $rcvryOfficer; ?>" readonly>
                                                            <input type="hidden" id="rcvryOfficerID" value="<?php echo $row[7]; ?>">
                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="clearROLovField('rcvryOfficer', 'rcvryOfficerID');">
                                                                <span class="glyphicon glyphicon-remove"></span>
                                                            </label>
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'MCF Recovery Officers', 'gnrlOrgID', '', '', 'radio', true, '', 'rcvryOfficerID', 'rcvryOfficer', 'clear', 1, '');">
                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="status" class="control-label col-md-5">Status:</label>
                                                    <div class="col-md-7">
                                                        <input class="form-control" id="status" type = "text" style="color:<?php echo $rqstatusColor; ?>;font-weight: bold;" placeholder="" value="<?php echo $row[8]; ?>" readonly/>
                                                    </div>
                                                </div>

                                            </div>
                                            <!--</fieldset>-->
                                        </div>
                                    </div>
                                    <div class="row"><!-- ROW 2 -->
                                        <div class="col-lg-12">
                                            <!--<fieldset class="basic_person_fs1" style="margin-top:5px !important;">-->
                                            <legend class="basic_person_lg1" style="margin-top:10px !important;margin-bottom: 10px !important;">Application Details</legend>
                                            <div class="row"><!-- ROW 1 -->
                                                <div class="col-lg-6">
                                                    <fieldset class="basic_person_fs1"><legend class="basic_person_lg1">Request Details</legend>
                                                        <div class="form-group form-group-sm">
                                                            <label for="custType" class="control-label col-md-4">Customer Type:</label>
                                                            <input type="hidden" id="custTypeYes" value="YES">
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="custType" onchange="onChangeOfCustType()">
                                                                    <?php
                                                                    $sltdCorp = "";
                                                                    $sltdIndv = "";
                                                                    $sltdGrp = "";
                                                                    if ($row[9] == "Corporate") {
                                                                        $sltdCorp = "selected";
                                                                    } else if ($row[9] == "Individual") {
                                                                        $sltdIndv = "selected";
                                                                    } else if ($row[9] == "Group") {
                                                                        $sltdGrp = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="Corporate" <?php echo $sltdCorp; ?>>Corporate</option>
                                                                    <option value="Individual" <?php echo $sltdIndv; ?>>Individual</option>
                                                                    <option value="Group" <?php echo $sltdGrp; ?>>Customer Group</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        $dsplyOptnCustGrp = "";
                                                        if ($row[9] != "Group") {
                                                            $dsplyOptnCustGrp = "style='display:none;'";
                                                        }
                                                        ?>
                                                        <div class="form-group form-group-sm" <?php echo $dsplyOptnCustGrp; ?> id="custGrpDiv">
                                                            <label for="custGrp" class="control-label col-md-4">Group Name:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="custGrp" value="<?php echo $row[11]; ?>" readonly="readonly">
                                                                    <input type="hidden" id="custGrpID" value="<?php echo $row[10]; ?>">
                                                                    <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="bnkCustomer" class="control-label col-md-4">Customer Name:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="bnkCustomer" value="<?php echo $row[13]; ?>" readonly="readonly">
                                                                    <input type="hidden" id="bnkCustomerID" value="<?php echo $row[12]; ?>">
                                                                    <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="crdtType" class="control-label col-md-4">Credit Type:</label>
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="crdtType" onchange="onChangeCrdtType();">
                                                                    <?php
                                                                    $sltdLoan = "";
                                                                    $sltdOD = "";
                                                                    if ($row[9] == "Loan") {
                                                                        $sltdLoan = "selected";
                                                                    } else if ($row[9] == "Overdraft") {
                                                                        $sltdOD = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="Loan" <?php echo $sltdLoan; ?>>Loan</option>
                                                                    <option value="Overdraft" <?php echo $sltdOD; ?>>Overdraft</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="prdtType" class="control-label col-md-4">Product:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="prdtType" value="<?php echo $row[15]; ?>" readonly="readonly">
                                                                    <input type="hidden" id="prdtTypeID" value="<?php echo $row[14]; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="rqstType" class="control-label col-md-4">Request Type:</label>
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="rqstType" onchange="onChangeOfRqstType();">
                                                                    <?php
                                                                    $sltdNwLn = "";
                                                                    $sltdTpUp = "";
                                                                    $sltdRshdl = "";
                                                                    if ($row[23] == "New Request") {
                                                                        $sltdNwLn = "selected";
                                                                    } else if ($row[23] == "Top-Up Request") {
                                                                        $sltdTpUp = "selected";
                                                                    } else if ($row[23] == "Reschedule Request") {
                                                                        $sltdRshdl = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="New Request" <?php echo $sltdNwLn; ?>>New Request</option>
                                                                    <option value="Top-Up Request" <?php echo $sltdTpUp; ?>>Top-Up Request</option>
                                                                    <option value="Reschedule Request" <?php echo $sltdRshdl; ?>>Reschedule Request</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        $dsplyOptn = "";
                                                        if ($row[23] == "New Request") {
                                                            $dsplyOptn = "style='display:none;'";
                                                        }
                                                        ?>
                                                        <div class="form-group form-group-sm" <?php echo $dsplyOptn; ?> id="rqstIdForTopupDiv">
                                                            <label for="refLoanrqst" class="control-label col-md-4">Request ID - Ref.:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="refLoanrqst" value="<?php echo $topUpRqstNo; ?>" readonly="readonly">
                                                                    <input type="hidden" id="refLoanrqstID" value="<?php echo $row[24]; ?>">
                                                                    <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="onClickRefLoanRqst(<?php echo $pgNo; ?>,<?php echo $subPgNo; ?>);">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                    <label class="btn btn-primary btn-file input-group-addon" title="View Details" onclick="">
                                                                        <img src="cmn_images/kghostview.png" style="height:20px; width:auto; position: relative; vertical-align: middle;">
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="loanAmount" class="control-label col-md-4">Amount:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <label id="crncyIsoCode" class="btn btn-primary btn-file input-group-addon">
                                                                        <?php echo $crncyIsoCode; ?>
                                                                    </label>
                                                                    <input <?php echo $mkReadOnly; ?> class="form-control" id="loanAmount" type = "number" min="0" placeholder="Amount" value="<?php echo $row[16]; ?>"/>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="loanTenor" class="control-label col-md-4">Tenure:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group col-md-12">
                                                                    <div  class="col-md-4" style="padding-left:0px !important;">
                                                                        <input <?php echo $mkReadOnly; ?> class="form-control" id="loanTenor" type = "number" min="0" placeholder="" value="<?php echo $row[17]; ?>"/>
                                                                    </div>
                                                                    <div  class="col-md-8" style="padding-left:0px !important; padding-right: 0px !important; ">
                                                                        <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="loanTenorType" >
                                                                            <?php
                                                                            $sltdYears = "";
                                                                            $sltdMonths = "";
                                                                            if ($row[18] == "Year(s)") {
                                                                                $sltdYears = "selected";
                                                                            } else if ($row[18] == "Month(s)") {
                                                                                $sltdMonths = "selected";
                                                                            }
                                                                            ?>
                                                                            <option value="Year(s)" <?php echo $sltdYears; ?>>Year(s)</option>
                                                                            <option value="Month(s)" <?php echo $sltdMonths; ?>>Month(s)</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="interestRate" class="control-label col-md-4">Interest Rate:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input <?php echo $mkReadOnly; ?> class="form-control" id="interestRate" type = "number" min="0" placeholder="Interest Rate" value="<?php echo $row[25]; ?>"/>
                                                                    <label class="btn btn-primary btn-file input-group-addon" style="padding-left: 2px !important;">
                                                                        % Per Annum
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        $dsplyRSADOptn = "";
                                                        if ($row3[2] == "No" && $row[26] == "Manual Payments") {
                                                            $dsplyRSADOptn = "style='display:none;'";
                                                        }
                                                        ?>
                                                        <div class="form-group form-group-sm">
                                                            <label for="rpmntSrcAcct" class="control-label col-md-4">Repayment:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group col-md-12">
                                                                    <div  class="col-md-6" style="padding-left:0px !important; padding-right: 0px !important; ">
                                                                        <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="rpmntSrcType" onchange="onChangeRpymntType();">
                                                                            <?php
                                                                            $sltdAcctDedctn = "";
                                                                            $sltdManPymnts = "";
                                                                            if ($row[26] == "Account Deductions") {
                                                                                $sltdAcctDedctn = "selected";
                                                                            } else if ($row[26] == "Manual Payments") {
                                                                                $sltdManPymnts = "selected";
                                                                            }
                                                                            ?>
                                                                            <option value="Account Deductions" selected <?php echo $sltdAcctDedctn; ?>>Account Deductions</option>
                                                                            <option value="Manual Payments" <?php echo $sltdManPymnts; ?>>Manual Payments</option>
                                                                        </select>
                                                                    </div>
                                                                    <div  class="col-md-6" style="padding-right: 0px !important; ">
                                                                        <div class="input-group">
                                                                            <input type="text" class="form-control" aria-label="..." id="rpmntSrcAcct" value="<?php echo $rpymntAccNo; ?>" readonly>
                                                                            <input type="hidden" id="rpmntSrcAcctID" value="<?php echo $row[19]; ?>">
                                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                            <label <?php echo $dsplyRSADOptn; ?> id="rpmntSrcAcctDiv" class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="row"><!-- ROW 1 -->
                                                        <div class="col-lg-12">
                                                            <fieldset class="basic_person_fs5"><legend class="basic_person_lg1">Collateral(s)</legend>
                                                                <div  class="col-md-12">
                                                                    <?php
                                                                    $dsplyCCOptn = "";
                                                                    $dsplyICOptn = "";
                                                                    $dsplyPCOptn = "";
                                                                    if ($row3[13] == "No") {
                                                                        $dsplyCCOptn = "style='display:none;'";
                                                                    }
                                                                    if ($row3[19] == "No") {
                                                                        $dsplyICOptn = "style='display:none;'";
                                                                    }
                                                                    if ($row3[16] == "No") {
                                                                        $dsplyPCOptn = "style='display:none;'";
                                                                    }
                                                                    ?>
                                                                    <div class="form-group form-group-sm" id="cashColtDiv1">
                                                                        <label for="cashCollateral" class="control-label col-md-4">Cash:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="cashColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="cashCollateral" readonly="readonly" value="<?php echo $cashColtAccNo; ?>">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="cashCollateralValue" value="" readonly>
                                                                                <input type="hidden" id="cashCollateralID" value="<?php echo $row[20]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="cashColtDiv" <?php echo $dsplyCCOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'All Bank Accounts (For Loan Repayment)', 'gnrlOrgID', '', '', 'radio', true, '', 'cashCollateralID', 'cashCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group form-group-sm" id="investmentColtDiv1">
                                                                        <label for="invstmntCollateral" class="control-label col-md-4">Investment:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="investmentColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="invstmntCollateral" readonly="readonly" value="">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="invstmntCollateral" value="" readonly>
                                                                                <input type="hidden" id="invstmntCollateralID" value="<?php echo $row[21]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="investmentColtDiv" <?php echo $dsplyICOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Investment Collaterals', 'gnrlOrgID', '', '', 'radio', true, '', 'invstmntCollateralID', 'invstmntCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group form-group-sm" id="propertyColtDiv1">
                                                                        <label for="prptyCollateral" class="control-label col-md-4">Property:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="propertyColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="prptyCollateral" readonly="readonly" value="">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="prptyCollateral" value="" readonly>
                                                                                <input type="hidden" id="prptyCollateralID" value="<?php echo $row[22]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="propertyColtDiv" <?php echo $dsplyPCOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Property Collaterals', 'gnrlOrgID', '', '', 'radio', true, '', 'prptyCollateralID', 'prptyCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                    </div>
                                                    <div class="row"><!-- ROW 2 -->
                                                        <div class="col-lg-12">
                                                            <fieldset id="guarantorsFldSt" class="basic_person_fs5"><legend id="guarantorsLgnd" class="basic_person_lg1">Guarantor(s)</legend>
                                                                <div  class="col-md-12">
                                                                    <div class="row"><!-- ROW 3 -->
                                                                        <div class="col-lg-6">
                                                                            <button type="button" <?php echo $btnDontDsply; ?> class="btn btn-default" style="margin-bottom: 5px;" onclick="getLoanGrntaForm('myLovModal', 'myLovModalBody', 'myLovModalTitle', 'acctSignatoryForm', '', 'Add Guarantor', 15, <?php echo $subPgNo; ?>, 5, '', -1);">
                                                                                <img src="cmn_images/add1-64.png" style="left: 0.5%; padding-right: 5px; height:20px; width:auto; position: relative; vertical-align: middle;">
                                                                                Add Guarantor
                                                                            </button>
                                                                        </div>
                                                                        <div class="col-lg-6">&nbsp;</div>
                                                                    </div>
                                                                    <table id="loanGuarantorsTblAdd" class="table table-striped table-bordered table-responsive" cellspacing="0" width="100%" style="width:100%;">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>...</th>
                                                                                <th>No.</th>
                                                                                <th>Guarantor</th>
                                                                                <th>ID No.</th>
                                                                                <th>...</th>
                                                                                <th style="display:none;">Src Type</th>
                                                                                <th style="display:none;">GuatantorID</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <?php
                                                                            $lmt = get_Loan_GuarantorsTtl($pkID, "%");
                                                                            $cnta = 0;
                                                                            $result2 = get_Loan_Guarantors($pkID, "%", 0, $lmt);
                                                                            while ($row2 = loc_db_fetch_array($result2)) {
                                                                                $cnta = $cnta + 1;
                                                                                $localIdNo = getLoanGuarantorLocalIDNo($row2[2], $row2[3]);
                                                                                ?>
                                                                                <tr>
                                                                                    <td>...</td>
                                                                                    <td><?php echo $cnta; ?></td>
                                                                                    <td><?php echo $row2[1]; ?></td>
                                                                                    <td><?php echo $localIdNo; ?></td>
                                                                                    <td></td>
                                                                                    <td style="display:none;"><?php echo $row2[2]; ?></td>
                                                                                    <td style="display:none;"><?php echo $row2[0]; ?></td>
                                                                                </tr>
                                                                                <?php
                                                                            }
                                                                            ?>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--</fieldset>-->
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div id="prflCMDataEDT" class="tab-pane fade" style="border:none !important;"></div>
                            <div id="prflCMAttchmntEDT" class="tab-pane fade" style="border:none !important;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <?php
    }
}

function getMCFLoanAppsRdOnlyDsply($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType) {
//    global $canview;
//    if (!$canview) {
//        restricted();
//        exit();
//    }
    $trnsType = "LOAN APPLICATION";
    $formTitle = "Loan Application Attached Document";
    $pgNo = 15;
    $subPgNo = 4.1;
    $pkID = $srcDocID;
    $trnsStatus = "Incomplete";
    $rqstatusColor = "red";
    $ttlColor = "blue";
    $mkReadOnly = "readonly=\"true\"";
    $mkReadOnlyDsbld = "disabled=\"true\"";
    $btnDontDsply = 'style="display:none !important;"';
    $mkRmrkReadOnly = "";
    $trnsTtl = 0.00;
    $crncy = "GHS";
    $crncyID = "";
    $isDisbursed = "NO";
    $payDate = "";
    $vwtypActn = "VIEW";
    global $orgID;

//var_dump($_POST);
    $result = get_LoanRqstDet($pkID);
    while ($row = loc_db_fetch_array($result)) {

        $trnsStatus = $row[8];
        //$voidedTrnsHdrID = (int) $row[6];
        $trnsTtl = (float) $row[27];
        $isDisbursed = $row[28];

        $result3 = get_LoanPrdtDetsForLoanApplctn($row[14]);
        $row3 = loc_db_fetch_array($result3);

        $bnkBranch = getGnrlRecNm("org.org_sites_locations", "location_id", "site_desc||' ('||location_code_name||')'", $row[3]);
        $rcvryOfficer = getGnrlRecNm("prs.prsn_names_nos", "person_id", "trim(title || ' ' || sur_name || ', ' || first_name || ' ' || other_names)", $row[7]);
        $rpymntAccNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $row[19]);
        $cashColtAccNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $row[20]);
        /* Add */
        $topUpRqstNo = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $row[24]);
        $crncyIsoCode = getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "iso_code", $row3[1]);

        $actn = "ADD";
        $pMode = 0; //NEW
        if ($trnsStatus == "Initiated" || $trnsStatus == "Approved" || $trnsStatus == "Rescheduled" || $trnsStatus == "Topped-Up") {
            $actn = "SMRYPAGE";
            $pMode = 1; //NEW
        }
        ?>
        <div class="row" style="margin: 0px 0px 10px 0px !important;" >
            <input type="hidden" id="lnRqstID" value="<?php echo $row[0]; ?>"/>
            <input type="hidden" id="lnprflFctrId" value="-1"/>
            <input type="hidden" id="assmntCmnts" value="<?php echo $row[24]; ?>"/>
            <input class="form-control" id="addOrEditForm" type = "hidden" placeholder="addOrEditForm" value="Edit"/>
        </div>
        <div class="row" style="margin: 0px 0px 10px 0px !important;">
            <div class="col-md-12" style="padding:0px 0px 0px 0px !important;">
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#allmodules', 'grp=17&typ=1&pg=2&vtyp=0');">Main Parameters</button>
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#prflCMDataEDT', 'grp=17&typ=1&pg=2&vtyp=1');">Standard Events Accounting</button>
                <button type="button" class="btn btn-default btn-sm phone-only-btn" onclick="openATab('#prflCMAttchmntEDT', 'grp=17&typ=1&pg=2&vtyp=2');">Custom Events Accounting</button>
            </div>
        </div>
        <div class="">
            <ul class="nav nav-tabs rho-hideable-tabs" style="margin-top:-10px !important;">
                <li class="active"><a data-toggle="tab" data-rhodata="&pg=2&vtyp=0" href="#prflCMHomeEDT" id="prflCMHomeEDTtab">Application Details</a></li>
                <li id="standardEvtns" style="display: block;"><a data-toggle="tabajxprfledt" data-rhodata="&pg=2&vtyp=1" href="#prflCMDataEDT" onclick="newLoanRequestOpenATab('#prflCMDataEDT', 'grp=17&typ=1&pg=<?php echo $pgNo; ?>&subPgNo=<?php echo $subPgNo; ?>&vtyp=1&vtypActn=<?php echo $actn; ?>&pMode=<?php echo $pMode; ?>&onlyViewMode=<?php echo $vwtypActn; ?>');" id="prflCMDataEDTtab">Credit Risk Assessment</a></li>
                <li id="customEvnts" style="display: block;"><a data-toggle="tabajxprfledt" data-rhodata="&pg=2&vtyp=2" href="#prflCMAttchmntEDT" onclick="newLoanRequestOpenATab('#prflCMAttchmntEDT', 'grp=17&typ=1&pg=<?php echo $pgNo; ?>&subPgNo=<?php echo $subPgNo; ?>&vtyp=2&vtypActn=EDIT&routingID=<?php echo $routingID; ?>&inptSlctdRtngs=<?php echo $inptSlctdRtngs; ?>&actionToPrfrm=<?php echo $actionToPrfrm; ?>&srcDocID=<?php echo $srcDocID; ?>&srcDocType=<?php echo $srcDocType; ?>&onlyViewMode=<?php echo $vwtypActn; ?>');" id="prflCMAttchmntEDTtab">Workflow Approval</a></li>
            </ul>
            <div class="row">
                <div class="col-md-12">
                    <div class="custDiv">
                        <div class="tab-content">
                            <div id="prflCMHomeEDT" class="tab-pane fadein active" style="border:none !important;">
                                <div class="col-md-12" style="padding:0px 0px 10px 1px !important;">
                                    <div style="padding:0px 1px 0px 15px !important;float:left;">
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsStatusBtn">
                                            <span style="font-weight:bold;">Status: </span><span style="color:<?php echo $rqstatusColor; ?>;font-weight: bold;"><?php echo $trnsStatus; ?></span>
                                        </button>
                                        <button type="button"  <?php echo $btnDontDsply; ?>  class="btn btn-default btn-sm" style="height:30px;" onclick="getLoanRqstForm('myFormsModalLg', 'myFormsModalBodyLg', 'myFormsModalTitleLg', 'Edit Loan Request', 15, <?php echo $subPgNo; ?>, 0, 'EDIT', <?php echo $pkID; ?>, 'indCustTable', 'indCustTableRow1');" data-toggle="tooltip" title="Reload Transaction">
                                            <img src="cmn_images/refresh.bmp" style="padding-right: 2px; height:17px; width:auto; position: relative; vertical-align: middle;">
                                        </button>
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsTtlBtn">
                                            <span style="font-weight:bold;">Approved Amount: </span><span style="color:<?php echo $ttlColor; ?>;font-weight: bold;"><?php
                                                echo $crncyIsoCode . " " . number_format($trnsTtl, 2);
                                                ?></span>
                                        </button>
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" id="myVmsTrnsIsPaidBtn">
                                            <span style="font-weight:bold;">Disbursed: </span><span style="color:<?php echo $ttlColor; ?>;font-weight: bold;"><?php echo $isDisbursed; ?></span>
                                        </button>
                                        <button type="button" class="btn btn-default" style="height:30px;" onclick="getOneMcfDocsForm_Gnrl(<?php echo $pkID; ?>, '<?php echo $trnsType; ?>', 140, '<?php echo $formTitle; ?>');" data-toggle="tooltip" data-placement="bottom" title = "Attached Documents">
                                            <img src="cmn_images/adjunto.png" style="height:20px; width:auto; position: relative; vertical-align: middle;">
                                        </button>
                                    </div>
                                    <div style="padding:0px 1px 0px 1px !important;float:right;">
                                        <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="checkWkfRqstStatus(<?php echo $routingID; ?>, 'Teller Trns. Authorization Progress History');"><img src="cmn_images/workflow.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;">Progress&nbsp;</button>
                                        <?php if ($trnsStatus == "Approved" && $isDisbursed == "NO") { ?>
                                            <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="checkWkfRqstStatus(<?php echo $routingID; ?>, 'Teller Trns. Authorization Progress History');"><img src="cmn_images/workflow.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;" data-toggle="tooltip" title="Authorization Progress History">Progress&nbsp;</button>
                                            <button type="button" class="btn btn-default btn-sm" style="height:30px;" onclick="saveAccountTrnsRvrs(<?php echo $pgNo; ?>, '<?php echo $subPgNo; ?>', <?php echo $vwtyp; ?>, 'LOAN_PYMNT', 0);"><img src="cmn_images/90.png" style="left: 0.5%; padding-right: 5px; height:17px; width:auto; position: relative; vertical-align: middle;">Void Transaction&nbsp;</button>
                                        <?php } ?>
                                    </div>
                                </div>
                                <form class="form-horizontal" id="customerAccountForm">
                                    <div style="display:none;">
                                        <!--DATA FOR VALIDATIONS-->
                                        <input type="hidden" id="currencyId" value="<?php echo $row3[1]; ?>">
                                        <input type="hidden" id="isAccountRqrd" value="<?php echo $row3[2]; ?>">
                                        <input type="hidden" id="loanMaxAmount" value="<?php echo $row3[3]; ?>">
                                        <input type="hidden" id="loanMinAmount" value="<?php echo $row3[4]; ?>">
                                        <input type="hidden" id="maxLoanTenor" value="<?php echo $row3[5]; ?>">
                                        <input type="hidden" id="maxLoanTenorType" value="<?php echo $row3[6]; ?>">
                                        <input type="hidden" id="guarantorRequired" value="<?php echo $row3[7]; ?>">
                                        <input type="hidden" id="guarantorNo" value="<?php echo $row3[8]; ?>">
                                        <input type="hidden" id="productType" value="<?php echo $row3[9]; ?>">
                                        <input type="hidden" id="custTypeCustgrp" value="<?php echo $row3[10]; ?>">
                                        <input type="hidden" id="custTypeCorp" value="<?php echo $row3[11]; ?>">
                                        <input type="hidden" id="custTypeInd" value="<?php echo $row3[12]; ?>">
                                        <input type="hidden" id="cashCollateralRqrd" value="<?php echo $row3[13]; ?>">
                                        <input type="hidden" id="valueFlatCashColt" value="<?php echo $row3[14]; ?>">
                                        <input type="hidden" id="valuePrcntCashColt" value="<?php echo $row3[15]; ?>">
                                        <input type="hidden" id="prptyCollateralRqrd" value="<?php echo $row3[16]; ?>">
                                        <input type="hidden" id="valueFlatPrptyColt" value="<?php echo $row3[17]; ?>">
                                        <input type="hidden" id="valuePrcntPrptyColt" value="<?php echo $row3[18]; ?>">
                                        <input type="hidden" id="invstmntCollateralRqrd" value="<?php echo $row3[19]; ?>">
                                        <input type="hidden" id="valueInvstmntCashColt" value="<?php echo $row3[20]; ?>">
                                        <input type="hidden" id="valueInvstmntPrcntColt" value="<?php echo $row3[21]; ?>">
                                        <input type="hidden" id="minLoanTenor" value="<?php echo $row3[22]; ?>">
                                        <input type="hidden" id="minLoanTenorType" value="<?php echo $row3[23]; ?>">
                                        <input type="hidden" id="baseIntRate" value="<?php echo $row3[24]; ?>">
                                    </div>
                                    <div class="row"><!-- ROW 1 -->
                                        <div class="col-lg-12">
                                            <!--<fieldset class="basic_person_fs5">-->
                                            <legend class="basic_person_lg1" style="margin-top:5px !important;margin-bottom: 10px !important;">Application Header</legend>
                                            <div class="col-lg-4">
                                                <input class="form-control" id="loanRqstID" type = "hidden" placeholder="Loan Request ID" value="<?php echo $row[0]; ?>"/>
                                                <div class="form-group form-group-sm">
                                                    <label for="rqsNumber" class="control-label col-md-4">Request No:</label>
                                                    <div class="col-md-8">
                                                        <input class="form-control" id="rqsNumber" type = "text" placeholder="" value="<?php echo $row[1]; ?>" readonly/>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="applctnDate" class="control-label col-md-4">Appl. Date:</label>
                                                    <div  class="col-md-8">
                                                        <div class="input-group date form_date" data-date="" data-date-format="dd-M-yyyy" data-link-field="dtp_input3" data-link-format="yyyy-mm-dd">
                                                            <input class="form-control" size="16" type="text" id="applctnDate" value="<?php echo $row[2]; ?>" readonly="">
                                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="bnkBranch" class="control-label col-md-4">Branch:</label>
                                                    <div  class="col-md-8">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control" aria-label="..." id="bnkBranch" value="<?php echo $bnkBranch; ?>" readonly="">
                                                            <input type="hidden" id="bnkBranchID" value="<?php echo $row[3]; ?>">
                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Sites/Locations New', 'gnrlOrgID', '', '', 'radio', true, '', 'bnkBranchID', 'bnkBranch', 'clear', 1, '');">
                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-3">
                                                <div class="form-group form-group-sm">
                                                    <label for="prpsOfLoan" class="control-label col-md-3">Purpose:</label>
                                                    <div  class="col-md-9">
                                                        <textarea <?php echo $mkReadOnly; ?> class="form-control" id="prpsOfLoan" cols="2" placeholder="Purpose of Loan" rows="5"><?php echo $row[4]; ?></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-5">
                                                <div class="form-group form-group-sm">
                                                    <label for="acctNumber" class="control-label col-md-5">Loan Account Number:</label>
                                                    <div class="col-md-7">
                                                        <input class="form-control" id="acctNumber" type = "text" placeholder="" value="<?php echo $row[6]; ?>" readonly/>
                                                        <!--LOAN APPLICATION ID-->
                                                        <input class="form-control" id="acctID" type = "hidden" placeholder="Account ID" value="<?php echo $row[5]; ?>"/>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="rcvryOfficer" class="control-label col-md-5">Recovery Officer:</label>
                                                    <div  class="col-md-7">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control" aria-label="..." id="rcvryOfficer" value="<?php echo $rcvryOfficer; ?>" readonly>
                                                            <input type="hidden" id="rcvryOfficerID" value="<?php echo $row[7]; ?>">
                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="clearROLovField('rcvryOfficer', 'rcvryOfficerID');">
                                                                <span class="glyphicon glyphicon-remove"></span>
                                                            </label>
                                                            <label class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'MCF Recovery Officers', 'gnrlOrgID', '', '', 'radio', true, '', 'rcvryOfficerID', 'rcvryOfficer', 'clear', 1, '');">
                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group form-group-sm">
                                                    <label for="status" class="control-label col-md-5">Status:</label>
                                                    <div class="col-md-7">
                                                        <input class="form-control" id="status" type = "text" style="color:<?php echo $rqstatusColor; ?>;font-weight: bold;" placeholder="" value="<?php echo $row[8]; ?>" readonly/>
                                                    </div>
                                                </div>

                                            </div>
                                            <!--</fieldset>-->
                                        </div>
                                    </div>
                                    <div class="row"><!-- ROW 2 -->
                                        <div class="col-lg-12">
                                            <!--<fieldset class="basic_person_fs1" style="margin-top:5px !important;">-->
                                            <legend class="basic_person_lg1" style="margin-top:10px !important;margin-bottom: 10px !important;">Application Details</legend>
                                            <div class="row"><!-- ROW 1 -->
                                                <div class="col-lg-6">
                                                    <fieldset class="basic_person_fs1"><legend class="basic_person_lg1">Request Details</legend>
                                                        <div class="form-group form-group-sm">
                                                            <label for="custType" class="control-label col-md-4">Customer Type:</label>
                                                            <input type="hidden" id="custTypeYes" value="YES">
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="custType" onchange="onChangeOfCustType()">
                                                                    <?php
                                                                    $sltdCorp = "";
                                                                    $sltdIndv = "";
                                                                    $sltdGrp = "";
                                                                    if ($row[9] == "Corporate") {
                                                                        $sltdCorp = "selected";
                                                                    } else if ($row[9] == "Individual") {
                                                                        $sltdIndv = "selected";
                                                                    } else if ($row[9] == "Group") {
                                                                        $sltdGrp = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="Corporate" <?php echo $sltdCorp; ?>>Corporate</option>
                                                                    <option value="Individual" <?php echo $sltdIndv; ?>>Individual</option>
                                                                    <option value="Group" <?php echo $sltdGrp; ?>>Customer Group</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <?php
														$dsplyOptnCustGrp = "";
														if ($row[9] != "Group") {
															$dsplyOptnCustGrp = "style='display:none;'";
														}
														?>
														<div <?php echo $dsplyOptnCustGrp; ?> id="custGrpDiv">
															<div class="form-group form-group-sm">
																<label for="custGrp" class="control-label col-md-4">Group Name:</label>
																<div  class="col-md-8">
																	<div class="input-group">
																		<input type="text" class="form-control" aria-label="..." id="custGrp" value="<?php echo $row[11]; ?>" readonly="readonly">
																		<input type="hidden" id="custGrpID" value="<?php echo $row[10]; ?>">
																		<input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
																		<label class="btn btn-primary btn-file input-group-addon" onclick="onClickGroupNmOrCust(0)">
																			<span class="glyphicon glyphicon-th-list"></span>
																		</label>
																	</div>
																</div>
															</div>
															<div class="form-group form-group-sm">
																<label for="grpApplicantType" class="control-label col-md-4">Applicant Type:</label>
																<div  class="col-md-8">
																	<select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="grpApplicantType" onchange="onChangeOfGrpApplcntType()">
																		 <?php
																		$sltdIndv2 = "";
																		$sltdGrp2 = "";
																		if ($row[36] == "Individual") {
																			$sltdIndv2 = "selected";
																		} else if ($row[36] == "Group") {
																			$sltdGrp2 = "selected";
																		}
																		?>
																		<option value="Individual" <?php echo $sltdIndv2; ?>>Individual</option>
																		<option value="Group" <?php echo $sltdGrp2; ?>>Customer Group</option>
																	</select>
																</div>
															</div>
														</div>
														<div class="form-group form-group-sm">
															<label for="bnkCustomer" class="control-label col-md-4">Applicant Name:</label>
															<div  class="col-md-8">
																<div class="input-group">
																	<input type="text" class="form-control" aria-label="..." id="bnkCustomer" value="<?php echo $row[13]; ?>" readonly="readonly">
																	<input type="hidden" id="bnkCustomerID" value="<?php echo $row[12]; ?>">
																	<input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
																	<label class="btn btn-primary btn-file input-group-addon" onclick="onClickGroupNmOrCust(1);">
																		<span class="glyphicon glyphicon-th-list"></span>
																	</label>
																</div>
															</div>
														</div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="crdtType" class="control-label col-md-4">Credit Type:</label>
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="crdtType" onchange="onChangeCrdtType();">
                                                                    <?php
                                                                    $sltdLoan = "";
                                                                    $sltdOD = "";
                                                                    if ($row[9] == "Loan") {
                                                                        $sltdLoan = "selected";
                                                                    } else if ($row[9] == "Overdraft") {
                                                                        $sltdOD = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="Loan" <?php echo $sltdLoan; ?>>Loan</option>
                                                                    <option value="Overdraft" <?php echo $sltdOD; ?>>Overdraft</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="prdtType" class="control-label col-md-4">Product:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="prdtType" value="<?php echo $row[15]; ?>" readonly="readonly">
                                                                    <input type="hidden" id="prdtTypeID" value="<?php echo $row[14]; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="rqstType" class="control-label col-md-4">Request Type:</label>
                                                            <div  class="col-md-8">
                                                                <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="rqstType" onchange="onChangeOfRqstType();">
                                                                    <?php
                                                                    $sltdNwLn = "";
                                                                    $sltdTpUp = "";
                                                                    $sltdRshdl = "";
                                                                    if ($row[23] == "New Request") {
                                                                        $sltdNwLn = "selected";
                                                                    } else if ($row[23] == "Top-Up Request") {
                                                                        $sltdTpUp = "selected";
                                                                    } else if ($row[23] == "Reschedule Request") {
                                                                        $sltdRshdl = "selected";
                                                                    }
                                                                    ?>
                                                                    <option value="New Request" <?php echo $sltdNwLn; ?>>New Request</option>
                                                                    <option value="Top-Up Request" <?php echo $sltdTpUp; ?>>Top-Up Request</option>
                                                                    <option value="Reschedule Request" <?php echo $sltdRshdl; ?>>Reschedule Request</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        $dsplyOptn = "";
                                                        if ($row[23] == "New Request") {
                                                            $dsplyOptn = "style='display:none;'";
                                                        }
                                                        ?>
                                                        <div class="form-group form-group-sm" <?php echo $dsplyOptn; ?> id="rqstIdForTopupDiv">
                                                            <label for="refLoanrqst" class="control-label col-md-4">Request ID - Ref.:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input type="text" class="form-control" aria-label="..." id="refLoanrqst" value="<?php echo $topUpRqstNo; ?>" readonly="readonly">
                                                                    <input type="hidden" id="refLoanrqstID" value="<?php echo $row[24]; ?>">
                                                                    <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                    <label class="btn btn-primary btn-file input-group-addon" onclick="onClickRefLoanRqst(<?php echo $pgNo; ?>,<?php echo $subPgNo; ?>);">
                                                                        <span class="glyphicon glyphicon-th-list"></span>
                                                                    </label>
                                                                    <label class="btn btn-primary btn-file input-group-addon" title="View Details" onclick="">
                                                                        <img src="cmn_images/kghostview.png" style="height:20px; width:auto; position: relative; vertical-align: middle;">
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="loanAmount" class="control-label col-md-4">Amount:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <label id="crncyIsoCode" class="btn btn-primary btn-file input-group-addon">
                                                                        <?php echo $crncyIsoCode; ?>
                                                                    </label>
                                                                    <input <?php echo $mkReadOnly; ?> class="form-control" id="loanAmount" type = "number" min="0" placeholder="Amount" value="<?php echo $row[16]; ?>"/>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="loanTenor" class="control-label col-md-4">Tenure:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group col-md-12">
                                                                    <div  class="col-md-4" style="padding-left:0px !important;">
                                                                        <input <?php echo $mkReadOnly; ?> class="form-control" id="loanTenor" type = "number" min="0" placeholder="" value="<?php echo $row[17]; ?>"/>
                                                                    </div>
                                                                    <div  class="col-md-8" style="padding-left:0px !important; padding-right: 0px !important; ">
                                                                        <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="loanTenorType" >
                                                                            <?php
                                                                            $sltdYears = "";
                                                                            $sltdMonths = "";
                                                                            if ($row[18] == "Year(s)") {
                                                                                $sltdYears = "selected";
                                                                            } else if ($row[18] == "Month(s)") {
                                                                                $sltdMonths = "selected";
                                                                            }
                                                                            ?>
                                                                            <option value="Year(s)" <?php echo $sltdYears; ?>>Year(s)</option>
                                                                            <option value="Month(s)" <?php echo $sltdMonths; ?>>Month(s)</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="form-group form-group-sm">
                                                            <label for="interestRate" class="control-label col-md-4">Interest Rate:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group">
                                                                    <input <?php echo $mkReadOnly; ?> class="form-control" id="interestRate" type = "number" min="0" placeholder="Interest Rate" value="<?php echo $row[25]; ?>"/>
                                                                    <label class="btn btn-primary btn-file input-group-addon" style="padding-left: 2px !important;">
                                                                        % Per Annum
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <?php
                                                        $dsplyRSADOptn = "";
                                                        if ($row3[2] == "No" && $row[26] == "Manual Payments") {
                                                            $dsplyRSADOptn = "style='display:none;'";
                                                        }
                                                        ?>
                                                        <div class="form-group form-group-sm">
                                                            <label for="rpmntSrcAcct" class="control-label col-md-4">Repayment:</label>
                                                            <div  class="col-md-8">
                                                                <div class="input-group col-md-12">
                                                                    <div  class="col-md-6" style="padding-left:0px !important; padding-right: 0px !important; ">
                                                                        <select <?php echo $mkReadOnlyDsbld; ?> class="form-control" id="rpmntSrcType" onchange="onChangeRpymntType();">
                                                                            <?php
                                                                            $sltdAcctDedctn = "";
                                                                            $sltdManPymnts = "";
                                                                            if ($row[26] == "Account Deductions") {
                                                                                $sltdAcctDedctn = "selected";
                                                                            } else if ($row[26] == "Manual Payments") {
                                                                                $sltdManPymnts = "selected";
                                                                            }
                                                                            ?>
                                                                            <option value="Account Deductions" selected <?php echo $sltdAcctDedctn; ?>>Account Deductions</option>
                                                                            <option value="Manual Payments" <?php echo $sltdManPymnts; ?>>Manual Payments</option>
                                                                        </select>
                                                                    </div>
                                                                    <div  class="col-md-6" style="padding-right: 0px !important; ">
                                                                        <div class="input-group">
                                                                            <input type="text" class="form-control" aria-label="..." id="rpmntSrcAcct" value="<?php echo $rpymntAccNo; ?>" readonly>
                                                                            <input type="hidden" id="rpmntSrcAcctID" value="<?php echo $row[19]; ?>">
                                                                            <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                            <label <?php echo $dsplyRSADOptn; ?> id="rpmntSrcAcctDiv" class="btn btn-primary btn-file input-group-addon" onclick="">
                                                                                <span class="glyphicon glyphicon-th-list"></span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="row"><!-- ROW 1 -->
                                                        <div class="col-lg-12">
                                                            <fieldset class="basic_person_fs5"><legend class="basic_person_lg1">Collateral(s)</legend>
                                                                <div  class="col-md-12">
                                                                    <?php
                                                                    $dsplyCCOptn = "";
                                                                    $dsplyICOptn = "";
                                                                    $dsplyPCOptn = "";
                                                                    if ($row3[13] == "No") {
                                                                        $dsplyCCOptn = "style='display:none;'";
                                                                    }
                                                                    if ($row3[19] == "No") {
                                                                        $dsplyICOptn = "style='display:none;'";
                                                                    }
                                                                    if ($row3[16] == "No") {
                                                                        $dsplyPCOptn = "style='display:none;'";
                                                                    }
                                                                    ?>
                                                                    <div class="form-group form-group-sm" id="cashColtDiv1">
                                                                        <label for="cashCollateral" class="control-label col-md-4">Cash:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="cashColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="cashCollateral" readonly="readonly" value="<?php echo $cashColtAccNo; ?>">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="cashCollateralValue" value="" readonly>
                                                                                <input type="hidden" id="cashCollateralID" value="<?php echo $row[20]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="cashColtDiv" <?php echo $dsplyCCOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'All Bank Accounts (For Loan Repayment)', 'gnrlOrgID', '', '', 'radio', true, '', 'cashCollateralID', 'cashCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group form-group-sm" id="investmentColtDiv1">
                                                                        <label for="invstmntCollateral" class="control-label col-md-4">Investment:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="investmentColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="invstmntCollateral" readonly="readonly" value="">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="invstmntCollateral" value="" readonly>
                                                                                <input type="hidden" id="invstmntCollateralID" value="<?php echo $row[21]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="investmentColtDiv" <?php echo $dsplyICOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Investment Collaterals', 'gnrlOrgID', '', '', 'radio', true, '', 'invstmntCollateralID', 'invstmntCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="form-group form-group-sm" id="propertyColtDiv1">
                                                                        <label for="prptyCollateral" class="control-label col-md-4">Property:</label>
                                                                        <div  class="col-md-8">
                                                                            <div class="input-group" id="propertyColtDivIG" style="width:100% !important;">
                                                                                <input type="text" class="form-control" aria-label="..." id="prptyCollateral" readonly="readonly" value="">
                                                                                <input type="hidden" class="form-control" aria-label="..." id="prptyCollateral" value="" readonly>
                                                                                <input type="hidden" id="prptyCollateralID" value="<?php echo $row[22]; ?>">
                                                                                <input type="hidden" id="gnrlOrgID" value="<?php echo $orgID; ?>">
                                                                                <label id="propertyColtDiv" <?php echo $dsplyPCOptn; ?> class="btn btn-primary btn-file input-group-addon" onclick="getLovsPage('myLovModal', 'myLovModalTitle', 'myLovModalBody', 'Property Collaterals', 'gnrlOrgID', '', '', 'radio', true, '', 'prptyCollateralID', 'prptyCollateral', 'clear', 1, '');">
                                                                                    <span class="glyphicon glyphicon-th-list"></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                    </div>
                                                    <div class="row"><!-- ROW 2 -->
                                                        <div class="col-lg-12">
                                                            <fieldset id="guarantorsFldSt" class="basic_person_fs5"><legend id="guarantorsLgnd" class="basic_person_lg1">Guarantor(s)</legend>
                                                                <div  class="col-md-12">
                                                                    <div class="row"><!-- ROW 3 -->
                                                                        <div class="col-lg-6">
                                                                            <button type="button" <?php echo $btnDontDsply; ?> class="btn btn-default" style="margin-bottom: 5px;" onclick="getLoanGrntaForm('myLovModal', 'myLovModalBody', 'myLovModalTitle', 'acctSignatoryForm', '', 'Add Guarantor', 15, <?php echo $subPgNo; ?>, 5, '', -1);">
                                                                                <img src="cmn_images/add1-64.png" style="left: 0.5%; padding-right: 5px; height:20px; width:auto; position: relative; vertical-align: middle;">
                                                                                Add Guarantor
                                                                            </button>
                                                                        </div>
                                                                        <div class="col-lg-6">&nbsp;</div>
                                                                    </div>
                                                                    <table id="loanGuarantorsTblAdd" class="table table-striped table-bordered table-responsive" cellspacing="0" width="100%" style="width:100%;">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>...</th>
                                                                                <th>No.</th>
                                                                                <th>Guarantor</th>
                                                                                <th>ID No.</th>
                                                                                <th>...</th>
                                                                                <th style="display:none;">Src Type</th>
                                                                                <th style="display:none;">GuatantorID</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <?php
                                                                            $lmt = get_Loan_GuarantorsTtl($pkID, "%");
                                                                            $cnta = 0;
                                                                            $result2 = get_Loan_Guarantors($pkID, "%", 0, $lmt);
                                                                            while ($row2 = loc_db_fetch_array($result2)) {
                                                                                $cnta = $cnta + 1;
                                                                                $localIdNo = getLoanGuarantorLocalIDNo($row2[2], $row2[3]);
                                                                                ?>
                                                                                <tr>
                                                                                    <td>...</td>
                                                                                    <td><?php echo $cnta; ?></td>
                                                                                    <td><?php echo $row2[1]; ?></td>
                                                                                    <td><?php echo $localIdNo; ?></td>
                                                                                    <td></td>
                                                                                    <td style="display:none;"><?php echo $row2[2]; ?></td>
                                                                                    <td style="display:none;"><?php echo $row2[0]; ?></td>
                                                                                </tr>
                                                                                <?php
                                                                            }
                                                                            ?>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </fieldset>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <!--</fieldset>-->
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div id="prflCMDataEDT" class="tab-pane fade" style="border:none !important;"></div>
                            <div id="prflCMAttchmntEDT" class="tab-pane fade" style="border:none !important;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <?php
    }
}


function updateMCFLoanAppsAtzrLmtID($trnsHdrId, $athrzrLmtID) {
    global $usrID;
    $datestr = getDB_Date_time();
    $updSQL = "UPDATE mcf.mcf_loan_request
            SET last_update_by = $usrID,
                last_update_date = '$datestr',
                approval_limit_id = $athrzrLmtID
            WHERE loan_rqst_id = $trnsHdrId";
    $affctd = execUpdtInsSQL($updSQL);
    return $affctd;
}

function getMCFLoanAppsAttchMnts($acntTrnsId) {
    global $ftp_base_db_fldr;
    $sqlStr = "SELECT string_agg(REPLACE(a.attchmnt_desc,';',','),';') attchmnt_desc,
string_agg(REPLACE('" . $ftp_base_db_fldr . "/Vms/' || a.file_name,';',','),';') file_name
  FROM mcf.mcf_doc_attchmnts a
  WHERE attchmnt_src IN ('LOAN APPLICATION') and src_id=" . $acntTrnsId;
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function updateMCFLoanAppStatus($trnsHdrId, $nwApprvlStatus, $cur_prsnid = -1, $apprvdLoanAmount = 0.00, $apprvdLoanTenor = -1, $apprvdLoanTenorType = "", $apprvdInterestRate = -1, $apprvlCmnts = "") {
    global $usrID;
    global $prsnid;
    $extrUpdate = "";
    $datestr = getDB_Date_time();
    $cur_prsnid = $prsnid;
    if (/* $cur_prsnid <= 0 && */$nwApprvlStatus == "Approved") {
        $extrUpdate = ", authorized_by_person_id = $cur_prsnid, autorization_date = '$datestr',
            approved_amount = " . $apprvdLoanAmount . ",
            apprvd_loan_tenor = " . $apprvdLoanTenor . ",
            apprvd_loan_tenor_type = '" . loc_db_escape_string($apprvdLoanTenorType) . "',
            apprvd_interest_rate = " . $apprvdInterestRate . ",
            authorizer_comments = '" . loc_db_escape_string($apprvlCmnts) . "' ";
    }

        $grpMemberApplctnsExstCnt = grpMemberApplctnExists($trnsHdrId);
        if($nwApprvlStatus == "Approved" && (int)$grpMemberApplctnsExstCnt > 0){
            $extrUpdate1 = ", authorized_by_person_id = $cur_prsnid, autorization_date = '$datestr',
                apprvd_loan_tenor = " . $apprvdLoanTenor . ",
                apprvd_loan_tenor_type = '" . loc_db_escape_string($apprvdLoanTenorType) . "',
                apprvd_interest_rate = " . $apprvdInterestRate . ",
                authorizer_comments = '" . loc_db_escape_string($apprvlCmnts) . "' ";

            $updSQL1 = "UPDATE mcf.mcf_loan_request
                    SET status = '" . loc_db_escape_string($nwApprvlStatus) . "',
                    last_update_by = $usrID,
                    last_update_date = '$datestr'" . $extrUpdate1 . "
                WHERE loan_rqst_id IN (SELECT loan_rqst_id FROM mcf.mcf_loan_request_grp_members WHERE parent_loan_rqst_id = $trnsHdrId)";
                execUpdtInsSQL($updSQL1);

        }

    $updSQL = "UPDATE mcf.mcf_loan_request
            SET status = '" . loc_db_escape_string($nwApprvlStatus) . "',
            last_update_by = $usrID,
            last_update_date = '$datestr'" . $extrUpdate . "
        WHERE loan_rqst_id = $trnsHdrId";
    $affctd = execUpdtInsSQL($updSQL);
    return $affctd;
}

function mcfLoanAppsReqMsgActns($routingID = -1, $inptSlctdRtngs = "", $actionToPrfrm = "Initiate", $srcDocID = -1, $srcDocType = "Banking Transactions", $apprvdLoanAmount = 0, $apprvdLoanTenor = -1, $apprvdLoanTenorType = "Year(s)", $apprvdInterestRate = -1, $apprvlCmnts = "") {
    global $app_url;
    global $admin_name;
    $userID = $_SESSION['USRID'];
    $user_Name = $_SESSION['UNAME'];
    $cur_prsnid = $_SESSION['PRSN_ID'];
    $rtngMsgID = -1;
    $affctd = 0;
    $affctd1 = 0;
    $affctd2 = 0;
    $affctd3 = 0;
    $affctd4 = 0;
    $affctd5 = false;
    $affctd5Msg = "";
    $curPrsnsLevel = -123456789;
    $msgTitle = "";
    $msgBdy = "";
    $nwPrsnLocID = isset($_POST['toPrsLocID']) ? cleanInputData($_POST['toPrsLocID']) : "";
    $apprvrCmmnts = isset($_POST['actReason']) ? cleanInputData($_POST['actReason']) : "";
    $fromPrsnID = getUserPrsnID($user_Name);
    $usrFullNm = getPrsnFullNm($fromPrsnID);
    $msg = "";
    $dsply = "";
    $msg_id = -1;
    $appID = -1;
    $hrchyid = -1;
    $attchmnts = "";
    $reqestDte = getFrmtdDB_Date_time();

    $srcdoctyp = $srcDocType;
    $srcdocid = $srcDocID;

    $reportTitle = "Send Outstanding Bulk Messages";
    $reportName = "Send Outstanding Bulk Messages";
    $rptID = getRptID($reportName);
    $prmID = getParamIDUseSQLRep("{:msg_batch_id}", $rptID);
    $msgBatchID = -1;

    //$dsply.= "routingID fxn".$routingID." ".$actionToPrfrm;
    //session_write_close();
    if ($routingID <= 0 && $inptSlctdRtngs == "") {
        if ($srcDocID > 0) {
            $rqstHdrStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcDocID);
            if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Approved' || ($rqstHdrStatus == 'Initiated' && $actionToPrfrm == "Initiate" && $routingID <= 0)) {
                return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
            }
        }
        if ($actionToPrfrm == "Initiate" && $srcDocID > 0) {
            $msg_id = getWkfMsgID();
            $appID = getAppID('Loan Applications', 'Banking');
            //Requestor
            $prsnid = $fromPrsnID;
            $fullNm = $usrFullNm;
            $prsnLocID = getPersonLocID($prsnid);
            $loanAmnt = (float)getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_amount", $srcDocID);
            $custName = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id",
                    "CASE WHEN cust_type = 'Group' THEN mcf.get_customer_name(grp_applicant_type, cust_id)||' ('||mcf.get_cust_local_idno(cust_id)||') ['||mcf.get_customer_name(cust_type, grp_cust_id)||']' "
                    . "ELSE  mcf.get_customer_name(cust_type, cust_id)||' ['||mcf.get_cust_local_idno(cust_id)||']' end", $srcDocID);

            $crncyCde = getLoanRqstCrncy($srcDocID);

            //Message Header & Details
            //$msghdr = "$fullNm ($prsnLocID) Requests for approval of a Loan Application";
            $msghdr = "Loan Application for $custName  for $crncyCde".number_format($loanAmnt,2)." requires Approval";
            $msgbody = "LOAN APPLICATION REQUEST ON ($reqestDte):- "
                    . "A LOAN APPLICATION Transaction Request has been submitted by $fullNm ($prsnLocID) "
                    . "<br/>Please open the attached Work Document and attend to this Request.
                      <br/>Thank you.";
            $msgtyp = "Work Document";
            $msgsts = "0";

            $athrzrLmtID = -1;
            $siteID = -1;
            $trnsTyp = "";
            $crncyID = "";
            $trnsAmnt = "";
            $siteDesc = "";
            $rslt1 = executeSQLNoParams("SELECT distinct a.branch_id, c.mapped_lov_crncy_id, a.loan_amount, org.get_site_desc(a.branch_id::integer) FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans b, mcf.mcf_currencies c
                    WHERE a.loan_product_id = b.loan_product_id AND
                    b.currency_id = c.crncy_id AND a.loan_rqst_id = $srcdocid");

            while ($rw1 = loc_db_fetch_array($rslt1)) {
                $siteID = (int) $rw1[0];
                $trnsTyp = "Loan Applications";
                $crncyID = (int) $rw1[1];
                $trnsAmnt = (float) $rw1[2];
                $siteDesc = $rw1[3];
            }

            $hrchyid = (int) getGnrlRecID2("wkf.wkf_hierarchy_hdr", "hierarchy_name", "hierarchy_id", $siteDesc . " Loan Approval Hierarchy"); //Get hierarchy ID
            $rslt = getMCFLoanAppsAttchMnts($srcDocID);
            $attchmnts = ""; //Get Attachments
            $attchmnts_desc = ""; //Get Attachments
            while ($rw = loc_db_fetch_array($rslt)) {
                $attchmnts = $rw[1];
                $attchmnts_desc = $rw[0];
            }

            createWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
            //Get Hierarchy Members

            $result = getNextApprvrsInMnlHrchy($hrchyid, $curPrsnsLevel);
            $prsnsFnd = 0;
            $lastPrsnID = "|";
            $msgBatchID = getMsgBatchID();
            $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
            while ($row = loc_db_fetch_array($result)) {
                $athrzrLmtID = -1;
                $toPrsnID = (float) $row[0];
                $prsnsFnd++;
                if ($toPrsnID > 0) {
                    routWkfMsg($msg_id, $prsnid, $toPrsnID, $userID, 'Initiated', 'Open;Reject;Request for Information;Approve');
                    $dsply = '<div style="text-align:center;font-weight:bold;font-size:14px;color:blue;">SUCCESS!</br>Your request has been submitted for Approval. Thank you!</div>';
                    $msg = $dsply;
                    //Begin Email Sending Process
                    /* $result1 = getEmlDetailsB4Actn($srcdoctyp, $srcdocid);
                      while ($row1 = loc_db_fetch_array($result1)) {
                      $frmID = $toPrsnID;
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row1[1];
                      $actSoFar = $row1[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row1[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                }
            }
            if ($prsnsFnd <= 0) {
                $dsply .= "|ERROR|-No Approval Hierarchy Found<br/>";
                $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
            } else {
                //Update Request Status to In Process
                updateMCFLoanAppStatus($srcdocid, "Initiated", -1);
                updateMCFLoanAppsAtzrLmtID($srcdocid, $athrzrLmtID);
            }
        } else {
            $dsply .= "|ERROR|-Update Failed! No Workflow Document(s) Generateddd<br/>";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    } else {
        $orgnlToPrsnID = -1;
        if ($routingID > 0) {
            $athrzrLmtID = -1;
            $siteID = -1;
            $trnsTyp = "";
            $crncyID = "";
            $trnsAmnt = "";
            $siteDesc = "";
            $rslt1 = executeSQLNoParams("SELECT distinct a.branch_id, c.mapped_lov_crncy_id, a.loan_amount, org.get_site_desc(a.branch_id::integer) FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans b, mcf.mcf_currencies c
                    WHERE a.loan_product_id = b.loan_product_id AND
                    b.currency_id = c.crncy_id AND a.loan_rqst_id = $srcdocid");

            while ($rw1 = loc_db_fetch_array($rslt1)) {
                $siteID = (int) $rw1[0];
                $trnsTyp = "Loan Applications";
                $crncyID = (int) $rw1[1];
                $trnsAmnt = (float) $rw1[2];
                $siteDesc = $rw1[3];
            }

            $hrchyid = (int) getGnrlRecID2("wkf.wkf_hierarchy_hdr", "hierarchy_name", "hierarchy_id", $siteDesc . " Loan Approval Hierarchy"); //Get hierarchy ID

            $oldMsgbodyAddOn = "";
            $reslt1 = getWkfMsgRtngData($routingID);
            while ($row = loc_db_fetch_array($reslt1)) {
                $rtngMsgID = (float) $row[0];
                $msg_id = $rtngMsgID;
                $curPrsnsLevel = (float) $row[18];
                $isActionDone = $row[9];
                $oldMsgbodyAddOn = $row[17];
                $orgnlToPrsnID = (float) $row[2];
//$rtngMsgID = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "msg_id", $routingID);
//$curPrsnsLevel = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "to_prsns_hrchy_level", $routingID);
//$isActionDone = getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "is_action_done", $routingID);
            }
            $row = NULL;

            $reslt2 = getWkfMsgHdrData($rtngMsgID);
            while ($row = loc_db_fetch_array($reslt2)) {
                $msgTitle = $row[1]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_hdr", $rtngMsgID);
                $msgBdy = $row[2]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_body", $rtngMsgID);
                $srcDocID = (float) $row[10]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_id", $rtngMsgID);
                $srcDocType = $row[9]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_type", $rtngMsgID);
                $orgnlPrsnUsrID = (float) $row[3]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "created_by", $rtngMsgID);
                //$hrchyid = (float) $row[5];
                $appID = (float) $row[7];
                $attchmnts = $row[13];
                $attchmnts_desc = $row[14]; //Get Attachments
            }
            if ($srcDocID > 0) {
                $rqstHdrStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcDocID);
                if (($rqstHdrStatus == 'Authorized' /* || $rqstHdrStatus == 'Approved' */) && $actionToPrfrm != "Open") {
                    return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
                }
            }
            $srcdoctyp = $srcDocType;
            $srcdocid = $srcDocID;
            $orgnlPrsnID = getUserPrsnID1($orgnlPrsnUsrID);
            if ($isActionDone == '0') {
                if ($actionToPrfrm == "Open") {
                    getMCFLoanAppsRdOnlyDsply($routingID, $inptSlctdRtngs, "Approve", $srcDocID, $srcDocType);
                } else if ($actionToPrfrm == "Reject") {
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Rejected", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "REJECTION ON $datestr:- This document has been Rejected by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                    //Message Header & Details
                    $msghdr = "REJECTED - " . $msgTitle;
                    $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Informational";
                    $msgsts = "0";
                    //$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, "Initiated", "Acknowledge;Open", 1, $msgbodyAddOn);
                    $affctd4 += updateMCFLoanAppStatus($srcdocid, "Rejected", -1);

                    //Begin Email Sending Process
                    /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                      $lastPrsnID = "|";
                      $msgBatchID = getMsgBatchID();
                      $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                      while ($row = loc_db_fetch_array($result)) {
                      $frmID = $row[0];
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row[1];
                      $actSoFar = $row[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Rejected!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Rejected";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Withdraw") {
                    if ($orgnlPrsnID == $cur_prsnid && $orgnlPrsnID > 0) {
                        $shdActnBeDone = true; //FALSE;
                        $srcDocIdStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcdocid);
                        if ($srcDocIdStatus == "Approved") {
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);
                            $apprvdLoanAmount = (float) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 1);
                            if ($affctd5Sucs) {
                                $shdActnBeDone = true;
                            } else {
                                $dsply .= $errMsgDsp;
                                $shdActnBeDone = false;
                            }
                        }

                        if ($shdActnBeDone) {
                            $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Withdrawn", "None", $userID);
                            if ($apprvrCmmnts == "") {
                                $apprvrCmmnts = "Withdrawal by Self";
                            }
                            $datestr = getFrmtdDB_Date_time();
                            $msgbodyAddOn = "";
                            $msgbodyAddOn .= "WITHDRAWAL ON $datestr:- This document has been Withdraw by $usrFullNm with the ff Message:<br/>";
                            $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                            $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                            $msgbodyAddOn .= $oldMsgbodyAddOn;

                            updateWkfMsgStatus($rtngMsgID, "1", $userID);
                            updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                            //Message Header & Details
                            $msghdr = "WITHDRAWAL - " . $msgTitle;
                            $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                            $msgtyp = "Informational";
                            $msgsts = "0";
                            //$msg_id = getWkfMsgID();

                            $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                            $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $srcDocIdStatus, "Acknowledge;Open", 1, $msgbodyAddOn);
                            $affctd4 += updateMCFLoanAppStatus($srcdocid, "Withdrawn", -1);

                            if ($affctd4 > 0 && $srcDocIdStatus == "Approved") {
                                //RESET APPROVAL DATA TO NULL;
                                $affctd5 = createLoanRqstApprvlRvsl($srcdocid, $affctd5Msg);
                            } else if ($srcDocIdStatus == "Initiated") {
                                $affctd5 = true;
                            }




                            //Begin Email Sending Process
                            /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                              $lastPrsnID = "|";
                              $msgBatchID = getMsgBatchID();
                              $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                              while ($row = loc_db_fetch_array($result)) {
                              $frmID = $row[0];
                              if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                              $lastPrsnID .= $frmID . "|";
                              continue;
                              }
                              $lastPrsnID .= $frmID . "|";
                              $subject = $row[1];
                              $actSoFar = $row[3];
                              if ($actSoFar == "") {
                              $actSoFar = "&nbsp;&nbsp;NONE";
                              }
                              $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                              $docType = $srcDocType;
                              $to = getPrsnEmail($frmID);
                              $nameto = getPrsnFullNm($frmID);
                              if ($docType != "" && $docType != "Login") {
                              $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                              . "<br/><br/>"
                              . $msgPart .
                              "<br/><br/>Kindly <a href=\""
                              . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                              $errMsg = "";
                              createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                              }
                              } */
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Withdrawn!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                        if (!$affctd5) {
                            $msg .= "</br><p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">|ERROR| $affctd5Msg</span></p>";
                        }
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Withdrawn";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Reverse") {
                    //$dsply .= "Approved Wai 0";
                    if (1 == 1) {
                        $shdActnBeDone = true;
                        $srcDocIdStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcdocid);
                        if ($srcDocIdStatus == "Approved") {
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);
                            $apprvdLoanAmount = (float) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 1);
                            if ($affctd5Sucs) {
                                $shdActnBeDone = true;
                            } else {
                                $dsply .= $errMsgDsp;
                                $shdActnBeDone = false;
                            }
                        }

                        if ($shdActnBeDone) {
                            $affctd += execUpdtInsSQL("UPDATE mcf.mcf_loan_request SET status = 'Withdrawn' WHERE loan_rqst_id = $srcdocid");

                            if ($affctd > 0 && $srcDocIdStatus == "Approved") {
                                $affctd5 = createLoanRqstApprvlRvsl($srcdocid, $affctd5Msg);
                            } else if ($srcDocIdStatus == "Initiated") {
                                $affctd5 = true;
                            }
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Loan Application Approval Successfully Reversed!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                        if (!$affctd5) {
                            $msg .= "</br><p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">|ERROR| $affctd5Msg</span></p>";
                        }
                    } else {
                        execUpdtInsSQL("UPDATE mcf.mcf_loan_request SET rvsl_comments = '' WHERE loan_rqst_id = $srcdocid");
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Reversed";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Request for Information") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Information Requested", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "INFORMATION REQUESTED ON $datestr:- A requested for Information has been generated by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", "Respond;Open", $curPrsnsLevel, $msgbodyAddOn);
                    //$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Information Requested!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Respond") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Response Given", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "RESPONSE TO INFORMATION REQUESTED ON $datestr:- A response to an Information Request has been given by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "RESPONSE TO INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", 'Open;Reject;Request for Information;Approve', $curPrsnsLevel, $msgbodyAddOn);
//$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Response Given!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Acknowledge") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Acknowledged", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "MESSAGE ACKNOWLEDGED ON $datestr:- An acknowledgement of the message has been given by $usrFullNm <br/><br/>";
//$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Acknowledged!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        //$dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
                        //$dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Approve") {
                    $affctd = 0;
                    if ($orgnlToPrsnID == $cur_prsnid && $orgnlToPrsnID > 0) {
                        $newStatus = "Reviewed";
                        $newVldtyStatus = "Validated"; //COMMENT
                        $nxtStatus = "Open;Reject;Request for Information;Approve";
                        $nxtApprvr = "Next Approver";
                        $nxtPrsnID = getNextApprvrInMnlHrchy($hrchyid, $curPrsnsLevel);
                        $shdActnBeDone = true; //FALSE;
                        if ($nxtPrsnID <= 0) {
                            $newStatus = "Approved";
                            $nxtStatus = "None;Acknowledge";
                        }
                        if ($shdActnBeDone === true) {
                            //DO COLLATERAL VALIDATIONS
                             $errMsgDsp = "";
                             $errMsgDsp1 = "";
                             $affctd5Sucs = false;
                             $affctd5Rslt = array();
                             $affctd5RsltCnt = 0;
                            $grpMemberApplctnsExstCnt = grpMemberApplctnExists($srcdocid);
                            if((int)$grpMemberApplctnsExstCnt > 0){

                                //executeSQLNoParams($strSql88);
                                $trnsRslt = createGrpMemberLoanApplctns($srcdocid);

                                if ($trnsRslt == 'SUCCESS') {
                                    $strSql88 = "SELECT rqst_grpmember_id, parent_loan_rqst_id, requested_amount, approved_amount, /*3*/
                                          loan_rqst_id, cust_id, gpmbr_repayment_account_id, gpmbr_cash_collateral_id, /*7*/
                                          gpmbr_invstmnt_collateral_id, gpmbr_property_collateral_id /*9*/
                                     FROM mcf.mcf_loan_request_grp_members WHERE parent_loan_rqst_id= $srcdocid";
                                      $result88 = executeSQLNoParams($strSql88);
                                      while ($row88 = loc_db_fetch_array($result88)) {
                                            $cashCollateralID = (int)$row88[7];
                                            $invstmntCollateralID = (int)$row88[8];
                                            $propertyCollateralID = (int)$row88[9];
                                            $apprvdLoanAmount1 = (float)$row88[3];//(float)$row88[2];
                                            $lnRqstId = (int)$row88[4];

                                            $affctd5Rslt =  validateLoanCollateralsLiens($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount1, $lnRqstId, "Loan", $errMsgDsp, $lnRqstId, 0);
                                            $affctd5RsltCnt = $affctd5RsltCnt + (int)$affctd5Rslt["lnCntr"]; //$disbDetArray["scheduledPrdcPaymntAmnt"]
                                            $errMsgDsp1 = $errMsgDsp1 . "</br>" .$affctd5Rslt["errMsg"]; //array("lnCntr"=>$lnCntr, "errMsg"=>$errMsg);
                                    }

                                    if($affctd5RsltCnt > 0){
                                          $dsply .= $errMsgDsp1;
                                    } else {
                                          $result99 = executeSQLNoParams($strSql88);
                                          while ($row99 = loc_db_fetch_array($result99)) {

                                                $cashCollateralID = (int)$row99[7];
                                                $invstmntCollateralID = (int)$row99[8];
                                                $propertyCollateralID = (int)$row99[9];
                                                $apprvdLoanAmount2 = (float)$row99[3];//(float)$row99[2];
                                                $lnRqstId = (int)$row99[4];

                                                $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount2, $lnRqstId, "Loan", $errMsgDsp, $lnRqstId, 0);
                                          }

                                          $affctd5Sucs = true;

                                    }
                                } else {
                                    $errMsgDsp = "Failed to Create and Approve Member Loan Applications </br>".$trnsRslt;
                                }

                            } else {
                                $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                                $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                                $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);

                                $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 0);

                                //DELETE ANY GRP MEMBERS APPS
                                execUpdtInsSQL("DELETE from mcf.mcf_loan_request_grp_members WHERE parent_loan_rqst_id = $srcdocid");
                            }

                            if ($affctd5Sucs) {

                                $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, $newStatus, $nxtStatus, $userID);
                                //$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                                $datestr = getFrmtdDB_Date_time();
                                $msgbodyAddOn = "";
                                $msgbodyAddOn .= strtoupper($newStatus) . " ON $datestr:- This document has been $newStatus by $usrFullNm <br/><br/>";
                                //$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                                $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                                $msgbodyAddOn .= $oldMsgbodyAddOn;
                                updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                                //Message Header & Details
                                if ($nxtPrsnID <= 0) {
                                    $nxtApprvr = "Original Person";
                                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                                    $msghdr = "APPROVED - " . $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Informational";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                } else {
                                    $msghdr = $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Work Document";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nxtPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                }

                                $affctd4 += updateMCFLoanAppStatus($srcdocid, $newStatus, $cur_prsnid, $apprvdLoanAmount, $apprvdLoanTenor, $apprvdLoanTenorType, $apprvdInterestRate, $apprvlCmnts);




                                /* if ($nxtPrsnID <= 0) {
                                  //Begin Email Sending Process
                                  $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                                  $lastPrsnID = "|";
                                  $msgBatchID = getMsgBatchID();
                                  $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                                  while ($row = loc_db_fetch_array($result)) {
                                  $frmID = $orgnlPrsnID;
                                  if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                                  $lastPrsnID .= $frmID . "|";
                                  continue;
                                  }
                                  $lastPrsnID .= $frmID . "|";
                                  $subject = $row[1];
                                  $actSoFar = $row[3];
                                  if ($actSoFar == "") {
                                  $actSoFar = "&nbsp;&nbsp;NONE";
                                  }
                                  $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                                  $docType = $srcDocType;
                                  $to = getPrsnEmail($frmID);
                                  $nameto = getPrsnFullNm($frmID);
                                  if ($docType != "" && $docType != "Login") {
                                  $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                                  . "<br/><br/>"
                                  . $msgPart .
                                  "<br/><br/>Kindly <a href=\""
                                  . $app_url . "\">Login via this Link</a> to <strong>VIEW</strong> it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                                  $errMsg = "";
                                  createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "",
                                  "Email");
                                  //sendEMail(trim(str_replace(";", ",", $to), ","), $nameto, $subject, $message, $errMsg, "", "", "", $admin_name);
                                  }
                                  break;
                                  }
                                  } */
                            } else {
                                $dsply .= $errMsgDsp;
                            }
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to $newStatus!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to $nxtApprvr!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
            }
        } else {
            $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Selected";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    }
    if ($msgBatchID > 0) {
        generateReportRun($rptID, $paramRepsNVals, -1);
    }
    return $msg;
}

function mcfLoanAppsReqMsgActns_ORIGINAL($routingID = -1, $inptSlctdRtngs = "", $actionToPrfrm = "Initiate", $srcDocID = -1, $srcDocType = "Banking Transactions", $apprvdLoanAmount = 0, $apprvdLoanTenor = -1, $apprvdLoanTenorType = "Year(s)", $apprvdInterestRate = -1, $apprvlCmnts = "") {
    global $app_url;
    global $admin_name;
    $userID = $_SESSION['USRID'];
    $user_Name = $_SESSION['UNAME'];
    $cur_prsnid = $_SESSION['PRSN_ID'];
    $rtngMsgID = -1;
    $affctd = 0;
    $affctd1 = 0;
    $affctd2 = 0;
    $affctd3 = 0;
    $affctd4 = 0;
    $affctd5 = false;
    $affctd5Msg = "";
    $curPrsnsLevel = -123456789;
    $msgTitle = "";
    $msgBdy = "";
    $nwPrsnLocID = isset($_POST['toPrsLocID']) ? cleanInputData($_POST['toPrsLocID']) : "";
    $apprvrCmmnts = isset($_POST['actReason']) ? cleanInputData($_POST['actReason']) : "";
    $fromPrsnID = getUserPrsnID($user_Name);
    $usrFullNm = getPrsnFullNm($fromPrsnID);
    $msg = "";
    $dsply = "";
    $msg_id = -1;
    $appID = -1;
    $attchmnts = "";
    $reqestDte = getFrmtdDB_Date_time();

    $srcdoctyp = $srcDocType;
    $srcdocid = $srcDocID;

    $reportTitle = "Send Outstanding Bulk Messages";
    $reportName = "Send Outstanding Bulk Messages";
    $rptID = getRptID($reportName);
    $prmID = getParamIDUseSQLRep("{:msg_batch_id}", $rptID);
    $msgBatchID = -1;

    //$dsply.= "routingID fxn".$routingID." ".$actionToPrfrm;
    //session_write_close();
    if ($routingID <= 0 && $inptSlctdRtngs == "") {
        if ($srcDocID > 0) {
            $rqstHdrStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcDocID);
            if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Approved' || ($rqstHdrStatus == 'Initiated' && $actionToPrfrm == "Initiate" && $routingID <= 0)) {
                return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
            }
        }
        if ($actionToPrfrm == "Initiate" && $srcDocID > 0) {
            $msg_id = getWkfMsgID();
            $appID = getAppID('Loan Applications', 'Banking');
            //Requestor
            $prsnid = $fromPrsnID;
            $fullNm = $usrFullNm;
            $prsnLocID = getPersonLocID($prsnid);

            //Message Header & Details
            $msghdr = "$fullNm ($prsnLocID) Requests for approval of a Loan Application";
            $msgbody = "LOAN APPLICATION REQUEST ON ($reqestDte):- "
                    . "A LOAN APPLICATION Transaction Request has been submitted by $fullNm ($prsnLocID) "
                    . "<br/>Please open the attached Work Document and attend to this Request.
                      <br/>Thank you.";
            $msgtyp = "Work Document";
            $msgsts = "0";
            $hrchyid = 1;            //(float) getGnrlRecID2("wkf.wkf_hierarchy_hdr", "hierarchy_name", "hierarchy_id", "Loan Approval Hierarchy") //Get hierarchy ID
            $rslt = getMCFLoanAppsAttchMnts($srcDocID);
            $attchmnts = ""; //Get Attachments
            $attchmnts_desc = ""; //Get Attachments
            while ($rw = loc_db_fetch_array($rslt)) {
                $attchmnts = $rw[1];
                $attchmnts_desc = $rw[0];
            }

            createWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
            //Get Hierarchy Members
            $athrzrLmtID = -1;
            $siteID = -1;
            $trnsTyp = "";
            $crncyID = "";
            $trnsAmnt = "";
            $rslt1 = executeSQLNoParams("SELECT distinct a.branch_id, c.mapped_lov_crncy_id, a.loan_amount FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans b, mcf.mcf_currencies c
                    WHERE a.loan_product_id = b.loan_product_id AND
                    b.currency_id = c.crncy_id AND a.loan_rqst_id = $srcdocid");
            while ($rw1 = loc_db_fetch_array($rslt1)) {
                $siteID = (int) $rw1[0];
                $trnsTyp = "Loan Applications";
                $crncyID = (int) $rw1[1];
                $trnsAmnt = (float) $rw1[2];
            }
            $result = getNextMCFLoanAppsApprvrs($siteID, $trnsTyp, $crncyID, $trnsAmnt);   //getNextApprvrsInMnlHrchy($hrchyid, $curPrsnsLevel) //
            $prsnsFnd = 0;
            $lastPrsnID = "|";
            $msgBatchID = getMsgBatchID();
            $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
            while ($row = loc_db_fetch_array($result)) {
                $athrzrLmtID = (float) $row[1];
                $toPrsnID = (float) $row[0];
                $prsnsFnd++;
                if ($toPrsnID > 0) {
                    routWkfMsg($msg_id, $prsnid, $toPrsnID, $userID, 'Initiated', 'Open;Reject;Request for Information;Approve');
                    $dsply = '<div style="text-align:center;font-weight:bold;font-size:14px;color:blue;">SUCCESS!</br>Your request has been submitted for Approval. Thank you!</div>';
                    $msg = $dsply;
                    //Begin Email Sending Process
                    /* $result1 = getEmlDetailsB4Actn($srcdoctyp, $srcdocid);
                      while ($row1 = loc_db_fetch_array($result1)) {
                      $frmID = $toPrsnID;
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row1[1];
                      $actSoFar = $row1[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row1[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                }
            }
            if ($prsnsFnd <= 0) {
                $dsply .= "|ERROR|-No Approval Hierarchy Found<br/>";
                $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
            } else {
                //Update Request Status to In Process
                updateMCFLoanAppStatus($srcdocid, "Initiated", -1);
                updateMCFLoanAppsAtzrLmtID($srcdocid, $athrzrLmtID);
            }
        } else {
            $dsply .= "|ERROR|-Update Failed! No Workflow Document(s) Generateddd<br/>";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    } else {
        $orgnlToPrsnID = -1;
        if ($routingID > 0) {
            $oldMsgbodyAddOn = "";
            $reslt1 = getWkfMsgRtngData($routingID);
            while ($row = loc_db_fetch_array($reslt1)) {
                $rtngMsgID = (float) $row[0];
                $msg_id = $rtngMsgID;
                $curPrsnsLevel = (float) $row[18];
                $isActionDone = $row[9];
                $oldMsgbodyAddOn = $row[17];
                $orgnlToPrsnID = (float) $row[2];
//$rtngMsgID = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "msg_id", $routingID);
//$curPrsnsLevel = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "to_prsns_hrchy_level", $routingID);
//$isActionDone = getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "is_action_done", $routingID);
            }
            $row = NULL;

            $reslt2 = getWkfMsgHdrData($rtngMsgID);
            while ($row = loc_db_fetch_array($reslt2)) {
                $msgTitle = $row[1]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_hdr", $rtngMsgID);
                $msgBdy = $row[2]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_body", $rtngMsgID);
                $srcDocID = (float) $row[10]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_id", $rtngMsgID);
                $srcDocType = $row[9]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_type", $rtngMsgID);
                $orgnlPrsnUsrID = (float) $row[3]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "created_by", $rtngMsgID);
                $hrchyid = (float) $row[5];
                $appID = (float) $row[7];
                $attchmnts = $row[13];
                $attchmnts_desc = $row[14]; //Get Attachments
            }
            if ($srcDocID > 0) {
                $rqstHdrStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcDocID);
                if (($rqstHdrStatus == 'Authorized' /* || $rqstHdrStatus == 'Approved' */) && $actionToPrfrm != "Open") {
                    return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
                }
            }
            $srcdoctyp = $srcDocType;
            $srcdocid = $srcDocID;
            $orgnlPrsnID = getUserPrsnID1($orgnlPrsnUsrID);
            if ($isActionDone == '0') {
                if ($actionToPrfrm == "Open") {
                    getMCFLoanAppsRdOnlyDsply($routingID, $inptSlctdRtngs, "Approve", $srcDocID, $srcDocType);
                } else if ($actionToPrfrm == "Reject") {
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Rejected", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "REJECTION ON $datestr:- This document has been Rejected by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                    //Message Header & Details
                    $msghdr = "REJECTED - " . $msgTitle;
                    $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Informational";
                    $msgsts = "0";
                    //$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, "Initiated", "Acknowledge;Open", 1, $msgbodyAddOn);
                    $affctd4 += updateMCFLoanAppStatus($srcdocid, "Rejected", -1);

                    //Begin Email Sending Process
                    /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                      $lastPrsnID = "|";
                      $msgBatchID = getMsgBatchID();
                      $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                      while ($row = loc_db_fetch_array($result)) {
                      $frmID = $row[0];
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row[1];
                      $actSoFar = $row[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Rejected!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Rejected";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Withdraw") {
                    if ($orgnlPrsnID == $cur_prsnid && $orgnlPrsnID > 0) {

                        $shdActnBeDone = true; //FALSE;
                        $srcDocIdStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcdocid);
                        if ($srcDocIdStatus == "Approved") {
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);
                            $apprvdLoanAmount = (float) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 1);
                            if ($affctd5Sucs) {
                                $shdActnBeDone = true;
                            } else {
                                $dsply .= $errMsgDsp;
                                $shdActnBeDone = false;
                            }
                        }

                        if ($shdActnBeDone) {
                            $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Withdrawn", "None", $userID);
                            if ($apprvrCmmnts == "") {
                                $apprvrCmmnts = "Withdrawal by Self";
                            }
                            $datestr = getFrmtdDB_Date_time();
                            $msgbodyAddOn = "";
                            $msgbodyAddOn .= "WITHDRAWAL ON $datestr:- This document has been Withdraw by $usrFullNm with the ff Message:<br/>";
                            $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                            $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                            $msgbodyAddOn .= $oldMsgbodyAddOn;

                            updateWkfMsgStatus($rtngMsgID, "1", $userID);
                            updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                            //Message Header & Details
                            $msghdr = "WITHDRAWAL - " . $msgTitle;
                            $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                            $msgtyp = "Informational";
                            $msgsts = "0";
                            //$msg_id = getWkfMsgID();

                            $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                            $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $srcDocIdStatus, "Acknowledge;Open", 1, $msgbodyAddOn);
                            $affctd4 += updateMCFLoanAppStatus($srcdocid, "Withdrawn", -1);

                            if ($affctd4 > 0 && $srcDocIdStatus == "Approved") {
                                //RESET APPROVAL DATA TO NULL;
                                $affctd5 = createLoanRqstApprvlRvsl($srcdocid, $affctd5Msg);
                            } else if ($srcDocIdStatus == "Initiated") {
                                $affctd5 = true;
                            }




                            //Begin Email Sending Process
                            /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                              $lastPrsnID = "|";
                              $msgBatchID = getMsgBatchID();
                              $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                              while ($row = loc_db_fetch_array($result)) {
                              $frmID = $row[0];
                              if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                              $lastPrsnID .= $frmID . "|";
                              continue;
                              }
                              $lastPrsnID .= $frmID . "|";
                              $subject = $row[1];
                              $actSoFar = $row[3];
                              if ($actSoFar == "") {
                              $actSoFar = "&nbsp;&nbsp;NONE";
                              }
                              $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                              $docType = $srcDocType;
                              $to = getPrsnEmail($frmID);
                              $nameto = getPrsnFullNm($frmID);
                              if ($docType != "" && $docType != "Login") {
                              $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                              . "<br/><br/>"
                              . $msgPart .
                              "<br/><br/>Kindly <a href=\""
                              . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                              $errMsg = "";
                              createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                              }
                              } */
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Withdrawn!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                        if (!$affctd5) {
                            $msg .= "</br><p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">|ERROR| $affctd5Msg</span></p>";
                        }
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Withdrawn";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Request for Information") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Information Requested", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "INFORMATION REQUESTED ON $datestr:- A requested for Information has been generated by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", "Respond;Open", $curPrsnsLevel, $msgbodyAddOn);
                    //$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Information Requested!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Respond") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Response Given", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "RESPONSE TO INFORMATION REQUESTED ON $datestr:- A response to an Information Request has been given by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "RESPONSE TO INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", 'Open;Reject;Request for Information;Approve', $curPrsnsLevel, $msgbodyAddOn);
//$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Response Given!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Acknowledge") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Acknowledged", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "MESSAGE ACKNOWLEDGED ON $datestr:- An acknowledgement of the message has been given by $usrFullNm <br/><br/>";
//$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Acknowledged!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        //$dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
                        //$dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Approve") {
                    $affctd = 0;
                    if ($orgnlToPrsnID == $cur_prsnid && $orgnlToPrsnID > 0) {
                        $newStatus = "Approved"; //"Reviewed"
                        $newVldtyStatus = "Validated"; //COMMENT
                        $nxtStatus = "Open;Reject;Request for Information;Approve";
                        $nxtApprvr = "Next Approver";
                        $nxtPrsnID = -1;                        //getNextApprvrInMnlHrchy($hrchyid, $curPrsnsLevel);
                        $shdActnBeDone = true; //FALSE;
                        //to be brought back BELOW BLOCK
//                        if ($nxtPrsnID <= 0) {
//                                $newStatus = "Approved";
//                                $nxtStatus = "None;Acknowledge";
//                        }
                        if ($shdActnBeDone === true) {
                            //DO COLLATERAL VALIDATIONS
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 0);
                            if ($affctd5Sucs) {

                                $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, $newStatus, $nxtStatus, $userID);
                                //$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                                $datestr = getFrmtdDB_Date_time();
                                $msgbodyAddOn = "";
                                $msgbodyAddOn .= strtoupper($newStatus) . " ON $datestr:- This document has been $newStatus by $usrFullNm <br/><br/>";
                                //$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                                $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                                $msgbodyAddOn .= $oldMsgbodyAddOn;
                                updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                                //Message Header & Details
                                if ($nxtPrsnID <= 0) {
                                    $nxtApprvr = "Original Person";
                                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                                    $msghdr = "APPROVED - " . $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Informational";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                } else {
                                    $msghdr = $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Work Document";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nxtPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                }

                                $affctd4 += updateMCFLoanAppStatus($srcdocid, $newStatus, $cur_prsnid, $apprvdLoanAmount, $apprvdLoanTenor, $apprvdLoanTenorType, $apprvdInterestRate, $apprvlCmnts);




                                /* if ($nxtPrsnID <= 0) {
                                  //Begin Email Sending Process
                                  $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                                  $lastPrsnID = "|";
                                  $msgBatchID = getMsgBatchID();
                                  $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                                  while ($row = loc_db_fetch_array($result)) {
                                  $frmID = $orgnlPrsnID;
                                  if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                                  $lastPrsnID .= $frmID . "|";
                                  continue;
                                  }
                                  $lastPrsnID .= $frmID . "|";
                                  $subject = $row[1];
                                  $actSoFar = $row[3];
                                  if ($actSoFar == "") {
                                  $actSoFar = "&nbsp;&nbsp;NONE";
                                  }
                                  $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                                  $docType = $srcDocType;
                                  $to = getPrsnEmail($frmID);
                                  $nameto = getPrsnFullNm($frmID);
                                  if ($docType != "" && $docType != "Login") {
                                  $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                                  . "<br/><br/>"
                                  . $msgPart .
                                  "<br/><br/>Kindly <a href=\""
                                  . $app_url . "\">Login via this Link</a> to <strong>VIEW</strong> it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                                  $errMsg = "";
                                  createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "",
                                  "Email");
                                  //sendEMail(trim(str_replace(";", ",", $to), ","), $nameto, $subject, $message, $errMsg, "", "", "", $admin_name);
                                  }
                                  break;
                                  }
                                  } */
                            } else {
                                $dsply .= $errMsgDsp;
                            }
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to $newStatus!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to $nxtApprvr!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
            }
        } else {
            $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Selected";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    }
    if ($msgBatchID > 0) {
        generateReportRun($rptID, $paramRepsNVals, -1);
    }
    return $msg;
}

function get_DisbursementDetLoansForRvsl($disbmntHdrID, $dateStr, &$msg, &$disbmntHdrIDNew) {
    $cnta = 0;
    $nMsg = "";
    $manPaidList = ",";
    $manTrnsNoList = ",";
    global $usrID;
    global $prsnid;

    //GET LIST OF DISBURSED LOANS FOR HDR $disbmntHdrID
    $result = executeSQLNoParams("SELECT distinct b.loan_rqst_id, c.trnsctn_id, c.has_been_paid, b.disbmnt_hdr_id, b.disbmnt_det_id "
            . "FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c "
            . "WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = c.loan_rqst_id AND a.disbmnt_hdr_id = $disbmntHdrID");

    //GET LIST OF DISBURSED LOANS PAID TO CUSTOMERS
    while ($row = loc_db_fetch_array($result)) {
        if ($row[2] == "Yes") {
            $cnta = $cnta + 1;
            $manPaidList = $manPaidList . $row[4] . ",";
            $manTrnsNoList = $manTrnsNoList . $row[4] . " [" . $row[1] . "],";
        }
    }

    if ($manPaidList == ",") {
        $manPaidList = -1;
    } else {
        $manPaidList = trim($manPaidList, ",");
    }
    //GET DISBURSED LOANS BEING PROCESSED FOR MANUAL PAYMENTS AND EXCLUDE
    $result3 = executeSQLNoParams("SELECT distinct a.disbmnt_det_id, c.trnsctn_id FROM mcf.mcf_cust_account_transactions a, "
            . "mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c "
            . "WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND a.disbmnt_det_id = b.disbmnt_det_id "
            . "AND b.loan_rqst_id = c.loan_rqst_id "
            . "AND a.disbmnt_hdr_id = $disbmntHdrID AND a.disbmnt_det_id NOT IN ($manPaidList) AND a.status != 'Void' "
            . "AND amount_cash > 0");

    if ($manPaidList == -1) {
        $manPaidList = ",";
    }

    while ($row3 = loc_db_fetch_array($result3)) {
        $cnta = $cnta + 1;
        $manPaidList = $manPaidList . $row3[0] . ",";
        $manTrnsNoList = $manTrnsNoList . $row3[0] . " [" . $row3[1] . "],";
    }

    if ($cnta > 0) {
        $manTrnsNoList = trim($manTrnsNoList, ",");
        $nMsg .= "<span style=\"color:red;\">Error! Failed reverse Disbursement</br>"
                . "$cnta Disbursed Loans <b>$manTrnsNoList</b> have been Manually paid and/or in the process of being paid to Customers and therefore can't be reversed</br>"
                . "REVERSE THESE PAYMENTS BEFORE PROCEEDING</span>";
        $disbmntHdrIDNew = -1;
    } else {


        //create_DisbursementHdr($disbmntDate, $description, $branchID, "", $dateStr);
        $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
        $branchID = getGnrlRecNm("mcf.mcf_loan_disbursement_hdr", "disbmnt_hdr_id", "branch_id", $disbmntHdrID);

        //CREATE NEW DISBURSEMENT HDR
        $ins1 = execUpdtInsSQL("INSERT INTO mcf.mcf_loan_disbursement_hdr(disbmnt_date, batch_no, description, branch_id, status, created_by,
            creation_date, last_update_by, last_update_date, org_id, cust_type, voided_disbmnt_hdr_id, reversal_reason, crncy_id)
            SELECT '$dateStr', batch_no||'-R', description||'-Reversal', branch_id, 'Incomplete', $usrID, '$dateStr', $usrID, '$dateStr',"
                . " org_id, cust_type, $disbmntHdrID, reversal_reason, crncy_id FROM mcf.mcf_loan_disbursement_hdr WHERE disbmnt_hdr_id = $disbmntHdrID");

        if ($ins1 > 0) {
            $disbmntHdrIDNew = get_DisbursementHdrID($dateStr, $branchID, $usrID);
            $nMsg .= "<span style=\"color:green;\">New Disbursement Header Created Successfully<br/></span>";
        } else {
            $nMsg .= "<span style=\"color:red;\:>Error! Failed to create new Disbursement Header Record<br/></span>";
            $disbmntHdrIDNew = -1;
        }

        if ($disbmntHdrIDNew > 0) {
            $ins2 = execUpdtInsSQL("INSERT INTO mcf.mcf_loan_disbursement_det(disbmnt_hdr_id, loan_rqst_id, created_by, creation_date,
            last_update_by, last_update_date, principal_amount, ttl_interest,
            repay_start_date, repay_end_date, scheduled_prdc_paymnt_amnt,
            interest_rate_per_period, principal_amount_bal, ttl_interest_bal,
            ttl_tenor_bal) SELECT $disbmntHdrIDNew, loan_rqst_id, $usrID, '$dateStr',
            $usrID, '$dateStr', -1 * principal_amount, -1 * ttl_interest,
            repay_start_date, repay_end_date, -1 * scheduled_prdc_paymnt_amnt,
            interest_rate_per_period, -1 * principal_amount_bal, -1 * ttl_interest_bal,
            ttl_tenor_bal FROM mcf.mcf_loan_disbursement_det WHERE disbmnt_hdr_id = $disbmntHdrID");

            $nMsg .= "<span style=\"color:green;\">" . $ins2 . " approved loan record(s) added to New Disbursement Header $disbmntHdrIDNew Successfully<br/></span>";
        } else {
            $nMsg .= "<span style=\"color:red;\">Error! Failed to create new Disbursement Header Record<br/></span>";
            $disbmntHdrIDNew = -1;
        }
    }

    $sqlStr = "SELECT a.loan_rqst_id, CASE WHEN cust_type = 'Group' THEN mcf.get_customer_name('Individual', a.cust_id)
        ELSE mcf.get_customer_name(cust_type, a.cust_id) end customer , cust_type, a.trnsctn_id, a.approved_amount,
        a.apprvd_loan_tenor || ' ' || coalesce(a.apprvd_loan_tenor_type,'') tenor_disp, a.apprvd_interest_rate, to_char(to_timestamp(a.application_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type, disbmnt_det_id,
        c.interest_rate_per_period fd1, c.scheduled_prdc_paymnt_amnt, to_char(to_timestamp(c.repay_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_start_date,
        to_char(to_timestamp(c.repay_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_end_date, interest_rate_type, applctn_type, crdt_type, ref_loanrqst_id, /*24*/
        org.get_accnt_id_brnch_eqv(a.branch_id, principal_rcvbl_acct_id), org.get_accnt_id_brnch_eqv(a.branch_id, interest_rcvbl_acct_id),
        org.get_accnt_id_brnch_eqv(a.branch_id, deferred_interest_acct_id), org.get_accnt_id_brnch_eqv(a.branch_id, loans_payable_acct_id), currency_id, repayment_type, repayment_account_id, /*31*/
        b.loan_product_id, disbmnt_hdr_id, account_id, ttl_interest    /*35*/
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b, mcf.mcf_loan_disbursement_det c
                WHERE a.loan_product_id = b.loan_product_id
                and c.loan_rqst_id = a.loan_rqst_id
	AND c.disbmnt_hdr_id = $disbmntHdrIDNew ORDER BY 1";
    //echo($sqlStr);
    $msg = $nMsg;

    $result5 = executeSQLNoParams($sqlStr);
    return $result5;
}

function reverse_Disbursement($disbmntHdrID, $dateStr, &$msg, $disbmntHdrIDNew) {
    //CHECK IF ANY LOAN HAS BEEN MANUALLY PAID
    $cnta = 0;
    $nMsg = "";
    //$disbmntHdrIDNew = -1;
    $manPaidList = ",";
    $manTrnsNoList = ",";
    global $usrID;

    //UPDATE LOAN is_disbursed to NO
    $updt3 = execUpdtInsSQL("UPDATE mcf.mcf_loan_request
            SET is_disbursed = 'NO', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "' WHERE loan_rqst_id IN "
            . "(SELECT distinct b.loan_rqst_id FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b "
            . "WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND a.disbmnt_hdr_id = $disbmntHdrID)");

    $nMsg .= "<span style=\"color:green;\">" . $updt3 . " Loan Request record(s) updated Successfully to Not Disbursed<br/></span>";


    //UPDATE REF LOAN REQUEST
    $refLoanCnta = 0;
    $result2 = executeSQLNoParams("SELECT distinct c.ref_loanrqst_id FROM mcf.mcf_loan_disbursement_hdr a, mcf.mcf_loan_disbursement_det b, mcf.mcf_loan_request c "
            . "WHERE a.disbmnt_hdr_id = b.disbmnt_hdr_id AND b.loan_rqst_id = c.loan_rqst_id AND COALESCE(c.ref_loanrqst_id,-1) > 0 "
            . "AND a.disbmnt_hdr_id = $disbmntHdrID");

    while ($row2 = loc_db_fetch_array($result2)) {
        $updt4 = execUpdtInsSQL("UPDATE mcf.mcf_loan_request
                SET status = 'Approved', last_update_by=$usrID,
                    last_update_date= '" . $dateStr . "' WHERE loan_rqst_id = $row2[0]");

        $refLoanCnta = $refLoanCnta + $updt4;
    }
    $nMsg .= "<span style=\"color:green;\">" . $refLoanCnta . " Referenced Loan record(s) updated Successfully<br/></span>";


    if ($cnta <= 0) {
        //UPDATE HDR
        $updt2 = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_hdr
                SET status = 'Void', last_update_by=$usrID,
                    last_update_date= '" . $dateStr . "' WHERE disbmnt_hdr_id = $disbmntHdrID");
        if ($updt2 > 0) {
            $nMsg .= "<span style=\"color:green;\">Old Disbursement Header $disbmntHdrID updated Successfully Voided<br/></span>";

            $updt4 = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_hdr
                    SET status = 'Disbursed', last_update_by=$usrID,
                        last_update_date= '" . $dateStr . "' WHERE disbmnt_hdr_id = $disbmntHdrIDNew");

            $nMsg .= "<span style=\"color:green;\">New Disbursement Header $disbmntHdrIDNew updated Successfully Disbursed<br/></span>";
        } else {
            $nMsg .= "<span style=\"color:red;\">Error! Failed to create new Disbursement Header Record<br/></span>";
            $msg = $nMsg;
            return false;
        }
    }

    $msg = $nMsg;

    return true;
}

function updateLoanRqstIsPaidStatus($loanRqstID, $optn) {
    global $usrID;
    global $prsnid;
    $datestr = getDB_Date_time();
    $updSQL = "";

    if ($optn == 1) {
        $updSQL = "UPDATE mcf.mcf_loan_request
                SET has_been_paid = 'Yes',
                    pymnt_date = '$datestr',
                    last_update_by = $usrID,
                    last_update_date = '$datestr'
                WHERE loan_rqst_id = $loanRqstID";
    } else {
        $updSQL = "UPDATE mcf.mcf_loan_request
                SET has_been_paid = 'No',
                    last_update_by = $usrID,
                    last_update_date = '$datestr'
                WHERE loan_rqst_id = $loanRqstID";
    }

    $affctd = execUpdtInsSQL($updSQL);
    return $affctd;
}

function getLoanApplicantSignatory($custType, $custID) {
    $strSql = "";

    if ($custType == "Individual" || $custType == "Joint-Individual") {
        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, person_cust_id, to_sign_mndtry, b.source_type
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND account_number = '" . loc_db_escape_string($acctNo) . "'";
    } else if ($custType == "Corporate") {
        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory('$acctNo', source_type, b.person_cust_id), b.person_cust_id, to_sign_mndtry, b.source_type
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id
            AND account_number = '" . loc_db_escape_string($acctNo) . "'";
    } else {/* if ($custType == "Group") */
        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, person_cust_id, to_sign_mndtry, b.source_type
            FROM mcf.mcf_accounts a, mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND a.account_id = b.account_id AND b.person_cust_id = c.cust_id
            AND account_number = '" . loc_db_escape_string($acctNo) . "'";
    }
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_DisbmntDetlsForManualPymnt($disbmntDetID) {

    $sqlStr = "SELECT a.loan_rqst_id, a.approved_amount, CASE WHEN cust_type = 'Group' THEN mcf.get_customer_name('Individual', a.cust_id)
        ELSE mcf.get_customer_name(cust_type, a.cust_id) end customer, cust_type, a.cust_id, a.grp_cust_id
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b, mcf.mcf_loan_disbursement_det c
                WHERE a.loan_product_id = b.loan_product_id
                and c.loan_rqst_id = a.loan_rqst_id
	AND c.disbmnt_det_id = $disbmntDetID ORDER BY 1";
    //echo($sqlStr);
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function update_LoanRpmntSchedule() {
    //1. REDUCE IN mcf.mcf_loan_disbursement_det 1.principal_amount_bal 2.ttl_interest_bal 3.ttl_tenor_bal FOR loan_rqst_id => account_id
    //2  LOOP THROUGH mcf.mcf_loan_schedule AND UPDATE 1.is_paid 2.interest_amnt_paid 3.principal_amnt_paid FOR loan_rqst_id => account_id
}

function get_UnpaidLoanSchedule($dochdrID) {
    $strSql = "SELECT a.schedule_id, a.disbmnt_det_id, begining_bal, (interest_amnt-interest_amnt_paid), (principal_amnt-principal_amnt_paid),
                    ending_bal, a.is_paid, interest_amnt_paid, principal_amnt_paid, b.loan_rqst_id, b.disbmnt_det_id, repay_date, d.loan_rpmnt_type
        FROM mcf.mcf_loan_schedule a INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
          INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
          INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
          INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $dochdrID AND e.status != 'Void' AND b.principal_amount > 0
          AND is_paid IN ('NO','PARTIAL')
          AND d.status = 'Authorized' ORDER BY 1 ASC";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function updateMCFCstmrAcntBals_CrdtMgmt($docHdrID, &$errMsgDsp) {
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;
    global $prsnid;
    $errMsg = "";
    $dateStr = getFrmtdDB_Date_time();
    $doctype = "";
    $docNum = "";
    $cstmrNm = "";
    $docDesc = "";
    $accntID = -1;
    //$rsltAcc = get_One_MCFTrnsHdr($docHdrID);
    $rsltAcc = get_One_MCFTrnsHdr_CrdtMgmt($docHdrID);
    $clearedQty = 0;
    $unClearedQty = 0;
    $lienQty = 0;
    if ($rwAcc = loc_db_fetch_array($rsltAcc)) {
        $doctype = $rwAcc[3];
        $docNum = $rwAcc[20];
        $cstmrNm = $rwAcc[9];
        $docDesc = $rwAcc[4];
        $accntID = (float) $rwAcc[2];
    }
    $succs = TRUE;
    $lnCntr = 0;
    $result = get_One_MCFTrnsLines($docHdrID);
    while ($row = loc_db_fetch_array($result)) {
        $isdlvrd = false;
        $lnCntr++;
        $clearedQty = ((float) $row[4] * (float) $row[3] * (float) $row[12]) - $lienQty;
        $lineid = (float) $row[0];
        $itmType = $row[8];
        $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];
        if ($doctype == "LOAN_REPAY") {
            if ($accntID > 0 && $isdlvrd == false) {
                $succs = updateCstmrAcntBalances($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "D", $docTypPrfx, $lineid, $dateStr, $errMsg);
            }
        } else if ($doctype == "WITHDRAWAL") {
            if ($accntID > 0 && $isdlvrd == false) {
                $succs = updateCstmrAcntBalances($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lineid, $dateStr, $errMsg);
            }
        }

        if ($succs === false) {
            break;
        }
    }

    if ($succs === false) {
        $errMsgDsp = "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to UpdateAccount Balances(CrdtMgmt 1)!</br>$errMsg</span>";
        return false;
    }

    if ($lnCntr <= 0) {
        $succs = true;
    }

    if ($doctype == "LOAN_REPAY") {
        $lnCntr = 0;
        $result = getAccountTrnsChqs($docHdrID);
        while ($row = loc_db_fetch_array($result)) {
            $lnCntr++;
            $clearedQty = 0;
            $unClearedQty = 0;
            $lienQty = 0;
            $chqType = $row[9];
            $lineid = (float) $row[0];
            $isSrcAcntBalsOK = TRUE;
            $itmType = $chqType;
            $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];
            $createdBy = (float) $row[17];
            if ($chqType == "In-House") {
                //Verify Source Account Balance First
                //First Let it go as Uncleared
                //$clearedQty = ((float) $row[7]) - $lienQty;
                //Then run process to auto clear for In-house Cheques
                $unClearedQty = ((float) $row[7]) * ((float) $row[15]);
            } else {
                $unClearedQty = ((float) $row[7]) * ((float) $row[15]);
            }
            if ($accntID > 0 && $isSrcAcntBalsOK == TRUE && $usrID == $createdBy) {
                $succs = updateCstmrAcntBalances($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lineid, $dateStr, $errMsg);
            }

            if ($succs === false) {
                break;
            }
        }

        if ($succs === false) {
            $errMsgDsp = "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Account Balances(CrdtMgmt 2)!</br>$errMsg</span>";
            return false;
        }

        if ($lnCntr <= 0) {
            $succs = true;
        }
    }

    $loanAcctIDLRS = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);
    $loanRqstNoLRS = getGnrlRecNm("MCF.MCF_LOAN_REQUEST", "account_id", "trnsctn_id", $loanAcctIDLRS);

    $accntIDLRS = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_acct_id", $docHdrID);
    $entrdSrcAcctAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_amount", $docHdrID);
    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_accounts", "account_id", "currency_id", $accntIDLRS);

    if ($accntIDLRS > 0) {

        $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $docHdrID);
        $rvslSmbl = "";

        if ($voidedTrnsID > 0) {
            $rvslSmbl = " -Reversal";
        }

        $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];
        $succs = updateCstmrAcntBalances($accntID, $entrdSrcAcctAMnt, 0.00, 0.00, "LOAN_REPAY", "D", $docTypPrfx, $docHdrID, $dateStr, $errMsg);
        if ($succs === true) {
            $trnsType1 = "WITHDRAWAL";
            $acctstatus = "";
            $acctcustomer = "";
            $acctlien = 0;
            $mandate = "";
            $wtdrwllimitno = -1;
            $wtdrwllimitamt = 0;
            $wtdrwllimittype = "";

            $trnsType = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_type", $docHdrID);

            $acntRslt = get_OneCustAccntInfo($accntIDLRS);
            while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                $acctstatus = $rowAcnt[10];
                $acctcustomer = $rowAcnt[11];
                $acctlien = (float) $rowAcnt[13];
                $mandate = $rowAcnt[14];
                $wtdrwllimitno = (int) $rowAcnt[15];
                $wtdrwllimitamt = (float) $rowAcnt[16];
                $wtdrwllimittype = $rowAcnt[17];
            }

            $nwMsg = "";
            $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
            $dte = date('ymdHis');
            $dateStr1 = getDB_Date_time();
            $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
            //$recCnt = createAccountTrns($accntIDLRS, $dateStr1, "Paperless", $gnrtdTrnsNo, "Account Transfer - LOAN " . $trnsType . $rvslSmbl, "DR", (float) $entrdSrcAcctAMnt, $trnsType1, (float) $entrdSrcAcctAMnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
	    $recCnt = createAccountTrns($accntIDLRS, $dateStr1, "Paperless", $gnrtdTrnsNo, "Account Transfer - LOAN " . $trnsType . " for Loan Request " . $loanRqstNoLRS . $rvslSmbl, "DR", (float) $entrdSrcAcctAMnt, $trnsType1, (float) $entrdSrcAcctAMnt, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0", -1, -1, $trnsType);
            if ($recCnt <= 0) {
                $errMsg = "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN " . $trnsType . " Account Transactions for Customer!</span>";
                $errMsgDsp = $errMsg;
                return false;
            }


            $docTypPrfx1 = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
            //$dateStr11 = getFrmtdDB_Date_time();
            $shdActnBeDone = updateCstmrAcntBalances($accntIDLRS, $entrdSrcAcctAMnt, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx1, $docHdrID, $dateStr, $errMsg);

            if ($shdActnBeDone === FALSE) {
                $errMsgDsp = "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Interest Waived!</br>$errMsg</span>";
                return false;
            }
        } else {
            $errMsgDsp = "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update Account Balances(CrdtMgmt 3)!</br>$errMsg</span>";
            return false;
        }
    }

    return $succs;
}

function get_One_MCFTrnsHdr_CrdtMgmt($dochdrID) {
    global $prsnid;
    $strSql = "SELECT a.acct_trns_id, a.trns_date, a.account_id, a.trns_type, a.description,
       a.amount, a.value_date, a.branch_id, a.doc_no, a.trns_person_name, a.trns_person_tel_no,
       a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number,
       a.trns_person_type, a.status, a.doc_type, a.debit_or_credit,
       a.authorized_by_person_id, a.autorization_date, a.trns_no,
       org.get_accnt_id_brnch_eqv(b.branch_id, c.principal_rcvbl_acct_id), org.get_accnt_id_brnch_eqv(b.branch_id, c.interest_rcvbl_acct_id),
       org.get_accnt_id_brnch_eqv(b.branch_id, c.deferred_interest_acct_id), org.get_accnt_id_brnch_eqv(b.branch_id, c.interest_revenue_acct_id),
       d.mapped_lov_crncy_id
    FROM mcf.mcf_cust_account_transactions a
LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id)
LEFT OUTER JOIN mcf.mcf_prdt_loans c ON (b.product_type_id = c.loan_product_id)
LEFT OUTER JOIN mcf.mcf_currencies d ON(c.currency_id = d.crncy_id)
  WHERE a.acct_trns_id = " . $dochdrID;
    //echo $strSql;
    return executeSQLNoParams($strSql);
}

function createMCFAccntng_LoanRpmnt($docHdrID, &$errMsg) {
    global $orgID;
    $dateStr = getFrmtdDB_Date_time();
    $doctype = "";
    $docNum = "";
    $cstmrNm = "";
    $docDesc = "";
    $rsltAcc = get_One_MCFTrnsHdr_CrdtMgmt($docHdrID);
    $entrdRate = 0;
    $srcStoreID = -1; //Get from one logged on
    $srcCageID = -1;
    $destStoreID = -1;
    $destCageID = -1;
    $srcInvAcntID = -1;
    $destInvAcntID = -1;
    $principalRcvblAcctID = -1;
    $interestRcvblAcctID = -1;
    $deferredInterestAcctID = -1;
    $interestRevenueAcctID = -1;
    $lbltyAccntID = -1;
    $cogsID = -1;
    $salesRevID = -1;
    $expnsID = -1;
    $itmState = "Issuable";
    $succs = FALSE;
    $crncyID = -1;
    $nwMsg = "";

    if ($rwAcc = loc_db_fetch_array($rsltAcc)) {
        $doctype = $rwAcc[3];
        $docNum = $rwAcc[20];
        $cstmrNm = $rwAcc[9];
        $docDesc = $rwAcc[4];
        $entrdRate = (float) 1;
        $principalRcvblAcctID = (int) $rwAcc[21];
        $interestRcvblAcctID = (int) $rwAcc[22];
        $deferredInterestAcctID = (int) $rwAcc[23];
        $interestRevenueAcctID = (int) $rwAcc[24];
    }
    $fnccurid = getOrgFuncCurID($orgID);
    $result = get_One_MCFTrnsLines($docHdrID);
    deleteDocGLInfcLns($docHdrID, $doctype);
    rvrsImprtdIntrfcTrns($docHdrID, $doctype);
    while ($row = loc_db_fetch_array($result)) {
        $itmID = (int) $row[6];
        $itmDesc = $row[7];
        $crncyID = (int) $row[5];
        $qty = (float) $row[4];
        $price = (float) $row[3];
        $lineid = (float) $row[0];
        $itmType = $row[8];
        $trnsLnTyp = "";
        $trnsSrc = "SYS";
        $isTrnsPymnt = false;
        if ($doctype == "WITHDRAWAL") {
            $srcCageID = (int) $row[9];
            $srcStoreID = (int) $row[10];
            $srcInvAcntID = (int) $row[13];
            $itmState = $row[11];
        } else {
            $destCageID = (int) $row[9];
            $destStoreID = (int) $row[10];
            $destInvAcntID = (int) $row[13];
            $itmState = $row[11];
        }
        $srcVltCageNm = getGnrlRecNm("inv.inv_itm_subinventories", "subinv_id", "subinv_name", $srcStoreID) . " (" .
                getGnrlRecNm("inv.inv_shelf", "line_id", "shelve_name", $srcCageID) . ")";
        $destVltCageNm = getGnrlRecNm("inv.inv_itm_subinventories", "subinv_id", "subinv_name", $destStoreID) . " (" .
                getGnrlRecNm("inv.inv_shelf", "line_id", "shelve_name", $destCageID) . ")";
        if ($itmID > 0) {
            $succs = generateItmAccntng_CrdtMgmt($fnccurid, $qty, $doctype, $docHdrID, $srcInvAcntID, $destInvAcntID, $principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID, $expnsID, $cogsID, $salesRevID, $price, $crncyID, $entrdRate, $lineid, $dateStr, $docNum, $cstmrNm, $docDesc, $itmDesc, $itmType, $trnsLnTyp, $trnsSrc, $isTrnsPymnt, $srcVltCageNm, $destVltCageNm, "CASH", $nwMsg);
            if ($succs === FALSE) {
                $errMsg .= $nwMsg;
                return $succs;
            }
        }
    }

    //ACCOUNT FOR DEBIT TO CUSTOMER ACCOUNTS
    $accntID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_acct_id", $docHdrID);
    $entrdSrcAcctAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_amount", $docHdrID);

    if ($accntID > 0) {

        $itmID = 1;
        $itmDesc = "";
        $qty = (float) $entrdSrcAcctAMnt;
        $price = 1;
        $lineid = $docHdrID;
        $itmType = "Account Transfer Vault";
        $trnsLnTyp = "";
        $trnsSrc = "SYS";
        $isTrnsPymnt = false;

        $trnsCrncyID = (int) getGnrlRecNm("mcf.mcf_accounts", "account_id", "currency_id", $accntID);
        $crncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

        $srcCageID = -1;
        $srcStoreID = -1;
        $srcInvAcntID = get_cashDpst_CrdtAccnt_ID($accntID);
        $itmState = "Issuable";

        $srcVltCageNm = "";
        $destVltCageNm = "";
        if ($itmID > 0) {
            $succs = generateItmAccntng_CrdtMgmt($fnccurid, $qty, $doctype, $docHdrID, $srcInvAcntID, $destInvAcntID, $principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID, $expnsID, $cogsID, $salesRevID, $price, $crncyID, $entrdRate, $lineid, $dateStr, $docNum, $cstmrNm, $docDesc, $itmDesc, $itmType, $trnsLnTyp, $trnsSrc, $isTrnsPymnt, $srcVltCageNm, $destVltCageNm, "ACCOUNT TRANSFER", $nwMsg);
            if ($succs === FALSE) {
                $errMsg .= $nwMsg;
                return $succs;
            }
        }
    }

    return $succs;
}

function generateItmAccntng_CrdtMgmt_BKP09062019($fnccurid, $qty, $doctype, $docHdrID, $srcInvAcntID, $destInvAcntID, $principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID, $expnsID, $cogsID, $salesRevID, $price, $entrdCrncyID, $entrdRate, $lineid, $dateStr, $docNum, $cstmrNm, $docDesc, $itmDesc, $itmType, $trnsLnTyp, $trnsSrc, $isTrnsPymnt, $srcVltCageNm, $destVltCageNm, $srcType, &$errMsg) {
    global $usrID;
    global $prsnid;
    global $trnsTypeABRV;
    global $trnsTypes;

    $trnsFullDesc = "";

    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    if ($cstmrNm == "") {
        $cstmrNm = "Unspecified Customer";
    }
    if ($docDesc == "") {
        $docDesc = "Unstated Purpose";
    }
    $succs = FALSE;

    $trnsDate = getStartOfDayDMYHMS();

    //Get Lst Exchage Rates and A
    $acctCrncyAmnt = 0;
    $acctCrncyID = -1;
    $funcCrncyRate = round(get_LtstExchRate($entrdCrncyID, $fnccurid, $dateStr), 15);
    $acntCrncyRate = 1.00;
    $entrdAMnt = round($qty * $price, 2);

    $ttlLoanBalOutstndn = 0;
    $lnPyTyp = "REPAYMENT";
    $pncplAmtBalStlmnt = 0.00;
    $intrstAmtBalStlmnt = 0.00;

    $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $docHdrID);
    $rvslSmbl = "";

    $andCls = "  AND is_paid IN ('NO','PARTIAL')";
    if ($voidedTrnsID > 0) {
        $andCls = " AND 1 = 1";
        $rvslSmbl = " -Reversal";
    }

    //GET LOAN BALANCE
    $result1 = executeSQLNoParams("SELECT distinct (b.principal_amount_bal + b.ttl_interest_bal) loan_bal, loan_rpmnt_type, b.principal_amount_bal, b.ttl_interest_bal
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND d.status = 'Authorized'
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls");

    $rcdCnt = loc_db_num_rows($result1);

    if ($rcdCnt <= 0) {
        $errMsg .= "No Schedule exists for the Loan Request. Please save schedule first!<br/><br/>";
        return false;
    }

    while ($row1 = loc_db_fetch_array($result1)) {
        $ttlLoanBalOutstndn = round(((float) $row1[0]), 2);
        $lnPyTyp = $row1[1];
        $pncplAmtBalStlmnt = round(((float) $row1[2]), 2);
        $intrstAmtBalStlmnt = round(((float) $row1[3]), 2);
        break;
    }

    if ($lnPyTyp == "REPAYMENT" && $entrdAMnt > $ttlLoanBalOutstndn) {
        $errMsg .= "REPAYMENT Amount cannot be greater than the Total Loan Schedule Outstanding Balance! Please alter amount<br/><br/>";
        return false;
    } else if ($lnPyTyp == "SETTLEMENT" && $entrdAMnt > $pncplAmtBalStlmnt) {
        $errMsg .= "SETTLEMENT Amount cannot be greater than the Total Loan Schedule PRINCIPAL Balance of " . $pncplAmtBalStlmnt . "! Please alter amount<br/><br/>";
        return false;
    }

    if ($doctype == "LOAN_REPAY") {
        $stpErrCnta = 0;
        if ($destInvAcntID <= 0 && $srcType == "CASH") {
            $errMsg .= "Destination Cage Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($srcInvAcntID <= 0 && $srcType == "ACCOUNT TRANSFER") {
            $errMsg .= "Customer Liability Accounts must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($principalRcvblAcctID <= 0) {
            $errMsg .= "Loan Principal Receivable Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($interestRcvblAcctID <= 0) {
            $errMsg .= "Loan Interest Receivable Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($deferredInterestAcctID <= 0) {
            $errMsg .= "Loan Deferred Interest Liability Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($interestRevenueAcctID <= 0) {
            $errMsg .= "Loan Interest Revenue Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }

        if ($stpErrCnta > 0) {
            return false;
        }
    }

    if (strpos($itmType, "Vault") !== FALSE) {
        $ttlCstPrice = $qty * $price * $funcCrncyRate;

        if ($doctype == "LOAN_REPAY") {

            if ($srcType === "CASH") {
                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $destInvAcntID);
                if ($entrdCrncyID !== $acctCrncyID && $srcType == "CASH") {
                    $errMsg .= "Transaction Currency ID is not the same as the Destination Cage Account!<br/><br/>";
                    return false;
                }
            } else {
                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $srcInvAcntID);
                if ($entrdCrncyID !== $acctCrncyID && $srcType == "CASH") {
                    $errMsg .= "Transaction Currency ID is not the same as the Customer Liability Account!<br/><br/>";
                    return false;
                }
            }

            //CASH ACCOUNTING
            $acntCrncyRate = round(1, 15);
            $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);


            if ($srcType === "CASH") {
                $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - CASH ACCOUNTING" . $rvslSmbl;
                $succs = sendToMCFGLIntrfcMnl($destInvAcntID, "I", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            } else {
                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - CUSTOMER ACCOUNT TRANSFER ACCOUNTING" . $rvslSmbl;
                $succs = sendToMCFGLIntrfcMnl($srcInvAcntID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            }

            if (!$succs) {
                return $succs;
            } else {

                //ACCOUNT FOR ACCOUNT TRANSFER


                $ttlPrncplPymntAmnt = 0;
                $ttlIntrstPymntAmnt = 0;
                $prncplPymntAmnt = 0;
                $intrstPymntAmnt = 0;
                $prncplAmnt = 0;
                $intrstAmnt = 0;
                //$schdlPayDte = "";
                $entrdAMntRngBal = $entrdAMnt;
                if ($voidedTrnsID > 0) {
                    $entrdAMntRngBal = -1 * $entrdAMnt;
                }
                $rpyDateYMD = "";
                $isPaid = "YES";
                $shdlIsPaid = "NO";
                $shdlIntAmtPaid = 0.00;
                $shdlPrncplAmtPaid = 0.00;
                $result = get_UnpaidLoanSchedule($docHdrID);
                if ($voidedTrnsID > 0) {
                    $result = get_PaidLoanSchedule($docHdrID);
                }
                $cnt = 0;
                $lnStlmntCnta = 0;
                $ttlIntrstAmntWaived = 0;
                $lnRpayType = "";
                if ($dateStr != "") {
                    $rpyDate = cnvrtDMYTmToYMDTm($dateStr);
                    $rpyDateYMD = substr($rpyDate, 0, 10);
                }

                if ($voidedTrnsID > 0) {
                    while ($row = loc_db_fetch_array($result)) {
                        $cnt = $cnt + 1;
                        $intrstAmnt = (float) $row[3];
                        $prncplAmnt = (float) $row[4];
                        $schdlPayDate = $row[11];
                        $lnRpayType = $row[12];
                        $lnRqstId = $row[9];
                        $shdlIsPaid = $row[6];
                        $shdlIntAmtPaid = (float) $row[7];
                        $shdlPrncplAmtPaid = (float) $row[8];

                        //CHECK FOR PARTIAL/FULL LOAN SETTLEMENT and APPLICABLE PENALTY
                        if ($lnRpayType === "SETTLEMENT") {
                            if ($entrdAMntRngBal < $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $entrdAMntRngBal;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid-$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                //$ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + 0.00;
                                break;
                            }

                            if ($entrdAMntRngBal == $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "NO";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                break;
                            } else {
                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlPrncplAmtPaid;

                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "NO";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");

                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                            }
                        } else {

                            //PRINCIPAL DEDUCTION
                            if ($entrdAMntRngBal < $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $entrdAMntRngBal;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid-$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            }

                            if ($entrdAMntRngBal == $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            } else {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlPrncplAmtPaid;

                                //INTEREST DEDUCTION
                                if ($entrdAMntRngBal < $shdlIntAmtPaid) {
                                    $intrstPymntAmnt = $entrdAMntRngBal;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid - $intrstPymntAmnt), principal_amnt_paid = 0 "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                }

                                if ($entrdAMntRngBal == $shdlIntAmtPaid) {
                                    $intrstPymntAmnt = $shdlIntAmtPaid;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "NO";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = 0, principal_amnt_paid = 0 "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                } else {
                                    $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlIntAmtPaid;

                                    $intrstPymntAmnt = $shdlIntAmtPaid;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "NO";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = 0, principal_amnt_paid = 0"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                }
                            }
                        }
                    }

                    if ($lnRpayType === "SETTLEMENT" && (float) $ttlIntrstAmntWaived != 0) {
                        //CREATE INTEREST WRITE-OFF TRANSACTIONS AND DAILY BALANCE
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";

                        $loanAccountID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);

                        $acntRslt = get_OneCustAccntInfo($loanAccountID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        $ttlIntrstAmntWaivedLW = (float) $ttlIntrstAmntWaived;
                        if ((float) $entrdAMnt <= 0) {
                            $ttlIntrstAmntWaivedLW = -1 * (float) $ttlIntrstAmntWaived;
                        }

                        $nwMsg = "";
                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
                        $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "Interest Waiver - LOAN SETTLEMENT" . $rvslSmbl, "DR", (float) $ttlIntrstAmntWaivedLW, $trnsType1, (float) $ttlIntrstAmntWaivedLW, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

                        if ($recCnt <= 0) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN SETTLEMENT Account Transactions for Customer!</span>";
                            return false;
                        }


                        $docTypPrfx1 = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($loanAccountID, $ttlIntrstAmntWaivedLW, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Interest Waived!</br>$nwMsg</span>";
                            return false;
                        }
                    }


                    if ($cnt > 0) {
                        $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                . "SET principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($row[9], 'PRINCIPAL OUTSTANDING')),"
                                . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($row[9], 'INTEREST OUTSTANDING'))"
                                . ", ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($row[9], 'TENURE OUTSTANDING')),"
                                . " last_update_by = $usrID, last_update_date = '$rpyDate' WHERE disbmnt_det_id = $row[10]");
                    } else {
                        $errMsg .= "Failed to update Loan Schedule!<br/><br/>";
                        return false;
                    }

                    if((int)$rslt > 0) {
                        //REMOVE LIEN IF LOAN BALANCE IS ZERO
                        $v_loan_prncpl_bal = 0;
                        $v_loan_intrst_bal = 0;
                        $nwMsg = "";

                        if((int)$row[9] > 0){
                            $strSql2 = "SELECT mcf.calc_loan_ttl_bal($row[9], 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($row[9], 'INTEREST OUTSTANDING')";
                            $result2 = executeSQLNoParams($strSql2);
                            while ($row2 = loc_db_fetch_array($result2)) {
                                $v_loan_prncpl_bal = (float) $row2[0];
                                $v_loan_intrst_bal = (float) $row2[1];
                            }

                            if(($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0){
                                $rtnScss = rvrsLoanRqstAcctLien($row[9], $nwMsg);

                                if ($rtnScss === FALSE) {
                                    $errMsg .= $nwMsg;
                                    return false;
                                }
                            }
                        }
                    } else {
                        $errMsg .= "Faild to update mcf_loan_disbursement_det balance!<br/><br/>";
                        return false;
                    }

                    //PRINCIPAL & INTEREST RECEIVABLE & DEFERRED INTEREST & INTEREST REVENUE ACCOUNTING
                    //$principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID
                    if ($ttlPrncplPymntAmnt > 0) {
                        //PRINCIPAL RECEIVABLE ACCOUNTING
                        $ttlCstPrice = $ttlPrncplPymntAmnt * $funcCrncyRate;
                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $principalRcvblAcctID);
                        $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                        $acctCrncyAmnt = round($ttlPrncplPymntAmnt * $acntCrncyRate, 2);

                        $trnsFullDesc = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        if ($srcType === "CASH") {
                            $trnsFullDesc = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        }

                        $succs = sendToMCFGLIntrfcMnl(
                                $principalRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsFullDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                    }

                    if (!$succs) {
                        return $succs;
                    } else {
                        if ($ttlIntrstPymntAmnt > 0 || $ttlIntrstAmntWaived > 0) {
                            if ($ttlIntrstPymntAmnt > 0) {

                                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                if ($srcType === "CASH") {
                                    $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                }

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstPymntAmnt * $funcCrncyRate;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstPymntAmnt * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING
                                    $trnsDescptn1 = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($srcType === "CASH") {
                                        $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    }

                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //INTEREST REVENUE ACCOUNTING
                                    if ($ttlIntrstPymntAmnt > 0) {
                                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRevenueAcctID);

                                        $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        if ($srcType === "CASH") {
                                            $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        }

                                        $succs = sendToMCFGLIntrfcMnl(
                                                $interestRevenueAcctID, "I", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                    }
                                }
                            } else if ($ttlIntrstAmntWaived > 0) {

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstAmntWaived * $funcCrncyRate;
                                $trnsDescptn = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - INTEREST RECEIVABLE" . $rvslSmbl;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstAmntWaived * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING

                                    $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($ttlIntrstAmntWaived > 0) {
                                        $trnsDescptn1 = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - DEFERRED INTEREST" . $rvslSmbl;
                                    }
                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }
                            }
                        }
                    }
                } else {
                    while ($row = loc_db_fetch_array($result)) {
                        $cnt = $cnt + 1;
                        $intrstAmnt = (float) $row[3];
                        $prncplAmnt = (float) $row[4];
                        $schdlPayDate = $row[11];
                        $lnRpayType = $row[12];
                        $lnRqstId = (int)$row[9];
                        $shdlIsPaid = $row[6];
                        $shdlIntAmtPaid = (float) $row[7];
                        $shdlPrncplAmtPaid = (float) $row[8];

                        //CHECK FOR PARTIAL/FULL LOAN SETTLEMENT and APPLICABLE PENALTY
                        if ($schdlPayDate > $rpyDate && $lnRpayType === "SETTLEMENT") {
                            if ($entrdAMntRngBal < $prncplAmnt) {
                                $prncplPymntAmnt = $entrdAMntRngBal;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                //$ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + 0.00;
                                break;
                            }

                            if ($entrdAMntRngBal == $prncplAmnt) {
                                $prncplPymntAmnt = $prncplAmnt;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "YES";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='YES', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                break;
                            } else {
                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $prncplAmnt;

                                $prncplPymntAmnt = $prncplAmnt;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "YES";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='YES', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");

                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                            }
                        } else {

                            //INTEREST DEDUCTION
                            if ($entrdAMntRngBal < $intrstAmnt) {
                                $intrstPymntAmnt = $entrdAMntRngBal;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            }

                            if ($entrdAMntRngBal == $intrstAmnt) {
                                $intrstPymntAmnt = $intrstAmnt;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            } else {
                                $intrstPymntAmnt = $intrstAmnt;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;

                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $intrstAmnt;

                                //PRINCIPAL DEDUCTION
                                if ($entrdAMntRngBal < $prncplAmnt) {
                                    $prncplPymntAmnt = $entrdAMntRngBal;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                }

                                if ($entrdAMntRngBal == $prncplAmnt) {
                                    $prncplPymntAmnt = $prncplAmnt;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                    $isPaid = "YES";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                } else {
                                    $entrdAMntRngBal = (float) $entrdAMntRngBal - $prncplAmnt;

                                    $prncplPymntAmnt = $prncplAmnt;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "YES";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                }
                            }
                        }
                    }

                    if ($lnRpayType === "SETTLEMENT" && (float) $ttlIntrstAmntWaived != 0) {
                        //CREATE INTEREST WRITE-OFF TRANSACTIONS AND DAILY BALANCE
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";

                        $loanAccountID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);

                        $acntRslt = get_OneCustAccntInfo($loanAccountID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        $ttlIntrstAmntWaivedLW = (float) $ttlIntrstAmntWaived;
                        if ((float) $entrdAMnt <= 0) {
                            $ttlIntrstAmntWaivedLW = -1 * (float) $ttlIntrstAmntWaived;
                        }

                        $nwMsg = "";
                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
                        $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "Interest Waiver - LOAN SETTLEMENT" . $rvslSmbl, "DR", (float) $ttlIntrstAmntWaivedLW, $trnsType1, (float) $ttlIntrstAmntWaivedLW, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

                        if ($recCnt <= 0) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN SETTLEMENT Account Transactions for Customer!</span>";
                            return false;
                        }


                        $docTypPrfx1 = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($loanAccountID, $ttlIntrstAmntWaivedLW, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Interest Waived!</br>$nwMsg</span>";
                            return false;
                        }
                    }


                    if ($cnt > 0) {
                        $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                . "SET principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($row[9], 'PRINCIPAL OUTSTANDING')),"
                                . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($row[9], 'INTEREST OUTSTANDING'))"
                                . ", ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($row[9], 'TENURE OUTSTANDING')),"
                                . " last_update_by = $usrID, last_update_date = '$rpyDate' WHERE disbmnt_det_id = $row[10]");
                    } else {
                        $errMsg .= "Loan schedule updates failed!<br/><br/>";
                        return false;
                    }

                    if($rslt > 0){
                        //REMOVE LIEN IF LOAN BALANCE IS ZERO
                        $v_loan_prncpl_bal = 0;
                        $v_loan_intrst_bal = 0;
                        $nwMsg = "";

                        if((int)$row[9] > 0){
                            $strSql2 = "SELECT mcf.calc_loan_ttl_bal($row[9], 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($row[9], 'INTEREST OUTSTANDING')";
                            $result2 = executeSQLNoParams($strSql2);
                            while ($row2 = loc_db_fetch_array($result2)) {
                                $v_loan_prncpl_bal = (float) $row2[0];
                                $v_loan_intrst_bal = (float) $row2[1];
                            }

                            if(($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0){
                                $rtnScss = rvrsLoanRqstAcctLien($row[9], $nwMsg);

                                if ($rtnScss === FALSE) {
                                    $errMsg .= $nwMsg;
                                    return false;
                                }
                            }
                        }
                    } else {
                        $errMsg .= "Faild to update mcf_loan_disbursement_det balance!<br/><br/>";
                        return false;
                    }

                    //PRINCIPAL & INTEREST RECEIVABLE & DEFERRED INTEREST & INTEREST REVENUE ACCOUNTING
                    //$principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID
                    if ($ttlPrncplPymntAmnt > 0) {
                        //PRINCIPAL RECEIVABLE ACCOUNTING
                        $ttlCstPrice = $ttlPrncplPymntAmnt * $funcCrncyRate;
                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $principalRcvblAcctID);
                        $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                        $acctCrncyAmnt = round($ttlPrncplPymntAmnt * $acntCrncyRate, 2);

                        $trnsFullDesc = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        if ($srcType === "CASH") {
                            $trnsFullDesc = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        }

                        $succs = sendToMCFGLIntrfcMnl(
                                $principalRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsFullDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                    }

                    if (!$succs) {
                        return $succs;
                    } else {
                        if ($ttlIntrstPymntAmnt > 0 || $ttlIntrstAmntWaived > 0) {
                            if ($ttlIntrstPymntAmnt > 0) {

                                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                if ($srcType === "CASH") {
                                    $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                }

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstPymntAmnt * $funcCrncyRate;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstPymntAmnt * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING
                                    $trnsDescptn1 = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($srcType === "CASH") {
                                        $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    }

                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //INTEREST REVENUE ACCOUNTING
                                    if ($ttlIntrstPymntAmnt > 0) {
                                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRevenueAcctID);

                                        $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        if ($srcType === "CASH") {
                                            $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        }

                                        $succs = sendToMCFGLIntrfcMnl(
                                                $interestRevenueAcctID, "I", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                    }
                                }
                            } else if ($ttlIntrstAmntWaived > 0) {

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstAmntWaived * $funcCrncyRate;
                                $trnsDescptn = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - INTEREST RECEIVABLE" . $rvslSmbl;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstAmntWaived * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING

                                    $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($ttlIntrstAmntWaived > 0) {
                                        $trnsDescptn1 = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - DEFERRED INTEREST" . $rvslSmbl;
                                    }
                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return $succs;
}

function generateItmAccntng_CrdtMgmt($fnccurid, $qty, $doctype, $docHdrID, $srcInvAcntID, $destInvAcntID, $principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID, $expnsID, $cogsID, $salesRevID, $price, $entrdCrncyID, $entrdRate, $lineid, $dateStr, $docNum, $cstmrNm, $docDesc, $itmDesc, $itmType, $trnsLnTyp, $trnsSrc, $isTrnsPymnt, $srcVltCageNm, $destVltCageNm, $srcType, &$errMsg) {
    global $usrID;
    global $prsnid;
    global $trnsTypeABRV;
    global $trnsTypes;

    $trnsFullDesc = "";

    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    if ($cstmrNm == "") {
        $cstmrNm = "Unspecified Customer";
    }
    if ($docDesc == "") {
        $docDesc = "Unstated Purpose";
    }
    $succs = FALSE;

    $trnsDate = getStartOfDayDMYHMS();

    //Get Lst Exchage Rates and A
    $acctCrncyAmnt = 0;
    $acctCrncyID = -1;
    $funcCrncyRate = round(get_LtstExchRate($entrdCrncyID, $fnccurid, $dateStr), 15);
    $acntCrncyRate = 1.00;
    $entrdAMnt = round($qty * $price, 2);

    $ttlLoanBalOutstndn = 0;
    $lnPyTyp = "REPAYMENT";
    $pncplAmtBalStlmnt = 0.00;
    $intrstAmtBalStlmnt = 0.00;

    $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $docHdrID);
    $rvslSmbl = "";

    $andCls = "  AND is_paid IN ('NO','PARTIAL')";
    if ($voidedTrnsID > 0) {
        $andCls = " AND 1 = 1";
        $rvslSmbl = " -Reversal";
    }

    //GET LOAN BALANCE
    $result1 = executeSQLNoParams("SELECT distinct (b.principal_amount_bal + b.ttl_interest_bal) loan_bal, loan_rpmnt_type, b.principal_amount_bal, b.ttl_interest_bal
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND d.status = 'Authorized'
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls");

    $rcdCnt = loc_db_num_rows($result1);

    if ($rcdCnt <= 0) {
        $errMsg .= "No Schedule exists for the Loan Request. Please save schedule first!<br/><br/>";
        return false;
    }
    
    $intTtl = 0;
    $resultInt = executeSQLNoParams("SELECT sum(tbl1.arrears)
        FROM (SELECT
        CASE WHEN to_timestamp(a.repay_date,'YYYY-MM-DD') <= to_timestamp(mcf.xx_get_start_of_day_date(1),'YYYY-MM-DD') then (a.interest_amnt - a.interest_amnt_paid) ELSE 0.00 END arrears
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND 1 = 1/*d.status = 'Authorized'*/
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls)tbl1");
    
    while ($rowInt = loc_db_fetch_array($resultInt)) {
        $intTtl = (float) $rowInt[0];
        break;
    }
	

    while ($row1 = loc_db_fetch_array($result1)) {
        $ttlLoanBalOutstndn = round(((float) $row1[0]), 2);
        $lnPyTyp = $row1[1];
        $pncplAmtBalStlmnt = (float) $row1[2];
        //$pncplAmtBalStlmnt = round(((float) $row1[2]), 2);
        $intrstAmtBalStlmnt = round(((float) $row1[3]), 2);
        break;
    }

    if ($lnPyTyp == "REPAYMENT" && $entrdAMnt > $ttlLoanBalOutstndn) {
        $errMsg .= "REPAYMENT Amount cannot be greater than the Total Loan Schedule Outstanding Balance! Please alter amount<br/><br/>";
        return false;
    } else if ($lnPyTyp == "SETTLEMENT" && $entrdAMnt > round(($pncplAmtBalStlmnt + $intTtl),2)) {
        $errMsg .= "SETTLEMENT Amount cannot be greater than the Total Loan Schedule PRINCIPAL Balance of " . number_format(($pncplAmtBalStlmnt + $intTtl), 2)  . "! Please alter amount<br/><br/>";
        return false;
    }

    if ($doctype == "LOAN_REPAY") {
        $stpErrCnta = 0;
        if ($destInvAcntID <= 0 && $srcType == "CASH") {
            $errMsg .= "Destination Cage Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($srcInvAcntID <= 0 && $srcType == "ACCOUNT TRANSFER") {
            $errMsg .= "Customer Liability Accounts must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($principalRcvblAcctID <= 0) {
            $errMsg .= "Loan Principal Receivable Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($interestRcvblAcctID <= 0) {
            $errMsg .= "Loan Interest Receivable Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($deferredInterestAcctID <= 0) {
            $errMsg .= "Loan Deferred Interest Liability Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }
        if ($interestRevenueAcctID <= 0) {
            $errMsg .= "Loan Interest Revenue Account must be setup!<br/>";
            $stpErrCnta = $stpErrCnta + 1;
        }

        if ($stpErrCnta > 0) {
            return false;
        }
    }

    if (strpos($itmType, "Vault") !== FALSE) {
        $ttlCstPrice = $qty * $price * $funcCrncyRate;

        if ($doctype == "LOAN_REPAY") {

            if ($srcType === "CASH") {
                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $destInvAcntID);
                if ($entrdCrncyID !== $acctCrncyID && $srcType == "CASH") {
                    $errMsg .= "Transaction Currency ID is not the same as the Destination Cage Account!<br/><br/>";
                    return false;
                }
            } else {
                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $srcInvAcntID);
                if ($entrdCrncyID !== $acctCrncyID && $srcType == "CASH") {
                    $errMsg .= "Transaction Currency ID is not the same as the Customer Liability Account!<br/><br/>";
                    return false;
                }
            }

            //CASH ACCOUNTING
            $acntCrncyRate = round(1, 15);
            $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);


            if ($srcType === "CASH") {
                $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - CASH ACCOUNTING" . $rvslSmbl;
                $succs = sendToMCFGLIntrfcMnl($destInvAcntID, "I", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            } else {
                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - CUSTOMER ACCOUNT TRANSFER ACCOUNTING" . $rvslSmbl;
                $succs = sendToMCFGLIntrfcMnl($srcInvAcntID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            }

            if (!$succs) {
                return $succs;
            } else {

                //ACCOUNT FOR ACCOUNT TRANSFER


                $ttlPrncplPymntAmnt = 0;
                $ttlIntrstPymntAmnt = 0;
                $prncplPymntAmnt = 0;
                $intrstPymntAmnt = 0;
                $prncplAmnt = 0;
                $intrstAmnt = 0;
                //$schdlPayDte = "";
                $entrdAMntRngBal = $entrdAMnt;
                if ($voidedTrnsID > 0) {
                    $entrdAMntRngBal = -1 * $entrdAMnt;
                }
                $rpyDateYMD = "";
                $isPaid = "YES";
                $shdlIsPaid = "NO";
                $shdlIntAmtPaid = 0.00;
                $shdlPrncplAmtPaid = 0.00;
                $result = get_UnpaidLoanSchedule($docHdrID);
                if ($voidedTrnsID > 0) {
                    $result = get_PaidLoanSchedule($docHdrID);
                }
                $cnt = 0;
                $lnStlmntCnta = 0;
                $ttlIntrstAmntWaived = 0;
                $lnRpayType = "";
                if ($dateStr != "") {
                    $rpyDate = cnvrtDMYTmToYMDTm($dateStr);
                    $rpyDateYMD = substr($rpyDate, 0, 10);
                }

                if ($voidedTrnsID > 0) {
                    $fnLnRqstId = -1;
                    $fnDisbmntDetId = -1;
                    while ($row = loc_db_fetch_array($result)) {
                        $cnt = $cnt + 1;
                        $intrstAmnt = (float) $row[3];
                        $prncplAmnt = (float) $row[4];
                        $schdlPayDate = $row[11];
                        $lnRpayType = $row[12];
                        $lnRqstId = $row[9];
                        $shdlIsPaid = $row[6];
                        $shdlIntAmtPaid = (float) $row[7];
                        $shdlPrncplAmtPaid = (float) $row[8];
                        
                        $fnLnRqstId = (int)$row[9];
                        $fnDisbmntDetId = (int)$row[10];

                        //CHECK FOR PARTIAL/FULL LOAN SETTLEMENT and APPLICABLE PENALTY
                        if ($lnRpayType === "SETTLEMENT") {
                            if ($entrdAMntRngBal < $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $entrdAMntRngBal;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid-$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                //$ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + 0.00;
                                break;
                            }

                            if ($entrdAMntRngBal == $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "NO";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                break;
                            } else {
                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlPrncplAmtPaid;

                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "NO";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");

                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                            }
                        } else {

                            //PRINCIPAL DEDUCTION
                            if ($entrdAMntRngBal < $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $entrdAMntRngBal;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid-$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            }

                            if ($entrdAMntRngBal == $shdlPrncplAmtPaid) {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = 0"
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            } else {
                                $prncplPymntAmnt = $shdlPrncplAmtPaid;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlPrncplAmtPaid;

                                //INTEREST DEDUCTION
                                if ($entrdAMntRngBal < $shdlIntAmtPaid) {
                                    $intrstPymntAmnt = $entrdAMntRngBal;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid - $intrstPymntAmnt), principal_amnt_paid = 0 "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDateYMD', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                }

                                if ($entrdAMntRngBal == $shdlIntAmtPaid) {
                                    $intrstPymntAmnt = $shdlIntAmtPaid;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                    $isPaid = "NO";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = 0, principal_amnt_paid = 0 "
                                                    . ", is_paid = '$isPaid', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                } else {
                                    $entrdAMntRngBal = (float) $entrdAMntRngBal - $shdlIntAmtPaid;

                                    $intrstPymntAmnt = $shdlIntAmtPaid;
                                    $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "NO";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = 0, principal_amnt_paid = 0"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                }
                            }
                        }
                    }

                    if ($lnRpayType === "SETTLEMENT" && (float) $ttlIntrstAmntWaived != 0) {
                        //CREATE INTEREST WRITE-OFF TRANSACTIONS AND DAILY BALANCE
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";

                        $loanAccountID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);

                        $acntRslt = get_OneCustAccntInfo($loanAccountID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        $ttlIntrstAmntWaivedLW = (float) $ttlIntrstAmntWaived;
                        if ((float) $entrdAMnt <= 0) {
                            $ttlIntrstAmntWaivedLW = -1 * (float) $ttlIntrstAmntWaived;
                        }

                        $nwMsg = "";
                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
                        $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "Interest Waiver - LOAN SETTLEMENT" . $rvslSmbl, "DR", (float) $ttlIntrstAmntWaivedLW, $trnsType1, (float) $ttlIntrstAmntWaivedLW, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

                        if ($recCnt <= 0) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN SETTLEMENT Account Transactions for Customer!</span>";
                            return false;
                        }


                        $docTypPrfx1 = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($loanAccountID, $ttlIntrstAmntWaivedLW, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Interest Waived!</br>$nwMsg</span>";
                            return false;
                        }
                    }


                    if ($cnt > 0) {
                        $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                . "SET principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'PRINCIPAL OUTSTANDING')),"
                                . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'INTEREST OUTSTANDING'))"
                                . ", ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'TENURE OUTSTANDING')),"
                                . " last_update_by = $usrID, last_update_date = '$rpyDate' WHERE disbmnt_det_id = $fnDisbmntDetId");
                    } else {
                        $errMsg .= "Failed to update Loan Schedule!<br/><br/>";
                        return false;
                    }

                    if((int)$rslt > 0) {
                        //REMOVE LIEN IF LOAN BALANCE IS ZERO
                        $v_loan_prncpl_bal = 0;
                        $v_loan_intrst_bal = 0;
                        $nwMsg = "";

                        if($fnLnRqstId > 0){
                            $strSql2 = "SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($fnLnRqstId, 'INTEREST OUTSTANDING')";
                            $result2 = executeSQLNoParams($strSql2);
                            while ($row2 = loc_db_fetch_array($result2)) {
                                $v_loan_prncpl_bal = (float) $row2[0];
                                $v_loan_intrst_bal = (float) $row2[1];
                            }

                            if(($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0){
                                $rtnScss = rvrsLoanRqstAcctLien($fnLnRqstId, $nwMsg);

                                if ($rtnScss === FALSE) {
                                    $errMsg .= $nwMsg;
                                    return false;
                                }
                            }
                        }
                    } else {
                        $errMsg .= "Faild to update mcf_loan_disbursement_det balance!<br/><br/>";
                        return false;
                    }

                    //PRINCIPAL & INTEREST RECEIVABLE & DEFERRED INTEREST & INTEREST REVENUE ACCOUNTING
                    //$principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID
                    if ($ttlPrncplPymntAmnt > 0) {
                        //PRINCIPAL RECEIVABLE ACCOUNTING
                        $ttlCstPrice = $ttlPrncplPymntAmnt * $funcCrncyRate;
                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $principalRcvblAcctID);
                        $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                        $acctCrncyAmnt = round($ttlPrncplPymntAmnt * $acntCrncyRate, 2);

                        $trnsFullDesc = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        if ($srcType === "CASH") {
                            $trnsFullDesc = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        }

                        $succs = sendToMCFGLIntrfcMnl(
                                $principalRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsFullDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                    }

                    if (!$succs) {
                        return $succs;
                    } else {
                        if ($ttlIntrstPymntAmnt > 0 || $ttlIntrstAmntWaived > 0) {
                            if ($ttlIntrstPymntAmnt > 0) {

                                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                if ($srcType === "CASH") {
                                    $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                }

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstPymntAmnt * $funcCrncyRate;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstPymntAmnt * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING
                                    $trnsDescptn1 = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($srcType === "CASH") {
                                        $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    }

                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //INTEREST REVENUE ACCOUNTING
                                    if ($ttlIntrstPymntAmnt > 0) {
                                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRevenueAcctID);

                                        $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        if ($srcType === "CASH") {
                                            $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        }

                                        $succs = sendToMCFGLIntrfcMnl(
                                                $interestRevenueAcctID, "I", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                    }
                                }
                            } else if ($ttlIntrstAmntWaived > 0) {

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstAmntWaived * $funcCrncyRate;
                                $trnsDescptn = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - INTEREST RECEIVABLE" . $rvslSmbl;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstAmntWaived * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING

                                    $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($ttlIntrstAmntWaived > 0) {
                                        $trnsDescptn1 = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - DEFERRED INTEREST" . $rvslSmbl;
                                    }
                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", -1 * $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, -1 * $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }
                            }
                        }
                    }
                } else {
                    $fnLnRqstId = -1;
                    $fnDisbmntDetId = -1;
                    while ($row = loc_db_fetch_array($result)) {
                        $cnt = $cnt + 1;
                        $intrstAmnt = (float) $row[3];
                        $prncplAmnt = (float) $row[4];
                        $schdlPayDate = $row[11];
                        $lnRpayType = $row[12];
                        $lnRqstId = (int)$row[9];
                        $shdlIsPaid = $row[6];
                        $shdlIntAmtPaid = (float) $row[7];
                        $shdlPrncplAmtPaid = (float) $row[8];
                        
                        $fnLnRqstId = (int)$row[9];
                        $fnDisbmntDetId = (int)$row[10];

                        //CHECK FOR PARTIAL/FULL LOAN SETTLEMENT and APPLICABLE PENALTY
                        if ($schdlPayDate > $rpyDate && $lnRpayType === "SETTLEMENT") {
                            if ($entrdAMntRngBal < $prncplAmnt) {
                                
                                $smBal = round(($prncplAmnt - $entrdAMntRngBal));
                                if($smBal == 0){
                                    $prncplPymntAmnt = $prncplAmnt;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                    $isPaid = "YES";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', shd_waive_interest='YES', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    $lnStlmntCnta = $lnStlmntCnta + 1;
                                    $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                } else {
                                    $prncplPymntAmnt = $entrdAMntRngBal;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', shd_waive_interest='NO', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    $lnStlmntCnta = $lnStlmntCnta + 1;
                                    //$ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                    $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + 0.00;
                                }
                                break;
                            }

                            if ($entrdAMntRngBal == $prncplAmnt) {
                                $prncplPymntAmnt = $prncplAmnt;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                $isPaid = "YES";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='YES', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                                break;
                            } else {
                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $prncplAmnt;

                                $prncplPymntAmnt = $prncplAmnt;
                                $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                $isPaid = "YES";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                . ", is_paid = '$isPaid', shd_waive_interest='YES', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");

                                $lnStlmntCnta = $lnStlmntCnta + 1;
                                $ttlIntrstAmntWaived = $ttlIntrstAmntWaived + $intrstAmnt;
                            }
                        } else {

                            //INTEREST DEDUCTION
                            if ($entrdAMntRngBal < $intrstAmnt) {
                                $intrstPymntAmnt = $entrdAMntRngBal;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            }

                            if ($entrdAMntRngBal == $intrstAmnt) {
                                $intrstPymntAmnt = $intrstAmnt;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;
                                $isPaid = "PARTIAL";
                                $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt) "
                                                . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                break;
                            } else {
                                $intrstPymntAmnt = $intrstAmnt;
                                $ttlIntrstPymntAmnt = $ttlIntrstPymntAmnt + $intrstPymntAmnt;

                                $entrdAMntRngBal = (float) $entrdAMntRngBal - $intrstAmnt;

                                //PRINCIPAL DEDUCTION
                                if ($entrdAMntRngBal < $prncplAmnt) {
                                    $prncplPymntAmnt = $entrdAMntRngBal;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "PARTIAL";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                }

                                if ($entrdAMntRngBal == $prncplAmnt) {
                                    $prncplPymntAmnt = $prncplAmnt;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;
                                    $isPaid = "YES";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                    break;
                                } else {
                                    $entrdAMntRngBal = (float) $entrdAMntRngBal - $prncplAmnt;

                                    $prncplPymntAmnt = $prncplAmnt;
                                    $ttlPrncplPymntAmnt = $ttlPrncplPymntAmnt + $prncplPymntAmnt;

                                    $isPaid = "YES";
                                    $cnt = $cnt + execUpdtInsSQL("UPDATE mcf.mcf_loan_schedule SET interest_amnt_paid = (interest_amnt_paid+$intrstPymntAmnt), principal_amnt_paid = (principal_amnt_paid+$prncplPymntAmnt)"
                                                    . ", is_paid = '$isPaid', actual_repay_date = '$rpyDate', last_update_by = $usrID, last_update_date = '$rpyDate' WHERE schedule_id = $row[0]");
                                }
                            }
                        }
                    }

                    if ($lnRpayType === "SETTLEMENT" && (float) $ttlIntrstAmntWaived != 0) {
                        //CREATE INTEREST WRITE-OFF TRANSACTIONS AND DAILY BALANCE
                        //get interest waived
                        $trnsType1 = "WITHDRAWAL";
                        $acctstatus = "";
                        $acctcustomer = "";
                        $acctlien = 0;
                        $mandate = "";
                        $wtdrwllimitno = -1;
                        $wtdrwllimitamt = 0;
                        $wtdrwllimittype = "";

                        $loanAccountID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);

                        $acntRslt = get_OneCustAccntInfo($loanAccountID);
                        while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                            $acctstatus = $rowAcnt[10];
                            $acctcustomer = $rowAcnt[11];
                            $acctlien = (float) $rowAcnt[13];
                            $mandate = $rowAcnt[14];
                            $wtdrwllimitno = (int) $rowAcnt[15];
                            $wtdrwllimitamt = (float) $rowAcnt[16];
                            $wtdrwllimittype = $rowAcnt[17];
                        }

                        $ttlIntrstAmntWaivedLW = (float) $ttlIntrstAmntWaived;
                        if ((float) $entrdAMnt <= 0) {
                            $ttlIntrstAmntWaivedLW = -1 * (float) $ttlIntrstAmntWaived;
                        }

                        $nwMsg = "";
                        $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;
                        $recCnt = createAccountTrns($loanAccountID, $dateStr, "Paperless", $gnrtdTrnsNo, "Interest Waiver - LOAN SETTLEMENT" . $rvslSmbl, "DR", (float) $ttlIntrstAmntWaivedLW, $trnsType1, (float) $ttlIntrstAmntWaivedLW, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

                        if ($recCnt <= 0) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Interest Write-Off - LOAN SETTLEMENT Account Transactions for Customer!</span>";
                            return false;
                        }


                        $docTypPrfx1 = $trnsTypeABRV[findArryIdx($trnsTypes, "WITHDRAWAL")];
                        $dateStr11 = getFrmtdDB_Date_time();
                        $shdActnBeDone = updateCstmrAcntBalances($loanAccountID, $ttlIntrstAmntWaivedLW, 0.00, 0.00, "WITHDRAWAL", "D", $docTypPrfx1, $docHdrID, $dateStr11, $nwMsg);

                        if ($shdActnBeDone === FALSE) {
                            $errMsg .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Update(Debit) Customer Loan Account Balances with Total Interest Waived!</br>$nwMsg</span>";
                            return false;
                        }
                    }


                    if ($cnt > 0) {
                        $rslt = execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det "
                                . "SET principal_amount_bal = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'PRINCIPAL OUTSTANDING')),"
                                . " ttl_interest_bal = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'INTEREST OUTSTANDING'))"
                                . ", ttl_tenor_bal  = (SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'TENURE OUTSTANDING')),"
                                . " last_update_by = $usrID, last_update_date = '$rpyDate' WHERE disbmnt_det_id = $fnDisbmntDetId");
                    } else {
                        $errMsg .= "Loan schedule updates failed!<br/><br/>";
                        return false;
                    }

                    if($rslt > 0){
                        //REMOVE LIEN IF LOAN BALANCE IS ZERO
                        $v_loan_prncpl_bal = 0;
                        $v_loan_intrst_bal = 0;
                        $nwMsg = "";

                        if($fnLnRqstId > 0){
                            $strSql2 = "SELECT mcf.calc_loan_ttl_bal($fnLnRqstId, 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($fnLnRqstId, 'INTEREST OUTSTANDING')";
                            $result2 = executeSQLNoParams($strSql2);
                            while ($row2 = loc_db_fetch_array($result2)) {
                                $v_loan_prncpl_bal = (float) $row2[0];
                                $v_loan_intrst_bal = (float) $row2[1];
                            }

                            if(($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0){
                                $rtnScss = rvrsLoanRqstAcctLien($fnLnRqstId, $nwMsg);

                                if ($rtnScss === FALSE) {
                                    $errMsg .= $nwMsg;
                                    return false;
                                }
                            }
                        }
                    } else {
                        $errMsg .= "Faild to update mcf_loan_disbursement_det balance!<br/><br/>";
                        return false;
                    }

                    //PRINCIPAL & INTEREST RECEIVABLE & DEFERRED INTEREST & INTEREST REVENUE ACCOUNTING
                    //$principalRcvblAcctID, $interestRcvblAcctID, $deferredInterestAcctID, $interestRevenueAcctID
                    if ($ttlPrncplPymntAmnt > 0) {
                        //PRINCIPAL RECEIVABLE ACCOUNTING
                        $ttlCstPrice = $ttlPrncplPymntAmnt * $funcCrncyRate;
                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $principalRcvblAcctID);
                        $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                        $acctCrncyAmnt = round($ttlPrncplPymntAmnt * $acntCrncyRate, 2);

                        $trnsFullDesc = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        if ($srcType === "CASH") {
                            $trnsFullDesc = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - PRINCIPAL RECEIVABLE" . $rvslSmbl;
                        }

                        $succs = sendToMCFGLIntrfcMnl(
                                $principalRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsFullDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                    }

                    if (!$succs) {
                        return $succs;
                    } else {
                        if ($ttlIntrstPymntAmnt > 0 || $ttlIntrstAmntWaived > 0) {
                            if ($ttlIntrstPymntAmnt > 0) {

                                $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                if ($srcType === "CASH") {
                                    $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST RECEIVABLE" . $rvslSmbl;
                                }

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstPymntAmnt * $funcCrncyRate;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstPymntAmnt * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING
                                    $trnsDescptn1 = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($srcType === "CASH") {
                                        $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    }

                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //INTEREST REVENUE ACCOUNTING
                                    if ($ttlIntrstPymntAmnt > 0) {
                                        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRevenueAcctID);

                                        $trnsDescptn = $docNum . "-Repayment of " . $entrdAMnt . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        if ($srcType === "CASH") {
                                            $trnsDescptn = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - INTEREST REVENUE" . $rvslSmbl;
                                        }

                                        $succs = sendToMCFGLIntrfcMnl(
                                                $interestRevenueAcctID, "I", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                    }
                                }
                            } else if ($ttlIntrstAmntWaived > 0) {

                                //INTEREST RECEIVABLE ACCOUNTING
                                $ttlCstPrice = $ttlIntrstAmntWaived * $funcCrncyRate;
                                $trnsDescptn = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - INTEREST RECEIVABLE" . $rvslSmbl;

                                $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $interestRcvblAcctID);
                                $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
                                $acctCrncyAmnt = round($ttlIntrstAmntWaived * $acntCrncyRate, 2);
                                $succs = sendToMCFGLIntrfcMnl(
                                        $interestRcvblAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

                                if (!$succs) {
                                    return $succs;
                                } else {
                                    //DEFERRED INTEREST ACCOUNTING

                                    $trnsDescptn1 = $docNum . "-Repayment of " . $itmDesc . " into " . $destVltCageNm . " by $cstmrNm (" . $docDesc . "-" . $doctype . ") - DEFERRED INTEREST" . $rvslSmbl;
                                    if ($ttlIntrstAmntWaived > 0) {
                                        $trnsDescptn1 = $docNum . "-Waiver of interest due to Settlement of Loan amount " . $ttlCstPrice . " - DEFERRED INTEREST" . $rvslSmbl;
                                    }
                                    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $deferredInterestAcctID);
                                    $succs = sendToMCFGLIntrfcMnl(
                                            $deferredInterestAcctID, "D", $ttlCstPrice, $trnsDate, $trnsDescptn1, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return $succs;
}

function payMCFTrnsRqst_LoanRpmnt($hdrid) {
    $apprvrStatus = 'Paid';
    $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $hdrid);
    $rqstTrnsType = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "trns_type", $hdrid);
    if ($rqstHdrStatus == 'Paid' || $rqstHdrStatus == 'Received') {
        return "<span style=\"color:red;\">|ERROR| No Payment to Process!</span>";
    }
    if ($rqstTrnsType == "LOAN_REPAY") {
        $apprvrStatus = 'Received';
    }
    $srcDocID = $hdrid;
    $dsply = "Start Loan Repayment Trans. Item Balance Update and Accounting Entries Generation<br/>";
    $shdActnBeDone = isMCFTrnsQtyVld_LoanRpmnt($srcDocID) && isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($srcDocID);
    if ($shdActnBeDone === true) {
        $nwMsg1 = "";
        $nwMsg2 = "";
        $shdActnBeDone = isMCFTrnsCstmrAcntAmtVld_LoayRpmnt_AcctDdctn($srcDocID, $nwMsg1);
        if ($shdActnBeDone === true) {
            $dsply .= "Item Balance && Customer Balance Verified<br/>";
            $shdActnBeDone = updateMCFStckBals($srcDocID);
            if ($shdActnBeDone === true) {
                $dsply .= "Item Balance Updated<br/>";
                $shdActnBeDone = updateMCFCstmrAcntBals_CrdtMgmt($srcDocID, $nwMsg2);
                if ($shdActnBeDone === true) {
                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Customer Loan Balance Updated<br/></span>";
                    $nwMsg = "";
                    $shdActnBeDone = createMCFAccntng_LoanRpmnt($srcDocID, $nwMsg);
                    if ($shdActnBeDone === FALSE) {
                        $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting!</span>";
                    } else {
                        $dsply .= "<span style=\"color:green;font-weight:bold;\">Accounting Created<br/></span>";
                        $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $hdrid);
                        if ($voidedTrnsID > 0) {
                            updateMCFTrnsStatus($voidedTrnsID, "Void");
                        }
                        updateMCFTrnsStatus($hdrid, $apprvrStatus);
                    }
                } else {
                    $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg2</span>";
                }
            } else {
                $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account and that you have Permission to perform this Action on this Cage/Till!</span>";
            }
        } else {
            $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg1</span>";
        }
    } else {
        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account! 1.0</span>";
    }
    $msg = $dsply;
    return $msg;
}

function isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($docHdrID) {
    $dateStr = getStartOfDayDMYHMS(); //getFrmtdDB_Date_time();

    $doctype = "LOAN_REPAY";
    $accntID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "account_id", $docHdrID);

    $succs = false;
    $result = get_One_MCFTrnsLines($docHdrID);
    $clearedQty = 0;
    $unClearedQty = 0;
    $lienQty = 0;
    //echo $accntID . ":" . $docHdrID . ":" . $doctype . ":" . $docNum;

    $lnCntr = 0;
    while ($row = loc_db_fetch_array($result)) {
        $lnCntr++;
        $isdlvrd = false;
        $clearedQty = ((float) $row[4] * (float) $row[3] * (float) $row[12]) - $lienQty;

        //echo $accntID . ":" . $dateStr . ":" . $clearedQty . ":" . $unClearedQty;
        if ($doctype == "LOAN_REPAY") {
            if ($accntID > 0 && $isdlvrd == false) {
                $succs = isCstmrAcntAmtAvlbl($accntID, $clearedQty, $unClearedQty, $lienQty, $dateStr, "I");
            }
        } else if ($doctype == "WITHDRAWAL") {
            if ($accntID > 0 && $isdlvrd == false) {
                $succs = isCstmrAcntAmtAvlbl($accntID, $clearedQty, $unClearedQty, $lienQty, $dateStr, "D");
            }
        }
    }
    if ($lnCntr <= 0) {
        $succs = true;
    }
    //echo $succs;
    //$abc=1/0;
    if ($doctype == "LOAN_REPAY") {
        $succs = FALSE;
        $lnCntr = 0;
        $result = getAccountTrnsChqs($docHdrID);
        while ($row = loc_db_fetch_array($result)) {
            $lnCntr++;
            $clearedQty = 0;
            $unClearedQty = 0;
            $lienQty = 0;
            $chqType = $row[9];
            $isSrcAcntBalsOK = TRUE;
            if ($chqType == "In-House") {
                //Verify Source Account Balance First
                //First Let it go as Uncleared
                //$clearedQty = ((float) $row[7]) - $lienQty;
                //Then run process to auto clear for In-house Cheques
                $unClearedQty = ((float) $row[7]) * ((float) $row[15]);
            } else {
                $unClearedQty = ((float) $row[7]) * ((float) $row[15]);
            }
            if ($accntID > 0 && $isSrcAcntBalsOK == TRUE) {
                $succs = isCstmrAcntAmtAvlbl($accntID, $clearedQty, $unClearedQty, $lienQty, $dateStr, "I");
            }
        }
        //echo $lnCntr;
        //$abc=1/0;
        if ($lnCntr <= 0) {
            $succs = true;
        }
    }
    return $succs;
}

function isMCFTrnsQtyVld_LoanRpmnt($docHdrID) {
    global $gnrlTrnsDteDMYHMS;
    $dateStr = $gnrlTrnsDteDMYHMS;//getFrmtdDB_Date_time();
    $doctype = "";
    $docNum = "";
    $cstmrNm = "";
    $docDesc = "";
    $srcStoreID = -1; //Get from one logged on
    $srcCageID = -1;
    $destStoreID = -1;
    $destCageID = -1;
    $srcInvAcntID = -1;
    $destInvAcntID = -1;
    $lbltyAccntID = -1;
    $srcItmState = "Issuable";
    $destItmState = "Issuable";
    $doctype = "LOAN_REPAY";

    //echo $srcCageID . ":" . $destCageID . ":" . $prsnid . ":" . $docHdrID;
    $succs = false;
    $lnCntr = 0;
    $result = get_One_MCFTrnsLines($docHdrID);
    while ($row = loc_db_fetch_array($result)) {
        $lnCntr++;
        $cshAnlsID = (float) $row[0];
        $itemID = (int) $row[6];
        $isdlvrd = false;
        $qty = (float) $row[4];
        if ($doctype == "WITHDRAWAL") {
            $srcCageID = (int) $row[9];
            $srcStoreID = (int) $row[10];
            $srcInvAcntID = (int) $row[13];
            $srcItmState = $row[11];
        } else {
            $destCageID = (int) $row[9];
            $destStoreID = (int) $row[10];
            $destInvAcntID = (int) $row[13];
            $destItmState = $row[11];
        }
        //echo "<br/>ItemID;".$itemID.":".$srcCageID . ":" .$srcStoreID.":". $destCageID . ":" . $destStoreID . ":DocType:" . $doctype." END<br/>";
        if ($doctype == "LOAN_REPAY") {
            if ($itemID > 0 && $destStoreID > 0 && $destCageID > 0 && $isdlvrd == false) {
                $succs = isStockQtyAvlbl($destStoreID, $destCageID, $itemID, $destItmState, $qty, $dateStr, "I");
            }
        } else if ($doctype == "WITHDRAWAL") {
            if ($itemID > 0 && $srcStoreID > 0 && $srcCageID && $isdlvrd == false) {
                $succs = isStockQtyAvlbl($srcStoreID, $srcCageID, $itemID, $srcItmState, $qty, $dateStr, "D");
            }
        }
    }
    if ($lnCntr <= 0) {
        $succs = true;
    }
    //echo $lnCntr."|succs:".$succs.":".true."|".false;
    //$abc=1/0;
    return $succs;
}

function get_LoanRpmntTransactionsTtl($searchFor, $searchIn, $orgID, $searchAll, $trnsType) {
    global $usrID;
    global $prsnid;
    global $orgID;
    global $canSeeOthrsTrns;
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (b.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (b.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Date") {
        $whrcls = " AND (a.trns_date ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Type") {
        $whrcls = " AND (a.trns_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }
    if (!$canSeeOthrsTrns) {
        $whrcls .= " and (a.created_by = $usrID or a.last_update_by= $usrID or a.authorized_by_person_id=$prsnid)";
    }
    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_cust_account_transactions a, mcf.mcf_accounts b, mcf.mcf_currencies c "
            . "WHERE (a.account_id = b.account_id AND b.currency_id = c.crncy_id AND a.trns_type IN ('$trnsType') AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_LoanRpmntTransactions($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy, $trnsType) {
    $extra1 = "";
    global $usrID;
    global $prsnid;
    global $orgID;
    global $canSeeOthrsTrns;
    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Account Number") {
        $whrcls = " AND (b.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Title") {
        $whrcls = " AND (b.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Date") {
        $whrcls = " AND (a.trns_date ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Type") {
        $whrcls = " AND (a.trns_type ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Transaction Date DESC") {
        $ordrBy = "a.trns_date DESC";
    } else if ($sortBy == "Account Number") {
        $ordrBy = "b.account_number ASC";
    } else if ($sortBy == "Account Title ASC") {
        $ordrBy = "b.account_title ASC";
    } else if ($sortBy == "Transaction Type ASC") {
        $ordrBy = "a.trns_type ASC";
    } else if ($sortBy == "Account Title DESC") {
        $ordrBy = "a.account_title DESC";
    }
    if (!$canSeeOthrsTrns) {
        $whrcls .= " and (a.created_by = $usrID or a.last_update_by= $usrID or a.authorized_by_person_id=$prsnid)";
    }

    $strSql = "SELECT acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, trns_type, " .
            "a.amount, a.status, a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), a.trns_no " .
            "FROM mcf.mcf_cust_account_transactions a,  mcf.mcf_accounts b, mcf.mcf_currencies c "
            . "WHERE (a.account_id = b.account_id AND a.trns_type IN ('$trnsType') AND b.currency_id = c.crncy_id AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_cashDpst_CrdtAccnt_ID($accntID) {
    global $prsnid;
    $strSql = "SELECT org.get_accnt_id_brnch_eqv(b.branch_id, d.deposit_cash_crdt_accnt_id)
    FROM mcf.mcf_accounts b
INNER JOIN mcf.mcf_prdt_savings c ON (b.product_type_id = c.svngs_product_id)
LEFT OUTER JOIN mcf.mcf_prdt_savings_stdevnt_accntn d ON (c.svngs_product_id = d.svngs_product_id)
  WHERE b.account_id = " . $accntID;
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

function get_One_MCFLoanDisbmntHdr($dochdrID) {
    $strSql = "SELECT a.acct_trns_id, a.trns_date, a.account_id, a.trns_type, a.description,
       a.amount, a.value_date, a.branch_id, a.doc_no, a.trns_person_name, a.trns_person_tel_no,
       a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number,
       a.trns_person_type, a.status, a.doc_type, a.debit_or_credit,
       a.authorized_by_person_id, a.autorization_date, a.trns_no,
       d.deposit_cash_crdt_accnt_id, d.withdrawal_dbt_accnt_id,
       e.mapped_lov_crncy_id
    FROM mcf.mcf_cust_account_transactions a
LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id)
LEFT OUTER JOIN mcf.mcf_prdt_savings c ON (b.product_type_id = c.svngs_product_id)
LEFT OUTER JOIN mcf.mcf_prdt_savings_stdevnt_accntn d ON (c.svngs_product_id = d.svngs_product_id)
LEFT OUTER JOIN mcf.mcf_currencies e ON(c.currency_id = e.crncy_id)
  WHERE a.acct_trns_id = " . $dochdrID;
    //echo $strSql;
    return executeSQLNoParams($strSql);
}

function get_One_MCFLoanPrcssnFees($loanPrdtID) {
    $strSql = "SELECT distinct fee_name, fee_type,
       fee_flat, fee_percent, remarks, crdt_accnt_id
    FROM mcf.mcf_loan_request b
INNER JOIN mcf.mcf_prdt_loans c ON (b.loan_product_id = c.loan_product_id)
INNER JOIN mcf.mcf_loanprdt_prcssnfees_n_accts d ON (c.loan_product_id = d.loan_product_id)
  WHERE b.loan_product_id = $loanPrdtID ORDER BY fee_type, fee_name";
    return executeSQLNoParams($strSql);
}

function createMCFLoanDisbmntAccntng($docHdrID, $dsbrsdAmnt, $ttlInterest, $repaymentType, $repaymentAccntID, $prncplRcvblAccntID, $lbltyAccntID, $interestRcvblAcctID, $dfrdIntrstAcctID, $crncyID, $lineid, $docNum, $cstmrNm, $lnTrnsId, $loanPrdtID, $crdtType, &$errMsg) {
    global $orgID;
    global $prsnid;
    $dateStr = getFrmtdDB_Date_time();
    $succs = true;

    //$rsltAcc = get_One_MCFLoanDisbmntHdr($docHdrID);
    //$entrdRate = 0;
    $doctype = "LOAN DISBURSEMENT";

    $entrdRate = (float) 1;
    $fnccurid = getOrgFuncCurID($orgID);
    $trnsLnTyp = "";
    $trnsSrc = "SYS";

    deleteDocGLInfcLns($docHdrID, $doctype);
    rvrsImprtdIntrfcTrns($docHdrID, $doctype);
    $trnsTypeDesc = "";

    //$lbltyAccntID

    $nwMsg = "";
    if ($crdtType === "Loan") {
        if ($prncplRcvblAccntID <= 0 || $lbltyAccntID <= 0) {
            $errMsg .= "Principal Receivable and Customer Liability Accounts must be setup for Loan Product Type!<br/>";
            return false;
        }
        if ($crdtType === "Loan" && ($interestRcvblAcctID <= 0 || $dfrdIntrstAcctID <= 0)) {
            $errMsg .= "Interest Receivable and Deferred Interest Liability Accounts must be setup for Loan Product Type!<br/>";
            return false;
        }
        //}

        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $prncplRcvblAccntID);
        if ($crncyID !== $acctCrncyID) {
            $errMsg .= "Transaction Currency ID $crncyID is not the same as the Account Currency ID $acctCrncyID!<br/><br/>";
            return false;
        }

        //PRINCIPAL LOAN ACCOUNTING
        if ($repaymentType === "Account Deductions") {
            $lbltyAccntID1 = get_cashDpst_CrdtAccnt_ID($repaymentAccntID);
            $lbltyAccntID = $lbltyAccntID1;
        }
        $succs = generateDisbmntAccntng($fnccurid, $dsbrsdAmnt, $doctype, $docHdrID, $prncplRcvblAccntID, $lbltyAccntID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, "Principal", $nwMsg);

        if ($succs === FALSE) {
            $errMsg .= $nwMsg;
            return $succs;
        }

        //INTEREST ACCOUNTING
        //if ($crdtType === "Loan") {
        $succs = generateDisbmntAccntng($fnccurid, $ttlInterest, $doctype, $docHdrID, $interestRcvblAcctID, $dfrdIntrstAcctID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, "Interest", $nwMsg);

        if ($succs === FALSE) {
            $errMsg .= $nwMsg;
            return $succs;
        }
    }

    //PROCESSING FEES ACCOUNTING
    $result = get_One_MCFLoanPrcssnFees($loanPrdtID);
    while ($row = loc_db_fetch_array($result)) {

        $feeName = $row[0];
        $feeType = $row[1];
        $feeFlat = (float) $row[2];
        if ((float) $dsbrsdAmnt < 0) {
            $feeFlat = -1 * (float) $row[2];
        }
        $feePercent = (float) $row[3];
        $ttlFees = $feeFlat + (($feePercent / 100) * (float) $dsbrsdAmnt);
        $crdtAccntID1 = (int) $row[5];
        $branchID4 = getAccountBranchID($repaymentAccntID);
        $crdtAccntID = getDefaultAccountID($branchID4, $crdtAccntID1);

        if ($crdtAccntID <= 0) {
            $errMsg .= "Revenue Account for Processing Fee must be setup for Loan Product Type!<br/>";
            return false;
        }

        $succs = generateDisbmntAccntng($fnccurid, $ttlFees, $doctype, $docHdrID, $lbltyAccntID, $crdtAccntID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, $feeName, $nwMsg);

        if ($succs === FALSE) {
            $errMsg .= $nwMsg;
            return $succs;
        }
    }

    return $succs;
}

function updateMCFDisbmntCstmrAcntBals($accntID, $dsbrsdAmnt, $lineid, $crdtType, &$errMsg, $loanRqstID) {//$docHdrID = accntID for Account Deductions
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;
    global $prsnid;
    //$errMsg = "";
    $dateStr = getFrmtdDB_Date_time();
    $unClearedQty = 0;
    $lienQty = 0;
    $clearedQty = 0;
    //$doctype = "LOAN DISBURSEMENT";
    $doctype = "LOAN_DISB";

    $succs = FALSE;
    $lnCntr = 0;

    $isdlvrd = false;
    $lnCntr++;

    if ($crdtType == "Loan") {
        $clearedQty = (float) $dsbrsdAmnt - $lienQty;
    } else {
        $lienQty = -1 * (float) $dsbrsdAmnt;
        $clearedQty = (float) $dsbrsdAmnt;
    }

    $itmType = "LOAN DISBURSEMENT";
    $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];


    if ($accntID > 0 && $isdlvrd == false) {
        $succs = updateCstmrAcntBalances($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lineid, $dateStr, $errMsg);
    }


    if ($succs) {
        if ($crdtType != "Loan") {
            if ($lienQty < 0) {
                $dateStr1 = cnvrtDMYTmToYMDTm($dateStr);
                createAccountLien($lienQty, $dateStr, "31-Dec-4000 11:59:59", $accntID, $dateStr1, "OVERDRAFT DISBURSEMENT $docTypPrfx - $lineid", "Active", $loanRqstID);
            } else {
                $endDate = cnvrtDMYTmToYMDTm($dateStr);
                $endDate1 = cnvrtDMYTmToYMDTm($dateStr);
                execUpdtInsSQL("DELETE FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND account_id = $accntID");
            }
        }
    }

    if ($lnCntr <= 0) {
        $succs = true;
    }

    return $succs;
}

function generateDisbmntAccntng($fnccurid, $dsbrsdAmnt, $doctype, $docHdrID, $prncplRcvblAccntID, $lbltyAccntID, $entrdCrncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, $trnsTypeDesc, &$errMsg) {
    if ($cstmrNm == "") {
        $cstmrNm = "Unspecified Customer";
    }

    $trnsDate = getStartOfDayDMYHMS();
    $succs = FALSE;
    //Get Lst Exchage Rates and A
    $acctCrncyAmnt = 0;
    $acctCrncyID = -1;
    $funcCrncyRate = round(get_LtstExchRate($entrdCrncyID, $fnccurid, $dateStr), 15);
    $acntCrncyRate = 1.00;
    $entrdAMnt = round($dsbrsdAmnt, 2);

    $ttlDsbrsdAmnt = $dsbrsdAmnt * $funcCrncyRate;
    if ($doctype == "LOAN DISBURSEMENT") {
        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $prncplRcvblAccntID);
        $acntCrncyRate = round(1, 15);
        $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);

        if ($trnsTypeDesc === "Principal" || $trnsTypeDesc === "Interest") {
            $succs = sendToMCFGLIntrfcMnl($prncplRcvblAccntID, "I", $ttlDsbrsdAmnt, $trnsDate, $docNum . "-Disbursement of Loan to " . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
        } else {
            $succs = sendToMCFGLIntrfcMnl($prncplRcvblAccntID, "D", $ttlDsbrsdAmnt, $trnsDate, $docNum . "-Disbursement of Loan to " . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
        }
        if (!$succs) {
            return $succs;
        } else {
            $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $lbltyAccntID);
            $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
            $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);
            $succs = sendToMCFGLIntrfcMnl(
                    $lbltyAccntID, "I", $ttlDsbrsdAmnt, $trnsDate, $docNum . "-Disbursement of Loan to " . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            if (!$succs) {
                return $succs;
            }
        }
    }
    return $succs;
}

/* * END OF NEW FUNCTIIONS 03-06-2017 * */

function get_RefLoanRqstDetsForLoanApplctn($pkID) {
    $strSql = "SELECT distinct a.loan_rqst_id, principal_amount_bal, ttl_tenor_bal, apprvd_loan_tenor_type, apprvd_interest_rate,
        ttl_interest_bal, c.loan_repayment_type, a.apprvd_loan_tenor
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det b, mcf.mcf_prdt_loans c, mcf.mcf_loan_disbursement_hdr d
WHERE a.loan_rqst_id = b.loan_rqst_id AND a.loan_product_id = c.loan_product_id AND b.disbmnt_hdr_id = d.disbmnt_hdr_id
AND is_disbursed = 'YES' AND b.ttl_tenor_bal > 0 AND a.status = 'Approved' AND d.status = 'Disbursed' AND b.principal_amount > 0
AND a.loan_rqst_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}


function get_LoanPrdtDetsForLoanApplctn($pkID) {
    $strSql = "SELECT loan_product_id, currency_id, is_account_rqrd,  loan_max_amount, loan_min_amount,
        max_loan_tenor, max_loan_tenor_type, guarantor_required, guarantor_no,
        product_type, cust_type_custgrp, cust_type_corp, cust_type_ind,
        cash_collateral_rqrd, value_flat_min_cash_collateral, value_flat_prcnt_cash_collateral,
        prpty_collateral_rqrd, value_flat_min_prpty_collateral, value_flat_prcnt_prpty_collateral,
        invstmnt_collateral_rqrd, value_flat_min_invstmnt_collateral, value_flat_prcnt_invstmnt_collateral,
        min_loan_tenor, min_loan_tenor_type, interest_rate, compounding_period, loan_repayment_type, grace_period_no,
        grace_period_type, interest_rate_type
  FROM mcf.mcf_prdt_loans a WHERE loan_product_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_loanPrdtDets($pkID) {
    $strSql = "SELECT loan_product_id, product_name, product_desc, currency_id, loan_max_amount,
       loan_min_amount, loan_repayment_type, grace_period_no, grace_period_type,
       max_loan_tenor, max_loan_tenor_type, guarantor_required, guarantor_no,
       sector_clsfctn_major_id, sector_clsfctn_minor_id, org_id, created_by,
       creation_date, last_update_by, last_update_date, product_code,
       product_type, posting_frequency, charge_interest, interest_rate,
       cust_type_custgrp, cust_type_corp, cust_type_ind, start_date_active,
       end_date_active, compounding_period, principal_rcvbl_acct_id,
       interest_rcvbl_acct_id, interest_earned_acct_id, loans_payable_acct_id,
       is_account_rqrd
  FROM mcf.mcf_prdt_loans WHERE loan_product_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

//LOAN REQUESTS
function getLoanRqstCurrPrncplNInterest($pkID, $valTyp) {

    if ($valTyp == "Principal") {

    } else if ($valTyp == "Interest") {

    }

    $sqlStr = "SELECT loan_rqst_id FROM mcf.mcf_loan_request WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND branch_id = " . $branchID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function deleteLoanRqst($pkID) {
    //TABLES mcf.mcf_loan_request, mcf.mcf_loanreq_guarantors, mcf.mcf_loan_assessments

    $delSQL1 = "DELETE from mcf.mcf_loan_assessments WHERE loan_rqst_id = $pkID";
    $delSQL2 = "DELETE from mcf.mcf_loanreq_guarantors WHERE loan_rqst_id = $pkID";
    $delSQL3 = "DELETE from mcf.mcf_loan_request WHERE loan_rqst_id = $pkID";

    execUpdtInsSQL($delSQL1);
    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL3);
}

function get_CustIds($custName) {
    $cust_ids = ',';

    $strSql = "SELECT cust_id FROM mcf.mcf_customers_ind c
				WHERE trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names) ilike '" . loc_db_escape_string($custName) . "'
				UNION
				SELECT cust_id FROM mcf.mcf_customers_corp
				WHERE cust_name ilike '" . loc_db_escape_string($custName) . "'";

    $result = executeSQLNoParams($strSql);
    //echo $strSql;
    $rowNo = loc_db_num_rows($result);
    if ($rowNo <= 0) {
        return -1;
    }
    while ($row = loc_db_fetch_array($result)) {
        $cust_ids = $cust_ids . $row[0] . ",";
    }

    $cust_ids = rtrim(ltrim($cust_ids, ","), ",");
    return $cust_ids;
}

function get_LoanRqstTtl($qStrtDte, $qEndDte, $crdtTypeSrchIn, $statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Request Number") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Number") {
        $whrcls = " AND (c.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer Name") {
        $v_cust_ids = get_CustIds($searchFor);
        $whrcls = " AND (b.cust_id IN (" . $v_cust_ids . "))";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Status") {
        $whrcls = " AND (b.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (b.branch_id IN (" . $v_branch_ids . "))";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

    if ($crdtTypeSrchIn == "All Credit Types") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.crdt_type = '" . loc_db_escape_string($crdtTypeSrchIn) . "'";
    }

    if ($qStrtDte != "") {
        $whrcls .= " AND (application_date >= '" . loc_db_escape_string(cnvrtDMYTmToYMDTm($qStrtDte)) . "')";
    }
    if ($qEndDte != "") {
        $whrcls .= " AND (application_date <= '" . loc_db_escape_string(cnvrtDMYTmToYMDTm($qEndDte)) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_prdt_loans a INNER JOIN mcf.mcf_loan_request b ON a.loan_product_id = b.loan_product_id " .
            "LEFT OUTER JOIN  mcf.mcf_accounts c ON b.account_id = c.account_id WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_LoanRqst($qStrtDte, $qEndDte, $crdtTypeSrchIn, $statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Request Number") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account Number") {
        $whrcls = " AND (c.account_number ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer Name") {
        $v_cust_ids = get_CustIds($searchFor);
        $whrcls = " AND (b.cust_id IN (" . $v_cust_ids . "))";
    } else if ($searchIn == "Product Name") {
        $whrcls = " AND (a.product_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Status") {
        $whrcls = " AND (b.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (b.branch_id IN (" . $v_branch_ids . "))";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and b.status = '$statusSrchIn'";
    }

    if ($crdtTypeSrchIn == "All Credit Types") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and b.crdt_type = '" . loc_db_escape_string($crdtTypeSrchIn) . "'";
    }

    if ($qStrtDte != "") {
        $whrcls .= " AND (application_date >= '" . loc_db_escape_string(cnvrtDMYTmToYMDTm($qStrtDte)) . "')";
    }
    if ($qEndDte != "") {
        $whrcls .= " AND (application_date <= '" . loc_db_escape_string(cnvrtDMYTmToYMDTm($qEndDte)) . "')";
    }

    if ($sortBy == "Request Number ASC") {
        $ordrBy = "b.trnsctn_id ASC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "b.creation_date DESC";
    } else if ($sortBy == "Account Number") {
        $ordrBy = "c.account_number ASC";
    } else if ($sortBy == "Product Name ASC") {
        $ordrBy = "a.product_name ASC";
    } else if ($sortBy == "Loan Status ASC") {
        $ordrBy = "b.status ASC";
    }

    $strSql = "SELECT loan_rqst_id, /*mcf.get_customer_name(b.cust_type, b.cust_id) applicant*/"
            . "CASE WHEN b.cust_type = 'Group' THEN mcf.get_customer_name('Individual', b.cust_id)||' ['||mcf.get_customer_name('Group', b.grp_cust_id)||']' ELSE  mcf.get_customer_name(b.cust_type, b.cust_id) END applicant, b.trnsctn_id, product_name, to_char(to_timestamp(application_date,'YYYY-MM-DD'),'DD-Mon-YYYY'),"
            . " to_char(loan_amount,'FM9,999,999,999,999D90'), product_type, b.status, c.account_number " .
            "FROM mcf.mcf_prdt_loans a INNER JOIN mcf.mcf_loan_request b ON a.loan_product_id = b.loan_product_id " .
            "LEFT OUTER JOIN  mcf.mcf_accounts c ON b.account_id = c.account_id WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_LoanRqstDet($pkID) {
    $strSql = "SELECT loan_rqst_id, trnsctn_id, to_char(to_timestamp(application_date,'YYYY-MM-DD'),'DD-Mon-YYYY') application_date, b.branch_id,purpose,
        b.account_id, c.account_number, rcvry_officer_prsn_id, b.status,
        b.cust_type,  grp_cust_id,
        CASE WHEN b.cust_type = 'Group' THEN mcf.get_customer_name(b.cust_type, grp_cust_id) ELSE '' END grp_name, b.cust_id,
        CASE WHEN b.cust_type = 'Group' THEN mcf.get_customer_name(grp_applicant_type, b.cust_id) ELSE  mcf.get_customer_name(b.cust_type, b.cust_id) END applicant,
        b.loan_product_id,  product_name, loan_amount, loan_tenor, loan_tenor_type,
    repayment_account_id, cash_collateral_id, invstmnt_collateral_id, property_collateral_id, applctn_type, ref_loanrqst_id, b.interest_rate,
    b.repayment_type, COALESCE(approved_amount,0) approved_amount, is_disbursed, apprvd_loan_tenor, apprvd_loan_tenor_type, apprvd_interest_rate,
    a.currency_id, authorizer_comments, b.sector_clsfctn_major_id, b.sector_clsfctn_minor_id, grp_applicant_type, crdt_type
    FROM mcf.mcf_prdt_loans a INNER JOIN mcf.mcf_loan_request b ON a.loan_product_id = b.loan_product_id
    LEFT OUTER JOIN  mcf.mcf_accounts c ON b.account_id = c.account_id WHERE loan_rqst_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getLoanRqstAcctID($pkID) {

    $sqlStr = "SELECT account_id FROM mcf.mcf_loan_request WHERE 1=1 AND loan_rqst_id =" . $pkID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function get_LoanRqstAssmntCmnts($pkID) {
    $strSql = "SELECT loan_rqst_id, trnsctn_id, credit_score_comments FROM mcf.mcf_loan_request WHERE loan_rqst_id = $pkID";

    $result = executeSQLNoParams($strSql);

    while ($row = loc_db_fetch_array($result)) {
        return $row[2];
    }

    return "";
}

function get_Loan_Guarantors($pkID, $searchFor="%", $offset=0, $limit_size=5) {

    $whrcls = " AND (mcf.get_loan_guarantor_name(loan_rqst_id, source_type, person_cust_id) ilike '" . loc_db_escape_string($searchFor) . "'"
            . " OR mcf.get_loan_guarantor_localidno(source_type, person_cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";

    $strSql = "SELECT loan_gurnta_id, mcf.get_loan_guarantor_name(loan_rqst_id, source_type, person_cust_id) guarantor,  source_type, person_cust_id
  FROM mcf.mcf_loanreq_guarantors WHERE loan_rqst_id = $pkID $whrcls LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_Loan_GuarantorsTtl($pkID, $searchFor="%") {

    $whrcls = " AND (mcf.get_loan_guarantor_name(loan_rqst_id, source_type, person_cust_id) ilike '" . loc_db_escape_string($searchFor) . "'"
            . " OR mcf.get_loan_guarantor_localidno(source_type, person_cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";

    $strSql = "SELECT count(1)
  FROM mcf.mcf_loanreq_guarantors WHERE loan_rqst_id = $pkID $whrcls ";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }

    return -1;
}

function createLoanRequest($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate, $prpsOfLoan, $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateralID, $invstmntCollateralID, $prptyCollateralID, $grpCustId, $rqstType, $refLoanrqstID, $crdtType, $rcvryOfficerID, $interestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $grpApplicantType) {
    global $usrID;

    if ($applctnDate != "") {
        $applctnDate = cnvrtDMYTmToYMDTm($applctnDate);
    }

    if($custType == "Corporate"){
        $grpApplicantType = $custType;
    }

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_loan_request(loan_rqst_id, " .
            "branch_id, cust_type, cust_id, loan_product_id, loan_amount, application_date, " .
            "purpose, loan_tenor, loan_tenor_type, repayment_account_id, grp_cust_id, created_by, creation_date, last_update_by, last_update_date,"
            . "cash_collateral_id, invstmnt_collateral_id, property_collateral_id, status, trnsctn_id, applctn_type, ref_loanrqst_id,"
            . " crdt_type, rcvry_officer_prsn_id, interest_rate, repayment_type, sector_clsfctn_major_id, sector_clsfctn_minor_id, grp_applicant_type)" .
            "VALUES($loanRqstID," . $bnkBranchID . ",'" . loc_db_escape_string($custType) . "'," . $bnkCustomerID . "," . $prdtTypeID . "," . $loanAmount .
            ",'" . $applctnDate . "','" . loc_db_escape_string($prpsOfLoan) . "'," . $loanTenor . ",'" . $loanTenorType . "'," . $rpmntSrcAcctID . "," .
            $grpCustId . "," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "'," . $cashCollateralID . "," . $invstmntCollateralID .
            "," . $prptyCollateralID . ",'Incomplete','LR-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "','" . $rqstType .
            "'," . $refLoanrqstID . ",'" . $crdtType . "'," . $rcvryOfficerID . "," . $interestRate . ",'" . $rpmntSrcType . "',"
            . "$sctrMjrID, $sctrMnrID, '$grpApplicantType')";

    return execUpdtInsSQL($insSQL);
}

function updateLoanRequest($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate, $prpsOfLoan, $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateral, $invstmntCollateral, $prptyCollateral, $grpCustId, $rqstType, $refLoanrqstID, $crdtType, $rcvryOfficerID, $interestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $grpApplicantType) {
    global $usrID;

    if ($applctnDate != "") {
        $applctnDate = cnvrtDMYTmToYMDTm($applctnDate);
    }

    if($custType == "Corporate"){
        $grpApplicantType = $custType;
    }


    $insSQL = "UPDATE mcf.mcf_loan_request SET " .
            "branch_id = " . $bnkBranchID .
            ", cust_type = '" . loc_db_escape_string($custType) .
            "', cust_id = " . $bnkCustomerID .
            ", loan_product_id = " . $prdtTypeID .
            ", loan_amount = " . $loanAmount .
            ", application_date = '" . $applctnDate .
            "', purpose = '" . loc_db_escape_string($prpsOfLoan) .
            "', loan_tenor = " . $loanTenor .
            ", loan_tenor_type = '" . $loanTenorType .
            "', repayment_account_id = " . $rpmntSrcAcctID .
            ", grp_cust_id = " . $grpCustId .
            ", created_by = " . $usrID .
            ", creation_date = '" . $dateStr .
            "', last_update_by =" . $usrID .
            ", last_update_date = '" . $dateStr .
            "', cash_collateral_id = " . $cashCollateral .
            ", invstmnt_collateral_id = " . $invstmntCollateral .
            ", property_collateral_id = " . $prptyCollateral .
            ", applctn_type= '" . $rqstType .
            "', ref_loanrqst_id = " . $refLoanrqstID .
            ", crdt_type = '" . $crdtType .
            "', rcvry_officer_prsn_id = " . $rcvryOfficerID .
            ", interest_rate = " . $interestRate .
            ", repayment_type = '" . $rpmntSrcType .
            "', sector_clsfctn_major_id = " . $sctrMjrID .
            ", sector_clsfctn_minor_id = " . $sctrMnrID .
            ", grp_applicant_type = '". $grpApplicantType.
            "' WHERE loan_rqst_id = " . $loanRqstID;
//var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function updateLoanRequestAccount($loanRqstID, $loanAcctId) {
    $insSQL = "UPDATE mcf.mcf_loan_request SET " .
            "account_id = " . $loanAcctId .
            " WHERE loan_rqst_id = " . $loanRqstID;
//var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function getLoanRequestID($dateStr, $branchID, $usrID) {

    $sqlStr = "SELECT loan_rqst_id FROM mcf.mcf_loan_request WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND branch_id = " . $branchID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getLoanCustAcctID($dateStr, $orgID, $usrID, $custId, $prdtId) {

    $sqlStr = "SELECT account_id FROM mcf.mcf_accounts WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND org_id = " . $orgID . " AND cust_id = " . $custId . " AND product_type_id = " . $prdtId;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }

    return -1;
}

function createCustAccountLoanInvstmnt($orgid, $custType, $bnkCustomerID, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $startDate, $endDate, $statusReason, $status, $accMndte, $dateStr) {
    global $usrID;
    global $orgid;
    //$dateStr = getDB_Date_time();
    //GENERATE CUST ACCOUNT

    $insSQL = "INSERT INTO mcf.mcf_accounts( " .
            "account_title, account_type, product_type_id, account_trns_type, prsn_type_or_entity, " .
            "currency_id, purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, " .
            "exptd_trns_per_mnth, exptd_amount_per_mnth, branch_id, relationship_officer, " .
            "valid_start_date, valid_end_date, comments, status, mandate, cust_type, cust_id, " .
            "account_number, org_id, created_by, creation_date, last_update_by, last_update_date )" .
            "VALUES ( '" .
            loc_db_escape_string($acctTitle) . "', '" . loc_db_escape_string($acctType) .
            "', " . $prdtTypeID . ", '" . loc_db_escape_string($acctTrnsTyp) .
            "', '" . loc_db_escape_string($prsnTypeEntity) . "', '" . loc_db_escape_string($prdtCrncy) .
            "', '" . loc_db_escape_string($prpsOfAcct) . "', '" . loc_db_escape_string($prpsOfAcctOther) .
            "', '" . loc_db_escape_string($srcOfFunds) . "', '" . loc_db_escape_string($srcOfFundsOther) .
            "', " . $trnsPerMnthNo . ", " . $amountPerMnth . ", " . $bnkBranchID .
            ",'" . loc_db_escape_string($reltnOfficerID) .
            "', '" . loc_db_escape_string($startDate) . "', '" . loc_db_escape_string($endDate) .
            "', '" . loc_db_escape_string($statusReason) . "', '" . loc_db_escape_string($status) .
            "', '" . loc_db_escape_string($accMndte) . "', '" . loc_db_escape_string($custType) .
            "'," . $bnkCustomerID . ", (SELECT mcf.generate_account_no(" . $orgid . "," . $bnkBranchID . ", " . $prdtTypeID . ", " . $bnkCustomerID .
            ", '" . $custType . "', '" . $acctType . "'))," . $orgid .
            ", " . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "')";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function createLoanGuarantor($srcType, $loanGurntaID, $loanRqstID, $dateStr) {
    global $usrID;

    $insSQL = "INSERT INTO mcf.mcf_loanreq_guarantors(
        source_type, person_cust_id, created_by, creation_date, last_update_by, last_update_date, loan_rqst_id)
    VALUES ('" . $srcType . "'," . $loanGurntaID .
            "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $loanRqstID . ")";
    execUpdtInsSQL($insSQL);
}

function updateLoanGuarantor($srcType, $loanGurntaID, $dateStr, $rowID) {
    global $usrID;

    $insSQL = "UPDATE mcf.mcf_loanreq_guarantors SET " .
            "source_type = '" . $srcType . "', person_cust_id=$loanGurntaID,"
            . "last_update_by =$usrID, last_update_date='" . $dateStr .
            "' WHERE loan_gurnta_id = $rowID";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function getLoanGuarantorID($dateStr, $usrID, $loanRqstID) {

    $sqlStr = "SELECT loan_gurnta_id FROM mcf.mcf_loanreq_guarantors WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND loan_rqst_id = " . $loanRqstID;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getLoanGuarantorLocalIDNo($srcType, $personCustId) {
    $sqlStr = "";

    if ($srcType == "Individual Customers" || $srcType == "") {
        $sqlStr = "SELECT distinct local_id_no FROM mcf.mcf_customers_ind WHERE 1=1 AND cust_id = " . $personCustId;
    } if ($srcType == "Other Persons") {
        $sqlStr = "SELECT distinct local_id_no FROM  mcf.mcf_prsn_names_nos WHERE 1=1 AND person_id = " . $personCustId;
    }

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return "";
}

function get_Person_BranchID($prsnId) {
    $strSql = "SELECT a.location_id FROM pasn.prsn_locations a
        WHERE ((a.person_id = $prsnId) and
        (now() between to_timestamp(a.valid_start_date,
        'YYYY-MM-DD 00:00:00') AND
        to_timestamp(a.valid_end_date,'YYYY-MM-DD 23:59:59'))) ORDER BY a.prsn_loc_id DESC LIMIT 1 OFFSET 0";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

//CREDIT RISK ASSESSMENT
function get_AssessmentQuestion($loanprflFctrId, $optn, $loanRqstID, $chkedAssmntID, $currQstnNo) {

    $qstnNo = 0;
    $lnprflFctrId = $loanprflFctrId;

    $qstnNoCnta = 0;

    //$firstQstnNo = get_NthAsssessmntQstnNo('FIRST', $loanRqstID);
    //$lastQstnNo = get_NthAsssessmntQstnNo('LAST', $loanRqstID);

    $firstQstnNoRslt = get_NthAsssessmntQstnNo('FIRST', $loanRqstID);
    $lastQstnNoRslt = get_NthAsssessmntQstnNo('LAST', $loanRqstID);

    $firstQstnNoArr = explode('|', $firstQstnNoRslt);
    $lastQstnNoArr = explode('|', $lastQstnNoRslt);

    $firstQstnNo = $firstQstnNoArr[0];
    $lastQstnNo = $lastQstnNoArr[0];

    //$ttlQstnsArr = explode('|',$firstQstnNo);
    $ttlQstns = $firstQstnNoArr[1];

    if ($chkedAssmntID > 0) {
        $lnprflFctrId = get_AssessmentProfileFactorID($chkedAssmntID);
    }

    if ($lnprflFctrId == -1 && !($optn == 'NEXT' || $optn == 'LAST')) {
        $qstnNo = $firstQstnNo;
    } else {
        $qstnNo = $lnprflFctrId;

        if ($optn == 'NEXT') {
            if ($qstnNo == -1) {
                $qstnNo = $firstQstnNo + 1;
            } /* else if ($qstnNo == $lastQstnNo) {
              $qstnNo = $lastQstnNo;
              } else {
              $qstnNo = $qstnNo + 1;
              } */ else {
                $qstnNo = get_NextAssessmentProfileFactorID($lnprflFctrId, $loanRqstID, $optn);
            }
        } else if ($optn == 'PREVIOUS') {
            if ($qstnNo == -1 || $qstnNo == $firstQstnNo) {
                $qstnNo = $firstQstnNo;
            } else {
                $qstnNo = get_NextAssessmentProfileFactorID($lnprflFctrId, $loanRqstID, $optn);
                //$qstnNo = $qstnNo - 1;
            }
        } else if ($optn == 'FIRST') {
            $qstnNo = $firstQstnNo;
        } else if ($optn == 'LAST') {
            $qstnNo = $lastQstnNo;
        }
    }

    if ($qstnNo == $firstQstnNo) {
        $qstnNoCnta = 1;
    } else if ($qstnNo == $lastQstnNo) {
        $qstnNoCnta = $ttlQstns;
    } else {
        if ($optn == 'NEXT') {
            $qstnNoCnta = $currQstnNo + 1;
        } else if ($optn == 'PREVIOUS') {
            $qstnNoCnta = $currQstnNo - 1;
        }
    }


    $strSql = "SELECT DISTINCT loan_assessemnt_id, d.profile_factor_id, b.profile_name, a.risk_factor_code, d.option_desc, loan_rqst_id, ticked_yesno, $qstnNoCnta, $ttlQstns
                FROM mcf.mcf_credit_risk_factors a, mcf.mcf_credit_risk_profiles b,
                mcf.mcf_credit_risk_profile_factors c, mcf.mcf_credit_risk_profile_factor_options d,
                mcf.mcf_credit_scoring_set_hdr e, mcf.mcf_credit_scoring_set_det f, mcf.mcf_loan_assessments x
                WHERE a.risk_factor_id = c.risk_factor_id
                AND b.risk_profile_id = c.risk_profile_id
                AND c.profile_factor_id = d.profile_factor_id
                AND e.scoring_set_hdr_id = f.scoring_set_hdr_id
                AND f.risk_profile_id = b.risk_profile_id
                AND x.scoring_set_hdr_id = e.scoring_set_hdr_id
                AND x.profactor_option_id = d.profactor_option_id
                AND x.profile_factor_id = d.profile_factor_id
                AND loan_rqst_id = $loanRqstID
                AND c.profile_factor_id = $qstnNo
                ORDER BY loan_assessemnt_id";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function update_AssessmentQuestion($loanAssessmntID, $loanRqstID, $loanprflFctrId) {
    global $usrID;

    $insSQL = "UPDATE mcf.mcf_loan_assessments SET " .
            "ticked_yesno = 'NO' WHERE profile_factor_id = $loanprflFctrId"
            . " AND loan_rqst_id = $loanRqstID";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);

    $insSQL = "UPDATE mcf.mcf_loan_assessments SET " .
            "ticked_yesno = 'YES' WHERE loan_assessemnt_id =$loanAssessmntID";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function load_LoanRqstAssessment($loanRqstID, $scoreSetHdrID, $dateStr) {
    global $usrID;

    //DELETE ALL
    //$delSQL = execUpdtInsSQL("DELETE FROM mcf.mcf_loan_assessments WHERE loan_rqst_id = $loanRqstID");

    $insSQL = "INSERT INTO mcf.mcf_loan_assessments(
                        loan_rqst_id, scoring_set_hdr_id, profile_factor_id,
                        profactor_option_id, created_by, creation_date, last_update_by,
                        last_update_date, ticked_yesno)
            SELECT $loanRqstID, v.scoring_set_hdr_id, v.profile_factor_id, v.profactor_option_id, $usrID,
                '$dateStr', $usrID, '$dateStr', 'NO'
            FROM
            (SELECT distinct d.profile_factor_id, b.profile_name, a.risk_factor_id, a.risk_factor_code, d.profactor_option_id, d.option_desc, d.score,
            f.sort_order fsort_order, c.sort_order csort_order, d.sort_order dsort_order , e.scoring_set_hdr_id from
            mcf.mcf_credit_risk_factors a, mcf.mcf_credit_risk_profiles b,
            mcf.mcf_credit_risk_profile_factors c, mcf.mcf_credit_risk_profile_factor_options d,
            mcf.mcf_credit_scoring_set_hdr e, mcf.mcf_credit_scoring_set_det f
            WHERE a.risk_factor_id = c.risk_factor_id
            AND b.risk_profile_id = c.risk_profile_id
            AND c.profile_factor_id = d.profile_factor_id
            AND e.scoring_set_hdr_id = f.scoring_set_hdr_id
            AND f.risk_profile_id = b.risk_profile_id
            AND e.scoring_set_hdr_id = $scoreSetHdrID
            ORDER by fsort_order, csort_order, dsort_order) v";

    execUpdtInsSQL($insSQL);
}

function get_NthAsssessmntQstnNo($pstn, $loanRqstID) {
    $sqlStr = "";
    if ($pstn == 'FIRST') {
        $sqlStr = "SELECT min(profile_factor_id), count(distinct profile_factor_id) FROM mcf.mcf_loan_assessments WHERE loan_rqst_id = $loanRqstID";
    } else if ($pstn == 'LAST') {
        $sqlStr = "SELECT max(profile_factor_id), count(distinct profile_factor_id) FROM mcf.mcf_loan_assessments WHERE loan_rqst_id = $loanRqstID";
    }
    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0] . '|' . $row[1];
    }

    return '-1|-1';
}

function get_AssessmentRiskFactorProfileNCode($loanprflFctrId, $optn, $loanRqstID, $chkedAssmntID) {

    //Check existence of assessment
    $assmntCnt = (int) getGnrlRecNm("mcf.mcf_loan_assessments", "loan_rqst_id", "count(*)", $loanRqstID);
    $qstnNo = 0;
    if($assmntCnt > 0) {
        $lnprflFctrId = $loanprflFctrId;

        //$firstQstnNo = get_NthAsssessmntQstnNo('FIRST', $loanRqstID);
        //$lastQstnNo = get_NthAsssessmntQstnNo('LAST', $loanRqstID);

        $firstQstnNoRslt = get_NthAsssessmntQstnNo('FIRST', $loanRqstID);
        $lastQstnNoRslt = get_NthAsssessmntQstnNo('LAST', $loanRqstID);

        $firstQstnNoArr = explode('|', $firstQstnNoRslt);
        $lastQstnNoArr = explode('|', $lastQstnNoRslt);

        $firstQstnNo = $firstQstnNoArr[0];
        $lastQstnNo = $lastQstnNoArr[0];

        if ($chkedAssmntID > 0) {
            $lnprflFctrId = get_AssessmentProfileFactorID($chkedAssmntID);
            //UPDATE
            update_AssessmentQuestion($chkedAssmntID, $loanRqstID, $lnprflFctrId);
        }

        if (((int) $lnprflFctrId <= 0 || $lnprflFctrId == (int) -1) && !($optn == 'NEXT' || $optn == 'LAST')) {
            $qstnNo = $firstQstnNo;
        } else {
            //FETCH NEXT QUESTION NO
            $qstnNo = $lnprflFctrId;
            if ($optn == 'NEXT') {
                if ($qstnNo == -1) {
                    $qstnNo = $firstQstnNo + 1;
                } else {
                    $qstnNo = get_NextAssessmentProfileFactorID($lnprflFctrId, $loanRqstID, $optn);
                }
            } else if ($optn == 'PREVIOUS') {
                if ($qstnNo == -1 || $qstnNo == $firstQstnNo) {
                    $qstnNo = $firstQstnNo;
                } else {
                    $qstnNo = get_NextAssessmentProfileFactorID($lnprflFctrId, $loanRqstID, $optn);
                    //$qstnNo = $qstnNo - 1;
                }
            } else if ($optn == 'FIRST') {
                $qstnNo = $firstQstnNo;
            } else if ($optn == 'LAST') {
                $qstnNo = $lastQstnNo;
            }
        }

    }

    $strSql = "SELECT DISTINCT a.risk_factor_code, b.profile_name
                FROM mcf.mcf_credit_risk_factors a, mcf.mcf_credit_risk_profiles b,
                mcf.mcf_credit_risk_profile_factors c, mcf.mcf_credit_risk_profile_factor_options d,
                mcf.mcf_credit_scoring_set_hdr e, mcf.mcf_credit_scoring_set_det f, mcf.mcf_loan_assessments x
                WHERE a.risk_factor_id = c.risk_factor_id
                AND b.risk_profile_id = c.risk_profile_id
                AND c.profile_factor_id = d.profile_factor_id
                AND e.scoring_set_hdr_id = f.scoring_set_hdr_id
                AND f.risk_profile_id = b.risk_profile_id
                AND x.scoring_set_hdr_id = e.scoring_set_hdr_id
                AND x.profactor_option_id = d.profactor_option_id
                AND x.profile_factor_id = d.profile_factor_id
                AND loan_rqst_id = $loanRqstID
                AND c.profile_factor_id = $qstnNo";

    //var_dump($strSql);

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AssessmentProfileFactorID($chkedAssmntID) {
    $strSql = "SELECT distinct profile_factor_id
            FROM mcf.mcf_loan_assessments WHERE loan_assessemnt_id = $chkedAssmntID";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

function get_CreditScoreSetHdrIDForLoanRqst($loanRqstID) {

    $sqlStr = "SELECT distinct a.scoring_set_hdr_id
FROM mcf.mcf_credit_scoring_set_hdr a,
mcf.mcf_prdt_loans c, mcf.mcf_loan_request d
WHERE a.scoring_set_hdr_id = c.scoring_set_hdr_id
AND c.loan_product_id = d.loan_product_id
AND upper(a.is_enabled) = 'YES' AND a.status IN ('Valid','Authorized','Approved') AND d.loan_rqst_id = $loanRqstID";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function get_AssessmentSummary($loanRqstID) {
    $strSql = "SELECT DISTINCT loan_assessemnt_id, b.profile_name, a.risk_factor_code, d.option_desc, d.score
                FROM mcf.mcf_credit_risk_factors a, mcf.mcf_credit_risk_profiles b,
                mcf.mcf_credit_risk_profile_factors c, mcf.mcf_credit_risk_profile_factor_options d,
                mcf.mcf_credit_scoring_set_hdr e, mcf.mcf_credit_scoring_set_det f, mcf.mcf_loan_assessments x
                WHERE a.risk_factor_id = c.risk_factor_id
                AND b.risk_profile_id = c.risk_profile_id
                AND c.profile_factor_id = d.profile_factor_id
                AND e.scoring_set_hdr_id = f.scoring_set_hdr_id
                AND f.risk_profile_id = b.risk_profile_id
                AND x.scoring_set_hdr_id = e.scoring_set_hdr_id
                AND x.profactor_option_id = d.profactor_option_id
                AND x.profile_factor_id = d.profile_factor_id
                AND loan_rqst_id = $loanRqstID
                AND ticked_yesno = 'YES'
                ORDER BY loan_assessemnt_id";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function submitLoanRqst($loanRqstID, $cmnts, $assmntScore) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $insSQL = "UPDATE mcf.mcf_loan_request
        SET credit_score_comments= '" . loc_db_escape_string($cmnts) .
            "', assessment_score= " . $assmntScore .
            ", apprvd_loan_tenor = loan_tenor, apprvd_loan_tenor_type = loan_tenor_type".
            ", apprvd_interest_rate = interest_rate, approved_amount = loan_amount".
            ", last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE loan_rqst_id = $loanRqstID";

    return execUpdtInsSQL($insSQL);
}

function withdrawLoanRqst($loanRqstID) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $insSQL = "UPDATE mcf.mcf_loan_request
        SET status= 'Withdrawn', last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE loan_rqst_id = $loanRqstID";

    return execUpdtInsSQL($insSQL);
}

//LOAN DISBURSEMENT
function get_DisbursmentHdrTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Batch Number") {
        $whrcls = " AND (a.batch_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Date") {
        $whrcls = " AND (to_char(to_timestamp(a.disbmnt_date,'YYYY-MM-DD'),'DD-Mon-YYYY')  ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (a.branch_id IN (" . $v_branch_ids . "))";
    }

    $strSql = "SELECT count(v.*) FROM " .
            "(SELECT a.disbmnt_hdr_id, batch_no, to_char(to_timestamp(disbmnt_date,"
            . "'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') disbmnt_date,  a.description, coalesce(count(b.loan_rqst_id),0) loan_ttl_no, "
            . " CASE WHEN a.status = 'Disbursed' AND voided_disbmnt_hdr_id > 0 THEN -1 * coalesce(sum(d.approved_amount),0.00)"
            . " ELSE coalesce(sum(d.approved_amount),0.00) END amount_ttl,"
            . "  a.status, a.branch_id, a.crncy_id " .
            "FROM mcf.mcf_loan_disbursement_hdr a INNER JOIN mcf.mcf_currencies c ON a.crncy_id = c.crncy_id
            LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
            LEFT OUTER JOIN mcf.mcf_loan_request d ON b.loan_rqst_id = d.loan_rqst_id WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") GROUP BY a.disbmnt_hdr_id, batch_no, disbmnt_date,  a.description,  a.status, " .
            " a.branch_id, a.crncy_id)v";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function get_DisbursmentHdr($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "Batch Number") {
        $whrcls = " AND (a.batch_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Transaction Date") {
        $whrcls = " AND (to_char(to_timestamp(a.disbmnt_date,'YYYY-MM-DD'),'DD-Mon-YYYY')  ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (a.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Branch") {
        $v_branch_ids = get_BankBranchIds($searchFor);
        $whrcls = " AND (a.branch_id IN (" . $v_branch_ids . "))";
    }


    if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.creation_date DESC";
    } else if ($sortBy == "Batch Number") {
        $ordrBy = "a.batch_no DESC";
    } else if ($sortBy == "Transaction Date DESC") {
        $ordrBy = "a.disbmnt_date DESC";
    } else if ($sortBy == "Status ASC") {
        $ordrBy = "a.status ASC";
    }

    $strSql = "SELECT a.disbmnt_hdr_id, batch_no, to_char(to_timestamp(disbmnt_date,"
            . "'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') disbmnt_date,  a.description, coalesce(count(b.loan_rqst_id),0) loan_ttl_no, "
            . " CASE WHEN a.status = 'Disbursed' AND voided_disbmnt_hdr_id > 0 THEN -1 * coalesce(sum(d.approved_amount),0.00)"
            . " ELSE coalesce(sum(d.approved_amount),0.00) END amount_ttl,"
            . "  a.status, a.branch_id, a.crncy_id " .
            "FROM mcf.mcf_loan_disbursement_hdr a INNER JOIN mcf.mcf_currencies c ON a.crncy_id = c.crncy_id
            LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
            LEFT OUTER JOIN mcf.mcf_loan_request d ON b.loan_rqst_id = d.loan_rqst_id WHERE ((a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") GROUP BY a.disbmnt_hdr_id, batch_no, disbmnt_date,  a.description,  a.status, " .
            " a.branch_id, a.crncy_id ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_DisbursmentHdrDet($pkID) {
    $strSql = "SELECT a.disbmnt_hdr_id, batch_no, to_char(to_timestamp(disbmnt_date,'YYYY-MM-DD'),'DD-Mon-YYYY') disbmnt_date,
            a.branch_id, a.status, a.description, voided_disbmnt_hdr_id, iso_code,
            CASE WHEN a.status = 'Disbursed' AND voided_disbmnt_hdr_id > 0 THEN -1 * coalesce(sum(d.approved_amount),0.00)
            ELSE coalesce(sum(d.approved_amount),0.00) END amount_ttl, a.crncy_id
            FROM mcf.mcf_loan_disbursement_hdr a INNER JOIN mcf.mcf_currencies c ON a.crncy_id = c.crncy_id
            LEFT OUTER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_hdr_id = b.disbmnt_hdr_id
            LEFT OUTER JOIN mcf.mcf_loan_request d ON b.loan_rqst_id = d.loan_rqst_id
            WHERE a.disbmnt_hdr_id = $pkID
            GROUP BY a.disbmnt_hdr_id, batch_no, to_char(to_timestamp(disbmnt_date,'YYYY-MM-DD'),'DD-Mon-YYYY'),
            a.branch_id, a.status, a.description, voided_disbmnt_hdr_id, iso_code, a.crncy_id";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function create_DisbursementHdr($disbmntDate, $description, $branchId, $crncyID, $dateStr) {
    global $usrID;
    global $orgid;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_loan_disbursement_hdr(disbmnt_date, batch_no, description, branch_id,
            status, crncy_id, created_by, creation_date, last_update_by, last_update_date, org_id)
    VALUES ('" . $disbmntDate . "','LD-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "','" . loc_db_escape_string($description) .
            "'," . $branchId . ",'Incomplete'," . $crncyID . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "'," . $orgid . ")";
    return execUpdtInsSQL($insSQL);
}

function update_DisbursementHdr($disbmntHdrId, $disbmntDate, $description, $bnkBranchID, $crncyID, $dateStr) {
    global $usrID;

    $insSQL = "UPDATE mcf.mcf_loan_disbursement_hdr
        SET disbmnt_hdr_id= " . $disbmntHdrId .
            ", disbmnt_date= '" . $disbmntDate .
            "', description='" . loc_db_escape_string($description) .
            "', crncy_id=" . $crncyID .
            ", branch_id=" . $bnkBranchID .
            ", last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE disbmnt_hdr_id = $disbmntHdrId";

    execUpdtInsSQL($insSQL);
}

function delete_DisbursementHdr($disbmntHdrId) {
    $delSQL1 = "DELETE from mcf.mcf_loan_disbursement_hdr WHERE disbmnt_hdr_id = $disbmntHdrId";
    $delSQL2 = "DELETE from mcf.mcf_loan_disbursement_det WHERE disbmnt_hdr_id = $disbmntHdrId";

    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL1);
}

function save_DisbursementDet($disbmntHdrId, $loanRqstId, $dateStr) {
    global $usrID;

    $insSQL = "INSERT INTO mcf.mcf_loan_disbursement_det(disbmnt_hdr_id, loan_rqst_id, created_by, creation_date,
            last_update_by, last_update_date)
    VALUES (" . $disbmntHdrId . "," . $loanRqstId . "," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "')";

    /*    $insSQL2 = "UPDATE mcf.mcf_loan_request
      SET is_disbursed ='YES', last_update_by=$usrID, last_update_date= '" . $dateStr .
      "' WHERE loan_rqst_id = $loanRqstId";

      execUpdtInsSQL($insSQL2); */

    return execUpdtInsSQL($insSQL);
}

function get_DisbursementHdrID($dateStr, $branchID, $usrID) {

    $sqlStr = "SELECT disbmnt_hdr_id FROM mcf.mcf_loan_disbursement_hdr WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND branch_id = " . $branchID;

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

function delete_DisbursementDet($disbmntDetId) {
    $delSQL1 = "DELETE from mcf.mcf_loan_disbursement_det WHERE disbmnt_det_id = $disbmntDetId";

    execUpdtInsSQL($delSQL1);
}

function delete_DisbursementDetForHdr($disbmntHdrId) {
    $delSQL1 = "DELETE from mcf.mcf_loan_disbursement_det WHERE disbmnt_hdr_id = $disbmntHdrId";

    execUpdtInsSQL($delSQL1);
}

function get_DisbursementDetLoans($disbmntHdrId) {
    global $prsnid;
    $sqlStr = "SELECT a.loan_rqst_id, CASE WHEN a.cust_type = 'Group' THEN mcf.get_customer_name('Individual', a.cust_id)||' ['||mcf.get_customer_name('Group', a.grp_cust_id)||']'
        ELSE mcf.get_customer_name(a.cust_type, a.cust_id) end customer , a.cust_type, a.trnsctn_id, CASE WHEN d.status = 'Disbursed' AND d.voided_disbmnt_hdr_id > 0 THEN
        -1 * a.approved_amount ELSE a.approved_amount END approved_amount,
        a.apprvd_loan_tenor || ' ' || coalesce(a.apprvd_loan_tenor_type,'') tenor_disp, a.apprvd_interest_rate, to_char(to_timestamp(a.application_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type, disbmnt_det_id,
        c.interest_rate_per_period fd1, c.scheduled_prdc_paymnt_amnt, to_char(to_timestamp(c.repay_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_start_date,
        to_char(to_timestamp(c.repay_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_end_date, interest_rate_type, applctn_type, crdt_type, ref_loanrqst_id,
        org.get_accnt_id_brnch_eqv(a.branch_id,  principal_rcvbl_acct_id), org.get_accnt_id_brnch_eqv(a.branch_id,  interest_rcvbl_acct_id),
        org.get_accnt_id_brnch_eqv(a.branch_id, deferred_interest_acct_id), org.get_accnt_id_brnch_eqv(a.branch_id, loans_payable_acct_id), currency_id, repayment_type, repayment_account_id,
        b.loan_product_id, c.disbmnt_hdr_id, account_id, ttl_interest, a.is_disbursed,
        CASE WHEN mcf.loan_schedule_recd_count(c.disbmnt_det_id) > 0 THEN 'YES' ELSE 'NO' END schedule_saved
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b, mcf.mcf_loan_disbursement_det c,  mcf.mcf_loan_disbursement_hdr d
                WHERE a.loan_product_id = b.loan_product_id
                and c.loan_rqst_id = a.loan_rqst_id
                AND c.disbmnt_hdr_id = d.disbmnt_hdr_id
	AND c.disbmnt_hdr_id = $disbmntHdrId ORDER BY 1";
    //echo($sqlStr);
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function get_LoansToBeDisbursed($bnkBranchID, $custType, $custGrpID, $crncyID) {

    $vCustType = $custType;
    $sqlStr = "";

    if ($custType == "Individual and Corporate") {

        $sqlStr = "SELECT distinct loan_rqst_id, mcf.get_customer_name(cust_type, a.cust_id), cust_type, a.trnsctn_id, a.approved_amount,
        a.apprvd_loan_tenor || ' ' || a.apprvd_loan_tenor_type, a.apprvd_interest_rate, a.application_date, a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type,
        a.cust_id, a.loan_product_id
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b
                WHERE a.loan_product_id = b.loan_product_id
	AND a.status = 'Approved' AND branch_id = $bnkBranchID AND currency_id = $crncyID AND a.cust_type = 'Individual' AND a.is_disbursed != 'YES'" .
                " UNION " .
                "SELECT distinct loan_rqst_id, mcf.get_customer_name(cust_type, a.cust_id), cust_type, a.trnsctn_id, a.approved_amount,
        a.apprvd_loan_tenor || ' ' || a.apprvd_loan_tenor_type, a.apprvd_interest_rate, a.application_date, a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type,
        a.cust_id, a.loan_product_id
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b
                WHERE a.loan_product_id = b.loan_product_id
	AND a.status = 'Approved' AND branch_id = $bnkBranchID AND currency_id = $crncyID AND  a.cust_type = 'Corporate' AND a.is_disbursed != 'YES'"
                . " ORDER BY 2";
    } else if ($custType == "Group Members" || $custType == "Group") {

        $vCustType = "Group";

        $sqlStr = "SELECT loan_rqst_id, mcf.get_customer_name('Individual', a.cust_id), cust_type, a.trnsctn_id, a.approved_amount,
        a.apprvd_loan_tenor || ' ' || a.apprvd_loan_tenor_type, a.apprvd_interest_rate, a.application_date, a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type,
        a.cust_id, a.loan_product_id
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b
                WHERE a.loan_product_id = b.loan_product_id
	AND a.status = 'Approved' AND branch_id = $bnkBranchID AND currency_id = $crncyID AND a.cust_type = '" . $vCustType . "' AND a.is_disbursed != 'YES'"
                . " AND a.grp_cust_id = $custGrpID" . " ORDER BY 1";
    } else {

        $sqlStr = "SELECT loan_rqst_id, mcf.get_customer_name(cust_type, a.cust_id), cust_type, a.trnsctn_id, a.approved_amount,
        a.apprvd_loan_tenor || ' ' || a.apprvd_loan_tenor_type, a.apprvd_interest_rate, a.application_date, a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type,
        a.cust_id, a.loan_product_id
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b
                WHERE a.loan_product_id = b.loan_product_id
	AND a.status = 'Approved' AND branch_id = $bnkBranchID AND currency_id = $crncyID AND  a.cust_type = '" . $vCustType . "' AND a.is_disbursed != 'YES'"
                . " ORDER BY 1";
    }
    //echo $sqlStr;
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function get_LoanPrdt_FeesNAccounts($loanPrdtId) {
    $strSql = "SELECT fee_name, fee_type, coalesce(fee_flat,0), coalesce(fee_percent, 0), dbt_accnt_id, crdt_accnt_id
    mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loan_product_id = $loanPrdtId ORDER BY fee_name";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_LoanPrdt_KeyCalcltnParams($loanPrdtId) {

    $strSql = "SELECT charge_interest, interest_rate, loan_repayment_type, grace_period_no, grace_period_type,
        max_loan_tenor, max_loan_tenor_type, posting_frequency, compounding_period,
       cust_type_custgrp, cust_type_corp, cust_type_ind, start_date_active, end_date_active
        FROM  mcf.mcf_prdt_loans WHERE loan_product_id = $loanPrdtId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) {
    //GET LOAN PARAMTERS
    $loanTenorInYears = 0;
    $yearlyRepayments = 1;
    $cmpndPrd = 1;
    if ($loanTenorType == "Year(s)") {
        $loanTenorInYears = $loanTenor;
    } else {
        $loanTenorInYears = $loanTenor * (float) (1 / 12);
    }

    if ($loanRepaymentType == "daily") {
        $yearlyRepayments = 365.25;
    } else if ($loanRepaymentType == "weekly") {
        $yearlyRepayments = 52;
    } else if ($loanRepaymentType == "biweekly") {
        $yearlyRepayments = 26;
    } else if ($loanRepaymentType == "halfmonth") {
        $yearlyRepayments = 24;
    } else if ($loanRepaymentType == "month") {
        $yearlyRepayments = 12;
    } else if ($loanRepaymentType == "quarter") {
        $yearlyRepayments = 4;
    } else if ($loanRepaymentType == "halfyear") {
        $yearlyRepayments = 2;
    } else {
        $yearlyRepayments = 1;
    }

    return ((float) $yearlyRepayments * (float) $loanTenorInYears);
}

function initiate_Disbursement($disbmntDetId, $prncplAmount, $loanTenor, $loanTenorType, $loanRepaymentType, $cmpndPrdType, $gracePeriodNo, $gracePeriodType, $chargeInterest, $interestRate, $dateStr, $disbmntHdrID, $applctnType, $crdtType, $refLoanrqstID, &$ttlIntrst) {
    global $usrID;

    $refDate = $dateStr;
    $repayStartDate = get_loanrepay_stardateYMD($refDate, $gracePeriodNo, $gracePeriodType);

    //GET LOAN PARAMTERS
    $insSQL = "";
    $loanTenorTypeIntvl;
    //$currPrincipalAmountBal;
    $schdlPrd = "year";
    $schdlDy = 0;

    $loanTenorInYears = 0;
    $yearlyRepayments = 1;
    $cmpndPrd = 1;
//    if ($loanTenorType == "Year(s)") {
//        $loanTenorInYears = $loanTenor;
//    } else {
//        $loanTenorInYears = $loanTenor * (float) (1 / 12);
//    }

    if ($loanTenorType == "Year(s)") {
        $loanTenorInYears = $loanTenor;
        $schdlDy = $loanTenor;
    } else {
        $loanTenorInYears = $loanTenor * (float) (1 / 12);
        $schdlPrd = "month";
        $schdlDy = $loanTenor;
    }

    if ($loanRepaymentType == "daily") {
        $yearlyRepayments = 365.25;
    } else if ($loanRepaymentType == "weekly") {
        $yearlyRepayments = 52;
    } else if ($loanRepaymentType == "biweekly") {
        $yearlyRepayments = 26;
    } else if ($loanRepaymentType == "halfmonth") {
        $yearlyRepayments = 24;
    } else if ($loanRepaymentType == "month") {
        $yearlyRepayments = 12;
    } else if ($loanRepaymentType == "quarter") {
        $yearlyRepayments = 4;
    } else if ($loanRepaymentType == "halfyear") {
        $yearlyRepayments = 2;
    } else {
        $yearlyRepayments = 1;
    }



    //$repayEndDate = get_loanrepay_stardateYMD($refDate, $loanTenorInYears, 'year');
    $repayEndDate = get_loanrepay_stardateYMD($repayStartDate, $schdlDy, $schdlPrd);

    if ($cmpndPrdType == "daily") {
        $cmpndPrd = 365.25;
    } else if ($cmpndPrdType == "weekly") {
        $cmpndPrd = 52;
    } else if ($cmpndPrdType == "biweekly") {
        $cmpndPrd = 26;
    } else if ($cmpndPrdType == "semimonthly") {
        $cmpndPrd = 24;
    } else if ($cmpndPrdType == "monthly") {
        $cmpndPrd = 12;
    } else if ($cmpndPrdType == "quarterly") {
        $cmpndPrd = 4;
    } else if ($cmpndPrdType == "semiannually") {
        $cmpndPrd = 2;
    } else if ($cmpndPrdType == "simple") {
        $cmpndPrd = -1;
    } else {
        $cmpndPrd = 1;
    }

    if ($applctnType == "Top-Up Request") {
        $currTenorBal;
        $currTenorBalInYears;
        $currTenorType;
        $currTtlInterestBal;
        $currPrincipalAmountBal;
        //2. COMPARE WITH CURRENT TENOR BALANCE
        $result = get_RefLoanRqstDetsForLoanApplctn($refLoanrqstID);
        while ($row = loc_db_fetch_array($result)) {

            $currPrincipalAmountBal = (float) $row[1];
            $currTenorBal = (float) $row[2];
            $currTenorType = $row[3];
            $currTtlInterestBal = (float) $row[5];
            //$apprvdLoanTenor = (float) $row[7];
        }

        if ($loanRepaymentType == "daily") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 365.25);
        } else if ($loanRepaymentType == "weekly") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 52);
        } else if ($loanRepaymentType == "biweekly") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 26);
        } else if ($loanRepaymentType == "halfmonth") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 24);
        } else if ($loanRepaymentType == "month") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 12);
        } else if ($loanRepaymentType == "quarter") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 4);
        } else if ($loanRepaymentType == "halfyear") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 2);
        } else {
            $currTenorBalInYears = $currTenorBal;
        }

//        if ($currTenorType == "Year(s)") {
//            $currTenorBalInYears = $currTenorBal;
//        } else {
//            $currTenorBalInYears = $currTenorBal * (float) (1 / 12);
//        }

        $interestRatePerPeriod = 0;

        if ((float) $loanTenorInYears >= (float) $currTenorBalInYears) {
            $newLoanTenorInYears = $loanTenorInYears;
            $newTtlInterestBal = 0;
            //a) COMPUTE NEW INTEREST FOR NEW AMOUNT
            $strSql2 = "SELECT (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $newLoanTenorInYears, $yearlyRepayments,"
                    . " $cmpndPrd)) * $yearlyRepayments * $newLoanTenorInYears) - $prncplAmount)";

            $result2 = executeSQLNoParams($strSql2);
            while ($row2 = loc_db_fetch_array($result2)) {
                $newTtlInterestBal = (float) $row2[0];
            }

            //a) COMPUTE interest_rate_per_period
            $strSql3 = "SELECT ((SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))"
                    . "*($newTtlInterestBal + $currTtlInterestBal))/"
                    . "(((SELECT mcf.xx_loan_amortization_amnt(($prncplAmount + $currPrincipalAmountBal),$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - ($prncplAmount + $currPrincipalAmountBal))";

            $result3 = executeSQLNoParams($strSql3);
            while ($row3 = loc_db_fetch_array($result3)) {
                $interestRatePerPeriod = (float) $row3[0];
            }

            //b) ADD TO EXISTING INTEREST BAL
            $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
            SET principal_amount= ($prncplAmount + $currPrincipalAmountBal)" .
                    ", scheduled_prdc_paymnt_amnt = (($prncplAmount + $currPrincipalAmountBal) + $newTtlInterestBal + $currTtlInterestBal)/(" . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . "), "
                    //. "interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                    . "interest_rate_per_period = $interestRatePerPeriod, "
                    . "ttl_interest = ($newTtlInterestBal + $currTtlInterestBal),"
                    . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "', principal_amount_bal = ($prncplAmount + $currPrincipalAmountBal),"
                    . " ttl_interest_bal = ($newTtlInterestBal + $currTtlInterestBal)"
                    . " WHERE disbmnt_det_id = $disbmntDetId";


            if($cmpndPrd <= 0){
                $interestRatePerPeriod = -1;

                $result2 = executeSQLNoParams("SELECT (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))");
                while ($row2 = loc_db_fetch_array($result2)) {
                    $interestRatePerPeriod = (float) $row2[0];
                }

                $ttlLoanTermTimes = calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType);
                $prncplPymnt = $prncplAmount/$ttlLoanTermTimes;
                $intrstPymnt = $interestRatePerPeriod * $prncplAmount;
                $scheduledPrdcPaymntAmnt = $intrstPymnt + $prncplPymnt;
                $ttlIntrst = $intrstPymnt * $ttlLoanTermTimes;

                $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
                SET principal_amount= $prncplAmount" .
                        ", scheduled_prdc_paymnt_amnt = $scheduledPrdcPaymntAmnt, "
                        . "interest_rate_per_period = $interestRatePerPeriod, "
                        . "ttl_interest= $ttlIntrst,"
                        . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                    last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                        . " ttl_interest_bal = $ttlIntrst"
                        . " WHERE disbmnt_det_id = $disbmntDetId";

            } else {
                $ttlIntrst = $newTtlInterestBal + $currTtlInterestBal;
            }
        }

        $rowCnt = execUpdtInsSQL($insSQL);

        if ($rowCnt > 0) {
            $insSQL1 = "UPDATE mcf.mcf_loan_request SET status = 'Topped-Up' WHERE loan_rqst_id = $refLoanrqstID";

            execUpdtInsSQL($insSQL1);
        }
    } else if ($applctnType == "Reschedule Request") {
        $currTenorBal;
        $currTenorBalInYears;
        $currTenorType;
        $currTtlInterestBal;
        //$currPrincipalAmountBal;
        //2. COMPARE WITH CURRENT TENOR BALANCE
        $result = get_RefLoanRqstDetsForLoanApplctn($refLoanrqstID);
        while ($row = loc_db_fetch_array($result)) {

            //$currPrincipalAmountBal = (float) $row[1];
            $currTenorBal = (float) $row[2];
            $currTenorType = $row[3];
            $currTtlInterestBal = (float) $row[5];
        }

        if ($loanRepaymentType == "daily") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 365.25);
        } else if ($loanRepaymentType == "weekly") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 52);
        } else if ($loanRepaymentType == "biweekly") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 26);
        } else if ($loanRepaymentType == "halfmonth") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 24);
        } else if ($loanRepaymentType == "month") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 12);
        } else if ($loanRepaymentType == "quarter") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 4);
        } else if ($loanRepaymentType == "halfyear") {
            $currTenorBalInYears = $currTenorBal * (float) (1 / 2);
        } else {
            $currTenorBalInYears = $currTenorBal;
        }

        $interestRatePerPeriod = 0;

        if ((float) $loanTenorInYears > (float) $currTenorBalInYears) {
            $newLoanTenorInYears = $loanTenorInYears - $currTenorBalInYears;
            $newTtlInterestBal = 0;
            //a) COMPUTE NEW INTEREST FOR EXTENDED PERIOD
            $strSql2 = "SELECT (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $newLoanTenorInYears, $yearlyRepayments,"
                    . " $cmpndPrd)) * $yearlyRepayments * $newLoanTenorInYears) - $prncplAmount)";

            $result2 = executeSQLNoParams($strSql2);
            while ($row2 = loc_db_fetch_array($result2)) {
                $newTtlInterestBal = (float) $row2[0];
            }

            //a) COMPUTE interest_rate_per_period
            $strSql3 = "SELECT ((SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))"
                    . "*($newTtlInterestBal + $currTtlInterestBal))/"
                    . "(((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)";

            $result3 = executeSQLNoParams($strSql3);
            while ($row3 = loc_db_fetch_array($result3)) {
                $interestRatePerPeriod = (float) $row3[0];
            }

            //b) ADD TO EXISTING INTEREST BAL
            $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
            SET principal_amount= $prncplAmount" .
                    ", scheduled_prdc_paymnt_amnt = ($prncplAmount + $newTtlInterestBal + $currTtlInterestBal)/(" . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . "), "
                    //. "interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                    . "interest_rate_per_period = $interestRatePerPeriod, "
                    . "ttl_interest = ($newTtlInterestBal + $currTtlInterestBal),"
                    . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                    . " ttl_interest_bal = ($newTtlInterestBal + $currTtlInterestBal)"
                    . " WHERE disbmnt_det_id = $disbmntDetId";
            //var_dump("> " . $insSQL);

            $ttlIntrst = $newTtlInterestBal + $currTtlInterestBal;
        } else {

            if ($crdtType === "Overdraft") {

                $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
                    SET principal_amount= $prncplAmount" .
                        ", scheduled_prdc_paymnt_amnt = (SELECT mcf.xx_loan_amortization_amnt($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                        . "interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                        . "ttl_interest=(((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount),"
                        . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                        last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                        . " ttl_interest_bal = (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)"
                        . " WHERE disbmnt_det_id = $disbmntDetId";

                $result2 = executeSQLNoParams("SELECT (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)");
                while ($row2 = loc_db_fetch_array($result2)) {
                    $ttlIntrst = (float) $row2[0];
                }
            } else {

                //a) COMPUTE interest_rate_per_period
                $strSql3 = "SELECT ((SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))"
                        . "*(SELECT mcf.calc_ttlInt_outstndn_xpayperiod($refLoanrqstID, " . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . ")))/"
                        . "(((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)";

                $result3 = executeSQLNoParams($strSql3);
                while ($row3 = loc_db_fetch_array($result3)) {
                    $interestRatePerPeriod = (float) $row3[0];
                }

                $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
            SET principal_amount= $prncplAmount" .
                        ", scheduled_prdc_paymnt_amnt = ($prncplAmount + (SELECT mcf.calc_ttlInt_outstndn_xpayperiod($refLoanrqstID, " . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . ")))/(" . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . "), "
                        //. "interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                        . "interest_rate_per_period = $interestRatePerPeriod, "
                        . "ttl_interest = (SELECT mcf.calc_ttlInt_outstndn_xpayperiod($refLoanrqstID, " . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . ")),"
                        . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                        . " ttl_interest_bal = (SELECT mcf.calc_ttlInt_outstndn_xpayperiod($refLoanrqstID, " . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . "))"
                        . " WHERE disbmnt_det_id = $disbmntDetId";
                //var_dump("< " . $insSQL);

                $result2 = executeSQLNoParams("SELECT (SELECT mcf.calc_ttlInt_outstndn_xpayperiod($refLoanrqstID, " . calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType) . "))");
                while ($row2 = loc_db_fetch_array($result2)) {
                    $ttlIntrst = (float) $row2[0];
                }
            }
        }

        if($cmpndPrd <= 0){
            $interestRatePerPeriod = -1;

            $result2 = executeSQLNoParams("SELECT (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))");
            while ($row2 = loc_db_fetch_array($result2)) {
                $interestRatePerPeriod = (float) $row2[0];
            }

            $ttlLoanTermTimes = calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType);
            $prncplPymnt = $prncplAmount/$ttlLoanTermTimes;
            $intrstPymnt = $interestRatePerPeriod * $prncplAmount;
            $scheduledPrdcPaymntAmnt = $intrstPymnt + $prncplPymnt;
            $ttlIntrst = $intrstPymnt * $ttlLoanTermTimes;

            $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
            SET principal_amount= $prncplAmount" .
                    ", scheduled_prdc_paymnt_amnt = $scheduledPrdcPaymntAmnt, "
                    . "interest_rate_per_period = $interestRatePerPeriod, "
                    . "ttl_interest= $ttlIntrst,"
                    . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                    . " ttl_interest_bal = $ttlIntrst"
                    . " WHERE disbmnt_det_id = $disbmntDetId";

        }

        $rowCnt = execUpdtInsSQL($insSQL);

        if ($rowCnt > 0) {
            $insSQL1 = "UPDATE mcf.mcf_loan_request SET status = 'Rescheduled' WHERE loan_rqst_id = $refLoanrqstID";

            execUpdtInsSQL($insSQL1);
        }
    } else {
        $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
        SET principal_amount= $prncplAmount" .
                ", scheduled_prdc_paymnt_amnt = (SELECT mcf.xx_loan_amortization_amnt($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                . "interest_rate_per_period = (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)), "
                . "ttl_interest=(((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount),"
                . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
            last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                . " ttl_interest_bal = (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)"
                . " WHERE disbmnt_det_id = $disbmntDetId";

        if($cmpndPrd <= 0){
            $interestRatePerPeriod = -1;

            $result2 = executeSQLNoParams("SELECT (SELECT mcf.xx_loan_amortization_rate($prncplAmount, $interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd))");
            while ($row2 = loc_db_fetch_array($result2)) {
                $interestRatePerPeriod = (float) $row2[0];
            }

            $ttlLoanTermTimes = calculate_TtlLoanTermTimes($loanTenor, $loanTenorType, $loanRepaymentType);
            $prncplPymnt = $prncplAmount/$ttlLoanTermTimes;
            $intrstPymnt = $interestRatePerPeriod * $prncplAmount;
            $scheduledPrdcPaymntAmnt = $intrstPymnt + $prncplPymnt;
            $ttlIntrst1 = $intrstPymnt * $ttlLoanTermTimes;

            $insSQL = "UPDATE mcf.mcf_loan_disbursement_det
            SET principal_amount= $prncplAmount" .
                    ", scheduled_prdc_paymnt_amnt = $scheduledPrdcPaymntAmnt, "
                    . "interest_rate_per_period = $interestRatePerPeriod, "
                    . "ttl_interest= $ttlIntrst1,"
                    . " repay_start_date= '$repayStartDate', repay_end_date='$repayEndDate', last_update_by=$usrID,
                last_update_date= '" . $dateStr . "', principal_amount_bal = $prncplAmount,"
                    . " ttl_interest_bal = $ttlIntrst1"
                    . " WHERE disbmnt_det_id = $disbmntDetId";

        } else {
            $result2 = executeSQLNoParams("SELECT (((SELECT mcf.xx_loan_amortization_amnt($prncplAmount,$interestRate, $loanTenorInYears, $yearlyRepayments, $cmpndPrd)) * $yearlyRepayments * $loanTenorInYears) - $prncplAmount)");
            while ($row2 = loc_db_fetch_array($result2)) {
                $ttlIntrst1 = (float) $row2[0];
            }
        }

        $ttlIntrst = $ttlIntrst1;

        $rowCnt = execUpdtInsSQL($insSQL);
    }
    //var_dump($insSQL);

    if ($rowCnt > 0) {
        return $rowCnt;
    }


//    if ($rowCnt > 0) {
//        $insSQL1 = "UPDATE mcf.mcf_loan_disbursement_hdr SET status = 'Disbursed' WHERE disbmnt_hdr_id = $disbmntHdrID";
//
//        return execUpdtInsSQL($insSQL1);
//    }

    return -1;
}


function get_loanrepay_stardateYMD($refDate, $gracePeriodNo, $gracePeriodType) {
    $startDte = "";

    global $trnsNtAllwdDts;
    global $trnsNtAllwdDys;
    //$strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD') + interval '$gracePeriodNo $gracePeriodType','YYYY-MM-DD')";
    $strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD') + interval '$gracePeriodNo $gracePeriodType','DD-Mon-YYYY')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $startDte = $row[0];
    }

    $i = 0;
    $j = 1;
    $k = 1;
    $x = 0;

    do {

        while ($j > 0) {
            if (in_array(strtoupper($startDte), $trnsNtAllwdDts)) {
                $startDte = date('d-M-Y', strtotime($startDte . ' + 1 days'));
                $j = 1;
                $i = 1;
            } else {
                $j = 0;
                $x = 0;
                $k = 1;
            }
        }


        $cnt = 0;
        while ($k > 0) {
            $cnt = $cnt + 1;
            $startDteDay = date('l', strtotime($startDte));


            if (in_array(strtoupper($startDteDay), $trnsNtAllwdDys)) {
                $startDte = date('d-M-Y', strtotime($startDte . ' + 1 days'));
                //$startDteDay = date('l', strtotime($startDte));

                $k = 0;
                $i = 1;
                $x = 1;
            } else {
                if (count($trnsNtAllwdDys) <= 0 || $cnt == count($trnsNtAllwdDys)) {
                    $k = 0;
                    $x = 0;
                } else {
                    $k = 1;
                }
            }
        }


        if ($x == 0) {
            $i = 0;
        } else {
            $j = 1;
        }
    } while ($i > 0);


    $startDteDsply = date('Y-m-d', strtotime($startDte));

    return $startDteDsply;
}

function get_loanrepay_stardateYMD1($refDate, $gracePeriodNo, $gracePeriodType) {
    $startDte = "";
    global $trnsNtAllwdDts;
    global $trnsNtAllwdDys;
    //$strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD') + interval '$gracePeriodNo $gracePeriodType','YYYY-MM-DD')";
    $strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD') + interval '$gracePeriodNo $gracePeriodType','DD-Mon-YYYY')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $startDte = $row[0];
    }

    foreach ($trnsNtAllwdDts as $val) {
        if (strtoupper($startDte) == strtoupper($val)) {
            $startDte = date('d-M-Y', strtotime($val . ' + 1 days'));
        }
    }

    $startDteDay = date('l', strtotime($startDte));

    foreach ($trnsNtAllwdDys as $valDy) {
        if (strtoupper($startDteDay) == strtoupper($valDy)) {
            $startDte = date('d-M-Y', strtotime($startDte . ' + 1 days'));
            $startDteDay = date('l', strtotime($startDte));
        }
    }

    $startDteDsply = date('Y-m-d', strtotime($startDte));

    return $startDteDsply;
}

function get_loanrepay_stardateDMY($refDate, $gracePeriodNo, $gracePeriodType) {

    $strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD') + interval '$gracePeriodNo $gracePeriodType','DD-Mon-YYYY')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function rollback_Disbursement() {

}

function get_CreditPrdtIdForLoanRqst($loanRqstId) {
    $strSql = "SELECT loan_product_id FROM mcf.mcf_loan_request WHERE loan_rqst_id = $loanRqstId";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

function save_LoanSchedule($disbmntDetId, $pDate, $begBal, $intrst, $prncpl, $endnBal, $dateStr) {
    global $usrID;

    if ($pDate != "") {
        $pDate = cnvrtDMYToYMD($pDate);
    }

    $insSQL = "INSERT INTO mcf.mcf_loan_schedule(disbmnt_det_id, repay_date, begining_bal, interest_amnt,
            principal_amnt, ending_bal, is_paid, created_by, creation_date,
            last_update_by, last_update_date, interest_amnt_paid, principal_amnt_paid)
    VALUES (" . $disbmntDetId . ",'" . $pDate . "'," . $begBal . "," . $intrst . "," . $prncpl . "," . $endnBal . ",'NO'," .
            $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "',0,0)";
    //echo $insSQL;
    return execUpdtInsSQL($insSQL);
}

function delete_LoanSchedule($disbmntDetId) {
    $delSQL1 = "DELETE from mcf.mcf_loan_schedule WHERE disbmnt_det_id = $disbmntDetId";

    execUpdtInsSQL($delSQL1);
}

function getBranchCode($branchID) {
    global $orgid;
    $sqlStr = "SELECT distinct(location_code_name) FROM org.org_sites_locations WHERE org_id = $orgid AND location_id = $branchID";
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return "";
}

//OLD FUNCTIONS
function get_CustList($orgID) {
    $strSql = "SELECT cust_sup_id mt, cust_sup_name, cust_type, cust_sup_id, to_char(to_timestamp(dob_estblshmnt,"
            . "'YYYY-MM-DD'),'DD-Mon-YYYY') dob_estblshmnt, is_enabled
  FROM scm.scm_cstmr_suplr where org_id = $orgID";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustDetails($custID, $orgID) {
    $strSql = "SELECT cust_sup_id mt,
	cust_type, cust_sup_name, cust_sup_desc, cust_sup_clssfctn, lnkd_prsn_id,
        person_gender, to_char(to_timestamp(dob_estblshmnt,'YYYY-MM-DD'),'DD-Mon-YYYY') dob_estblshmnt, is_enabled, firm_brand_name, type_of_organisation,
        company_reg_num, date_of_incorptn, type_of_incorporation, vat_number, tin_number,
        ssnit_reg_number, no_of_emplyees, (select local_id_no from mcf.mcf_customers_ind where ind_profile_id = scs.lnkd_prsn_id)
  FROM scm.scm_cstmr_suplr scs WHERE org_id = $orgID AND cust_sup_id = $custID";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCustSites($custID) {
    $strSql = "SELECT cust_sup_site_id mt, cust_supplier_id mt, site_name, scss.is_enabled
  FROM scm.scm_cstmr_suplr_sites scss, scm.scm_cstmr_suplr scs
  WHERE scss.cust_supplier_id = scs.cust_sup_id
  AND cust_sup_id = $custID";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCustSitesDets($siteID) {
    $strSql = "SELECT cust_sup_site_id mt, site_name, is_enabled, site_desc, billing_address, ship_to_address, contact_nos, email
  FROM scm.scm_cstmr_suplr_sites scss
  WHERE scss.cust_sup_site_id = $siteID";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_LtstPrsnType($pkID) {
    $strSql = "SELECT prsn_type
            FROM pasn.prsn_prsntyps WHERE ((ind_profile_id =  $pkID))
                ORDER BY valid_end_date DESC, valid_start_date DESC LIMIT 1 OFFSET 0";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return '';
}

function get_BscPrsnDetail($ind_profile_id) {
    $strSql = "SELECT
                a.img_location \"Person's Picture\",
                a.ind_profile_id \"Person ID\", "
            . "a.local_id_no \"ID No. \", "
            . "trim(a.title || ' ' || a.sur_name || " .
            "', ' || a.first_name || ' ' || a.other_names) \"Full Name \",
                a.gender \"Gender \",
                a.marital_status \"Marital Status \",
                to_char(to_timestamp(a.date_of_birth,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Date of Birth \",
          a.place_of_birth \"Place of Birth \",
          a.religion \"Religion \",
          a.res_address \"Residential Address \",
          a.pstl_addrs \"Postal Address \",
          a.email \"Email \",
          a.cntct_no_tel \"Tel No. \",
          a.cntct_no_mobl \"Mobile No. \",
          a.cntct_no_fax \"Fax \",
          a.hometown \"Home Town \",
          a.nationality \"Nationality \",
          a.lnkd_firm_org_id mt,
          scm.get_cstmr_splr_name(a.lnkd_firm_org_id) \"Workplace/Firm \",
          a.lnkd_firm_site_id mt,
          scm.get_cstmr_splr_site_name(a.lnkd_firm_site_id) \"Site/Branch \",
          b.prsn_type \"Relation Type\",
          b.prn_typ_asgnmnt_rsn \"Cause of Relation\", " .
            "b.further_details \"Further Details\", "
            . "to_char(to_timestamp(b.valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Start Date \", "
            . "to_char(to_timestamp(b.valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"End Date \" " .
            "FROM mcf.mcf_customers_ind a "
            . "LEFT OUTER JOIN pasn.prsn_prsntyps b " .
            "ON (a.ind_profile_id = b.ind_profile_id and "
            . "b.valid_start_date = (SELECT MAX(c.valid_start_date) from pasn.prsn_prsntyps c where c.ind_profile_id = a.ind_profile_id)) " .
            "WHERE (a.ind_profile_id = $ind_profile_id)";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function getAllwdPrsnTyps() {
    $strSql = "select a.pssbl_value_desc from gst.gen_stp_lov_values a, gst.gen_stp_lov_names b, sec.sec_roles c
WHERE a.value_list_id = b.value_list_id and a.pssbl_value = c.role_name
and b.value_list_name = 'Allowed Person Types for Roles' and a.is_enabled='1'
and c.role_id IN (" . concatCurRoleIDs() . ") ORDER BY a.pssbl_value_id LIMIT 1 OFFSET 0";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function get_FilterValues($fltrTyp, $orgID) {
    $result = null;
    if ($fltrTyp == "Position") {
        //Positions
        $result = executeSQLNoParams("Select position_code_name from org.org_positions where org_id=" . $orgID);
    } else if ($fltrTyp == "Division/Group") {
        //Div Groups
        $result = executeSQLNoParams("Select div_code_name from org.org_divs_groups where org_id=" . $orgID);
    } else if ($fltrTyp == "Grade") {
        //Grade
        $result = executeSQLNoParams("Select grade_code_name from org.org_grades where org_id=" . $orgID);
    } else if ($fltrTyp == "Job") {
        //Job
        $result = executeSQLNoParams("Select job_code_name from org.org_jobs where org_id=" . $orgID);
    } else {
        //Person Types
        $aldPrsTyp = getAllwdPrsnTyps();
        $extra3 = "";
        $aldPrsTyp = "'" . trim($aldPrsTyp, "'") . "'";
        if ($aldPrsTyp != "'All'") {
            $extra3 = " and pssbl_value IN (" . $aldPrsTyp . ")";
        }
        $result = getAllEnbldPssblVals("Person Types", $extra3);
    }
    return $result;
}

function getAllEnbldPssblVals($lovNm, $extrWhr) {
    global $orgID;
    $sqlStr = "select pssbl_value from gst.gen_stp_lov_values " .
            "WHERE is_enabled='1' and value_list_id = " . getLovID($lovNm) .
            " and allowed_org_ids ilike '%," . $orgID .
            ",%'" . $extrWhr . " ORDER BY 1";
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function endOldPrsnTypes($prsnid, $nwStrtDte) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $updtSQL = "UPDATE pasn.prsn_prsntyps " .
            "SET last_update_by=" . $usrID . ", " .
            "last_update_date='" . $dateStr . "', valid_end_date='" . $nwStrtDte . "' " .
            "WHERE ((ind_profile_id=" . $prsnid .
            ") and (to_timestamp(valid_end_date || ' 23:59:59','YYYY-MM-DD HH24:MI:SS') " .
            ">= to_timestamp('" . $nwStrtDte . " 00:00:00','YYYY-MM-DD HH24:MI:SS')))";
    execUpdtInsSQL($updtSQL);
}

function checkPrsnType($prsnid, $prsntyp, $nwStrtDte, &$rowID) {
    $strSql = "SELECT prsntype_id " .
            "FROM pasn.prsn_prsntyps WHERE ((ind_profile_id = " . $prsnid .
            ") and (((prsn_type = '" . loc_db_escape_string($prsntyp) .
            "') and (to_timestamp(valid_start_date || ' 00:00:00','YYYY-MM-DD HH24:MI:SS') " .
            ">= to_timestamp('" . $nwStrtDte . "','YYYY-MM-DD HH24:MI:SS'))) or (to_timestamp(valid_start_date || ' 00:00:00','YYYY-MM-DD HH24:MI:SS') " .
            "= to_timestamp('" . $nwStrtDte . "','YYYY-MM-DD HH24:MI:SS'))))";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rowID = $row[0];
        return true;
    }
    return false;
}

function createPrsnsType($prsnid, $rsn, $date1, $date2, $futhDet, $prsntyp) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO pasn.prsn_prsntyps(" .
            "ind_profile_id, prn_typ_asgnmnt_rsn, valid_start_date, valid_end_date, " .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "further_details, prsn_type)" .
            "VALUES (" . $prsnid . ", '" . loc_db_escape_string($rsn) .
            "', '" . loc_db_escape_string($date1) . "', '" . loc_db_escape_string($date2) . "', " .
            "" . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "', " .
            "'" . loc_db_escape_string($futhDet) . "', '" . loc_db_escape_string($prsntyp) . "')";
    execUpdtInsSQL($insSQL);
}

function updtPrsnsType($rowid, $prsnid, $rsn, $date1, $date2, $futhDet, $prsntyp) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $updtSQL = "UPDATE pasn.prsn_prsntyps " .
            "SET ind_profile_id=" . $prsnid . ", prn_typ_asgnmnt_rsn='" . loc_db_escape_string($rsn) .
            "', valid_start_date='" . loc_db_escape_string($date1) .
            "', valid_end_date='" . loc_db_escape_string($date2) . "', " .
            "last_update_by=" . $usrID . ", last_update_date='" . $dateStr . "', " .
            "further_details='" . loc_db_escape_string($futhDet) .
            "', prsn_type='" . loc_db_escape_string($prsntyp) . "' " .
            "WHERE prsntype_id= " . $rowid;
    execUpdtInsSQL($updtSQL);
}

function prsn_ChngRqst_Exist($pkID) {
    $sqlStr = "select 1 from self.self_prsn_chng_rqst WHERE (ind_profile_id=$pkID)
           and rqst_status in ('Initiated','Requires Approval')";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

function prsn_Record_Exist($pkID) {
    $sqlStr = "select ind_profile_id FROM self.self_prsn_names_nos WHERE (ind_profile_id=$pkID)";
    //echo $sqlStr;
    $result = executeSQLNoParams($sqlStr);
    while (loc_db_num_rows($result) > 0) {
        return true;
    }
    return false;
}

function get_RqstStatus($pkID) {
    $sqlStr = "select rqst_status from self.self_prsn_chng_rqst WHERE (ind_profile_id=$pkID)
           and rqst_id = (select coalesce(max(rqst_id),0) from self.self_prsn_chng_rqst WHERE (ind_profile_id=$pkID))";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 'Approved';
}

function get_SelfPrsnDet($pkID) {
    $strSql = "SELECT a.ind_profile_id mt, local_id_no \"ID No.\", img_location \"Person's Picture\",
          title, first_name, sur_name \"surname\", other_names, org.get_org_name(org_id) organisation,
          gender, marital_status,
          to_char(to_timestamp(date_of_birth,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Date of Birth\",
          place_of_birth, religion,
          res_address residential_address, pstl_addrs postal_address, email,
          cntct_no_tel tel, cntct_no_mobl mobile,
          cntct_no_fax fax, hometown, nationality,
          (CASE WHEN lnkd_firm_org_id>0 THEN
          scm.get_cstmr_splr_name(lnkd_firm_org_id)
              ELSE
              new_company
              END) \"Linked Firm/ Workplace \",
          (CASE WHEN lnkd_firm_org_id>0 THEN
           scm.get_cstmr_splr_site_name(lnkd_firm_site_id)
              ELSE
              new_company_loc
              END) \"Branch \",
          b.prsn_type \"Relation Type\",
          b.prn_typ_asgnmnt_rsn \"Cause of Relation\",
            b.further_details \"Further Details\",
            to_char(to_timestamp(b.valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"Start Date \",
            to_char(to_timestamp(b.valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"End Date \"
            FROM self.self_prsn_names_nos a
            LEFT OUTER JOIN pasn.prsn_prsntyps b
            ON (a.ind_profile_id = b.ind_profile_id and
           b.valid_start_date = (SELECT MAX(c.valid_start_date) from pasn.prsn_prsntyps c where c.ind_profile_id = a.ind_profile_id))
    WHERE (a.ind_profile_id=$pkID)";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllNtnlty_Self($pkID) {
    $strSql = "SELECT ntnlty_id mt, nationality \"Country\", national_id_typ national_id_type,
        id_number, date_issued, expiry_date, other_info other_information
          FROM self.self_prsn_national_ids WHERE ((ind_profile_id = $pkID))";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function getAllRltvs($pkID) {
    $strSql = "SELECT a.local_id_no \"Relative's ID No.\",
        trim(a.title || ' ' || a.sur_name ||
           ', ' || a.first_name || ' ' || a.other_names) \"Relative's full_name\",
            b.relationship_type, b.relative_prsn_id mt, b.rltv_id mt
               FROM prs.prsn_relatives b
                   LEFT OUTER JOIN mcf.mcf_customers_ind a
                   ON b.relative_prsn_id = a.ind_profile_id
                   WHERE ((b.ind_profile_id = $pkID)) ORDER BY b.relationship_type, a.local_id_no";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_PrsnTypes($pkID) {
    $strSql = "SELECT ind_profile_id mt, prsn_type person_type,
        prn_typ_asgnmnt_rsn reason_for_this_person_type,
        further_details,
to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
            FROM pasn.prsn_prsntyps WHERE ((ind_profile_id =  $pkID))
                ORDER BY valid_end_date DESC, valid_start_date DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_EducBkgrd($pkID) {
    $strSql = "SELECT educ_id mt, course_name, school_institution \"school/institution\",
        school_location,
       to_char(to_timestamp(course_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
        to_char(to_timestamp(course_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date,
        cert_obtained certificate_obtained, cert_type certificate_type,
        date_cert_awarded date_awarded
      FROM prs.prsn_education a WHERE ((ind_profile_id = $pkID))
      ORDER BY a.course_end_date DESC, a.course_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_WrkBkgrd($pkID) {
    $strSql = "SELECT wrk_exprnc_id mt, job_name_title \"job name/title\", institution_name, job_location,
        to_char(to_timestamp(job_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
        to_char(to_timestamp(job_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date, job_description,
        feats_achvments \"feats/achievements\"
        FROM prs.prsn_work_experience a
        WHERE ((ind_profile_id = $pkID))
        ORDER BY a.job_end_date DESC, a.job_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_SkillNature($pkID) {
    $strSql = "SELECT skills_id mt, languages, hobbies, interests,
       conduct, attitude, to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"valid_start_date\",
        to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') \"valid_end_date\"
        FROM prs.prsn_skills_nature a WHERE ((ind_profile_id = $pkID))
        ORDER BY a.valid_end_date DESC, a.valid_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_PrsExtrDataGrpCols($grpnm, $org_ID) {
    $strSql = "SELECT extra_data_cols_id, column_no, column_label, attchd_lov_name,
       column_data_type, column_data_category, data_length,
       CASE WHEN data_dsply_type='T' THEN 'Tabular' ELSE 'Detail' END,
       org_id, no_cols_tblr_dsply, col_order, csv_tblr_col_nms
        FROM prs.prsn_extra_data_cols
        WHERE column_data_category= '" . loc_db_escape_string($grpnm) .
            "' and org_id = " . $org_ID . " and column_label !='' ORDER BY col_order, column_no, extra_data_cols_id";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_PrsExtrDataGrps($org_ID) {
    $strSql = "SELECT column_data_category, MIN(extra_data_cols_id) , MIN(col_order)
        FROM prs.prsn_extra_data_cols
        WHERE org_id =$org_ID and column_label !=''
            GROUP BY column_data_category ORDER BY 3, 2, 1";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_PrsExtrData($pkID, $colNum = "1") {
    $colNms = array("data_col1", "data_col2", "data_col3", "data_col4",
        "data_col5", "data_col6", "data_col7", "data_col8", "data_col9", "data_col10",
        "data_col11", "data_col12", "data_col13", "data_col14", "data_col15", "data_col16",
        "data_col17", "data_col18", "data_col19", "data_col20", "data_col21", "data_col22",
        "data_col23", "data_col24", "data_col25", "data_col26", "data_col27", "data_col28",
        "data_col29", "data_col30", "data_col31", "data_col32", "data_col33", "data_col34",
        "data_col35", "data_col36", "data_col37", "data_col38", "data_col39", "data_col40",
        "data_col41", "data_col42", "data_col43", "data_col44", "data_col45", "data_col46",
        "data_col47", "data_col48", "data_col49", "data_col50");
    $strSql = "SELECT " . $colNms[$colNum - 1] . ", extra_data_id
  FROM prs.prsn_extra_data a WHERE ((ind_profile_id = $pkID))";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function get_PrsExtrData_Self($pkID, $colNum = "1") {
    $colNms = array("data_col1", "data_col2", "data_col3", "data_col4",
        "data_col5", "data_col6", "data_col7", "data_col8", "data_col9", "data_col10",
        "data_col11", "data_col12", "data_col13", "data_col14", "data_col15", "data_col16",
        "data_col17", "data_col18", "data_col19", "data_col20", "data_col21", "data_col22",
        "data_col23", "data_col24", "data_col25", "data_col26", "data_col27", "data_col28",
        "data_col29", "data_col30", "data_col31", "data_col32", "data_col33", "data_col34",
        "data_col35", "data_col36", "data_col37", "data_col38", "data_col39", "data_col40",
        "data_col41", "data_col42", "data_col43", "data_col44", "data_col45", "data_col46",
        "data_col47", "data_col48", "data_col49", "data_col50");
    $strSql = "SELECT " . $colNms[$colNum - 1] . ", extra_data_id
  FROM self.self_prsn_extra_data a WHERE ((ind_profile_id = $pkID))";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function get_DivsGrps($pkID) {
    $strSql = "SELECT a.prsn_div_id mt, a.div_id mt, org.get_div_name(a.div_id) group_name,
        to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date,
COALESCE((select b.div_typ_id from org.org_divs_groups b where a.div_id = b.div_id),-1) mt,
gst.get_pssbl_val(COALESCE((select b.div_typ_id from org.org_divs_groups b where a.div_id = b.div_id),-1)) group_type
       FROM pasn.prsn_divs_groups a WHERE ((ind_profile_id = $pkID))
           ORDER BY a.valid_end_date DESC, a.valid_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_SitesLocs($pkID) {
    $strSql = "SELECT a.prsn_loc_id mt, a.location_id mt,
(select b.location_code_name from org.org_sites_locations b where b.location_id = a.location_id) site_name,
to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
            FROM pasn.prsn_locations a
            WHERE ((ind_profile_id = $pkID))
                ORDER BY a.valid_end_date DESC, a.valid_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_Spvsrs($pkID) {
    $strSql = "SELECT row_id mt, supervisor_prsn_id mt,
        prs.get_prsn_loc_id(supervisor_prsn_id) id_of_supervisor,
        prs.get_prsn_name(supervisor_prsn_id) name_of_supervisor,
        to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
      FROM pasn.prsn_supervisors a WHERE ((ind_profile_id = $pkID))
                ORDER BY a.valid_end_date DESC, a.valid_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_Jobs($pkID) {
    $strSql = "SELECT a.row_id mt, a.job_id mt,
        (select b.job_code_name from org.org_jobs b where b.job_id = a.job_id) job_name,
        to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
      FROM pasn.prsn_jobs a
       WHERE ((ind_profile_id = $pkID))
                ORDER BY a.valid_end_date DESC, a.valid_start_date DESC, 1 DESC";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_Grades($pkID) {
    $strSql = "SELECT a.row_id mt, a.grade_id mt,
        (select b.grade_code_name from org.org_grades b where b.grade_id = a.grade_id) grade_name,
        to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
     FROM pasn.prsn_grades a WHERE ((ind_profile_id = $pkID))";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_Pos($pkID) {
    $strSql = "SELECT a.row_id mt, a.position_id mt,
        (select b.position_code_name from org.org_positions b where b.position_id = a.position_id) pos_name,
        to_char(to_timestamp(valid_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') start_date,
        to_char(to_timestamp(valid_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') end_date
      FROM pasn.prsn_positions a WHERE ((ind_profile_id = $pkID))";
    $result = executeSQLNoParams($strSql);
    return $result;
}

/** LATEST FUNCTIONS * */
function deleteIndividualCustomer($pkID) {
    //TABLES mcf.mcf_loan_request, mcf.mcf_loanreq_guarantors, mcf.mcf_loan_assessments

    $delSQL1 = "DELETE from mcf.mcf_customers WHERE cust_id = $pkID";
    $delSQL11 = "DELETE from mcf.mcf_customers_hstrc WHERE cust_id = $pkID";
    $delSQL2 = "DELETE from mcf.mcf_extra_data WHERE src_type = 'Personal Customer' AND src_pk_id = $pkID";
    $delSQL22 = "DELETE from mcf.mcf_extra_data_hstrc WHERE src_type = 'Personal Customer' AND src_pk_id = $pkID";
    $delSQL3 = "DELETE from mcf.mcf_prsn_national_ids WHERE person_type = 'Individual Customer' AND person_id = $pkID";
    $delSQL33 = "DELETE from mcf.mcf_prsn_national_ids_hstrc WHERE person_type = 'Individual Customer' AND person_id = $pkID";
    $delSQL4 = "DELETE from mcf.mcf_customers_ind WHERE cust_id = $pkID";
    $delSQL44 = "DELETE from mcf.mcf_customers_ind_hstrc WHERE cust_id = $pkID";

    execUpdtInsSQL($delSQL1);
    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL3);
    execUpdtInsSQL($delSQL11);
    execUpdtInsSQL($delSQL22);
    execUpdtInsSQL($delSQL33);
    execUpdtInsSQL($delSQL44);
    return execUpdtInsSQL($delSQL4);
}

function deleteCorpOrGrpCustomer($pkID, $subPgNo) {
    //TABLES mcf.mcf_loan_request, mcf.mcf_loanreq_guarantors, mcf.mcf_loan_assessments

    $delSQL1 = "DELETE from mcf.mcf_customers WHERE cust_id = $pkID";
    $delSQL11 = "DELETE from mcf.mcf_customers_hstrc WHERE cust_id = $pkID";
    $delSQL3 = "DELETE from mcf.mcf_customers_corp WHERE cust_id = $pkID";
    $delSQL33 = "DELETE from mcf.mcf_customers_corp_hstrc WHERE cust_id = $pkID";
    $delSQL2 = "";
    $delSQL22 = "";
    if ($subPgNo == 1.2) {
        $delSQL2 = "DELETE from mcf.mcf_extra_data WHERE src_type = 'Corporate Customer' AND src_pk_id = $pkID";
        $delSQL22 = "DELETE from mcf.mcf_extra_data_hstrc WHERE src_type = 'Corporate Customer' AND src_pk_id = $pkID";
    } else if ($subPgNo == 1.3) {
        $delSQL2 = "DELETE from mcf.mcf_extra_data WHERE src_type = 'Customer Group' AND src_pk_id = $pkID";
        $delSQL22 = "DELETE from mcf.mcf_extra_data_hstrc WHERE src_type = 'Customer Group' AND src_pk_id = $pkID";
    }

    execUpdtInsSQL($delSQL1);
    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL11);
    execUpdtInsSQL($delSQL33);
    execUpdtInsSQL($delSQL22);
    return execUpdtInsSQL($delSQL3);
}

function deletePerson($pkID) {

    $delSQL1 = "DELETE from mcf.mcf_prsn_names_nos WHERE person_id = $pkID";
    $delSQL11 = "DELETE from mcf.mcf_prsn_names_nos_hstrc WHERE person_id = $pkID";
    $delSQL2 = "DELETE from mcf.mcf_extra_data WHERE src_type = 'Other Person' AND src_pk_id = $pkID";
    $delSQL22 = "DELETE from mcf.mcf_extra_data_hstrc WHERE src_type = 'Other Person' AND src_pk_id = $pkID";
    $delSQL3 = "DELETE from mcf.mcf_prsn_national_ids WHERE person_type = 'Other Person' AND person_id = $pkID";
    $delSQL33 = "DELETE from mcf.mcf_prsn_national_ids_hstrc WHERE person_type = 'Other Person' AND person_id = $pkID";

    execUpdtInsSQL($delSQL2);
    execUpdtInsSQL($delSQL3);
    execUpdtInsSQL($delSQL11);
    execUpdtInsSQL($delSQL22);
    execUpdtInsSQL($delSQL33);
    return execUpdtInsSQL($delSQL1);
}

function isCustomerUsdForTrns($custID, &$dsplMsg) {
    //mcf.mcf_accounts => cust_id
    $strSql1 = "SELECT * FROM mcf.mcf_accounts WHERE cust_id = $custID";
    $result1 = executeSQLNoParams($strSql1);
    $rowCnt1 = loc_db_num_rows($result1);

    if ($rowCnt1 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer has $rowCnt1 ACCOUNT records</i></span>";
        return true;
    }

    //mcf.mcf_corporate_directors => source_type = "Individual Customers", person_cust_id
    $strSql2 = "SELECT * FROM mcf.mcf_corporate_directors WHERE person_cust_id = $custID AND source_type = 'Individual Customers'";
    $result2 = executeSQLNoParams($strSql2);
    $rowCnt2 = loc_db_num_rows($result2);

    if ($rowCnt2 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer is a DIRECTOR of $rowCnt2 CORPORATE CUSTOMER(S)</i></span>";
        return true;
    }

    //mcf.mcf_group_members cust_id
    $strSql3 = "SELECT * FROM mcf.mcf_group_members WHERE cust_id = $custID";
    $result3 = executeSQLNoParams($strSql3);
    $rowCnt3 = loc_db_num_rows($result3);

    if ($rowCnt3 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer is a member of $rowCnt3 CUSTOMER GROUP(S)</i></span>";
        return true;
    }

    //mcf.mcf_investments cust_id
    $strSql4 = "SELECT * FROM mcf.mcf_investments WHERE cust_id = $custID";
    $result4 = executeSQLNoParams($strSql4);
    $rowCnt4 = loc_db_num_rows($result4);

    if ($rowCnt4 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer has $rowCnt4 INVESTMENT record(s)</i></span>";
        return true;
    }

    //mcf.mcf_loan_request cust_id
    $strSql5 = "SELECT * FROM mcf.mcf_loan_request WHERE cust_id = $custID";
    $result5 = executeSQLNoParams($strSql5);
    $rowCnt5 = loc_db_num_rows($result5);

    if ($rowCnt5 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer has $rowCnt5 CREDIT APPLICATION record(s)</i></span>";
        return true;
    }

    //mcf.mcf_loanreq_guarantors => source_type = "Individual Customers", person_cust_id
    $strSql6 = "SELECT * FROM mcf.mcf_loanreq_guarantors WHERE person_cust_id = $custID AND source_type = 'Individual Customers'";
    $result6 = executeSQLNoParams($strSql6);
    $rowCnt6 = loc_db_num_rows($result6);

    if ($rowCnt6 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer is a GUARANTOR of $rowCnt6 LOAN APPLICATION(S)</i></span>";
        return true;
    }

    return false;
}

function isPersonUsdForTrns($personID, &$dsplMsg) {
    //mcf.mcf_corporate_directors => source_type = "Other Persons", person_cust_id
    $strSql2 = "SELECT * FROM mcf.mcf_corporate_directors WHERE person_cust_id = $personID AND source_type = 'Other Persons'";
    $result2 = executeSQLNoParams($strSql2);
    $rowCnt2 = loc_db_num_rows($result2);

    if ($rowCnt2 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Person is a DIRECTOR of $rowCnt2 CORPORATE CUSTOMER(S)</i></span>";
        return true;
    }

    //mcf.mcf_loanreq_guarantors => source_type = "Other Persons", person_cust_id
    $strSql6 = "SELECT * FROM mcf.mcf_loanreq_guarantors WHERE person_cust_id = $personID AND source_type = 'Other Persons'";
    $result6 = executeSQLNoParams($strSql6);
    $rowCnt6 = loc_db_num_rows($result6);

    if ($rowCnt6 > 0) {
        $dsplMsg = "<span style='color:red; font-weight:bold !important'><i>Customer is a GUARANTOR of $rowCnt6 LOAN APPLICATION(S)</i></span>";
        return true;
    }

    return false;
}

function mcfCustomerDataReqMsgActns($routingID = -1, $inptSlctdRtngs = "", $actionToPrfrm = "Initiate", $srcDocID = -1, $srcDocType = "Banking Transactions") {
    global $app_url;
    global $admin_name;
    $userID = $_SESSION['USRID'];
    $user_Name = $_SESSION['UNAME'];
    $cur_prsnid = $_SESSION['PRSN_ID'];
    $rtngMsgID = -1;
    $affctd = 0;
    $affctd1 = 0;
    $affctd2 = 0;
    $affctd3 = 0;
    $affctd4 = 0;
    $affctd5 = false;
    $affctd5Msg = "";
    $curPrsnsLevel = -123456789;
    $msgTitle = "";
    $msgBdy = "";
    $nwPrsnLocID = isset($_POST['toPrsLocID']) ? cleanInputData($_POST['toPrsLocID']) : "";
    $apprvrCmmnts = isset($_POST['actReason']) ? cleanInputData($_POST['actReason']) : "";
    $fromPrsnID = getUserPrsnID($user_Name);
    $usrFullNm = getPrsnFullNm($fromPrsnID);
    $msg = "";
    $dsply = "";
    $msg_id = -1;
    $appID = -1;
    $attchmnts = "";
    $reqestDte = getFrmtdDB_Date_time();

    $srcdoctyp = $srcDocType;
    $srcdocid = $srcDocID;

    $reportTitle = "Send Outstanding Bulk Messages";
    $reportName = "Send Outstanding Bulk Messages";
    $rptID = getRptID($reportName);
    $prmID = getParamIDUseSQLRep("{:msg_batch_id}", $rptID);
    $msgBatchID = -1;

    //$dsply.= "routingID fxn".$routingID." ".$actionToPrfrm;
    //session_write_close();
    if ($routingID <= 0 && $inptSlctdRtngs == "") {
        if ($srcDocID > 0) {
            $rqstHdrStatus = getGnrlRecNm("mcf.mcf_customers", "cust_id", "status", $srcDocID);
            if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Approved' || ($rqstHdrStatus == 'Initiated' && $actionToPrfrm == "Initiate" && $routingID <= 0)) {
                return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
            }
        }
        if ($actionToPrfrm == "Initiate" && $srcDocID > 0) {
            $msg_id = getWkfMsgID();
            $appID = getAppID('Customer Data', 'Banking');
            //Requestor
            $prsnid = $fromPrsnID;
            $fullNm = $usrFullNm;
            $prsnLocID = getPersonLocID($prsnid);

            //Message Header & Details
            $msghdr = "$fullNm ($prsnLocID) Requests for approval of a Customer Data Change";
            $msgbody = "CUSTOMER DATA CHANGE REQUEST ON ($reqestDte):- "
                    . "A CUSTOMER DATA CHANGE Request has been submitted by $fullNm ($prsnLocID) "
                    . "<br/>Please open the attached Work Document and attend to this Request.
                      <br/>Thank you.";
            $msgtyp = "Work Document";
            $msgsts = "0";
            $hrchyid = 1; //Get hierarchy ID
            $rslt = getMCFCustomerDataAttchMnts($srcDocID);
            $attchmnts = ""; //Get Attachments
            $attchmnts_desc = ""; //Get Attachments
            while ($rw = loc_db_fetch_array($rslt)) {
                $attchmnts = $rw[1];
                $attchmnts_desc = $rw[0];
            }

            createWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
            //Get Hierarchy Members
            $athrzrLmtID = -1;
            $siteID = -1;
            $trnsTyp = "";
            $crncyID = "";
            $trnsAmnt = "";
            $rslt1 = executeSQLNoParams("SELECT distinct a.branch_id, c.mapped_lov_crncy_id, a.loan_amount FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans b, mcf.mcf_currencies c
                    WHERE a.loan_product_id = b.loan_product_id AND
                    b.currency_id = c.crncy_id AND a.loan_rqst_id = $srcdocid");
            while ($rw1 = loc_db_fetch_array($rslt1)) {
                $siteID = (int) $rw1[0];
                $trnsTyp = "Customer Data";
                $crncyID = (int) $rw1[1];
                $trnsAmnt = (float) $rw1[2];
            }
            $result = getNextMCFLoanAppsApprvrs($siteID, $trnsTyp, $crncyID, $trnsAmnt);
            $prsnsFnd = 0;
            $lastPrsnID = "|";
            $msgBatchID = getMsgBatchID();
            $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
            while ($row = loc_db_fetch_array($result)) {
                $athrzrLmtID = (float) $row[1];
                $toPrsnID = (float) $row[0];
                $prsnsFnd++;
                if ($toPrsnID > 0) {
                    routWkfMsg($msg_id, $prsnid, $toPrsnID, $userID, 'Initiated', 'Open;Reject;Request for Information;Approve');
                    $dsply = '<div style="text-align:center;font-weight:bold;font-size:14px;color:blue;">SUCCESS!</br>Your request has been submitted for Approval. Thank you!</div>';
                    $msg = $dsply;
                    //Begin Email Sending Process
                    /* $result1 = getEmlDetailsB4Actn($srcdoctyp, $srcdocid);
                      while ($row1 = loc_db_fetch_array($result1)) {
                      $frmID = $toPrsnID;
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row1[1];
                      $actSoFar = $row1[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row1[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                }
            }
            if ($prsnsFnd <= 0) {
                $dsply .= "|ERROR|-No Approval Hierarchy Found<br/>";
                $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
            } else {
                //Update Request Status to In Process
                updateMCFLoanAppStatus($srcdocid, "Initiated", -1);
                updateMCFLoanAppsAtzrLmtID($srcdocid, $athrzrLmtID);
            }
        } else {
            $dsply .= "|ERROR|-Update Failed! No Workflow Document(s) Generateddd<br/>";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    } else {
        $orgnlToPrsnID = -1;
        if ($routingID > 0) {
            $oldMsgbodyAddOn = "";
            $reslt1 = getWkfMsgRtngData($routingID);
            while ($row = loc_db_fetch_array($reslt1)) {
                $rtngMsgID = (float) $row[0];
                $msg_id = $rtngMsgID;
                $curPrsnsLevel = (float) $row[18];
                $isActionDone = $row[9];
                $oldMsgbodyAddOn = $row[17];
                $orgnlToPrsnID = (float) $row[2];
//$rtngMsgID = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "msg_id", $routingID);
//$curPrsnsLevel = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "to_prsns_hrchy_level", $routingID);
//$isActionDone = getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "is_action_done", $routingID);
            }
            $row = NULL;

            $reslt2 = getWkfMsgHdrData($rtngMsgID);
            while ($row = loc_db_fetch_array($reslt2)) {
                $msgTitle = $row[1]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_hdr", $rtngMsgID);
                $msgBdy = $row[2]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_body", $rtngMsgID);
                $srcDocID = (float) $row[10]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_id", $rtngMsgID);
                $srcDocType = $row[9]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_type", $rtngMsgID);
                $orgnlPrsnUsrID = (float) $row[3]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "created_by", $rtngMsgID);
                $hrchyid = (float) $row[5];
                $appID = (float) $row[7];
                $attchmnts = $row[13];
                $attchmnts_desc = $row[14]; //Get Attachments
            }
            if ($srcDocID > 0) {
                $rqstHdrStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcDocID);
                if (($rqstHdrStatus == 'Authorized' /* || $rqstHdrStatus == 'Approved' */) && $actionToPrfrm != "Open") {
                    return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
                }
            }
            $srcdoctyp = $srcDocType;
            $srcdocid = $srcDocID;
            $orgnlPrsnID = getUserPrsnID1($orgnlPrsnUsrID);
            if ($isActionDone == '0') {
                if ($actionToPrfrm == "Open") {
                    getMCFLoanAppsRdOnlyDsply($routingID, $inptSlctdRtngs, "Approve", $srcDocID, $srcDocType);
                } else if ($actionToPrfrm == "Reject") {
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Rejected", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "REJECTION ON $datestr:- This document has been Rejected by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                    //Message Header & Details
                    $msghdr = "REJECTED - " . $msgTitle;
                    $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Informational";
                    $msgsts = "0";
                    //$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, "Initiated", "Acknowledge;Open", 1, $msgbodyAddOn);
                    $affctd4 += updateMCFLoanAppStatus($srcdocid, "Rejected", -1);

                    //Begin Email Sending Process
                    /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                      $lastPrsnID = "|";
                      $msgBatchID = getMsgBatchID();
                      $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                      while ($row = loc_db_fetch_array($result)) {
                      $frmID = $row[0];
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row[1];
                      $actSoFar = $row[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Rejected!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Rejected";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Withdraw") {
                    if ($orgnlPrsnID == $cur_prsnid && $orgnlPrsnID > 0) {
                        $shdActnBeDone = true; //FALSE;
                        $srcDocIdStatus = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "status", $srcdocid);
                        if ($srcDocIdStatus == "Approved") {
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);
                            $apprvdLoanAmount = (float) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "approved_amount", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 1);
                            if ($affctd5Sucs) {
                                $shdActnBeDone = true;
                            } else {
                                $dsply .= $errMsgDsp;
                                $shdActnBeDone = false;
                            }
                        }
                        if ($shdActnBeDone) {
                            $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Withdrawn", "None", $userID);
                            if ($apprvrCmmnts == "") {
                                $apprvrCmmnts = "Withdrawal by Self";
                            }
                            $datestr = getFrmtdDB_Date_time();
                            $msgbodyAddOn = "";
                            $msgbodyAddOn .= "WITHDRAWAL ON $datestr:- This document has been Withdrawn by $usrFullNm with the ff Message:<br/>";
                            $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                            $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                            $msgbodyAddOn .= $oldMsgbodyAddOn;

                            updateWkfMsgStatus($rtngMsgID, "1", $userID);
                            updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                            //Message Header & Details
                            $msghdr = "WITHDRAWAL - " . $msgTitle;
                            $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                            $msgtyp = "Informational";
                            $msgsts = "0";
                            //$msg_id = getWkfMsgID();

                            $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                            $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $srcDocIdStatus, "Acknowledge;Open", 1, $msgbodyAddOn);
                            $affctd4 += updateMCFLoanAppStatus($srcdocid, "Withdrawn", -1);

                            if ($affctd4 > 0 && $srcDocIdStatus == "Approved") {
                                //RESET APPROVAL DATA TO NULL;
                                $affctd5 = createLoanRqstApprvlRvsl($srcdocid, $affctd5Msg);
                            } else if ($srcDocIdStatus == "Initiated") {
                                $affctd5 = true;
                            }




                            //Begin Email Sending Process
                            /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                              $lastPrsnID = "|";
                              $msgBatchID = getMsgBatchID();
                              $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                              while ($row = loc_db_fetch_array($result)) {
                              $frmID = $row[0];
                              if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                              $lastPrsnID .= $frmID . "|";
                              continue;
                              }
                              $lastPrsnID .= $frmID . "|";
                              $subject = $row[1];
                              $actSoFar = $row[3];
                              if ($actSoFar == "") {
                              $actSoFar = "&nbsp;&nbsp;NONE";
                              }
                              $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                              $docType = $srcDocType;
                              $to = getPrsnEmail($frmID);
                              $nameto = getPrsnFullNm($frmID);
                              if ($docType != "" && $docType != "Login") {
                              $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                              . "<br/><br/>"
                              . $msgPart .
                              "<br/><br/>Kindly <a href=\""
                              . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                              $errMsg = "";
                              createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                              }
                              } */
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Withdrawn!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                        if (!$affctd5) {
                            $msg .= "</br><p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">|ERROR| $affctd5Msg</span></p>";
                        }
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Withdrawn";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Request for Information") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Information Requested", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "INFORMATION REQUESTED ON $datestr:- A requested for Information has been generated by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", "Respond;Open", $curPrsnsLevel, $msgbodyAddOn);
                    //$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Information Requested!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Respond") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Response Given", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "RESPONSE TO INFORMATION REQUESTED ON $datestr:- A response to an Information Request has been given by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "RESPONSE TO INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", 'Open;Reject;Request for Information;Approve', $curPrsnsLevel, $msgbodyAddOn);
//$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Response Given!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Acknowledge") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Acknowledged", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "MESSAGE ACKNOWLEDGED ON $datestr:- An acknowledgement of the message has been given by $usrFullNm <br/><br/>";
//$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Acknowledged!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        //$dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
                        //$dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                } else if ($actionToPrfrm == "Approve") {
                    $affctd = 0;
                    if ($orgnlToPrsnID == $cur_prsnid && $orgnlToPrsnID > 0) {
                        $newStatus = "Approved";
                        $newVldtyStatus = "Validated";
                        $nxtStatus = "Open;Reject;Request for Information;Approve";
                        $nxtApprvr = "Next Approver";
                        $nxtPrsnID = -1;
                        $shdActnBeDone = true; //FALSE;
//                        if ($nxtPrsnID <= 0) {
//                           $dsply .= "Start Banking Trans. Item Balance Update and Accounting Entries Generation<br/>";
//                            $shdActnBeDone = isMCFTrnsQtyVld_LoanRpmnt($srcDocID) && isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($srcDocID);
//                            if ($shdActnBeDone === true) {
//                                $dsply = "Item Balance && Customer Balance Verified<br/>";
//                                $newStatus = "Approved";
//                                $nxtStatus = "Open;Acknowledge";
//                                $newVldtyStatus = "Validated";
//                            } else {
//                                $dsply .= "<i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account!";
//                                $newVldtyStatus = "Not Validated";
//                            }
//                        }
                        if ($shdActnBeDone === true) {
                            //DO COLLATERAL VALIDATIONS
                            $cashCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $srcdocid);
                            $invstmntCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "invstmnt_collateral_id", $srcdocid);
                            $propertyCollateralID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "property_collateral_id", $srcdocid);

                            $errMsgDsp = "";
                            $affctd5Sucs = updateMCFCstmrAcntBals_Collaterals($cashCollateralID, $invstmntCollateralID, $propertyCollateralID, $apprvdLoanAmount, $srcdocid, "Loan", $errMsgDsp, $srcdocid, 0);
                            if ($affctd5Sucs) {

                                $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, $newStatus, $nxtStatus, $userID);
                                //$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                                $datestr = getFrmtdDB_Date_time();
                                $msgbodyAddOn = "";
                                $msgbodyAddOn .= strtoupper($newStatus) . " ON $datestr:- This document has been $newStatus by $usrFullNm <br/><br/>";
                                //$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                                $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                                $msgbodyAddOn .= $oldMsgbodyAddOn;
                                updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                                //Message Header & Details
                                if ($nxtPrsnID <= 0) {
                                    $nxtApprvr = "Original Person";
                                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                                    $msghdr = "APPROVED - " . $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Informational";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                } else {
                                    $msghdr = $msgTitle;
                                    $msgbody = $msgBdy;
                                    $msgtyp = "Work Document";
                                    $msgsts = "0";
                                    //$msg_id = getWkfMsgID();
                                    $curPrsnsLevel += 1;
                                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nxtPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                                }

                                $affctd4 += updateMCFLoanAppStatus($srcdocid, $newStatus, $cur_prsnid, $apprvdLoanAmount, $apprvdLoanTenor, $apprvdLoanTenorType, $apprvdInterestRate, $apprvlCmnts);




                                /* if ($nxtPrsnID <= 0) {
                                  //Begin Email Sending Process
                                  $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                                  $lastPrsnID = "|";
                                  $msgBatchID = getMsgBatchID();
                                  $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                                  while ($row = loc_db_fetch_array($result)) {
                                  $frmID = $orgnlPrsnID;
                                  if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                                  $lastPrsnID .= $frmID . "|";
                                  continue;
                                  }
                                  $lastPrsnID .= $frmID . "|";
                                  $subject = $row[1];
                                  $actSoFar = $row[3];
                                  if ($actSoFar == "") {
                                  $actSoFar = "&nbsp;&nbsp;NONE";
                                  }
                                  $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                                  $docType = $srcDocType;
                                  $to = getPrsnEmail($frmID);
                                  $nameto = getPrsnFullNm($frmID);
                                  if ($docType != "" && $docType != "Login") {
                                  $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                                  . "<br/><br/>"
                                  . $msgPart .
                                  "<br/><br/>Kindly <a href=\""
                                  . $app_url . "\">Login via this Link</a> to <strong>VIEW</strong> it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                                  $errMsg = "";
                                  createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "",
                                  "Email");
                                  //sendEMail(trim(str_replace(";", ",", $to), ","), $nameto, $subject, $message, $errMsg, "", "", "", $admin_name);
                                  }
                                  break;
                                  }
                                  } */
                            } else {
                                $dsply .= $errMsgDsp;
                            }
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to $newStatus!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to $nxtApprvr!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
            }
        } else {
            $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Selected";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    }
    if ($msgBatchID > 0) {
        generateReportRun($rptID, $paramRepsNVals, -1);
    }
    return $msg;
}

function getMCFCustomerDataAttchMnts($custID) {
    $attchmntSrc = "";
    $result1 = executeSQLNoParams("SELECT cust_type FROM mcf.mcf_customers WHERE cust_id = $custID");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ($row1[0] == "Individual") {
            $attchmntSrc = "Individual Customers";
        } else if ($row1[0] == "Corporate") {
            $attchmntSrc = "Corporate Customers";
        } else if ($row1[0] == "Group") {
            $attchmntSrc = "Customer Groups";
        }
    }

    global $ftp_base_db_fldr;
    $sqlStr = "SELECT string_agg(REPLACE(a.attchmnt_desc,';',','),';') attchmnt_desc,
string_agg(REPLACE('" . $ftp_base_db_fldr . "/Vms/' || a.file_name,';',','),';') file_name
  FROM mcf.mcf_doc_attchmnts a
  WHERE attchmnt_src IN ('$attchmntSrc') and src_id=" . $custID;
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function didAuthorizerSubmit($custID, $authrzrUsrID) {

    $initUsrID = -1;
    $strSql2 = "SELECT last_update_by FROM mcf.mcf_customers WHERE cust_id = $custID";
    $result2 = executeSQLNoParams($strSql2);
    while ($row2 = loc_db_fetch_array($result2)) {
        $initUsrID = (int) $row2[0];
    }

    if ((int) $initUsrID == (int) $authrzrUsrID) {
        return true;
    }

    return false;
}

function getCustStatus($custID, $rvsnTtlAPD) {
    $cnt = getCustDataChngPndngCount($custID);

    $tblNm = "mcf.mcf_customers";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_customers_hstrc";
    }

    $result1 = executeSQLNoParams("SELECT status FROM $tblNm WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtlAPD");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return "INVALID";
}

function getPrsnStatus($personID, $rvsnTtlAPD) {
    $cnt = getOtherPrsnDataChngPndngCount($personID);

    $tblNm = "mcf.mcf_prsn_names_nos";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_prsn_names_nos_hstrc";
    }

    $result1 = executeSQLNoParams("SELECT status FROM $tblNm WHERE person_id = $personID AND rvsn_ttl = $rvsnTtlAPD");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return "INVALID";
}

function getCustDataChngPndngCount($custID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_customers WHERE cust_id = $custID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function isRiskFactorInActiveUse($riskFactorId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_credit_risk_profile_factors WHERE risk_factor_id = $riskFactorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function doesRiskFactorCodeExistsSave($riskFactorCode) {
    $result1 = executeSQLNoParams("SELECT risk_factor_id FROM mcf.mcf_credit_risk_factors "
            . "WHERE upper(risk_factor_code) = '" . strtoupper(loc_db_escape_string($riskFactorCode)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesRiskFactorCodeExistsUpdate($riskFactorId, $riskFactorCode) {
    $result1 = executeSQLNoParams("SELECT risk_factor_id FROM mcf.mcf_credit_risk_factors "
            . "WHERE upper(risk_factor_code) = '" . strtoupper(loc_db_escape_string($riskFactorCode)) . "' AND risk_factor_id != $riskFactorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function isRiskProfileInActiveUse($riskProfileId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_credit_risk_profile_factors WHERE risk_profile_id = $riskProfileId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function doesRiskProfileNameExistsSave($profileName) {
    $result1 = executeSQLNoParams("SELECT risk_profile_id FROM mcf.mcf_credit_risk_profiles "
            . "WHERE upper(profile_name) = '" . strtoupper(loc_db_escape_string($profileName)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesRiskProfileNameExistsUpdate($riskProfileId, $profileName) {
    $result1 = executeSQLNoParams("SELECT risk_profile_id FROM mcf.mcf_credit_risk_profiles "
            . "WHERE upper(profile_name) = '" . strtoupper(loc_db_escape_string($profileName)) . "' AND risk_profile_id != $riskProfileId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function get_AllRiskProfileFctrs($searchFor, $searchIn, $offset, $limit_size, $riskProfileID) {
    $wherecls = "(b.risk_factor_code ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT profile_factor_id, risk_profile_id, b.risk_factor_id, risk_factor_code, score, sort_order,
       a.created_by, a.creation_date, a.last_update_by, a.last_update_date
  FROM mcf.mcf_credit_risk_profile_factors a, mcf.mcf_credit_risk_factors b WHERE a.risk_factor_id = b.risk_factor_id  AND " . $wherecls .
            "(a.risk_profile_id = " . $riskProfileID . ") "
            . "ORDER BY a.sort_order ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllRiskProfileFctrsTtl($searchFor, $searchIn, $riskProfileID) {
    $wherecls = "(b.risk_factor_code ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT count(1) FROM mcf.mcf_credit_risk_profile_factors a, mcf.mcf_credit_risk_factors b WHERE a.risk_factor_id = b.risk_factor_id  AND " . $wherecls .
            "(a.risk_profile_id = " . $riskProfileID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function isRiskProfileFactorInActiveUse($riskProfileFactorId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_assessments WHERE profile_factor_id = $riskProfileFactorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function getRiskProfileIDfromProfileFctr($riskProfileFactorId) {
    $result1 = executeSQLNoParams("SELECT distinct risk_profile_id FROM mcf.mcf_credit_risk_profile_factors WHERE profile_factor_id = $riskProfileFactorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return -1;
}

//RISK PROFILE FACTOR OPTIONS
function get_AllRiskProfileFctrOptns($searchFor, $searchIn, $offset, $limit_size, $riskProfileFctrID) {
    $wherecls = "(a.option_desc ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT profactor_option_id, profile_factor_id, option_desc, score, sort_order,
       created_by, creation_date, last_update_by, last_update_date
  FROM mcf.mcf_credit_risk_profile_factor_options a  WHERE 1 = 1 AND " . $wherecls .
            "(a.profile_factor_id = " . $riskProfileFctrID . ") "
            . "ORDER BY a.sort_order ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllRiskProfileFctrOptnsTtl($searchFor, $searchIn, $riskProfileFctrID) {
    $wherecls = "(a.option_desc ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT count(1) FROM mcf.mcf_credit_risk_profile_factor_options a  WHERE 1 = 1 AND " . $wherecls .
            "(a.profile_factor_id = " . $riskProfileFctrID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function isRiskProfileFactorOptnInActiveUse($riskProfileFactorOptnId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_assessments WHERE profactor_option_id =  $riskProfileFactorOptnId)");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function getRiskProfileFctrOptnsMaxScore($riskProfileFactorId) {
    $result1 = executeSQLNoParams("SELECT coalesce(max(coalesce(score,0)),0) FROM mcf.mcf_credit_risk_profile_factor_options WHERE profile_factor_id = $riskProfileFactorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return -1;
}

//ASSESSMENT SET
function isAssessmentSetInActiveUse($assessmentSetId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_credit_scoring_set_det WHERE scoring_set_hdr_id = $assessmentSetId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function doesAssessmentSetNameExistsSave($assessmentSetName) {
    $result1 = executeSQLNoParams("SELECT scoring_set_hdr_id FROM mcf.mcf_credit_scoring_set_hdr "
            . "WHERE upper(set_name) = '" . strtoupper(loc_db_escape_string($assessmentSetName)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesAssessmentSetNameExistsUpdate($assessmentSetId, $assessmentSetName) {
    $result1 = executeSQLNoParams("SELECT scoring_set_hdr_id FROM mcf.mcf_credit_scoring_set_hdr "
            . "WHERE upper(set_name) = '" . strtoupper(loc_db_escape_string($assessmentSetName)) . "' AND scoring_set_hdr_id != $assessmentSetId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

//ASSESMENT PROFILES
function get_AllAssessmentSetPrfls($searchFor, $searchIn, $offset, $limit_size, $assessmentSetID) {
    $wherecls = "(b.profile_name ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT scoring_set_det_id, scoring_set_hdr_id, b.risk_profile_id, profile_name, b.ttl_score, sort_order,
       a.created_by, a.creation_date, a.last_update_by, a.last_update_date
  FROM mcf.mcf_credit_scoring_set_det a, mcf.mcf_credit_risk_profiles b WHERE a.risk_profile_id = b.risk_profile_id  AND " . $wherecls .
            "(a.scoring_set_hdr_id = " . $assessmentSetID . ") "
            . "ORDER BY a.sort_order ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllAssessmentSetPrflsTtl($searchFor, $searchIn, $assessmentSetID) {
    $wherecls = "(b.profile_name ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT count(1) FROM mcf.mcf_credit_scoring_set_det a, mcf.mcf_credit_risk_profiles b WHERE a.risk_profile_id = b.risk_profile_id  AND " . $wherecls .
            "(a.scoring_set_hdr_id = " . $assessmentSetID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function isAssessmentSetPrflInActiveUse($assessmentSetPrflId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_assessments WHERE scoring_set_hdr_id ="
            . " (SELECT scoring_set_hdr_id FROM mcf.mcf_credit_scoring_set_det WHERE scoring_set_det_id = $assessmentSetPrflId)");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function getAssessmentSetIDfromAssessmentSetPrfl($assessmentSetPrflId) {
    $result1 = executeSQLNoParams("SELECT distinct scoring_set_hdr_id FROM mcf.mcf_credit_scoring_set_det WHERE scoring_set_det_id = $assessmentSetPrflId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return -1;
}

//PROCESSING FEES
function doesPrcsnFeeExistsSave($feeName, $feeType, $loanProductId) {
    $result1 = executeSQLNoParams("SELECT loanprdt_prcssn_fee_id FROM mcf.mcf_loanprdt_prcssnfees_n_accts "
            . "WHERE upper(fee_name) = '" . strtoupper(loc_db_escape_string($feeName)) . "'"
            . " AND upper(fee_type) = '" . strtoupper(loc_db_escape_string($feeType)) . "' AND loan_product_id = $loanProductId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesPrcsnFeeExistsUpdate($feeName, $feeType, $loanProductId, $loanprdtPrcssnFeeId) {
    $result1 = executeSQLNoParams("SELECT loanprdt_prcssn_fee_id FROM mcf.mcf_loanprdt_prcssnfees_n_accts "
            . "WHERE upper(fee_name) = '" . strtoupper(loc_db_escape_string($feeName)) . "'"
            . " AND upper(fee_type) = '" . strtoupper(loc_db_escape_string($feeType)) . "' "
            . "AND loan_product_id = $loanProductId AND loanprdt_prcssn_fee_id != $loanprdtPrcssnFeeId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function get_AllLoanPrdtPrcsnFee($searchFor, $searchIn, $offset, $limit_size, $loanProductId) {
    $wherecls = "(b.fee_name ilike '" .
            loc_db_escape_string($searchFor) . "') ";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.loanprdt_prcssn_fee_id > 0) ELSE (1=1) END)";

    $cnt = getCrdtPrdtDataChngPndngCount($loanProductId);
    $tblNm2 = "mcf.mcf_prdt_loans";
    $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc";
        $tblNm2 = "mcf.mcf_prdt_loans_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId)";
    if ($tblNm2 == "mcf.mcf_prdt_loans_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT loanprdt_prcssn_fee_id, a.loan_product_id, fee_name, fee_type,
       fee_flat, fee_percent, crdt_accnt_id, remarks, is_approved
          FROM $tblNm2 a, $tblNm b WHERE $wherecls AND a.loan_product_id = b.loan_product_id AND (b.loan_product_id = $loanProductId) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 "
            . "ORDER BY b.fee_name ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);


//    $strSql = "SELECT loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
//       fee_flat, fee_percent, crdt_accnt_id, remarks
//  FROM mcf.mcf_loanprdt_prcssnfees_n_accts a WHERE " . $wherecls .
//            "(a.loan_product_id = " . $loanProductId . ") "
//            . "ORDER BY a.fee_name ASC LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);
//    //echo $strSql;
//    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllLoanPrdtPrcsnFeeTtl($searchFor, $searchIn, $loanProductId) {
    $wherecls = "(b.fee_name ilike '" .
            loc_db_escape_string($searchFor) . "') ";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.loanprdt_prcssn_fee_id > 0) ELSE (1=1) END)";

    $cnt = getCrdtPrdtDataChngPndngCount($loanProductId);
    $tblNm2 = "mcf.mcf_prdt_loans";
    $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_loanprdt_prcssnfees_n_accts_hstrc";
        $tblNm2 = "mcf.mcf_prdt_loans_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId)";
    if ($tblNm2 == "mcf.mcf_prdt_loans_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT count(1)
          FROM $tblNm2 a, $tblNm b WHERE $wherecls AND a.loan_product_id = b.loan_product_id AND (b.loan_product_id = $loanProductId) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";

//    $strSql = "SELECT count(1) FROM mcf.mcf_loanprdt_prcssnfees_n_accts a  WHERE " . $wherecls .
//            "(a.loan_product_id = " . $loanProductId . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

//DELTE
function isLoanPrdtPrcsnFeeInActiveUse($loanprdtPrcssnFeeId) {
//    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_request WHERE loan_product_id = "
//            . "(SELECT loan_product_id FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_prcssn_fee_id = $loanprdtPrcssnFeeId)");
//    while($row1 = loc_db_fetch_array($result1)){
//        if((int)$row1[0] > 0){
//          return true;
//        } else {
//            return false;
//        }
//    }
    return false;
}

function getLoanPrdtIDfromPrcsnFee($loanprdtPrcssnFeeId) {
    $result1 = executeSQLNoParams("SELECT loan_product_id FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_prcssn_fee_id = $loanprdtPrcssnFeeId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return -1;
}

function get_NextAssessmentProfileFactorID($lnprflFctrId, $loanRqstId, $optn) {
    $minOrMax = "min";
    $grtrOrLs = ">";
    if ($optn == "PREVIOUS") {
        $minOrMax = "max";
        $grtrOrLs = "<";
    }

    $strSql = "SELECT $minOrMax(profile_factor_id)
            FROM mcf.mcf_loan_assessments WHERE loan_rqst_id = $loanRqstId AND profile_factor_id $grtrOrLs $lnprflFctrId";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

//LATE PAYMENT FEES
function doesLatePymntFeeExistsSave($feeName, $target, $loanProductId) {
    $result1 = executeSQLNoParams("SELECT loanprdt_late_fee_id FROM mcf.mcf_loanprdt_latefees_n_accts "
            . "WHERE upper(fee_name) = '" . strtoupper(loc_db_escape_string($feeName)) . "'"
            . " AND upper(target) = '" . strtoupper(loc_db_escape_string($target)) . "' AND loan_product_id = $loanProductId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesLatePymntFeeExistsUpdate($feeName, $target, $loanProductId, $loanprdtLatePymntFeeId) {
    $result1 = executeSQLNoParams("SELECT loanprdt_late_fee_id FROM mcf.mcf_loanprdt_latefees_n_accts "
            . "WHERE upper(fee_name) = '" . strtoupper(loc_db_escape_string($feeName)) . "'"
            . " AND upper(target) = '" . strtoupper(loc_db_escape_string($target)) . "' "
            . "AND loan_product_id = $loanProductId AND loanprdt_late_fee_id != $loanprdtLatePymntFeeId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function get_AllLoanPrdtLatePymntFee($searchFor, $searchIn, $offset, $limit_size, $loanProductId) {
    $wherecls = "(b.fee_name ilike '" .
            loc_db_escape_string($searchFor) . "') ";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.loanprdt_late_fee_id > 0) ELSE (1=1) END)";

    $cnt = getCrdtPrdtDataChngPndngCount($loanProductId);
    $tblNm2 = "mcf.mcf_prdt_loans";
    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
        $tblNm2 = "mcf.mcf_prdt_loans_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId)";
    if ($tblNm2 == "mcf.mcf_prdt_loans_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT loanprdt_late_fee_id, b.loan_product_id, fee_name, target,
          fee_flat, fee_percent, dbt_accnt_id, crdt_accnt_id, frequency, frequency_no, is_approved
          FROM $tblNm2 a, $tblNm b WHERE $wherecls AND a.loan_product_id = b.loan_product_id AND (b.loan_product_id = $loanProductId) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1 "
            . "ORDER BY b.fee_name ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);

//    $strSql = "SELECT loanprdt_late_fee_id, loan_product_id, fee_name, target,
//       fee_flat, fee_percent, dbt_accnt_id, crdt_accnt_id, frequency, frequency_no
//  FROM mcf.mcf_loanprdt_latefees_n_accts a WHERE " . $wherecls .
//            "(a.loan_product_id = " . $loanProductId . ") "
//            . "ORDER BY a.fee_name ASC LIMIT " . $limit_size .
//            " OFFSET " . abs($offset * $limit_size);
//    //echo $strSql;
//    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllLoanPrdtLatePymntFeeTtl($searchFor, $searchIn, $loanProductId) {
    $wherecls = "(b.fee_name ilike '" .
            loc_db_escape_string($searchFor) . "') ";

    $andClause1 = " AND (CASE WHEN a.status IN ('Incomplete','Rejected','Withdrawn') THEN (b.loanprdt_late_fee_id > 0) ELSE (1=1) END)";

    $cnt = getCrdtPrdtDataChngPndngCount($loanProductId);
    $tblNm2 = "mcf.mcf_prdt_loans";
    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
        $tblNm2 = "mcf.mcf_prdt_loans_hstrc";
    }

    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId)";
    if ($tblNm2 == "mcf.mcf_prdt_loans_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_prdt_loans where loan_product_id = $loanProductId AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT count(1)
          FROM $tblNm2 a, $tblNm b WHERE $wherecls AND a.loan_product_id = b.loan_product_id AND (b.loan_product_id = $loanProductId) AND a.rvsn_ttl = b.rvsn_ttl $andClause $andClause1";


//    $strSql = "SELECT count(1) FROM mcf.mcf_loanprdt_latefees_n_accts a WHERE " . $wherecls .
//            "(a.loan_product_id = " . $loanProductId . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

//DELTE
function isLoanPrdtLatePymntFeeInActiveUse($loanprdtLatePymntFeeId) {
//    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_request WHERE loan_product_id = "
//            . "(SELECT loan_product_id FROM mcf.mcf_loanprdt_latefees_n_accts WHERE loanprdt_late_fee_id = $loanprdtLatePymntFeeId)");
//    while($row1 = loc_db_fetch_array($result1)){
//        if((int)$row1[0] > 0){
//          return true;
//        } else {
//            return false;
//        }
//    }
    return false;
}

function getLoanPrdtIDfromLatePymntFee($loanprdtLatePymntFeeId) {
    $result1 = executeSQLNoParams("SELECT loan_product_id FROM mcf.mcf_loanprdt_prcssnfees_n_accts WHERE loanprdt_late_fee_id = $loanprdtLatePymntFeeId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return -1;
}

function getLoanPrdtLatePymntFeeExtraData($loanprdtLatePymntFeeId) {
    $strSql = "SELECT loanprdt_late_fee_id, loan_product_id, fee_name, frequency, frequency_no, remarks
    FROM mcf.mcf_loanprdt_latefees_n_accts a WHERE loanprdt_late_fee_id = $loanprdtLatePymntFeeId";
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function updateLoanPrdt_LateFeeFrqncyNRmrks($loanprdtLateFeeId, $frequency, $frequencyNo, $remarks, $dateStr, $rvsnTtl) {
    global $usrID;
    //global $dateStr;
    global $orgID;
    $tblNm = "mcf.mcf_loanprdt_latefees_n_accts";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_loanprdt_latefees_n_accts_hstrc";
    }

    $insSQL = "UPDATE $tblNm SET
            frequency='" . loc_db_escape_string($frequency) . "', frequency_no=$frequencyNo,
            remarks='" . loc_db_escape_string($remarks) . "', last_update_by=$usrID, last_update_date= '" . $dateStr . "'
            WHERE loanprdt_late_fee_id = $loanprdtLateFeeId AND rvsn_ttl = $rvsnTtl";

    return execUpdtInsSQL($insSQL);
}

function isLoanPrdtInActiveUse($loanPrdtId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_request WHERE loan_product_id = $loanPrdtId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function didAuthorizerSubmitCrdtPrdt($pkID, $authrzrUsrID) {

    $initUsrID = -1;
    $strSql2 = "SELECT last_update_by FROM mcf.mcf_prdt_loans WHERE loan_product_id = $pkID";
    $result2 = executeSQLNoParams($strSql2);
    while ($row2 = loc_db_fetch_array($result2)) {
        $initUsrID = (int) $row2[0];
    }

    if ((int) $initUsrID == (int) $authrzrUsrID) {
        return true;
    }

    return false;
}

function getCustomerName($custType, $custID) {
    $result = executeSQLNoParams("SELECT mcf.get_customer_name('$custType',$custID)");
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function get_InvstmntPrdtDetsForApplctn($pkID) {
    $strSql = "SELECT svngs_product_id, currency_id, interest_rate, product_type, /**3**/
        invstmnt_duration_no, invstmnt_duration_type,  invstmnt_type, /**6**/
        discount_rate, invstmnt_max_amount, invstmnt_min_amount /**9**/
  FROM mcf.mcf_prdt_savings a WHERE svngs_product_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getCustInvstmntAccountNo($custType, $custId, $prdtId, $bnkBranchID) {
    $sqlStr = "SELECT distinct account_id, account_number FROM mcf.mcf_accounts y WHERE account_type = 'Investment' "
            . " AND product_type_id = $prdtId AND branch_id = $bnkBranchID AND cust_id = $custId "
            . " AND cust_type = '$custType' LIMIT 1";
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function updateInvstmntRequestAccount($invstmntID, $invstmntAcctID) {
    $insSQL = "UPDATE mcf.mcf_investments SET " .
            "account_id = " . $invstmntAcctID .
            " WHERE invstmnt_id = " . $invstmntID;
//var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function getInvstmntCustAcctID($dateStr, $orgID, $usrID, $custId, $prdtId) {

    $sqlStr = "SELECT account_id FROM mcf.mcf_accounts WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND org_id = " . $orgID . " AND cust_id = " . $custId . " AND product_type_id = " . $prdtId;

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }

    return -1;
}

function createBranchPymntAccts($account_id, $branch_id, $is_enabled, $prdt_type, $currency_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_branch_payment_acct(
            account_id, branch_id, is_enabled, status,
            created_by, creation_date, last_update_by, last_update_date,
            prdt_type, currency_id)
    VALUES ($account_id, $branch_id,'$is_enabled','Incomplete',$usrID,'$dateStr',$usrID,'$dateStr','$prdt_type',$currency_id)";

    return execUpdtInsSQL($insSQL);
}

function updateBranchPymntAccts($brnch_acct_row_id, $account_id, $branch_id, $is_enabled, $prdt_type, $currency_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_branch_payment_acct SET
            account_id =$account_id, branch_id =$branch_id, is_enabled ='$is_enabled', prdt_type ='$prdt_type',
            currency_id = $currency_id,  last_update_by =$usrID,
             last_update_date = '$dateStr' WHERE brnch_acct_row_id = $brnch_acct_row_id";

    return execUpdtInsSQL($insSQL);
}

function deleteBranchPymntAccts($brnch_acct_row_id) {
    //CASCADE DELETION
    $delSQL1 = "DELETE FROM mcf.mcf_branch_payment_acct WHERE brnch_acct_row_id = $brnch_acct_row_id";
    return execUpdtInsSQL($delSQL1);
}

function branchPymntAcctRcdExistsUpdt($account_id, $branch_id, $currency_id, $brnch_acct_row_id) {

    $sqlStr = "SELECT brnch_acct_row_id FROM mcf.mcf_branch_payment_acct WHERE 1=1 AND account_id =$account_id "
            . "AND branch_id = $branch_id AND currency_id = $currency_id AND brnch_acct_row_id != $brnch_acct_row_id";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    return false;
}

function branchPymntAcctRcdExistsCrt($account_id, $branch_id, $currency_id) {

    $sqlStr = "SELECT brnch_acct_row_id FROM mcf.mcf_branch_payment_acct WHERE 1=1 AND account_id =$account_id "
            . "AND branch_id = $branch_id AND currency_id = $currency_id";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    return false;
}

function getBranchPymntAcctsTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Branch") {
        $whrcls = " AND (w.site_desc ||' ('||location_code_name||')' ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account") {
        $whrcls = " AND (y.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(x.is_enabled) = 'YES'";
    }

    $ordrBy = "x.last_update_date DESC";

    $strSql = "SELECT brnch_acct_row_id, x.branch_id, w.site_desc ||' ('||location_code_name||')' branch, x.currency_id, z.iso_code,
         x.account_id, y.account_number||' ['||y.account_title||']', prdt_type, x.is_enabled, x.status
  FROM mcf.mcf_branch_payment_acct x, mcf.mcf_accounts y, org.org_sites_locations w, mcf.mcf_currencies z
  WHERE x.account_id = y.account_id AND y.currency_id = z.crncy_id AND w.location_id = x.branch_id AND (1 = 1 AND (y.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getBranchPymntAcctsTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Branch") {
        $whrcls = " AND (w.site_desc ||' ('||location_code_name||')' ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Account") {
        $whrcls = " AND (y.account_title ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(x.is_enabled) = 'YES'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_branch_payment_acct x, mcf.mcf_accounts y, org.org_sites_locations w, mcf.mcf_currencies z
  WHERE x.account_id = y.account_id AND y.currency_id = z.crncy_id AND w.location_id = x.branch_id AND (1 = 1 AND (y.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function getBranchPymntAcctForDsbmnt($branch_id, $currency_id, $prdtType) {

    $sqlStr = "SELECT distinct account_id FROM mcf.mcf_branch_payment_acct WHERE 1=1 "
            . "AND branch_id = $branch_id AND currency_id = $currency_id AND prdt_type = '$prdtType'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createPrsnBasicDtaImprt($orgid, $custID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $segment1) {
    global $usrID;
    $dobYMD = cnvrtDMYToYMD($dob);
    //$dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_customers_ind(" .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "cust_id, local_id_no, title, first_name, sur_name, other_names, gender, org_id, " .
            "marital_status, date_of_birth, place_of_birth, religion, " .
            "res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl, " .
            "cntct_no_fax, hometown, nationality, lnkd_firm_org_id, lnkd_firm_site_id, " .
            "new_company, new_company_loc, segment1_dataload)" .
            "VALUES (" . $usrID . ", '" . $dateStr . "', " .
            $usrID . ", '" . $dateStr . "', " . $custID .
            ",'" . loc_db_escape_string($idNo) . "', '" . loc_db_escape_string($title) .
            "', '" . loc_db_escape_string($firstName) . "', '" . loc_db_escape_string($surName) .
            "', '" . loc_db_escape_string($otherNames) . "', '" . loc_db_escape_string($gender) . "', " . $orgid . "," .
            "'" . loc_db_escape_string($maritalStatus) . "', '" . $dobYMD .
            "', '" . loc_db_escape_string($pob) . "', '" . loc_db_escape_string($religion) .
            "', '" . loc_db_escape_string($residentialAddress) . "', " .
            "'" . loc_db_escape_string($postalAddress) . "', '" . loc_db_escape_string($email) .
            "', '" . loc_db_escape_string($telNo) . "', '" . loc_db_escape_string($mobileNo) .
            "', '" . loc_db_escape_string($faxNo) . "', '" . loc_db_escape_string($homeTown) .
            "', '" . loc_db_escape_string($nationality) .
            "', " . $lnkdFirmID . ", " . $lnkdFirmLocID .
            ", '" . loc_db_escape_string($lnkdFirmName) . "', '" . loc_db_escape_string($lnkdFirmLoc) .
            "', '" . loc_db_escape_string($segment1) .
            "')";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}

function updatePrsnBasicDtaImprt($orgid, $profileID, $idNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $rvsnTtl, $segment1) {
    global $usrID;
    $dateStr = getDB_Date_time();
    //$dobYMD = cnvrtDMYToYMD($dob);
    $tblNm = "mcf.mcf_customers_ind";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_customers_ind_hstrc";
    }

    $updtSQL = "UPDATE $tblNm " .
            "SET last_update_by=" . $usrID . ", " .
            "last_update_date='" . $dateStr .
            "', local_id_no='" . loc_db_escape_string($idNo) .
            "', title='" . loc_db_escape_string($title) .
            "', first_name='" . loc_db_escape_string($firstName) .
            "', sur_name='" . loc_db_escape_string($surName) .
            "', other_names='" . loc_db_escape_string($otherNames) .
            "', gender='" . loc_db_escape_string($gender) .
            "', org_id=" . $orgid .
            ", marital_status='" . loc_db_escape_string($maritalStatus) .
            "', date_of_birth='" . cnvrtDMYToYMD($dob) .
            "', place_of_birth='" . loc_db_escape_string($pob) .
            "', religion='" . loc_db_escape_string($religion) .
            "', res_address='" . loc_db_escape_string($residentialAddress) .
            "', pstl_addrs='" . loc_db_escape_string($postalAddress) .
            "', email='" . loc_db_escape_string($email) .
            "', cntct_no_tel='" . loc_db_escape_string($telNo) .
            "', cntct_no_mobl='" . loc_db_escape_string($mobileNo) .
            "', cntct_no_fax='" . loc_db_escape_string($faxNo) .
            "', hometown='" . loc_db_escape_string($homeTown) .
            "', nationality='" . loc_db_escape_string($nationality) .
            "', lnkd_firm_org_id=" . $lnkdFirmID .
            ", lnkd_firm_site_id=" . $lnkdFirmLocID .
            ", new_company='" . loc_db_escape_string($lnkdFirmName) .
            "', new_company_loc='" . loc_db_escape_string($lnkdFirmLoc) .
            "', segment1_dataload='" . loc_db_escape_string($segment1) .
            "' WHERE ind_profile_id=" . $profileID;
    execUpdtInsSQL($updtSQL);
}

function getCustPrflIdDtaImprt($idNo, $orgID) {

    $sqlStr = "SELECT distinct ind_profile_id FROM mcf.mcf_customers_ind WHERE 1=1 " .
            " AND local_id_no = '" . loc_db_escape_string($idNo) . "' AND org_id = " . $orgID;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCustIdDtaImprt($idNo, $orgID) {

    $sqlStr = "SELECT distinct cust_id FROM mcf.mcf_customers_ind WHERE 1=1 " .
            " AND local_id_no = '" . loc_db_escape_string($idNo) . "' AND org_id = " . $orgID;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createCorpCustDtaImprt($idNo, $custID, $custName, $custDesc, $clsfctn, $orgID, $dateOfEstblshmnt, $firmBrandName, $typeOfOrganisation, $companyRegNum, $dateOfIncorporation, $typeOfIncorporation, $vatNumber, $tinNumber, $ssnitRegNumber, $noOfEmplyees, $contactNos, $email, $pstlAddress, $natureOfBusiness, $resAddress, $contactNoFax, $meetingDays, $segment1, $bnkBranch) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $dateOfEstblshmnt = cnvrtDMYToYMD($dateOfEstblshmnt);
    if ($dateOfIncorporation == "") {
        $dateOfIncorporation = "4000-12-31";
    } else {
        $dateOfIncorporation = cnvrtDMYToYMD($dateOfIncorporation);
    }

    $insSQL = "";
    $lclIDNo = $idNo;

    //$idNoVal = getNextCustLocalIDNoSerial($custID, "mcf.mcf_customers_corp");
    $idNoVal = getGnrlRecNm("mcf.mcf_customers", "cust_id", "id_no", $custID);

    if (trim($idNo) == "" || $idNo == 'undefined') {
        $insSQL = "INSERT INTO mcf.mcf_customers_corp(
                cust_id, local_id_no, cust_name,
                cust_desc, classification,
                org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
                company_reg_num, date_of_incorporation, type_of_incorporation,
                vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
                email, pstl_address, created_by, creation_date, last_update_by,
                last_update_date, nature_of_business,
                res_address, contact_no_fax, meeting_days, segment1_dataload)
                VALUES (" . $custID . ",'$idNoVal', '" . loc_db_escape_string($custName) .
                "','" . loc_db_escape_string($custDesc) . "','" . loc_db_escape_string($clsfctn) .
                "'," . $orgID . ",'" . $dateOfEstblshmnt . "','" . loc_db_escape_string($firmBrandName) . "','" . loc_db_escape_string($typeOfOrganisation) .
                "','" . loc_db_escape_string($companyRegNum) . "','" . loc_db_escape_string($dateOfIncorporation) .
                "','" . loc_db_escape_string($typeOfIncorporation) . "','" . loc_db_escape_string($vatNumber) .
                "','" . loc_db_escape_string($tinNumber) . "','" . loc_db_escape_string($ssnitRegNumber) .
                "'," . $noOfEmplyees . ",'" . loc_db_escape_string($contactNos) .
                "','" . loc_db_escape_string($email) . "','" . loc_db_escape_string($pstlAddress) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr .
                "','" . loc_db_escape_string($natureOfBusiness) . "','" . loc_db_escape_string($resAddress) .
                "','" . loc_db_escape_string($contactNoFax) . "','" . loc_db_escape_string($meetingDays) .
                "','" . loc_db_escape_string($segment1) . "')";
    } else {
        $insSQL = "INSERT INTO mcf.mcf_customers_corp(
                cust_id, local_id_no, cust_name,
                cust_desc, classification,
                org_id, date_of_estblshmnt, firm_brand_name, type_of_organisation,
                company_reg_num, date_of_incorporation, type_of_incorporation,
                vat_number, tin_number, ssnit_reg_number, no_of_emplyees, contact_nos,
                email, pstl_address, created_by, creation_date, last_update_by,
                last_update_date, nature_of_business,
                res_address, contact_no_fax, meeting_days, segment1_dataload)
                VALUES (" . $custID . ",'" . loc_db_escape_string($idNo) . "','" . loc_db_escape_string($custName) .
                "','" . loc_db_escape_string($custDesc) . "','" . loc_db_escape_string($clsfctn) .
                "'," . $orgID . ",'" . $dateOfEstblshmnt . "','" . loc_db_escape_string($firmBrandName) . "','" . loc_db_escape_string($typeOfOrganisation) .
                "','" . loc_db_escape_string($companyRegNum) . "','" . loc_db_escape_string($dateOfIncorporation) .
                "','" . loc_db_escape_string($typeOfIncorporation) . "','" . loc_db_escape_string($vatNumber) .
                "','" . loc_db_escape_string($tinNumber) . "','" . loc_db_escape_string($ssnitRegNumber) .
                "'," . $noOfEmplyees . ",'" . loc_db_escape_string($contactNos) .
                "','" . loc_db_escape_string($email) . "','" . loc_db_escape_string($pstlAddress) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr .
                "','" . loc_db_escape_string($natureOfBusiness) . "','" . loc_db_escape_string($resAddress) .
                "','" . loc_db_escape_string($contactNoFax) . "','" . loc_db_escape_string($meetingDays) .
                "','" . loc_db_escape_string($segment1) . "')";
    }
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function updateCorpCustDtaImprt($idNo, $profileID, $custID, $custName, $custDesc, $clsfctn, $orgID, $dateOfEstblshmnt, $firmBrandName, $typeOfOrganisation, $companyRegNum, $dateOfIncorporation, $typeOfIncorporation, $vatNumber, $tinNumber, $ssnitRegNumber, $noOfEmplyees, $contactNos, $email, $pstlAddress, $natureOfBusiness, $resAddress, $contactNoFax, $meetingDays, $segment1, $bnkBranch) {
    global $usrID;
    global $dateStr;
    global $orgID;
    $dateOfEstblshmnt = cnvrtDMYToYMD($dateOfEstblshmnt);

    if ($dateOfIncorporation == "") {
        $dateOfIncorporation = "4000-12-31";
    } else {
        $dateOfIncorporation = cnvrtDMYToYMD($dateOfIncorporation);
    }

    //getNextCustLocalIDNoSerial($custID, "mcf.mcf_customers_corp");
    $idNoVal = getGnrlRecNm("mcf.mcf_customers", "cust_id", "id_no", $custID);

    $insSQL = "";
    $lclIDNo = $idNo;
    if (trim($idNo) == "" || $idNo == 'undefined') {
        $insSQL = "UPDATE mcf.mcf_customers_corp SET
               local_id_no = '$idNoVal',
               cust_name = '" . loc_db_escape_string($custName) . "',cust_desc = '" . loc_db_escape_string($custDesc) . "',
               classification = '" . loc_db_escape_string($clsfctn) . "',
               date_of_estblshmnt = '" . $dateOfEstblshmnt . "', firm_brand_name = '" . loc_db_escape_string($firmBrandName) . "',
               type_of_organisation = '" . loc_db_escape_string($typeOfOrganisation) . "',
               company_reg_num  ='" . loc_db_escape_string($companyRegNum) . "', date_of_incorporation ='" . loc_db_escape_string($dateOfIncorporation) . "',
               type_of_incorporation = '" . loc_db_escape_string($typeOfIncorporation) . "',
               vat_number = '" . loc_db_escape_string($vatNumber) . "', tin_number = '" . loc_db_escape_string($tinNumber) . "',
               ssnit_reg_number = '" . loc_db_escape_string($ssnitRegNumber) . "', no_of_emplyees = $noOfEmplyees,
               contact_nos = '" . loc_db_escape_string($contactNos) . "',
               email ='" . loc_db_escape_string($email) . "', pstl_address = '" . loc_db_escape_string($pstlAddress) . "',
               last_update_by = $usrID, last_update_date = '" . $dateStr . "', nature_of_business = '" . loc_db_escape_string($natureOfBusiness) . "',
               res_address = '" . loc_db_escape_string($resAddress) . "', contact_no_fax = '" . loc_db_escape_string($contactNoFax) . "',
               meeting_days = '" . loc_db_escape_string($meetingDays) . "', segment1_dataload = '" . loc_db_escape_string($segment1)
                . "' WHERE corp_profile_id = $profileID";
    } else {

        $insSQL = "UPDATE mcf.mcf_customers_corp SET
           local_id_no = '" . $lclIDNo . "',
           cust_name = '" . loc_db_escape_string($custName) . "',cust_desc = '" . loc_db_escape_string($custDesc) . "',
           classification = '" . loc_db_escape_string($clsfctn) . "',
           date_of_estblshmnt = '" . $dateOfEstblshmnt . "', firm_brand_name = '" . loc_db_escape_string($firmBrandName) . "',
           type_of_organisation = '" . loc_db_escape_string($typeOfOrganisation) . "',
           company_reg_num  ='" . loc_db_escape_string($companyRegNum) . "', date_of_incorporation ='" . loc_db_escape_string($dateOfIncorporation) . "',
           type_of_incorporation = '" . loc_db_escape_string($typeOfIncorporation) . "',
           vat_number = '" . loc_db_escape_string($vatNumber) . "', tin_number = '" . loc_db_escape_string($tinNumber) . "',
           ssnit_reg_number = '" . loc_db_escape_string($ssnitRegNumber) . "', no_of_emplyees = $noOfEmplyees,
           contact_nos = '" . loc_db_escape_string($contactNos) . "',
           email ='" . loc_db_escape_string($email) . "', pstl_address = '" . loc_db_escape_string($pstlAddress) . "',
           last_update_by = $usrID, last_update_date = '" . $dateStr . "', nature_of_business = '" . loc_db_escape_string($natureOfBusiness) . "',
           res_address = '" . loc_db_escape_string($resAddress) . "', contact_no_fax = '" . loc_db_escape_string($contactNoFax) . "',
           meeting_days = '" . loc_db_escape_string($meetingDays) . "', segment1_dataload = '" . loc_db_escape_string($segment1)
                . "' WHERE corp_profile_id = $profileID";
    }

    return execUpdtInsSQL($insSQL);
}

function getCrpGrpPrflIdDtaImprt($idNo, $orgID) {

    $sqlStr = "SELECT distinct corp_profile_id FROM mcf.mcf_customers_corp WHERE 1=1 " .
            " AND local_id_no = '" . loc_db_escape_string($idNo) . "' AND org_id = " . $orgID;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCrpGrpCustIdDtaImprt($idNo, $orgID) {

    $sqlStr = "SELECT distinct cust_id FROM mcf.mcf_customers_corp WHERE 1=1 " .
            " AND local_id_no = '" . loc_db_escape_string($idNo) . "' AND org_id = " . $orgID;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function createGnrlCustTblDataDtaImprt($startDate, $endDate, $custType, $bnkBranchID, $relation, $dateStr, $mlscnd, $idNo, $custID) {

    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    $endDate1 = $endDate;

    if ($endDate == "") {
        $endDate1 = '4000-12-31';
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate);
    }

    $v_startDAte = cnvrtDMYToYMD($startDate);

    $idNoVal = $idNo;//getNextCustLocalIDNoSerial($bnkBranchID);
    if($custType == "Group"){
        $idNoVal = getNextCustLocalIDNoSerial($bnkBranchID);
    }

    $updtSQL = "INSERT INTO mcf.mcf_customers(cust_id, created_by, creation_date, last_update_by, last_update_date," .
            " valid_start_date, valid_end_date, cust_type, org_id, branch_id, status, relation_type,"
            . "creation_time_ms, id_no) VALUES($custID, " . $usrID . ",'" . $dateStr . "'," . $usrID .
            ",'" . $dateStr . "','" . $v_startDAte . "','" . $endDate1 . "','" . loc_db_escape_string($custType) . "'," . $orgID .
            "," . $bnkBranchID . ",'Incomplete','" . $relation . "','" . $mlscnd . "','$idNoVal')";
    execUpdtInsSQL($updtSQL);
}

function getGnrlCustIdDtaImprt($bnkBranchID, $dateStr, $custType, $orgID, $usrID, $mlscnd) {

    $sqlStr = "SELECT cust_id FROM mcf.mcf_customers WHERE 1=1 AND branch_id = " . $bnkBranchID .
            " AND creation_date = '" . $dateStr . "' AND cust_type = '" . $custType . "' AND created_by = " . $usrID .
            " AND org_id = " . $orgID . " AND creation_time_ms = '" . $mlscnd . "'";

    //var_dump($sqlStr);

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getCustAcctIdDtaImprt($acctNumber, $orgID) {

    $sqlStr = "SELECT distinct account_id FROM mcf.mcf_accounts WHERE 1=1 " .
            " AND account_number = '" . loc_db_escape_string($acctNumber) . "' AND org_id = " . $orgID;

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}


function createCustAccountDtaImprt($orgID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType = "Everyone", $groupID = "-1", $accntStatus, $isDormant) {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();

    if ($custType == "Individual") {
            $accMndte = "Only to sign";
        }

    $insSQL = "INSERT INTO mcf.mcf_accounts( " .
            "account_title, account_type, product_type_id, account_trns_type, prsn_type_or_entity, " .
            "currency_id, purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, " .
            "exptd_trns_per_mnth, exptd_amount_per_mnth, branch_id, relationship_officer, " .
            "comments, status, mandate, cust_type, cust_id, allwd_group_type, allwd_group_value, " .
            "account_number, org_id, created_by, creation_date, last_update_by, last_update_date, account_status, is_dormant)" .
            "VALUES ( '" .
            loc_db_escape_string($acctTitle) . "', '" . loc_db_escape_string($acctType) .
            "', " . $prdtTypeID . ", '" . loc_db_escape_string($acctTrnsTyp) .
            "', '" . loc_db_escape_string($prsnTypeEntity) . "', (SELECT mcf.get_account_prdt_crncy_id('" . loc_db_escape_string($acctType) . "'," . $prdtTypeID . ")) " .
            ", '" . loc_db_escape_string($prpsOfAcct) . "', '" . loc_db_escape_string($prpsOfAcctOther) .
            "', '" . loc_db_escape_string($srcOfFunds) . "', '" . loc_db_escape_string($srcOfFundsOther) .
            "', " . $trnsPerMnthNo . ", " . $amountPerMnth . ", " . $bnkBranchID .
            ",'" . loc_db_escape_string($reltnOfficerID) .
            "', '" . loc_db_escape_string($statusReason) . "', '" . loc_db_escape_string($status) .
            "', '" . loc_db_escape_string($accMndte) . "', '" . loc_db_escape_string($custType) .
            "'," . $bnkCustomerID . ", '" . loc_db_escape_string($grpType) . "', '" . loc_db_escape_string($groupID) .
            "','" . $acctNumber . "'," . $orgID .
            ", " . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "','$accntStatus', '$isDormant')";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}


function updateCustAccountDtaImprt($acctID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType = "Everyone", $groupID = "-1", $accntStatus, $isDormant) {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    //GENERATE CUST ACCOUNT

    $insSQL = "UPDATE mcf.mcf_accounts SET " .
            "account_title = '" . loc_db_escape_string($acctTitle) .
            "', account_type = '" . loc_db_escape_string($acctType) .
            "', product_type_id = $prdtTypeID, account_trns_type = '" . loc_db_escape_string($acctTrnsTyp) .
            "', prsn_type_or_entity ='" . loc_db_escape_string($prsnTypeEntity) .
            "', purpose_type = '" . loc_db_escape_string($prpsOfAcct) .
            "', purpose_other = '" . loc_db_escape_string($prpsOfAcctOther) .
            "', source_of_funds_type = '" . loc_db_escape_string($srcOfFunds) .
            "', source_of_funds_other = '" . loc_db_escape_string($srcOfFundsOther) .
            "', exptd_trns_per_mnth = $trnsPerMnthNo, exptd_amount_per_mnth = $amountPerMnth, branch_id = $bnkBranchID " .
            ", relationship_officer ='" . loc_db_escape_string($reltnOfficerID) .
            "', comments = '" . loc_db_escape_string($statusReason) .
            "', mandate = '" . loc_db_escape_string($accMndte) .
            "', cust_type = '" . loc_db_escape_string($custType) .
            "', cust_id = $bnkCustomerID " .
            ", allwd_group_type = '" . loc_db_escape_string($grpType) .
            "', allwd_group_value = '" . loc_db_escape_string($groupID) .
            "', account_number = '" . $acctNumber .
            "', account_status = '" . $accntStatus .
            "', is_dormant = '" . $isDormant .
            "', last_update_by = $usrID, last_update_date = '" . $dateStr .
            "' WHERE account_id = $acctID";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}


function updateCstmrAcntBalancesDataImprt($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, $actTyp, $docTypPrfx, $docLnID, $dateStr, &$errMsg) {
    $succs = false;
    if ($actTyp == "D") {
        $succs = postCstmrAcntAmtDataImprt($accntID, -1 * $clearedQty, -1 * $unClearedQty, -1 * $lienQty, $dateStr, $docTypPrfx . "-" . $docLnID) > 0 ? true : false;
    } else {
        $succs = postCstmrAcntAmtDataImprt($accntID, $clearedQty, $unClearedQty, $lienQty, $dateStr, $docTypPrfx . "-" . $docLnID) > 0 ? true : false;
    }
    if (!$succs) {
        $errMsg = "Act Type:" . $actTyp . ":Item Type:" . $itmType . ":Account ID:" . $accntID . ":Cleared Amt:" . $clearedQty . ":UnCleared Amt:" . $unClearedQty . " will cause negative balance!";
    }
    return $succs;
}

function postCstmrAcntAmtDataImprt($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, $src_trsID) {
    $affctd = 0;
    $dailybalID = getCstmrAcntDailyBalsID($accntID, $trnsDate);
    $lstClrdTotBals = getCstmrAcntLstClrdTotBls($accntID, $trnsDate);
    $lstUnClrdTotBals = getCstmrAcntLstUnClrdTotBls($accntID, $trnsDate);
    $lstLienBals = getCstmrAcntLstLienBls($accntID, $trnsDate);
    if ($dailybalID <= 0) {
        //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
        $affctd += createCstmrAcntDailyBals($accntID, $lstClrdTotBals, $lstUnClrdTotBals, $lstLienBals, $trnsDate, ",");
        $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
        //}
    } else {
        //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
        $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
        //}
    }
    return $affctd;
}

function approveCustAccount($acctID) {
    global $usrID;
    $dateStr = getDB_Date_time();

    $insSQL = "UPDATE mcf.mcf_accounts
        SET status= 'Authorized', last_update_by=$usrID,
            last_update_date= '" . $dateStr .
            "' WHERE account_id = $acctID";

    return execUpdtInsSQL($insSQL);
}

//NEW 24092017
function getMCFglobalVariableValue($variable) {

    $sqlStr = "SELECT mcf.get_global_variable_value('" . loc_db_escape_string($variable) . "')";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return '';
}

function getCustBranchCode($custID) {

    $sqlStr = "select b.location_code_name
        from org.org_sites_locations b, mcf.mcf_customers c
        where b.location_id = c.branch_id
        and c.cust_id = $custID";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return '';
}

function getOtherPrsnBranchCode($personID) {

    $sqlStr = "select b.location_code_name
        from org.org_sites_locations b, mcf.mcf_prsn_names_nos c
        where b.location_id = c.branch_id
        and c.person_id = $personID";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return '';
}

//LOCAL ID NUMBER SHOULD BE SERIAL
function getNextCustLocalIDNoSerial_1($custID, $tblName) {
    $sqlStr = "";
    $lclIDNo = "";
    $result = "";
    $bnkBranchCode = getCustBranchCode($custID);

    $varVal = getMCFglobalVariableValue("Customer ID No. Format");

    if ($varVal == "Branch Code->Unique ID") {
        $brnchCdeLngt = getMCFglobalVariableValue("Branch Code Length");

//        $sqlStr = "SELECT lpad((max(substr(local_id_no,($brnchCdeLngt+1)))::numeric +1)::character varying,7,'0') next_serial FROM $tblName
//            WHERE substr(local_id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $sqlStr = "SELECT lpad((max(substr(local_id_no,($brnchCdeLngt+1))))::character varying,7,'0') next_serial FROM $tblName
            WHERE substr(local_id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = str_pad(((int) $row[0] + 1), 7, "0", STR_PAD_LEFT);
            }
        } else {
            $lclIDNo = "0000001";
        }
        return $bnkBranchCode . $lclIDNo;
    } else {
        $sqlStr = "SELECT lpad((max(local_id_no)::numeric +1)::character varying,7,'0') next_serial FROM $tblName";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = $row[0];
            }
        } else {
            $lclIDNo = "0000001";
        }
        return $lclIDNo;
    }
}

function getNextOtherPrsnLocalIDNoSerial_1($prsnID, $tblName) {
    $sqlStr = "";
    $lclIDNo = "";
    $result = "";
    $bnkBranchCode = getOtherPrsnBranchCode($prsnID);

    $varVal = getMCFglobalVariableValue("Customer ID No. Format");

    if ($varVal == "Branch Code->Unique ID") {
        $brnchCdeLngt = getMCFglobalVariableValue("Branch Code Length");

//        $sqlStr = "SELECT lpad((max(substr(local_id_no,($brnchCdeLngt+1)))::numeric +1)::character varying,7,'0') next_serial FROM $tblName
//            WHERE substr(local_id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $sqlStr = "SELECT lpad((max(substr(local_id_no,($brnchCdeLngt+1))))::character varying,7,'0') next_serial FROM $tblName
            WHERE substr(local_id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = str_pad(((int) $row[0] + 1), 7, "0", STR_PAD_LEFT);
            }
        } else {
            $lclIDNo = "0000001";
        }

        return $bnkBranchCode . $lclIDNo;
    } else {
        $sqlStr = "SELECT lpad((max(local_id_no)::numeric +1)::character varying,7,'0') next_serial FROM $tblName";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = $row[0];
            }
        } else {
            $lclIDNo = "0000001";
        }

        return $lclIDNo;
    }
}

function getNextCustLocalIDNoSerial($branchID) {
    $sqlStr = "";
    $lclIDNo = "";
    $result = "";
    $bnkBranchCode = getGnrlRecNm("org.org_sites_locations", "location_id", "location_code_name", $branchID); //getCustBranchCode($custID);

    $varVal = getMCFglobalVariableValue("Customer ID No. Format");

    if ($varVal == "Branch Code->Unique ID") {
        $brnchCdeLngt = getMCFglobalVariableValue("Branch Code Length");

        $sqlStr = "SELECT lpad((max(substr(id_no,($brnchCdeLngt+1))))::character varying,7,'0') next_serial FROM mcf.mcf_customers
            WHERE substr(id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = str_pad(((int) $row[0] + 1), 7, "0", STR_PAD_LEFT);
            }
        } else {
            $lclIDNo = "0000001";
        }
        return $bnkBranchCode . $lclIDNo;
    } else {
        $sqlStr = "SELECT lpad((max(id_no)::numeric +1)::character varying,7,'0') next_serial FROM mcf.mcf_customers";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = $row[0];
            }
        } else {
            $lclIDNo = "0000001";
        }
        return $lclIDNo;
    }
}

function getNextOtherPrsnLocalIDNoSerial($branchID) {
    $sqlStr = "";
    $lclIDNo = "";
    $result = "";
    $bnkBranchCode = getGnrlRecNm("org.org_sites_locations", "location_id", "location_code_name", $branchID); //getOtherPrsnBranchCode($custID);

    $varVal = getMCFglobalVariableValue("Customer ID No. Format");

    if ($varVal == "Branch Code->Unique ID") {
        $brnchCdeLngt = getMCFglobalVariableValue("Branch Code Length");

        $sqlStr = "SELECT lpad((max(substr(local_id_no,($brnchCdeLngt+1))))::character varying,7,'0') next_serial FROM mcf.mcf_prsn_names_nos
            WHERE substr(local_id_no,1,$brnchCdeLngt) = '$bnkBranchCode'";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = str_pad(((int) $row[0] + 1), 7, "0", STR_PAD_LEFT);
            }
        } else {
            $lclIDNo = "0000001";
        }

        return $bnkBranchCode . $lclIDNo;
    } else {
        $sqlStr = "SELECT lpad((max(local_id_no)::numeric +1)::character varying,7,'0') next_serial FROM mcf.mcf_prsn_names_nos";

        $result = executeSQLNoParams($sqlStr);
        $rowCnt = loc_db_num_rows($result);
        if ($rowCnt > 0) {
            while ($row = loc_db_fetch_array($result)) {
                $lclIDNo = $row[0];
            }
        } else {
            $lclIDNo = "0000001";
        }

        return $lclIDNo;
    }
}

function getOtherPrsnDataChngPndngCount($personID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_prsn_names_nos WHERE person_id = $personID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function get_CstmrExtrDataAuthrzd($pkID, $srcType, $colNum = "1", $rvsnTtlAPD) {
    $colNms = array("data_col1", "data_col2", "data_col3", "data_col4",
        "data_col5", "data_col6", "data_col7", "data_col8", "data_col9", "data_col10",
        "data_col11", "data_col12", "data_col13", "data_col14", "data_col15", "data_col16",
        "data_col17", "data_col18", "data_col19", "data_col20", "data_col21", "data_col22",
        "data_col23", "data_col24", "data_col25", "data_col26", "data_col27", "data_col28",
        "data_col29", "data_col30", "data_col31", "data_col32", "data_col33", "data_col34",
        "data_col35", "data_col36", "data_col37", "data_col38", "data_col39", "data_col40",
        "data_col41", "data_col42", "data_col43", "data_col44", "data_col45", "data_col46",
        "data_col47", "data_col48", "data_col49", "data_col50");
    $strSql = "SELECT " . $colNms[$colNum - 1] . ", extra_data_id
  FROM mcf.mcf_extra_data a WHERE ((src_pk_id = $pkID) AND src_type = '$srcType' AND rvsn_ttl = $rvsnTtlAPD)";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return "";
}

function get_PersonAllNtnltyATZ($ntnltyID) {
    $strSql = "SELECT distinct ntnlty_id mt, a.nationality \"Country\", national_id_typ national_id_type,
        id_number, to_char(to_timestamp(date_issued,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(expiry_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), other_info other_information, is_approved
          FROM mcf.mcf_prsn_national_ids a WHERE ntnlty_id = $ntnltyID";
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function dsplyTblData($rowAryNew, $rowAryATZ, $pKeyCol, $isApprvdCol) {
//    if($rowAryNew[8] < 0 || $rowAryATZ[7] === "No"){
//        echo $row1[6];
//     }
//     else
//         { if($row1[6] != $row1ATZ6) {
//
    ?> <!--<a href="#" style="color:red;font-weight:bold;" onclick="dsplyAuthrzdData('<?php //echo $row1ATZ6; ?>');"><?php //echo $row1[6]; ?></a>--> <?php
//         } else {
//             echo $row1ATZ6;
//         }
//     }

    if ($pKeyCol < 0 || $isApprvdCol === "No") {
        return $rowAryNew;
    } else {
        if ($rowAryNew != $rowAryATZ) {
            return "<a href=\"#\" style=\"color:red;font-weight:bold;\" onclick=\"dsplyAuthrzdData('$rowAryATZ');\">$rowAryNew</a>";
        } else {
            echo $rowAryATZ;
        }
    }
}

function get_CorpDirectorsATZ($directorID) {
    $strSql = "SELECT distinct director_id, mcf.get_corp_director_name(a.cust_id, source_type, person_cust_id) director,  source_type,
        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), person_cust_id, a.cust_id,
        mcf.get_corp_director_idNo(a.cust_id, source_type, person_cust_id), is_approved
          FROM mcf.mcf_corporate_directors a WHERE a.director_id = $directorID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_GroupMembersATZ($grpMemberID) {
    $strSql = "SELECT grp_member_id, trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names) fullname,  position,
        to_char(to_timestamp(start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), to_char(to_timestamp(end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.cust_id, grp_cust_id, c.local_id_no
  FROM mcf.mcf_group_members a, mcf.mcf_customers_ind c WHERE a.cust_id = c.cust_id AND a.grp_member_id = $grpMemberID";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCustAcctDataChngPndngCount($accountID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_accounts WHERE account_id = $accountID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function dsplyCntrlLbl($chgs_pndng, $rowData, $rowDataAtrzd, $colCls, $lblDesc, $lblForID) {

    if ($chgs_pndng > 0 && $rowData != $rowDataAtrzd) {
        return "<label data-toggle=\"tooltip\" title=\"$rowDataAtrzd\" for=\"$lblForID\" class=\"control-label $colCls\"><a href=\"#\" style=\"color:red;\" onclick=\"dsplyAuthrzdData('$rowDataAtrzd');\">$lblDesc:</a></label>";
    } else {
        return "<label for=\"$lblForID\" class=\"control-label $colCls\">$lblDesc:</label>";
    }
}

function get_CustAccount_SignatoriesATZ($acctSignID, $acctID) {
    $strSql = "";
    $custType = "";

    $strSql1 = "SELECT cust_type FROM mcf.mcf_accounts a WHERE account_id = $acctID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $custType = $row1[0];
    }

    if ($custType == "Individual" || $custType == "Joint-Individual" || $custType == "Joint") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignID";
    } else if ($custType == "Corporate") {

        $strSql = "SELECT acct_sign_id, mcf.get_corporate_signatory_wdID(account_id, source_type, b.person_cust_id, 'fullname') fullname,
            mcf.get_corporate_signatory_wdID(account_id, source_type, b.person_cust_id, 'local_id_no') local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_account_signatories b
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND b.acct_sign_id = $acctSignID";
    } else if ($custType == "Group") {

        $strSql = "SELECT acct_sign_id, (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)) fullname, local_id_no, to_sign_mndtry, source_type,
                to_char(to_timestamp(end_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') end_date, person_cust_id
            FROM mcf.mcf_account_signatories b, mcf.mcf_customers_ind c
            WHERE (b.end_date IS NULL OR now() <= to_timestamp(b.end_date,'YYYY-MM-DD'))
            AND b.person_cust_id = c.cust_id
            AND b.acct_sign_id = $acctSignID";
    }


    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSvngsPrdtDataChngPndngCount($svngsPrdtID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_prdt_savings WHERE svngs_product_id = $svngsPrdtID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function get_SavingsWtdwlCmmsnATZ($rowID) {
    $strSql = "SELECT row_id, range_low, range_high, comm_flat, comm_percent, remarks, row_id, is_approved, product_id
          FROM mcf.mcf_svngs_wthdrwl_comm a WHERE row_id = $rowID";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSvngsPrdtStatus($pkID, $rvsnTtlAPD) {
    $cnt = getSvngsPrdtDataChngPndngCount($pkID);

    $tblNm = "mcf.mcf_prdt_savings";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_prdt_savings_hstrc";
    }

    $result1 = executeSQLNoParams("SELECT status FROM $tblNm WHERE svngs_product_id = $pkID AND rvsn_ttl = $rvsnTtlAPD");
    while ($row1 = loc_db_fetch_array($result1)) {
        return $row1[0];
    }
    return "INVALID";
}

function deleteSvngsCOTLine($rowID, $prdtID, $rvsnTtl, $isApproved) {
    $insSQL1 = "";
    $cnt = getSvngsPrdtDataChngPndngCount($prdtID);

    $tblNm = "mcf.mcf_svngs_wthdrwl_comm";
    if ($cnt > 0) {
        $tblNm = "mcf.mcf_svngs_wthdrwl_comm_hstrc";
    }

    if ($isApproved === "Yes" && $rvsnTtl > 0) {
        $insSQL1 = "UPDATE $tblNm SET row_id = -1*row_id WHERE row_id = $rowID AND rvsn_ttl = $rvsnTtl";
    } else {
        $insSQL1 = "DELETE FROM $tblNm WHERE row_id = $rowID AND rvsn_ttl = $rvsnTtl";
    }

    return execUpdtInsSQL($insSQL1);
}

function svngsPrdtExstnce($prdtID) {

    $sqlStr = "SELECT count(b.*) FROM mcf.mcf_prdt_savings a, mcf.mcf_accounts b"
            . " WHERE a.svngs_product_id = b.product_type_id AND a.svngs_product_id =  $prdtID";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }

    return -1;
}

function getCrdtPrdtDataChngPndngCount($crdtPrdtID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_prdt_loans WHERE loan_product_id = $crdtPrdtID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function get_AllLoanPrdtPrcsnFeeATZ($loanPrcsnFeeId) {

    $strSql = "SELECT loanprdt_prcssn_fee_id, loan_product_id, fee_name, fee_type,
       fee_flat, fee_percent, crdt_accnt_id, remarks, is_approved
          FROM mcf.mcf_loanprdt_prcssnfees_n_accts a WHERE loanprdt_prcssn_fee_id = $loanPrcsnFeeId";
    $result = executeSQLNoParams($strSql);

    return $result;
}

function get_AllLoanPrdtLatePymntFeeATZ($loanprdtLateFeeId) {
    $strSql = "SELECT loanprdt_late_fee_id, loan_product_id, fee_name, target,
          fee_flat, fee_percent, dbt_accnt_id, crdt_accnt_id, frequency, frequency_no, is_approved
          FROM mcf.mcf_loanprdt_latefees_n_accts a WHERE loanprdt_late_fee_id = $loanprdtLateFeeId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_CustAccount_LiensATZ($acctLienID) {
    $strSql = "SELECT acct_lien_id, lien_no, amount, to_char(to_timestamp(b.start_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'),
        to_char(to_timestamp(b.end_date_active,'YYYY-MM-DD'),'DD-Mon-YYYY'), narration, lien_status, b.account_id, b.start_date_active, is_approved
          FROM mcf.mcf_account_liens b WHERE b.acct_lien_id = $acctLienID";
    $result = executeSQLNoParams($strSql);
    return $result;
}

function updateMCFCstmrAcntBals_LienApproval($cashAccntID, $apprvdAmnt, $lienNo, &$errMsg, $optn, $lienID) {//$docHdrID = accntID for Account Deductions
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;
    global $prsnid;

    $dsplyErrMsg = "";
    $dateStr = getStartOfDayDMYHMS(); //getFrmtdDB_Date_time();

    /**NEW**/
    $dateStr1 = getFrmtdDB_Date_time();

    $svngsPrdtID = getGnrlRecNm("mcf.mcf_accounts", "account_id", "product_type_id", $cashAccntID);
    $trnsCrncyID = getGnrlRecNm("mcf.mcf_prdt_savings", "svngs_product_id", "currency_id", $svngsPrdtID);
    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);
    $cashAccntNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $cashAccntID);

    $trnsType1 = "LIEN_TRNS";
    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";
    $dcrsORIncrs = "D";

    $loanTrnsctnID = $lienNo;


    $nwMsg = "";
    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

    $acntRslt = get_OneCustAccntInfo($cashAccntID);
    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
        $acctstatus = $rowAcnt[10];
        $acctcustomer = $rowAcnt[11];
        $acctlien = (float) $rowAcnt[13];
        $mandate = $rowAcnt[14];
        $wtdrwllimitno = (int) $rowAcnt[15];
        $wtdrwllimitamt = (float) $rowAcnt[16];
        $wtdrwllimittype = $rowAcnt[17];
    }

    /**NEW**/

    $unClearedQty = 0;
    //$optn == 0 => LIEN HOLD, $optn == 1 => REVERSE LIEN
    $doctype = "LIEN_TRNS";
    //$lienNo;

    $succs = FALSE;
    $lnCntr = 0;

    $isdlvrd = false;
    $xptdCashColtValue = $apprvdAmnt;

    $itmType = "LIEN TRANSACTION";
    $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];

    $cashColtTtlCnt = 0;

    if ($cashAccntID > 0) {
        $lienQty = 0.00; //$apprvdAmnt;
        $clearedQty = 0.00; //$apprvdAmnt;

        if($apprvdAmnt < 0){
            //OVERDRAFT
            $lienQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = (float) $xptdCashColtValue; //$apprvdAmnt;

            if ($isdlvrd == false) {
                $recCnt = 0;
                $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "OVERDRAFT Reversal - Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

                if($recCnt > 0){
                    //ALLOW NEGATIVE BALANCE DUE TO LIEN
                    $succs = updateCstmrAcntBalances_McfLienHold($cashAccntID, $clearedQty, $unClearedQty, $lienQty, $itmType, "I", $docTypPrfx, $lienNo, $dateStr, $dsplyErrMsg);
                }
            }

        } else {
            //LOAN
            $lienQty = (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;

            $recCnt = 0;
            if ($optn == 0) {//APPROVE
                $dcrsORIncrs = "I";

		$lstLienBals = getCstmrAcntLstLienBls($cashAccntID, $dateStr);
                $actvLienBals = 0.00;
                
                $resultQry1 = executeSQLNoParams("SELECT sum(b.amount) FROM mcf.mcf_account_liens b WHERE $cashAccntID = b.account_id and b.lien_status = 'Active' and b.is_approved = 'Yes'");
                while ($row1 = loc_db_fetch_array($resultQry1)) {
                    $actvLienBals = (float)$row1[0];
                }
                
                if ($lienQty != 0){
                    if (round(($actvLienBals),2) == round(((float)$lienQty + (float)$lstLienBals),2)) {

                        $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "LIEN Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        
                    }
                }

//                $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "LIEN Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

//                $lienQty = (float) $xptdCashColtValue; //$apprvdAmnt;
//                $clearedQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
            } else {//REVERSE
                $dcrsORIncrs = "D";
                $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "LIEN Reversal - Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "CR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");

//                $lienQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
//                $clearedQty = (float) $xptdCashColtValue; //$apprvdAmnt;
            }

            if ($isdlvrd == false) {

//                $recCnt = 0;
//                if ($lienQty > 0) {
//                        //APPROVE
//                        $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "LIEN Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
//                } else {
//                        //REVERSE
//                        $recCnt = createAccountTrns($cashAccntID, $dateStr1, "Paperless", $gnrtdTrnsNo, "LIEN Reversal - Transaction $loanTrnsctnID on Account No. " . $cashAccntNo, "CR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
//                }

                if($recCnt > 0){
                    //ALLOW NEGATIVE BALANCE DUE TO LIEN
                    $succs = updateCstmrAcntBalances_McfLienHold($cashAccntID, $clearedQty, $unClearedQty, $lienQty, $itmType, $dcrsORIncrs, $docTypPrfx, $lienNo, $dateStr, $dsplyErrMsg);
                }
            }

        }

        if (!$succs) {
            $lnCntr = $lnCntr + 1;
        }
    }

    $errMsg = $dsplyErrMsg;

    if ($lnCntr <= 0) {
        $succs = true;
    }

    return $succs;
}

function updateCstmrAcntBalances_McfLienHold($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, $actTyp, $docTypPrfx, $docLnID, $dateStr, &$errMsg) {
    $succs = false;
    if ($actTyp == "D") {
        $succs = postCstmrAcntAmt_McfLienHold($accntID, -1 * $clearedQty, -1 * $unClearedQty, -1 * $lienQty, $dateStr, $docTypPrfx . "-" . $docLnID) > 0 ? true : false;
    } else {
        $succs = postCstmrAcntAmt_McfLienHold($accntID, $clearedQty, $unClearedQty, $lienQty, $dateStr, $docTypPrfx . "-" . $docLnID) > 0 ? true : false;
    }
    if (!$succs) {
        $errMsg = "Act Type:" . $actTyp . ":Item Type:" . $itmType . ":Account ID:" . $accntID . ":Cleared Amt:" . $clearedQty . ":UnCleared Amt:" . $unClearedQty . " will cause negative balance!";
    }
    return $succs;
}

function postCstmrAcntAmt_McfLienHold($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, $src_trsID) {
    $affctd = 0;
    $dailybalID = getCstmrAcntDailyBalsID($accntID, $trnsDate);
    $lstClrdTotBals = getCstmrAcntLstClrdTotBls($accntID, $trnsDate);
    $lstUnClrdTotBals = getCstmrAcntLstUnClrdTotBls($accntID, $trnsDate);
    $lstLienBals = getCstmrAcntLstLienBls($accntID, $trnsDate);
    $actvLienBals = 0.00;
    //$rmvdLienBals = 0.00;
    $resultQry1 = executeSQLNoParams("SELECT sum(b.amount) FROM mcf.mcf_account_liens b WHERE $accntID = b.account_id and b.lien_status = 'Active' and b.is_approved = 'Yes'");
    while ($row1 = loc_db_fetch_array($resultQry1)) {
        $actvLienBals = (float)$row1[0];
    }

//    $resultQry2 = executeSQLNoParams("SELECT sum(b.amount) FROM mcf.mcf_account_liens b WHERE $accntID = b.account_id and b.lien_status = 'Removed' and b.is_approved = 'Yes'");
//    while ($row2 = loc_db_fetch_array($resultQry2)) {
//        $rmvdLienBals = (float)$row2[0];
//    }

    if ($lienQty != 0){
        if (round(($actvLienBals),2) == round(((float)$lienQty + (float)$lstLienBals),2)) {
            if ($dailybalID <= 0) {
                //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
                $affctd += createCstmrAcntDailyBals($accntID, $lstClrdTotBals, $lstUnClrdTotBals, $lstLienBals, $trnsDate, ",");
                $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
            //}
            } else {
                //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
                $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
                //}
            }
        }

    } else {
        if ($dailybalID <= 0) {
            //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
            $affctd += createCstmrAcntDailyBals($accntID, $lstClrdTotBals, $lstUnClrdTotBals, $lstLienBals, $trnsDate, ",");
            $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
            //}
        } else {
            //if (($lstClrdTotBals + $clearedQty) >= 0 && ($lstUnClrdTotBals + $unClearedQty) >= 0 /* && ($lstLienBals + $lienQty) >= 0 */) {
            $affctd += updtCstmrAcntDailyBals($accntID, $clearedQty, $unClearedQty, $lienQty, $trnsDate, "Do", $src_trsID);
            //}
        }
    }
    return $affctd;
}

function svngsPrdtNameExists($productName, $prdtType, $prdtID, $rvsnTtl) {
    $sqlStr = "";

    $tblNm = "mcf.mcf_prdt_savings_hstrc";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_savings";
    }

    if ($prdtID > 0) {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_savings WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($prdtType) . "' "
                . "AND svngs_product_id != $prdtID";
    } else {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_savings WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($productName) . "'";
    }


    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    if ($prdtID > 0) {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_savings_hstrc WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($prdtType) . "' "
                . "AND svngs_product_id != $prdtID";
    } else {
        $sqlStr = "SELECT product_name FROM mcf.mcf_prdt_savings_hstrc WHERE 1=1 AND upper(product_name) = upper('" . loc_db_escape_string($productName) . "') "
                . "AND product_type = '" . loc_db_escape_string($productName) . "'";
    }


    $result1 = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result1)) {
        return true;
    }

    return false;
}

function svngsPrdtCodeExists($productCode, $prdtID, $rvsnTtl) {
    $sqlStr = "";

    $tblNm = "mcf.mcf_prdt_savings";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prdt_savings_hstrc";
    }

    if ($prdtID > 0) {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_savings WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "') "
                . "AND svngs_product_id != $prdtID";
    } else {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_savings WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "')";
    }

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return true;
    }

    if ($prdtID > 0) {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_savings_hstrc WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "') "
                . "AND svngs_product_id != $prdtID";
    } else {
        $sqlStr = "SELECT product_code FROM mcf.mcf_prdt_savings_hstrc WHERE 1=1 AND upper(product_code) = upper('" . loc_db_escape_string($productCode) . "')";
    }

    $result1 = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result1)) {
        return true;
    }

    return false;
}

function mcfTrnsReqMsgActns_LoanMgmnt($routingID = -1, $inptSlctdRtngs = "", $actionToPrfrm = "Initiate", $srcDocID = -1, $srcDocType = "Banking Transactions") {
    global $app_url;
    global $admin_name;
    global $trnsTypes;
    global $trnsTypesSlf;

    $userID = $_SESSION['USRID'];
    $user_Name = $_SESSION['UNAME'];
    $cur_prsnid = $_SESSION['PRSN_ID'];
    $rtngMsgID = -1;
    $affctd = 0;
    $affctd1 = 0;
    $affctd2 = 0;
    $affctd3 = 0;
    $affctd4 = 0;
    $curPrsnsLevel = -123456789;
    $msgTitle = "";
    $msgBdy = "";
    $nwPrsnLocID = isset($_POST['toPrsLocID']) ? cleanInputData($_POST['toPrsLocID']) : "";
    $apprvrCmmnts = isset($_POST['actReason']) ? cleanInputData($_POST['actReason']) : "";
    $fromPrsnID = getUserPrsnID($user_Name);
    $usrFullNm = getPrsnFullNm($fromPrsnID);
    $msg = "";
    $dsply = "";
    $msg_id = -1;
    $appID = -1;
    $attchmnts = "";
    $reqestDte = getFrmtdDB_Date_time();

    $srcdoctyp = $srcDocType;
    $srcdocid = $srcDocID;

    $reportTitle = "Send Outstanding Bulk Messages";
    $reportName = "Send Outstanding Bulk Messages";
    $rptID = getRptID($reportName);
    $prmID = getParamIDUseSQLRep("{:msg_batch_id}", $rptID);
    $msgBatchID = -1;
    //session_write_close();
    if ($routingID <= 0 && $inptSlctdRtngs == "") {
        if ($srcDocID > 0) {
            $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $srcDocID);
            if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Paid' || ($rqstHdrStatus == 'Initiated' && $actionToPrfrm == "Initiate" && $routingID <= 0)) {
                return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
            }
        }
        if ($actionToPrfrm == "Initiate" && $srcDocID > 0) {
            $msg_id = getWkfMsgID();
            $appID = getAppID('Loan Transactions', 'Banking');
            //Requestor
            $prsnid = $fromPrsnID;
            $fullNm = $usrFullNm;
            $prsnLocID = getPersonLocID($prsnid);

            //Message Header & Details
            $msghdr = "$fullNm ($prsnLocID) Requests for approval of a Banking Transaction";
            $msgbody = "BANKING TRANSACTION REQUEST ON ($reqestDte):- "
                    . "A BANKING Transaction Request has been submitted by $fullNm ($prsnLocID) "
                    . "<br/>Please open the attached Work Document and attend to this Request.
                      <br/>Thank you.";
            $msgtyp = "Work Document";
            $msgsts = "0";
            $hrchyid = 1; //Get hierarchy ID
            $rslt = getMCFTrnsAttchMnts($srcDocID);
            $attchmnts = ""; //Get Attachments
            $attchmnts_desc = ""; //Get Attachments
            while ($rw = loc_db_fetch_array($rslt)) {
                $attchmnts = $rw[1];
                $attchmnts_desc = $rw[0];
            }

            createWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
            //Get Hierarchy Members
            $athrzrLmtID = -1;
            $siteID = -1;
            $trnsTyp = "";
            $trnsTypSlf = "";
            $mxCageID = -1;
            $crncyID = "";
            $trnsAmnt = "";
            $rslt1 = get_One_MCFTrnsHdr($srcdocid);
            while ($rw1 = loc_db_fetch_array($rslt1)) {
                $siteID = (int) $rw1[7];
                $trnsTyp = $rw1[3];
                $trnsTypSlf = $trnsTypesSlf[findArryIdx($trnsTypes, $trnsTyp)];
                $crncyID = (int) $rw1[23];
                $trnsAmnt = (float) $rw1[5];
                $mxCageID = (float) $rw1[49];
            }
            $result = null;
            if ($mxCageID > 0) {
                $result = isTrnsWthnCageMngrsLmt($mxCageID, $trnsAmnt, $srcdocid, $trnsTypSlf);
                if (loc_db_num_rows($result) <= 0) {
                    $result = getNextMCFApprvrs($siteID, $trnsTyp, $crncyID, $trnsAmnt);
                }
            } else {
                $result = getNextMCFApprvrs($siteID, $trnsTyp, $crncyID, $trnsAmnt);
            }
            $prsnsFnd = 0;
            $lastPrsnID = "|";
            $msgBatchID = getMsgBatchID();
            $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
            while ($row = loc_db_fetch_array($result)) {
                $athrzrLmtID = (float) $row[1];
                $toPrsnID = (float) $row[0];
                $prsnsFnd++;
                if ($toPrsnID > 0) {
                    if ($cur_prsnid == $toPrsnID) {
                        updateMCFTrnsStatus($srcdocid, "Authorized");
                        updateMCFTrnsAtzrLmtID($srcdocid, $athrzrLmtID);
                        $msg = payMCFTrnsRqst_LoanRpmnt($srcdocid);
                        return $msg;
                    } else {
                        routWkfMsg($msg_id, $prsnid, $toPrsnID, $userID, 'Initiated', 'Open;Reject;Request for Information;Authorize');
                        $dsply = '<div style="text-align:center;font-weight:bold;font-size:14px;color:blue;">SUCCESS!</br>Your request has been submitted for Approval. Thank you!</div>';
                        $msg = $dsply;
                        //Begin Email Sending Process
                        /* $result1 = getEmlDetailsB4Actn($srcdoctyp, $srcdocid);
                          while ($row1 = loc_db_fetch_array($result1)) {
                          $frmID = $toPrsnID;
                          if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                          $lastPrsnID .= $frmID . "|";
                          continue;
                          }
                          $lastPrsnID .= $frmID . "|";
                          $subject = $row1[1];
                          $actSoFar = $row1[3];
                          if ($actSoFar == "") {
                          $actSoFar = "&nbsp;&nbsp;NONE";
                          }
                          $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row1[2];
                          $docType = $srcDocType;
                          $to = getPrsnEmail($frmID);
                          $nameto = getPrsnFullNm($frmID);
                          if ($docType != "" && $docType != "Login") {
                          $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                          . "<br/><br/>"
                          . $msgPart .
                          "<br/><br/>Kindly <a href=\""
                          . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                          $errMsg = "";
                          createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                          }
                          } */
                    }
                }
            }
            if ($prsnsFnd <= 0) {
                $dsply .= "|ERROR|-No Approval Hierarchy Found<br/>";
                $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
            } else {
                //Update Request Status to In Process
                updateMCFTrnsStatus($srcdocid, "Initiated");
                updateMCFTrnsAtzrLmtID($srcdocid, $athrzrLmtID);
            }
        } else {
            $dsply .= "|ERROR|-Update Failed! No Workflow Document(s) Generated<br/>";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    } else {
        $orgnlToPrsnID = -1;
        if ($routingID > 0) {
            $oldMsgbodyAddOn = "";
            $reslt1 = getWkfMsgRtngData($routingID);
            while ($row = loc_db_fetch_array($reslt1)) {
                $rtngMsgID = (float) $row[0];
                $msg_id = $rtngMsgID;
                $curPrsnsLevel = (float) $row[18];
                $isActionDone = $row[9];
                $oldMsgbodyAddOn = $row[17];
                $orgnlToPrsnID = (float) $row[2];
//$rtngMsgID = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "msg_id", $routingID);
//$curPrsnsLevel = (float) getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "to_prsns_hrchy_level", $routingID);
//$isActionDone = getGnrlRecNm("wkf.wkf_actual_msgs_routng", "routing_id", "is_action_done", $routingID);
            }
            $row = NULL;

            $reslt2 = getWkfMsgHdrData($rtngMsgID);
            while ($row = loc_db_fetch_array($reslt2)) {
                $msgTitle = $row[1]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_hdr", $rtngMsgID);
                $msgBdy = $row[2]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "msg_body", $rtngMsgID);
                $srcDocID = (float) $row[10]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_id", $rtngMsgID);
                $srcDocType = $row[9]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "src_doc_type", $rtngMsgID);
                $orgnlPrsnUsrID = (float) $row[3]; //getGnrlRecNm("wkf.wkf_actual_msgs_hdr", "msg_id", "created_by", $rtngMsgID);
                $hrchyid = (float) $row[5];
                $appID = (float) $row[7];
                $attchmnts = $row[13];
                $attchmnts_desc = $row[14]; //Get Attachments
            }
            if ($srcDocID > 0) {
                $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $srcDocID);
                if (($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Paid') && $actionToPrfrm != "Open") {
                    return "<span style=\"color:red;font-weight:bold;\">|ERROR| Nothing to $actionToPrfrm!</span>";
                }
            }
            $srcdoctyp = $srcDocType;
            $srcdocid = $srcDocID;
            $orgnlPrsnID = getUserPrsnID1($orgnlPrsnUsrID);
            if ($isActionDone == '0') {
                if ($actionToPrfrm == "Open") {
                    getMCFTrnsRdOnlyDsply($srcDocID, $srcDocType);
                } else if ($actionToPrfrm == "Reject") {
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Rejected", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "REJECTION ON $datestr:- This document has been Rejected by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                    //Message Header & Details
                    $msghdr = "REJECTED - " . $msgTitle;
                    $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Informational";
                    $msgsts = "0";
                    //$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, "Initiated", "Acknowledge;Open", 1, $msgbodyAddOn);
                    $affctd4 += updateMCFTrnsStatus($srcdocid, "Rejected");

                    //Begin Email Sending Process
                    /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                      $lastPrsnID = "|";
                      $msgBatchID = getMsgBatchID();
                      $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                      while ($row = loc_db_fetch_array($result)) {
                      $frmID = $row[0];
                      if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                      $lastPrsnID .= $frmID . "|";
                      continue;
                      }
                      $lastPrsnID .= $frmID . "|";
                      $subject = $row[1];
                      $actSoFar = $row[3];
                      if ($actSoFar == "") {
                      $actSoFar = "&nbsp;&nbsp;NONE";
                      }
                      $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                      $docType = $srcDocType;
                      $to = getPrsnEmail($frmID);
                      $nameto = getPrsnFullNm($frmID);
                      if ($docType != "" && $docType != "Login") {
                      $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                      . "<br/><br/>"
                      . $msgPart .
                      "<br/><br/>Kindly <a href=\""
                      . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                      $errMsg = "";
                      createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                      }
                      } */
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Rejected!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Rejected";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Withdraw") {
                    if ($orgnlPrsnID == $cur_prsnid && $orgnlPrsnID > 0) {
                        $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Withdrawn", "None", $userID);
                        if ($apprvrCmmnts == "") {
                            $apprvrCmmnts = "Withdrawal by Self";
                        }
                        $datestr = getFrmtdDB_Date_time();
                        $msgbodyAddOn = "";
                        $msgbodyAddOn .= "WITHDRAWAL ON $datestr:- This document has been Withdraw by $usrFullNm with the ff Message:<br/>";
                        $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                        $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                        $msgbodyAddOn .= $oldMsgbodyAddOn;

                        updateWkfMsgStatus($rtngMsgID, "1", $userID);
                        updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

                        //Message Header & Details
                        $msghdr = "WITHDRAWAL - " . $msgTitle;
                        $msgbody = $msgBdy; //$msgbodyAddOn. "ORIGINAL MESSAGE :<br/><br/>" .
                        $msgtyp = "Informational";
                        $msgsts = "0";
                        //$msg_id = getWkfMsgID();
                        $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                        $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, "Initiated", "Acknowledge;Open", 1, $msgbodyAddOn);
                        $affctd4 += updateMCFTrnsStatus($srcdocid, "Withdrawn");

                        //Begin Email Sending Process
                        /* $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                          $lastPrsnID = "|";
                          $msgBatchID = getMsgBatchID();
                          $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                          while ($row = loc_db_fetch_array($result)) {
                          $frmID = $row[0];
                          if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE || $frmID == $fromPrsnID) {
                          $lastPrsnID .= $frmID . "|";
                          continue;
                          }
                          $lastPrsnID .= $frmID . "|";
                          $subject = $row[1];
                          $actSoFar = $row[3];
                          if ($actSoFar == "") {
                          $actSoFar = "&nbsp;&nbsp;NONE";
                          }
                          $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                          $docType = $srcDocType;
                          $to = getPrsnEmail($frmID);
                          $nameto = getPrsnFullNm($frmID);
                          if ($docType != "" && $docType != "Login") {
                          $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                          . "<br/><br/>"
                          . $msgPart .
                          "<br/><br/>Kindly <a href=\""
                          . $app_url . "\">Login via this Link</a> to <strong>VIEW and ACT</strong> on it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                          $errMsg = "";
                          createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "", "Email");
                          }
                          } */
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Withdrawn!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to Original Sender!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Withdrawn";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Request for Information") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Information Requested", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "INFORMATION REQUESTED ON $datestr:- A requested for Information has been generated by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", "Respond;Open", $curPrsnsLevel, $msgbodyAddOn);
                    //$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Information Requested!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Respond") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Response Given", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "RESPONSE TO INFORMATION REQUESTED ON $datestr:- A response to an Information Request has been given by $usrFullNm with the ff Message:<br/>";
                    $msgbodyAddOn .= $apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                    $msgbodyAddOn .= $oldMsgbodyAddOn;

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);

//Message Header & Details
                    $msghdr = "RESPONSE TO INFORMATION REQUEST - " . $msgTitle;
                    $msgbody = $msgBdy; //"ORIGINAL MESSAGE :<br/><br/>" .
                    $msgtyp = "Work Document";
                    $msgsts = "0";
//$msg_id = getWkfMsgID();
                    $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                    $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nwPrsnID, $userID, "Initiated", 'Open;Reject;Request for Information;Authorize', $curPrsnsLevel, $msgbodyAddOn);
//$affctd4+=updatePrsDataChangeReq($srcdocid, "Rejected");
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Response Given!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
// $dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Acknowledge") {
                    $nwPrsnID = getPersonID($nwPrsnLocID);
//$nwPrsnFullNm = getPrsnFullNm($nwPrsnID);
                    $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, "Acknowledged", "None", $userID);
//$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                    $datestr = getFrmtdDB_Date_time();
                    $msgbodyAddOn = "";
                    $msgbodyAddOn .= "MESSAGE ACKNOWLEDGED ON $datestr:- An acknowledgement of the message has been given by $usrFullNm <br/><br/>";
//$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                    $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);

                    updateWkfMsgStatus($rtngMsgID, "1", $userID);
                    updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to Acknowledged!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
                        //$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        //$dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to New Person!";
                        //$dsply .= "<br/>$affctd4 Appointment Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
                else if ($actionToPrfrm == "Authorize") {
                    $affctd = 0;
                    if ($orgnlToPrsnID == $cur_prsnid && $orgnlToPrsnID > 0) {
                        $newStatus = "Reviewed";
                        $newVldtyStatus = "Validated";
                        $nxtStatus = "Open;Reject;Request for Information;Authorize";
                        $nxtApprvr = "Next Approver";
                        $nxtPrsnID = -1;
                        $shdActnBeDone = FALSE;
                        if ($nxtPrsnID <= 0) {
                            $dsply .= "Start Banking Trans. Item Balance Update and Accounting Entries Generation<br/>";
                            $shdActnBeDone = isMCFTrnsQtyVld_LoanRpmnt($srcDocID) && isMCFTrnsCstmrAcntAmtVld_LoanRpmnt($srcDocID);
                            if ($shdActnBeDone === true) {
                                $dsply = "Item Balance && Customer Balance Verified<br/>";
                                $newStatus = "Authorized";
                                $nxtStatus = "Open;Acknowledge";
                                $newVldtyStatus = "Validated";
                            } else {
                                $dsply .= "<i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account!";
                                $newVldtyStatus = "Not Validated";
                            }

                            $dsplyMsg1 = "";
                            $shdActnBeDone = isMCFTrnsCstmrAcntAmtVld_LoayRpmnt_AcctDdctn($srcDocID, $dsplyMsg1);
                            if ($shdActnBeDone === false) {
                                $dsply .= "<i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>$dsplyMsg1!";
                                $newVldtyStatus = "Not Validated";
                            }
                        }

                        if ($shdActnBeDone === true) {
                            $affctd += updtWkfMsgRtngUsngLvl($rtngMsgID, $curPrsnsLevel, $fromPrsnID, $newStatus, $nxtStatus, $userID);
                            //$affctd1+= updateWkfMsgBdy($rtngMsgID, $msgbodyAddOn, $userID);
                            $datestr = getFrmtdDB_Date_time();
                            $msgbodyAddOn = "";
                            $msgbodyAddOn .= strtoupper($newStatus) . " ON $datestr:- This document has been $newStatus by $usrFullNm <br/><br/>";
                            //$msgbodyAddOn.=$apprvrCmmnts . "<br/><br/>";
                            $affctd1 += updtWkfMsgRtngCmnts($routingID, $msgbodyAddOn, $userID);
                            $msgbodyAddOn .= $oldMsgbodyAddOn;
                            updtWkfMsgAllUnclsdRtng($rtngMsgID, $fromPrsnID, "Closed", "None", $userID);
                            //Message Header & Details
                            if ($nxtPrsnID <= 0) {
                                $nxtApprvr = "Original Person";
                                updateWkfMsgStatus($rtngMsgID, "1", $userID);
                                $msghdr = "AUTHORIZED - " . $msgTitle;
                                $msgbody = $msgBdy;
                                $msgtyp = "Informational";
                                $msgsts = "0";
                                //$msg_id = getWkfMsgID();
                                $curPrsnsLevel += 1;
                                $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $orgnlPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                            } else {
                                $msghdr = $msgTitle;
                                $msgbody = $msgBdy;
                                $msgtyp = "Work Document";
                                $msgsts = "0";
                                //$msg_id = getWkfMsgID();
                                $curPrsnsLevel += 1;
                                $affctd2 += updateWkfMsg($msg_id, $msghdr, $msgbody, $userID, $appID, $msgtyp, $msgsts, $srcdoctyp, $srcdocid, $hrchyid, $attchmnts, $attchmnts_desc);
                                $affctd3 += routWkfMsg($msg_id, $fromPrsnID, $nxtPrsnID, $userID, $newStatus, $nxtStatus, $curPrsnsLevel, $msgbodyAddOn);
                            }
                            $affctd4 += updateMCFTrnsStatus($srcdocid, $newStatus, $cur_prsnid);
                            /* if ($nxtPrsnID <= 0) {
                              //Begin Email Sending Process
                              $result = getEmlDetailsAftrActn($srcdoctyp, $srcdocid);
                              $lastPrsnID = "|";
                              $msgBatchID = getMsgBatchID();
                              $paramRepsNVals = $prmID . "~" . $msgBatchID . "|-190~HTML";
                              while ($row = loc_db_fetch_array($result)) {
                              $frmID = $orgnlPrsnID;
                              if (strpos($lastPrsnID, "|" . $frmID . "|") !== FALSE) {
                              $lastPrsnID .= $frmID . "|";
                              continue;
                              }
                              $lastPrsnID .= $frmID . "|";
                              $subject = $row[1];
                              $actSoFar = $row[3];
                              if ($actSoFar == "") {
                              $actSoFar = "&nbsp;&nbsp;NONE";
                              }
                              $msgPart = "<span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ACTIONS TAKEN SO FAR:</span><br/>" . $actSoFar . "<br/> <span style=\"font-weight:bold;text-decoration:underline;color:blue;\">ORIGINAL MESSAGE:</span><br/>&nbsp;&nbsp;" . $row[2];
                              $docType = $srcDocType;
                              $to = getPrsnEmail($frmID);
                              $nameto = getPrsnFullNm($frmID);
                              if ($docType != "" && $docType != "Login") {
                              $message = "Dear $nameto, <br/><br/>A notification has been sent to your account in the Portal as follows:"
                              . "<br/><br/>"
                              . $msgPart .
                              "<br/><br/>Kindly <a href=\""
                              . $app_url . "\">Login via this Link</a> to <strong>VIEW</strong> it!<br/>Thank you for your cooperation!<br/><br/>Best Regards,<br/>" . $admin_name;
                              $errMsg = "";
                              createMessageQueue($msgBatchID, trim(str_replace(";", ",", $to), ";, "), "", "", $message, $subject, "",
                              "Email");
                              //sendEMail(trim(str_replace(";", ",", $to), ","), $nameto, $subject, $message, $errMsg, "", "", "", $admin_name);
                              }
                              break;
                              }
                              } */
                        }
                    }
                    if ($affctd > 0) {
                        $dsply .= "<br/>Status of $affctd Workflow Document(s) successfully updated to $newStatus!";
                        $dsply .= "<br/>$affctd1 Workflow Document(s) Message Body Successfully Updated!";
//$dsply .= "<br/>$affctd2 New Workflow Document(s) Message Body Successfully Created!";
                        $dsply .= "<br/>$affctd3 Workflow Document(s) Successfully Re-Routed to $nxtApprvr!";
                        $dsply .= "<br/>$affctd4 Request Status Successfully Updated!";
                        $msg = "<p style = \"text-align:left; color:#32CD32;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>"; //#32CD32
                    } else {
                        $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Worked On";
                        $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
                    }
                }
            }
        } else {
            $dsply .= "<br/>|ERROR|-Update Failed! No Workflow Document(s) Selected";
            $msg = "<p style = \"text-align:left; color:#ff0000;\"><span style=\"font-style:italic;font-weight:bold;\">$dsply</span></p>";
        }
    }
    if ($msgBatchID > 0) {
        generateReportRun($rptID, $paramRepsNVals, -1);
    }
    return $msg;
}

function withdrawMCFTrnsRqst_LoanMgmt($hdrid) {
    $msg = "";
    $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $hdrid);
    if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Paid' || $rqstHdrStatus == 'Received') {
        return "<span style=\"color:red;\">|ERROR| Nothing to Withdraw!</span>";
    }
    $srcDocID = $hdrid;
    $srcDocType = "Loan Transactions";
    $inptSlctdRtngs = "";
    $actionToPrfrm = "Withdraw";
    $selSQL = "SELECT MAX(b.routing_id)
  FROM wkf.wkf_actual_msgs_hdr a, wkf.wkf_actual_msgs_routng b
  WHERE a.msg_id=b.msg_id and a.src_doc_type='" . $srcDocType . "'
  and a.src_doc_id=" . $hdrid;
    $result1 = executeSQLNoParams($selSQL);
    while ($row = loc_db_fetch_array($result1)) {
        $routingID = $row[0];
        $actionToPrfrm = "Withdraw";
        if ($routingID > 0) {
            $msg = mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
        }
    }
    if ($msg == "") {
        $msg = "<span style=\"color:red;\">|ERROR| Nothing to Withdraw!</span>";
    }
    return $msg;
}

function authorizeMCFTrnsRqst_LoanMgmt($hdrid) {
    $msg = "";
    $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $hdrid);
    if ($rqstHdrStatus == 'Authorized' || $rqstHdrStatus == 'Paid' || $rqstHdrStatus == 'Received') {
        return "<span style=\"color:red;\">|ERROR| Nothing to Authorize!</span>";
    }
    $srcDocID = $hdrid;
    $srcDocType = "Loan Transactions";
    $inptSlctdRtngs = "";
    $actionToPrfrm = "Authorize";
    $selSQL = "SELECT MAX(b.routing_id)
  FROM wkf.wkf_actual_msgs_hdr a, wkf.wkf_actual_msgs_routng b
  WHERE a.msg_id=b.msg_id and a.src_doc_type='" . $srcDocType . "'
  and a.src_doc_id=" . $hdrid;
    $result1 = executeSQLNoParams($selSQL);
    while ($row = loc_db_fetch_array($result1)) {
        $routingID = $row[0];
        $actionToPrfrm = "Authorize";
        if ($routingID > 0) {
            $msg = mcfTrnsReqMsgActns_LoanMgmnt($routingID, $inptSlctdRtngs, $actionToPrfrm, $srcDocID, $srcDocType);
        }
    }
    if ($msg == "") {
        $msg = "<span style=\"color:red;\">|ERROR| Nothing to Authorize!</span>";
    }
    return $msg;
}

function payMCFTrnsRqst_LoanMgmt($hdrid) {
    /*     * NEW 13062017 * */
    $loanRqstID = -1;
    $disbmntDetID = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "disbmnt_det_id", $hdrid);
    if ($disbmntDetID !== "") {
        $loanRqstID = (int) getGnrlRecNm("mcf.mcf_loan_disbursement_det", "disbmnt_det_id", "loan_rqst_id", (int) $disbmntDetID);
    }

    $apprvrStatus = 'Paid';
    $rqstHdrStatus = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "status", $hdrid);
    $rqstTrnsType = getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "trns_type", $hdrid);
    if ($rqstHdrStatus == 'Paid' || $rqstHdrStatus == 'Received') {
        return "<span style=\"color:red;\">|ERROR| No Payment to Process!</span>";
    }
    if ($rqstTrnsType == "DEPOSIT") {
        $apprvrStatus = 'Received';
    }
    $srcDocID = $hdrid;
    $dsply = "Start Banking Trans. Item Balance Update and Accounting Entries Generation<br/>";
    $shdActnBeDone = isMCFTrnsQtyVld($srcDocID, $dsply) && isMCFTrnsCstmrAcntAmtVld($srcDocID);
    if ($shdActnBeDone === true) {
        $dsply .= "Item Balance && Customer Balance Verified<br/>";
        $shdActnBeDone = updateMCFStckBals($srcDocID);
        if ($shdActnBeDone === true) {
            $dsply .= "Item Balance Updated<br/>";
            $shdActnBeDone = updateMCFCstmrAcntBals($srcDocID);
            if ($shdActnBeDone === true) {
                $dsply .= "<span style=\"color:green;font-weight:bold;\">Customer Balance Updated<br/></span>";
                $nwMsg = "";
                $shdActnBeDone = createMCFAccntng($srcDocID, $nwMsg);
                if ($shdActnBeDone === FALSE) {
                    $dsply .= "<span style=\"color:red;font-weight:bold;\">$nwMsg</span>";
                    $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Failed to Create Accounting!</span>";
                } else {
                    $dsply .= "<span style=\"color:green;font-weight:bold;\">Accounting Created<br/></span>";
                    $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $hdrid);
                    /** NEW MODIFIED * */
                    if ($voidedTrnsID > 0) {
                        updateMCFTrnsStatus($voidedTrnsID, "Void");
                        updateLoanRqstIsPaidStatus($loanRqstID, 0);
                    } else {
                        updateLoanRqstIsPaidStatus($loanRqstID, 1);
                    }
                    updateMCFTrnsStatus($hdrid, $apprvrStatus);
                }
            }
        } else {
            $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account and that you have Permission to perform this Action on this Cage/Till!</span>";
        }
    } else {
        $dsply .= "<span style=\"color:red;font-weight:bold;\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>Error Occured!<br/>Kindly ensure that you have the Requested Quantities in the various Source Cages as well as the Customer's Account!</span>";
    }
    $msg = $dsply;
    return $msg;
}

function get_LoanRqstPrincipalBal($loanRqstID) {
    $strSql = "SELECT mcf.calc_loan_ttl_bal($loanRqstID, 'PRINCIPAL OUTSTANDING')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

function get_DisbursementDetForLoansRqst($loanRqstID) {

    $sqlStr = "SELECT distinct a.loan_rqst_id, CASE WHEN a.cust_type = 'Group' THEN mcf.get_customer_name('Individual', a.cust_id)
        ELSE mcf.get_customer_name(a.cust_type, a.cust_id) end customer , a.cust_type, a.trnsctn_id, CASE WHEN d.status = 'Disbursed' AND d.voided_disbmnt_hdr_id > 0 THEN
        -1 * a.approved_amount ELSE a.approved_amount END approved_amount,
        a.apprvd_loan_tenor || ' ' || coalesce(a.apprvd_loan_tenor_type,'') tenor_disp, a.apprvd_interest_rate, to_char(to_timestamp(a.application_date,'YYYY-MM-DD'),'DD-Mon-YYYY'), a.loan_rqst_id, b.charge_interest,
        a.apprvd_loan_tenor, a.apprvd_loan_tenor_type,  b.loan_repayment_type, b.compounding_period, grace_period_no, grace_period_type, disbmnt_det_id,
        c.interest_rate_per_period fd1, c.scheduled_prdc_paymnt_amnt, to_char(to_timestamp(c.repay_start_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_start_date,
        to_char(to_timestamp(c.repay_end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') repay_end_date, interest_rate_type, applctn_type, crdt_type, ref_loanrqst_id,
        principal_rcvbl_acct_id, interest_rcvbl_acct_id, deferred_interest_acct_id, loans_payable_acct_id, currency_id, repayment_type, repayment_account_id,
        b.loan_product_id, c.disbmnt_hdr_id, account_id, ttl_interest, a.is_disbursed
          FROM mcf.mcf_loan_request a, mcf.mcf_prdt_loans  b, mcf.mcf_loan_disbursement_det c,  mcf.mcf_loan_disbursement_hdr d
                WHERE a.loan_product_id = b.loan_product_id
                and c.loan_rqst_id = a.loan_rqst_id
                AND a.loan_rqst_id = $loanRqstID ORDER BY 1";
    //echo($sqlStr);
    $result = executeSQLNoParams($sqlStr);
    return $result;
}

function getDefaultAccountID($branchID, $acctID) {
    $strSql = "SELECT org.get_accnt_id_brnch_eqv($branchID, $acctID)";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return -1;
}

//BEGIN mcf.mcf_property_collaterals
function createPropertyCollaterals($collateral_name, $description, $type, $valuer_sup_id, $prpty_value, $parent_prpty_collateral_id, $owner_cust_id, $owner_cust_type, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_property_collaterals(
            collateral_name, description, type, valuer_sup_id,
            prpty_value, parent_prpty_collateral_id, collateral_code, owner_cust_id,
            created_by, creation_date, last_update_by, last_update_date,
            status, org_id, owner_cust_type)
    VALUES ('" . loc_db_escape_string($collateral_name) . "','" . loc_db_escape_string($description) .
            "','" . loc_db_escape_string($type) . "', $valuer_sup_id,
            $prpty_value, $parent_prpty_collateral_id, 'PC-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "', $owner_cust_id,
            $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',
            'Incomplete', $orgID, '$owner_cust_type')";

    return execUpdtInsSQL($insSQL);
}

function updatePropertyCollaterals($prpty_collateral_id, $collateral_name, $description, $type, $valuer_sup_id, $prpty_value, $parent_prpty_collateral_id, $owner_cust_id, $owner_cust_type, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);


    $insSQL = "UPDATE mcf.mcf_property_collaterals
        SET collateral_name='" . loc_db_escape_string($collateral_name) . "', description='" . loc_db_escape_string($description) . "',
            type='" . loc_db_escape_string($type) . "',
            valuer_sup_id=$valuer_sup_id, prpty_value=$prpty_value, parent_prpty_collateral_id=$parent_prpty_collateral_id,
            owner_cust_id=$owner_cust_id,
            last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "', org_id=$orgID, owner_cust_type='$owner_cust_type'
      WHERE prpty_collateral_id = $prpty_collateral_id";

    return execUpdtInsSQL($insSQL);
}

function deletePropertyCollaterals($prptyColtId) {
    $delSQL1 = "DELETE FROM mcf.mcf_property_collaterals WHERE prpty_collateral_id = $prptyColtId";
    return execUpdtInsSQL($delSQL1);
}

function getPropertyCollateralID($dateStr, $usrID, $collateral_name) {
    $sqlStr = "SELECT prpty_collateral_id FROM mcf.mcf_property_collaterals WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND collateral_name = '" . loc_db_escape_string($collateral_name) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getPropertyCollateralDets($prptyColtId) {
    $strSql = "SELECT prpty_collateral_id, collateral_name, description, type, mcf.get_customer_name(owner_cust_type, owner_cust_id), /**4**/
        valuer_sup_id, prpty_value, parent_prpty_collateral_id, collateral_code, owner_cust_id, /**9**/
       created_by, creation_date, last_update_by, last_update_date, /**13**/
       status, org_id, owner_cust_type, authorized_by_person_id, autorization_date /**18**/
  FROM mcf.mcf_property_collaterals a  WHERE prpty_collateral_id = $prptyColtId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getPropertyCollateralTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Property Collateral") {
        $whrcls = " AND (a.collateral_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($sortBy == "Property Name ASC") {
        $ordrBy = "a.collateral_name ASC";
    } else if ($sortBy == "Property Name DESC") {
        $ordrBy = "a.collateral_name DESC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT prpty_collateral_id, collateral_name, description, type, collateral_code, mcf.get_customer_name(owner_cust_type, owner_cust_id), status,
       valuer_sup_id, prpty_value, parent_prpty_collateral_id, org_id
  FROM mcf.mcf_property_collaterals a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getPropertyCollateralTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Property Collateral") {
        $whrcls = " AND (a.collateral_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_property_collaterals a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function isPrptyColtInActiveUse($prptyColtId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_prpry_n_invstmnt_colt_liens WHERE colt_src_id = $prptyColtId AND colt_type = 'Property'"
            . " AND to_char(now(),'YYYY-MM-DD') between start_date_active AND end_date_active");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }

    $result2 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_request WHERE property_collateral_id = $prptyColtId");
    while ($row2 = loc_db_fetch_array($result2)) {
        if ((int) $row2[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function doesPrptyColtNmExistsSave($prptyColtNm) {
    $result1 = executeSQLNoParams("SELECT prpty_collateral_id FROM mcf.mcf_property_collaterals "
            . "WHERE upper(collateral_name) = '" . strtoupper(loc_db_escape_string($prptyColtNm)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesPrptyColtNmExistsUpdate($prptyColtId, $prptyColtNm) {
    $result1 = executeSQLNoParams("SELECT prpty_collateral_id FROM mcf.mcf_property_collaterals "
            . "WHERE upper(collateral_name) = '" . strtoupper(loc_db_escape_string($prptyColtNm)) . "' AND prpty_collateral_id != $prptyColtId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

//END mcf.mcf_property_collaterals
//BEGIN mcf.mcf_loan_sectors_major
function createSectorMajor($sectorName, $sectorDesc, $isEnabled, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_loan_sectors_major(
            sector_name, sector_desc, is_enabled, org_id, created_by,
            creation_date, last_update_by, last_update_date)
    VALUES ('" . loc_db_escape_string($sectorName) . "','" . loc_db_escape_string($sectorDesc) .
            "','" . $isEnabled . "'," . $orgID .
            "," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateSectorMajor($sectorMajorId, $sectorName, $sectorDesc, $isEnabled, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_loan_sectors_major SET
            sector_name ='" . loc_db_escape_string($sectorName) . "', sector_desc ='" . loc_db_escape_string($sectorDesc) . "',
                is_enabled ='" . $isEnabled . "', last_update_by =" . $usrID . ",
             last_update_date = '" . $dateStr . "' WHERE major_sector_id = $sectorMajorId";

    return execUpdtInsSQL($insSQL);
}

function deleteSectorMajor($sectorMajorId) {
    //CASCADE DELETION
    $delSQL1 = "DELETE FROM mcf.mcf_loan_sectors_major WHERE major_sector_id = $sectorMajorId";
    $delSQL2 = "DELETE FROM mcf.mcf_loan_sectors_minor WHERE major_sector_id = $sectorMajorId";

    execUpdtInsSQL($delSQL2);
    return execUpdtInsSQL($delSQL1);
}

function getSectorMajorID($dateStr, $usrID, $sectorName) {

    $sqlStr = "SELECT major_sector_id FROM mcf.mcf_loan_sectors_major WHERE 1=1 AND creation_date = '" . $dateStr .
            "' AND created_by = " . $usrID . " AND sector_name = '" . loc_db_escape_string($sectorName) . "'";

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function getSectorMajorDets($sectorMajorId) {
    $strSql = "SELECT major_sector_id, sector_name, sector_desc, is_enabled, org_id, created_by,
       creation_date, last_update_by, last_update_date
  FROM mcf.mcf_loan_sectors_major a  WHERE major_sector_id = $sectorMajorId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSectorMajorTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Major Sector") {
        $whrcls = " AND (a.sector_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (sector_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $ordrBy = "a.last_update_date DESC";

    $strSql = "SELECT major_sector_id, sector_name, sector_desc, is_enabled, org_id
  FROM mcf.mcf_loan_sectors_major a  WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getSectorMajorTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Major Sector") {
        $whrcls = " AND (a.sector_name ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (sector_desc ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.is_enabled) = 'YES'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_loan_sectors_major a WHERE (1 = 1 AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function isSectorMajorInActiveUse($SectorMajorId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_sectors_minor WHERE major_sector_id = $SectorMajorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        }
    }

    $result2 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_prdt_loans WHERE sector_clsfctn_major_id = $SectorMajorId");
    while ($row2 = loc_db_fetch_array($result2)) {
        if ((int) $row2[0] > 0) {
            return true;
        }
    }

    return false;
}

function doesSectorMajorNameExistsSave($sectorName) {
    $result1 = executeSQLNoParams("SELECT major_sector_id FROM mcf.mcf_loan_sectors_major "
            . "WHERE upper(sector_name) = '" . strtoupper(loc_db_escape_string($sectorName)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesSectorMajorNameExistsUpdate($SectorMajorId, $sectorName) {
    $result1 = executeSQLNoParams("SELECT major_sector_id FROM mcf.mcf_loan_sectors_major "
            . "WHERE upper(sector_name) = '" . strtoupper(loc_db_escape_string($sectorName)) . "' AND major_sector_id != $SectorMajorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

//BEGIN mcf.mcf_loan_sectors_major
//BEGIN mcf.mcf_loan_sectors_minor
function createSectorMinor($sectorMajorId, $minorSectorName, $isEnabled, $minorSectorDesc, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "INSERT INTO mcf.mcf_loan_sectors_minor(
            major_sector_id, sector_name, is_enabled, sector_desc,
            created_by, creation_date, last_update_by, last_update_date)
    VALUES ($sectorMajorId, '" . loc_db_escape_string($minorSectorName) . "', '$isEnabled', '" . loc_db_escape_string($minorSectorDesc) . "',
            $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function updateSectorMinor($sectorMinorId, $sectorMajorId, $minorSectorName, $isEnabled, $minorSectorDesc, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $insSQL = "UPDATE mcf.mcf_loan_sectors_minor SET
            major_sector_id =$sectorMajorId, sector_name ='" . loc_db_escape_string($minorSectorName) . "',
			is_enabled ='$isEnabled', sector_desc ='" . loc_db_escape_string($minorSectorDesc) . "',
           last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "' WHERE minor_sector_id = $sectorMinorId";

    return execUpdtInsSQL($insSQL);
}

function deleteSectorMinor($sectorMinorId) {
    $delSQL1 = "DELETE FROM mcf.mcf_loan_sectors_minor WHERE minor_sector_id = $sectorMinorId";

    return execUpdtInsSQL($delSQL1);
}

function get_AllSectorMinor($searchFor, $searchIn, $offset, $limit_size, $SectorMajorID) {
    $wherecls = "(sector_name ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT minor_sector_id, major_sector_id, sector_name, sector_desc, is_enabled,
       created_by, creation_date, last_update_by, last_update_date
  FROM mcf.mcf_loan_sectors_minor a WHERE 1 = 1 AND " . $wherecls .
            "(a.major_sector_id = " . $SectorMajorID . ") "
            . "ORDER BY 3 ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_AllSectorMinorTtl($searchFor, $searchIn, $SectorMajorID) {
    $wherecls = "(sector_name ilike '" .
            loc_db_escape_string($searchFor) . "') and ";

    $strSql = "SELECT count(1) FROM mcf.mcf_loan_sectors_minor a WHERE 1 = 1 AND " . $wherecls .
            "(a.major_sector_id = " . $SectorMajorID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function isSectorMinorInActiveUse($SectorMinorId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_prdt_loans WHERE sector_clsfctn_minor_id = $SectorMinorId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

//END mcf.mcf_loan_sectors_minor
// BEGIN mcf.mcf_global_variables
function get_DfltMCFGlobalVars($searchFor, $searchIn, $offset, $limit_size, $orgID) {
    $wherecls = "";
    if ($searchIn === "Variable Name") {
        $wherecls = "(a.var_name ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    } else {
        $wherecls = "(a.var_name ilike '" .
                loc_db_escape_string($searchFor) . "' or a.var_value ilike '" .
                loc_db_escape_string($searchFor) . "' or a.value_data_type ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    }
    $strSql = "SELECT
                a.global_var_id,
                a.var_name,
                a.var_value,
               a.value_data_type
            FROM mcf.mcf_global_variables a
            WHERE " . $wherecls .
            "(a.org_id = " . $orgID . ") "
            . "ORDER BY a.var_name DESC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
//echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_DfltMCFGlobalVarsTtl($searchFor, $searchIn, $orgID) {
    $wherecls = "";
    if ($searchIn === "Variable Name") {
        $wherecls = "(a.var_name ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    } else {
        $wherecls = "(a.var_name ilike '" .
                loc_db_escape_string($searchFor) . "' or a.var_value ilike '" .
                loc_db_escape_string($searchFor) . "' or a.value_data_type ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    }
    $strSql = "SELECT
                count(1)
            FROM mcf.mcf_global_variables a
            WHERE " . $wherecls .
            "(a.org_id = " . $orgID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

//BEGIN mcf.mcf_manual_interest_pymnt_hdr_svngs
function getManualInterestPymntSavingsTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";
    $ordrBy = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Batch Name") {
        $whrcls = " AND (a.transaction_id ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($sortBy == "Batch Name ASC") {
        $ordrBy = "a.transaction_id ASC";
    } else if ($sortBy == "Batch Name DESC") {
        $ordrBy = "a.transaction_id DESC";
    } else if ($sortBy == "Transaction Date DESC") {
        $ordrBy = "a.last_update_date DESC";
    }

    $strSql = "SELECT mnlpymnt_svngs_hdr_id, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'),
        a.description, branch_id, ttl_accrued_amount, ttl_amount_paid, status, pymnt_status, authorized_by_person_id,
       autorization_date, transaction_id, a.currency_id, iso_code
  FROM mcf.mcf_manual_interest_pymnt_hdr_svngs a, mcf.mcf_currencies b  WHERE (a.currency_id = b.crncy_id AND (1 = 1 " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getManualInterestPymntSavingsTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Batch Name") {
        $whrcls = " AND (a.transaction_id ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Description") {
        $whrcls = " AND (a.description ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_manual_interest_pymnt_hdr_svngs a, mcf.mcf_currencies b  WHERE (a.currency_id = b.crncy_id AND (1 = 1 " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function createManualInterestPymntSavings($mnlpymnt_svngs_hdr_id, $trns_date, $description, $branch_id, $currency_id, $dateStr) {
    global $usrID;
    global $orgID;

    $balDte = getStartOfDayYMD();

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "INSERT INTO mcf.mcf_manual_interest_pymnt_hdr_svngs(
            mnlpymnt_svngs_hdr_id, trns_date, description, branch_id, ttl_accrued_amount,
            ttl_amount_paid, status, pymnt_status, created_by, creation_date, last_update_by,
            last_update_date, transaction_id, currency_id)
    VALUES ($mnlpymnt_svngs_hdr_id, '$balDte', '" . loc_db_escape_string($description) . "',$branch_id, " . getUnpaidSvngsAccruedInterest($currency_id, $branch_id) . ", 0.00,
            'Incomplete', 'Unprocessed', $usrID, '$dateStr',  $usrID, '$dateStr', 'MP-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "',$currency_id)";

    return execUpdtInsSQL($insSQL);
}

function updateManualInterestPymntSavings($mnlpymnt_svngs_hdr_id, $trns_date, $description, $branch_id, $currency_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $balDte = getStartOfDayYMD();

    $insSQL = "UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs
   SET trns_date='$balDte', description='" . loc_db_escape_string($description) . "', branch_id=$branch_id,
       ttl_accrued_amount=" . getUnpaidSvngsAccruedInterest($currency_id, $branch_id) . ", ttl_amount_paid=0.00,
       last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "', transaction_id='MP-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "',
       currency_id=$currency_id
 WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id";

    return execUpdtInsSQL($insSQL);
}

function getNextSequenceVal($sequence) {
    $strSql = "SELECT $sequence";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function deleteManualInterestPymntSavings($mnlpymnt_svngs_hdr_id) {
    $delSQL1 = "DELETE FROM mcf.mcf_manual_interest_pymnt_hdr_svngs WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id";
    return execUpdtInsSQL($delSQL1);
}

function getManualInterestPymntSavingsDets($mnlpymnt_svngs_hdr_id) {
    $strSql = "SELECT mnlpymnt_svngs_hdr_id, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), description, branch_id, ttl_accrued_amount,
       ttl_amount_paid, status, pymnt_status, authorized_by_person_id,
       autorization_date, created_by, creation_date, last_update_by,
       last_update_date, transaction_id, currency_id
  FROM mcf.mcf_manual_interest_pymnt_hdr_svngs a  WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function canDeleteManualInterestPymntSavings($mnlpymnt_svngs_hdr_id) {
    $result1 = executeSQLNoParams("SELECT status FROM mcf.mcf_manual_interest_pymnt_hdr_svngs WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id");
    $status = "";
    $paidStatus = "";
    while ($row1 = loc_db_fetch_array($result1)) {
        $status = $row1[0];
    }

    $result2 = executeSQLNoParams("SELECT pymnt_status FROM mcf.mcf_manual_interest_pymnt_hdr_svngs WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id");
    while ($row2 = loc_db_fetch_array($result2)) {
        $paidStatus = $row2[0];
    }

    if ($status . ", " . $paidStatus == "Unauthorized, Unprocessed" || $status . ", " . $paidStatus == "Authorized, Processed") {
        return false;
    }
    return true;
}

function processManualInterestPymntSavings($mnlpymnt_svngs_hdr_id, $crncyID, $branchID) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    $trnsDte = getStartOfDayYMD();
    global $orgID;
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();

    $strSql = "SELECT mcf.xx_process_interest_pymnt_svngs($usrID, '$balDte', $orgID,$crncyID, $branchID, 'MANUAL', $mnlpymnt_svngs_hdr_id)";


    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    if ($rtrnRslt == 'SUCCESS') {
        $ttlAmntPaid = getGnrlRecNm("mcf.mcf_manual_interest_pymnt_hdr_svngs", "mnlpymnt_svngs_hdr_id", "ttl_amount_paid", $mnlpymnt_svngs_hdr_id);
        $recCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET pymnt_status = 'Processed', "
                . "last_update_by = $usrID, last_update_date = '$dateStr', ttl_amount_paid = $ttlAmntPaid, trns_date = '$trnsDte' WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id");
    }

    return $rtrnRslt;
}

function getUnpaidSvngsAccruedInterest($crncy_id, $branch_id) {
    $andCls = " AND 1 = 1";
    if ($branch_id > 0) {
        $andCls = " AND a.branch_id = $branch_id";
    }

    $strSql = "SELECT sum(interest_earned)
        FROM mcf.mcf_daily_acct_bals_n_interest x
        WHERE account_id IN (
          SELECT account_id FROM mcf.mcf_accounts a, mcf.mcf_prdt_savings b
          WHERE a.product_type_id = b.svngs_product_id
          AND b.currency_id = $crncy_id $andCls) AND upper(is_interest_paid) = 'NO' AND interest_earned > 0";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function getDummyDtaCnt() {

    $strSql = "SELECT col FROM mcf.mcf_dummy";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function validateAccountNoLoanRepay($acctNo) {
    global $usrID;

    //$strSql = "SELECT account_id FROM mcf.mcf_accounts WHERE account_number = '" . loc_db_escape_string($acctNo) . "' AND account_type = 'Loan'";
    $strSql = "SELECT a.account_id FROM mcf.mcf_loan_request a, mcf.mcf_accounts b
        WHERE a.account_id = b.account_id AND account_number = '" . loc_db_escape_string($acctNo) . "'
        AND b.account_type = 'Loan' and a.status NOT IN ('Rescheduled','Topped-Up','Written-Off')";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

function checkIDTypeSave($ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl) {
    $strSql = "";
    $cntTtl = 0;

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
    }

    $strSql = "SELECT count(*) FROM $tblNm
        WHERE national_id_typ =  '" . loc_db_escape_string($ntnlIDCardsIDTyp) . "'
        AND id_number = '" . loc_db_escape_string(trim($ntnlIDCardsIDNo)) . "'
        AND nationality = '" . loc_db_escape_string($ntnlIDCardsCountry) . "'";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
}

function checkIDTypeUpdate($prsnCustID, $ntnlIDCardsCountry, $ntnlIDCardsIDTyp, $ntnlIDCardsIDNo, $rvsnTtl) {
    $strSql = "";
    $cntTtl = 0;

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
    }

    $strSql = "SELECT count(*) FROM $tblNm
        WHERE national_id_typ =  '" . loc_db_escape_string($ntnlIDCardsIDTyp) . "'
        AND id_number = '" . loc_db_escape_string($ntnlIDCardsIDNo) . "'
        AND nationality = '" . loc_db_escape_string($ntnlIDCardsCountry) . "'
        AND person_id != $prsnCustID";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
}

function getCustAge($dob) {
    $strSql = "select EXTRACT(YEAR FROM age(cast('$dob' as date)))";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

function getMonthAge($dob) {
    $strSql = "select EXTRACT(MONTH FROM age(cast('$dob' as date)))";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (int) $row[0];
    }
    return -1;
}

function get_OneCustAccntHstryNavSA($pkeyID, $offset, $limit_size, $qStrtDte, $balDte) {

    if ($balDte != "") {
        $balDte = substr(cnvrtDMYTmToYMDTm($balDte), 0, 10);
    } else {
        $balDte = substr(getStartOfDayYMD(), 0, 10);
    }

    if ($qStrtDte != "") {
        $qStrtDte = substr(cnvrtDMYTmToYMDTm($qStrtDte), 0, 10);
    } else {
        $qStrtDte = '1900-01-01';
    }

    $whereCls = " AND to_timestamp(a.trns_date,'YYYY-MM-DD') between to_date('" . $qStrtDte . "','YYYY-MM-DD') AND to_date('" . $balDte . "','YYYY-MM-DD')";

    $strSql = "SELECT a.acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, a.trns_type, " .
            "a.amount, COALESCE(a.status,'Not Submitted'), a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), a.trns_no, "
            . "a.value_date, a.branch_id, a.doc_type, a.doc_no, a.trns_person_name, a.trns_person_tel_no, "
            . "a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number, a.trns_person_type, a.status, "
            . "a.debit_or_credit, a.authorized_by_person_id, a.autorization_date, a.amount_cash, "
            . "a.voided_acct_trns_id, a.voided_trns_type, a.reversal_reason, a.description, a.created_by, "
            . "b.branch_id, prs.get_prsn_name(a.authorized_by_person_id), a.approval_limit_id, d.max_amount,
              CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_unclrd_bals(a.account_id, '" . $balDte . "') ELSE a.unclrdbal+mcf.get_trns_crnt_prtn(a.acct_trns_id) END,
              CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_avlbl_bals(a.account_id, '" . $balDte . "') ELSE a.clrdbal+mcf.get_trns_avlbl_prtn(a.acct_trns_id) END,
              b.account_type,
              CASE WHEN a.acctstatus='' THEN b.account_status ELSE a.acctstatus END,
              CASE WHEN a.acctcustomer='' THEN mcf.get_customer_name(b.cust_type, b.cust_id) ELSE a.acctcustomer END,
                b.prsn_type_or_entity, a.acctlien,
                CASE WHEN a.mandate='' THEN b.mandate ELSE a.mandate END, a.wtdrwllimitno, a.wtdrwllimitamt, a.wtdrwllimittype,
                org.get_site_name(a.branch_id::integer) " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((b.account_number = '" . loc_db_escape_string($pkeyID) . "')$whereCls) ORDER BY a.trns_date DESC, a.acct_trns_id  DESC LIMIT $limit_size OFFSET " . abs($offset * $limit_size);
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_OneCustAccntHstrytNavTtlSA($pkeyID) {
    $whereCls = "";
    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((b.account_number = '" . loc_db_escape_string($pkeyID) . "')$whereCls)";
    //echo $strSql;
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function getCustAcctDataChngPndngCountSA($accountNo) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_accounts WHERE account_number = '" . loc_db_escape_string($accountNo) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function getCustAccountDetsSA($acctNo, $tblNmCustInd1) {
    global $orgID;
    $acctID = getGnrlRecID("mcf.mcf_accounts", "account_number", "account_id", $acctNo, $orgID);
    $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID)";

    if ($tblNmCustInd1 == "mcf.mcf_accounts_hstrc") {
        $andClause = "AND a.rvsn_ttl = (SELECT rvsn_ttl from mcf.mcf_accounts where account_id = $acctID AND a.status NOT IN ('Approved','Authorized'))";
    }

    $strSql = "SELECT account_id, cust_type, mcf.get_customer_name(cust_type, cust_id), cust_id, account_number, /**4**/
        account_title, account_type, mcf.get_account_prdt_name(account_type, product_type_id) prdt_typ, product_type_id, /**8**/
        account_trns_type, prsn_type_or_entity, mcf.get_account_prdt_crncy(account_type, product_type_id) crncy, currency_id, /**12**/
        purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, exptd_trns_per_mnth, /**17**/
       exptd_amount_per_mnth, branch_id, relationship_officer, comments, status, overdraft_bal, mandate, /**24**/
       allwd_group_type, allwd_group_value, coalesce(accrued_interest,0.00), CASE WHEN UPPER(is_dormant) = 'YES' THEN 'Dormant' ELSE '' END dormancy, /**28**/
       account_status, account_status_reason, old_account_number, /**31**/
       a.rvsn_ttl /**32**/
  FROM $tblNmCustInd1 a WHERE account_id = $acctID $andClause";

    // echo $strSql;

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getCustAccountBalsSA($acctNo, $balDate) {
    global $orgID;
    $acctID = getGnrlRecID("mcf.mcf_accounts", "account_number", "account_id", $acctNo, $orgID);

    if ($balDate != "") {
        $balDate = substr(cnvrtDMYTmToYMDTm($balDate), 0, 10);
    } else {
        $balDate = substr(getStartOfDayYMD(), 0, 10);
    }

    $sqlStr = "SELECT mcf.get_cstacnt_unclrd_bals($acctID,'" . $balDate . "'), mcf.get_cstacnt_unclrd_funds($acctID,'" . $balDate . "'),"
            . "mcf.get_cstacnt_lien_bals($acctID,'" . $balDate . "'), mcf.get_cstacnt_avlbl_bals($acctID,'" . $balDate . "')";
    $result = executeSQLNoParams($sqlStr);
    //echo $sqlStr;
    return $result;
}

function rvrsProcessManualInterestPymntSavings($mnlpymnt_svngs_hdr_id, $crncyID, $branchID) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    $trnsDte = getStartOfDayYMD();
    global $orgID;
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();

    $strSql = "SELECT mcf.xx_process_svngs_interest_pymnt($usrID, '$balDte', $orgID,$crncyID, $branchID, 'MANUAL', $mnlpymnt_svngs_hdr_id)";


    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    if ($rtrnRslt == 'SUCCESS') {
        $ttlAmntPaid = getGnrlRecNm("mcf.mcf_manual_interest_pymnt_hdr_svngs", "mnlpymnt_svngs_hdr_id", "ttl_amount_paid", $mnlpymnt_svngs_hdr_id);
        $recCnt = execUpdtInsSQL("UPDATE mcf.mcf_manual_interest_pymnt_hdr_svngs SET pymnt_status = 'Processed', "
                . "last_update_by = $usrID, last_update_date = '$dateStr', ttl_amount_paid = $ttlAmntPaid, trns_date = '$trnsDte' WHERE mnlpymnt_svngs_hdr_id = $mnlpymnt_svngs_hdr_id");
    }

    return $rtrnRslt;
}

/* loan write off */

function getLoanWriteOffTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Customer Name") {
        $whrcls = " AND (/*mcf.get_customer_name(b.cust_type, b.cust_id)*/ mcf.get_customer_name_loanrqst(b.loan_rqst_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Request") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($sortBy == "Transaction Date DESC") {
        $ordrBy = "a.trns_date DESC";
    }

    $strSql = "SELECT distinct loan_writeoff_id, a.trnsctn_id, mcf.get_customer_name_loanrqst(b.loan_rqst_id) /*mcf.get_customer_name(b.cust_type, b.cust_id)*/ cust_name,
  b.trnsctn_id loan_rqst, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'),
  iso_code||round(amount::numeric, 2) amount,  a.status,  writeoff_reason, b.trnsctn_id,
       writeoff_status, a.trns_date, a.branch_id
  FROM mcf.mcf_loan_writeoffs a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
AND c.currency_id = d.crncy_id AND (1 = 1 AND (c.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getLoanWriteOffTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Customer Name") {
        $whrcls = " AND (mcf.get_customer_name(b.cust_type, b.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Request") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_loan_writeoffs a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
	WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
	AND c.currency_id = d.crncy_id AND (1 = 1 AND (c.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function createLoanWriteOffs($loan_writeoff_id, $loan_rqst_id, $writeoff_reason, $trns_date, $branch_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    if ($trns_date != "") {
        $trns_date = cnvrtDMYTmToYMDTm($trns_date);
    }

    $insSQL = "INSERT INTO mcf.mcf_loan_writeoffs(
            loan_writeoff_id, loan_rqst_id, amount, created_by, creation_date,
            last_update_by, last_update_date, status, trnsctn_id, writeoff_reason,
            writeoff_status,  trns_date, branch_id)
    VALUES ($loan_writeoff_id, $loan_rqst_id, (SELECT mcf.get_loan_rqst_bal($loan_rqst_id)), $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',
            'Incomplete', 'LW-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "', '" . loc_db_escape_string($writeoff_reason) . "',
            'Unprocessed', '$trns_date', $branch_id)";

    return execUpdtInsSQL($insSQL);
}

function updateLoanWriteOffs($loan_writeoff_id, $loan_rqst_id, $writeoff_reason, $trns_date, $branch_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $balDte = getStartOfDayYMD();

    $insSQL = "UPDATE mcf.mcf_loan_writeoffs
   SET loan_writeoff_id=$loan_writeoff_id, loan_rqst_id=$loan_rqst_id, amount=(SELECT mcf.get_loan_rqst_bal($loan_rqst_id)),
       last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "', writeoff_reason='" . loc_db_escape_string($writeoff_reason) . "',
           trns_date='$balDte', branch_id=$branch_id
    WHERE loan_writeoff_id = $loan_writeoff_id";

    return execUpdtInsSQL($insSQL);
}

function getNewLoanWriteOffID() {
    $sqlStr = "SELECT nextval('mcf.mcf_loan_writeoffs_loan_writeoff_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function deleteLoanWriteOffs($loanWriteOffId) {
    $delSQL1 = "DELETE FROM mcf.mcf_loan_writeoffs WHERE loan_writeoff_id = $loanWriteOffId";
    return execUpdtInsSQL($delSQL1);
}

function getLoanWriteOffDets($loanWriteOffId) {
    $strSql = "SELECT distinct loan_writeoff_id, a.trnsctn_id, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'),
  a.branch_id, a.loan_rqst_id, mcf.get_customer_name(b.cust_type, b.cust_id) cust_name, writeoff_reason,
  a.amount, a.status, a.writeoff_status, d.iso_code
  FROM mcf.mcf_loan_writeoffs a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
AND c.currency_id = d.crncy_id AND loan_writeoff_id = $loanWriteOffId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function createGrnlAccntngOneEvnt($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsCrncyID, $lineid, $detaildTrnsDesc, $doctype, $evntTyp, &$errMsg) {
    global $orgID;
    global $prsnid;
    $dateStr = getFrmtdDB_Date_time();
    $succs = true;
    $mappedCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

    $entrdRate = (float) 1;
    $fnccurid = getOrgFuncCurID($orgID);
    $trnsLnTyp = "";
    $trnsSrc = "SYS";

    if ($evntTyp == "P") {
        deleteDocGLInfcLns($docHdrID, $doctype);
        rvrsImprtdIntrfcTrns($docHdrID, $doctype);
    }

    $nwMsg = "";

    if ($dbtAccntID <= 0 || $crdtAccntID <= 0) {
        $errMsg .= "Debit and Credit Accounts must be setup for this transaction!<br/>";
        return false;
    }

    $acctmappedCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $dbtAccntID);
    if ($mappedCrncyID !== $acctmappedCrncyID) {
        $errMsg .= "Transaction Currency ID $mappedCrncyID is not the same as the Account Currency ID $acctmappedCrncyID!<br/><br/>";
        return false;
    }

    //$crdtAccntID = getDefaultAccountID($prsnid, $crdtAccntID1);
    $succs = generateGnrlAccntng($fnccurid, $trnsAmnt, $doctype, $docHdrID, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $mappedCrncyID, $lineid, $dateStr, $detaildTrnsDesc, $trnsLnTyp, $trnsSrc, $nwMsg);

    if ($succs === FALSE) {
        $errMsg .= $nwMsg;
        return $succs;
    }

    return $succs;
}

function generateGnrlAccntng($fnccurid, $trnsAmnt, $doctype, $docHdrID, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $entrdCrncyID, $lineid, $dateStr, $detaildTrnsDesc, $trnsLnTyp, $trnsSrc, &$errMsg) {
    $trnsDate = getStartOfDayDMYHMS();
    $succs = FALSE;
    //Get Lst Exchage Rates and A
    $acctCrncyAmnt = 0;
    $acctCrncyID = -1;
    $funcCrncyRate = round(get_LtstExchRate($entrdCrncyID, $fnccurid, $dateStr), 15);
    $acntCrncyRate = 1.00;
    $entrdAMnt = round($trnsAmnt, 2);

    $ttltrnsAmnt = $trnsAmnt * $funcCrncyRate;

    $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $dbtAccntID);
    $acntCrncyRate = round(1, 15);
    $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);

    $succs = sendToMCFGLIntrfcMnl($dbtAccntID, $dbtAccntIncrsOrDcrs, $ttltrnsAmnt, $trnsDate, $detaildTrnsDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);

    if (!$succs) {
        return $succs;
    } else {
        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $crdtAccntID);
        $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
        $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);
        $succs = sendToMCFGLIntrfcMnl(
                $crdtAccntID, $crdtAccntIncrsOrDcrs, $ttltrnsAmnt, $trnsDate, $detaildTrnsDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
        if (!$succs) {
            return $succs;
        }
    }

    return $succs;
}

function createGnrlAccntngTwoEvnts($docHdrID, $trnsAmnt, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $trnsAmnt2, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $trnsCrncyID, $lineid, $detaildTrnsDesc, $detaildTrnsDesc2, $doctype, $evntTyp, &$errMsg) {
    global $orgID;
    global $prsnid;
    $dateStr = getFrmtdDB_Date_time();
    $succs = true;
    $mappedCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

    $entrdRate = (float) 1;
    $fnccurid = getOrgFuncCurID($orgID);
    $trnsLnTyp = "";
    $trnsSrc = "SYS";

    if ($evntTyp == "P") {
        deleteDocGLInfcLns($docHdrID, $doctype);
        rvrsImprtdIntrfcTrns($docHdrID, $doctype);
    }

    $nwMsg = "";

    if ($dbtAccntID <= 0 || $crdtAccntID <= 0) {
        $errMsg .= "Debit and Credit Accounts must be setup for this transaction!<br/>";
        return false;
    }

    $acctmappedCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $dbtAccntID);
    if ($mappedCrncyID !== $acctmappedCrncyID) {
        $errMsg .= "Transaction Currency ID $mappedCrncyID is not the same as the Account Currency ID $acctmappedCrncyID!<br/><br/>";
        return false;
    }

    //$crdtAccntID = getDefaultAccountID($prsnid, $crdtAccntID1);
    $succs = generateGnrlAccntng($fnccurid, $trnsAmnt, $doctype, $docHdrID, $dbtAccntID, $dbtAccntIncrsOrDcrs, $crdtAccntID, $crdtAccntIncrsOrDcrs, $mappedCrncyID, $lineid, $dateStr, $detaildTrnsDesc, $trnsLnTyp, $trnsSrc, $nwMsg);

    if ($succs === TRUE) {
        $succs = generateGnrlAccntng($fnccurid, $trnsAmnt2, $doctype, $docHdrID, $dbtAccntID2, $dbtAccntIncrsOrDcrs2, $crdtAccntID2, $crdtAccntIncrsOrDcrs2, $mappedCrncyID, $lineid, $dateStr, $detaildTrnsDesc2, $trnsLnTyp, $trnsSrc, $nwMsg);
    }

    if ($succs === FALSE) {
        $errMsg .= $nwMsg;
        return $succs;
    }

    return $succs;
}

/* LOAN CLASSIFICATIONS */

function get_LoanClsfctns($searchFor, $searchIn, $offset, $limit_size, $orgID) {
    $wherecls = "";
    if ($searchIn === "Name") {
        $wherecls = "(a.clsfctn_name ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    }

    $strSql = "SELECT
                a.loan_clsfctn_id,
                a.clsfctn_name,
                a.range_low,
                a.range_high,
                a.provision_prcnt,
                a.is_enabled
            FROM mcf.mcf_loan_classifications_setup a
            WHERE " . $wherecls .
            "(a.org_id = " . $orgID . ") "
            . "ORDER BY a.provision_prcnt ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
//echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_LoanClsfctnsTtl($searchFor, $searchIn, $orgID) {
    $wherecls = "";
    if ($searchIn === "Name") {
        $wherecls = "(a.clsfctn_name ilike '" .
                loc_db_escape_string($searchFor) . "') and ";
    }

    $strSql = "SELECT
                count(1)
            FROM mcf.mcf_loan_classifications_setup a
            WHERE " . $wherecls .
            "(a.org_id = " . $orgID . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function deleteLoanClsfctn($pkeyID) {
    $rcdExists = isLoanPrdtLoanClsfctnNmInActiveUse($pkeyID);
    if ($rcdExists) {
        $dsply = "Failed to Deleted Loan Classificati-";
        $dsply .= "<br/>1 Loan Classificatin(s)!";
        return "<p style = \"text-align:left; color:red;font-weight:bold;font-style:italic;\">$dsply</p>";
    }
    $insSQL = "DELETE FROM mcf.mcf_loan_classifications_setup WHERE loan_clsfctn_id = " . $pkeyID . "";
    $affctd1 = execUpdtInsSQL($insSQL);
    if ($affctd1 > 0) {
        $dsply = "Successfully Deleted the ff Records-";
        $dsply .= "<br/>$affctd1 Loan Classificatin(s)!";
        return "<p style = \"text-align:left; color:#32CD32;font-weight:bold;font-style:italic;\">$dsply</p>";
    }
}

function getLoanClsfctnLineID($clsfctnNm) {
    $strSql = "SELECT a.loan_clsfctn_id
        FROM mcf.mcf_loan_classifications_setup a
        WHERE ((a.clsfctn_name ='" . loc_db_escape_string($clsfctnNm) . "')) ";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function createMcfLoanClsfctn($clsfctnNm, $prvsnPrcnt, $rangeLow, $rangeHigh, $isEnbld) {
    global $usrID;
    global $orgID;
    $dateStr = getDB_Date_time();
    $insSQL = "INSERT INTO mcf.mcf_loan_classifications_setup(
            clsfctn_name, range_low, range_high,
            created_by, creation_date, last_update_by, last_update_date,
            provision_prcnt, org_id, is_enabled) " .
            "VALUES ('" . loc_db_escape_string($clsfctnNm) . "', " . $rangeLow . ", " . $rangeHigh . ", " . $usrID . ", '" . $dateStr .
            "', " . $usrID . ", '" . $dateStr .
            "', " . $prvsnPrcnt . ", " . $orgID . ", '" . loc_db_escape_string($isEnbld) . "')";
    return execUpdtInsSQL($insSQL);
}

function updateMcfLoanClsfctn($lineID, $clsfctnNm, $prvsnPrcnt, $rangeLow, $rangeHigh, $isEnbld) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $insSQL = "UPDATE mcf.mcf_loan_classifications_setup
                SET clsfctn_name='" . loc_db_escape_string($clsfctnNm) . "'" .
            ", range_low=" . $rangeLow .
            ", range_high=" . $rangeHigh .
            ", provision_prcnt=" . $prvsnPrcnt .
            ", is_enabled='" . loc_db_escape_string($isEnbld) .
            "', last_update_by=" . $usrID .
            ", last_update_date='" . $dateStr .
            "' WHERE(loan_clsfctn_id = " . $lineID . ")";
    return execUpdtInsSQL($insSQL);
}

function doesLoanClsfctnNmExistsSave($clsfctnNm) {
    $result1 = executeSQLNoParams("SELECT loan_clsfctn_id FROM mcf.mcf_loan_classifications_setup "
            . "WHERE upper(clsfctn_name) = '" . strtoupper(loc_db_escape_string($clsfctnNm)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesLoanClsfctnNmExistsUpdate($clsfctnNm, $loanClsfctnId) {
    $result1 = executeSQLNoParams("SELECT loan_clsfctn_id FROM mcf.mcf_loan_classifications_setup "
            . "WHERE upper(clsfctn_name) = '" . strtoupper(loc_db_escape_string($clsfctnNm)) . "' AND loan_clsfctn_id != $loanClsfctnId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function isLoanPrdtLoanClsfctnNmInActiveUse($loanClsfctnId) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_loan_request WHERE loan_clsfctn_id = $loanClsfctnId");
    while ($row1 = loc_db_fetch_array($result1)) {
        if ((int) $row1[0] > 0) {
            return true;
        } else {
            return false;
        }
    }
    return false;
}

function updateMcfDfltGlobalVars($lineID, $VarValue, $VarDataType) {
    global $usrID;
    $dateStr = getDB_Date_time();
    $insSQL = "UPDATE mcf.mcf_global_variables
                SET var_value='" . loc_db_escape_string($VarValue) .
            "', value_data_type='" . loc_db_escape_string($VarDataType) .
            "', last_update_by=" . $usrID .
            ", last_update_date='" . $dateStr .
            "' WHERE(global_var_id = " . $lineID . ")";
    return execUpdtInsSQL($insSQL);
}

function runFixedDepositInvstment($invstmntID, $prcsOptn) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    global $orgID;
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();

    $strSql = "SELECT mcf.xx_process_fxdeposit_invstmnt($usrID, '$balDte', $orgID, $prcsOptn, $invstmntID)";


    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    if ($rtrnRslt == 'SUCCESS') {
        $recCnt = execUpdtInsSQL("Update mcf.mcf_investments SET "
                . "invstmnt_status = 'Running', last_update_by = $usrID, last_update_date = '$dateStr' "
                . "WHERE invstmnt_id = $invstmntID");
    }

    return $rtrnRslt;
}

function getPrptyInvstmntColtTtlActvLiens($coltSrcID, $srcType) {
    $sqlStr = "SELECT sum(x.lien_value) FROM mcf.mcf_prpry_n_invstmnt_colt_liens x
        WHERE colt_src_id = $coltSrcID AND colt_type = '$srcType' AND now() between to_timestamp(start_date_active,'YYYY-MM-DD')
          AND to_timestamp(end_date_active,'YYYY-MM-DD')";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }

    return 0.00;
}

function getPrptyOrInvstmntColtNetValue($coltSrcID, $srcType) {
    $prptyVal = 0.00;
    $ttlLienVal = (float) getPrptyInvstmntColtTtlActvLiens($coltSrcID, $srcType);
    $sqlStr = "";
    if ($srcType == "Property") {
        $sqlStr = "select coalesce(prpty_value,0) FROM  mcf.mcf_property_collaterals a
                WHERE a.prpty_collateral_id = $coltSrcID";
    } else {

    }

    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        $prptyVal = (float) $row[0];
    }

    $netVal = $prptyVal - $ttlLienVal;
    if ($netVal < 0) {
        return 0.00;
    }
    return $netVal;
}

function getMCFLoanTrnsMxRoutingID($srcDocID, $srcDocType = "Loan Transactions") {
    $selSQL = "SELECT MAX(b.routing_id)
  FROM wkf.wkf_actual_msgs_hdr a, wkf.wkf_actual_msgs_routng b
  WHERE a.msg_id=b.msg_id and a.src_doc_type='" . $srcDocType . "'
  and a.src_doc_id=" . $srcDocID;
    $result1 = executeSQLNoParams($selSQL);
    while ($row = loc_db_fetch_array($result1)) {
        $routingID = (float) $row[0];
        return $routingID;
    }
    return -1;
}

function isMCFTrnsCstmrAcntAmtVld_LoayRpmnt_AcctDdctn_BKP09062019($docHdrID, &$dspMsg) {
    $errMsg = "";
    $trnsDate = getStartOfDayDMYHMS();
    $accntID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_acct_id", $docHdrID);
    $entrdSrcAcctAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_amount", $docHdrID);

    if ($accntID > 0) {
        $entrdSrcAcctNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $accntID);

        $lstClrdTotBals = (float) getCstmrAcntLstClrdTotBls($accntID, $trnsDate);
        if ($lstClrdTotBals < $entrdSrcAcctAMnt) {
            $errMsg .= "Source Amount entered GHS$entrdSrcAcctAMnt is more than Customer's Available Balance of GHS$lstClrdTotBals on Account $entrdSrcAcctNo!<br/><br/>";
            $dspMsg = $errMsg;
            return false;
        }
    }

    $entrdAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "amount", $docHdrID);
    $ttlLoanBalOutstndn = 0;
    $lnPyTyp = "REPAYMENT";
    $pncplAmtBalStlmnt = 0.00;
    $intrstAmtBalStlmnt = 0.00;

    $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $docHdrID);

    $andCls = "  AND is_paid IN ('NO','PARTIAL')";
    if ($voidedTrnsID > 0) {
        $andCls = " AND 1 = 1";
    }


    //GET LOAN BALANCE
    $result1 = executeSQLNoParams("SELECT distinct (b.principal_amount_bal + b.ttl_interest_bal) loan_bal, loan_rpmnt_type, b.principal_amount_bal, b.ttl_interest_bal
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND 1 = 1/*d.status = 'Authorized'*/
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls");

    $rcdCnt = loc_db_num_rows($result1);

    if ($rcdCnt <= 0) {
        $errMsg .= "No Schedule exists for the Loan Request. Loan schedule should be saved first!<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    }

    while ($row1 = loc_db_fetch_array($result1)) {
        $ttlLoanBalOutstndn = round(((float) $row1[0]), 2);
        $lnPyTyp = $row1[1];
        $pncplAmtBalStlmnt = round(((float) $row1[2]), 2);
        $intrstAmtBalStlmnt = round(((float) $row1[3]), 2);
        break;
    }

    if ($lnPyTyp == "REPAYMENT" && $entrdAMnt > $ttlLoanBalOutstndn) {
        $errMsg .= "REPAYMENT Amount " . number_format($entrdAMnt, 2) . " cannot be greater than the Total Loan Schedule Outstanding Balance of " . number_format($ttlLoanBalOutstndn, 2) . "! Please alter amount<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    } else if ($lnPyTyp == "SETTLEMENT" && $entrdAMnt > $pncplAmtBalStlmnt) {
        $errMsg .= "SETTLEMENT Amount " . number_format($entrdAMnt, 2) . " cannot be greater than the Total Loan Schedule PRINCIPAL Balance of " . number_format($pncplAmtBalStlmnt, 2) . "! Please alter amount<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    }

    return true;
}

function isMCFTrnsCstmrAcntAmtVld_LoayRpmnt_AcctDdctn($docHdrID, &$dspMsg) {
    $errMsg = "";
    $trnsDate = getStartOfDayDMYHMS();
    $accntID = (int) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_acct_id", $docHdrID);
    $entrdSrcAcctAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "loan_rpmnt_src_amount", $docHdrID);

    if ($accntID > 0) {
        $entrdSrcAcctNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $accntID);

        $lstClrdTotBals = (float) getCstmrAcntLstClrdTotBls($accntID, $trnsDate);
        if ($lstClrdTotBals < $entrdSrcAcctAMnt) {
            $errMsg .= "Source Amount entered GHS$entrdSrcAcctAMnt is more than Customer's Available Balance of GHS$lstClrdTotBals on Account $entrdSrcAcctNo!<br/><br/>";
            $dspMsg = $errMsg;
            return false;
        }
    }

    $entrdAMnt = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "amount", $docHdrID);
    $ttlLoanBalOutstndn = 0;
    $lnPyTyp = "REPAYMENT";
    $pncplAmtBalStlmnt = 0.00;
    $intrstAmtBalStlmnt = 0.00;

    $voidedTrnsID = (float) getGnrlRecNm("mcf.mcf_cust_account_transactions", "acct_trns_id", "voided_acct_trns_id", $docHdrID);

    $andCls = "  AND is_paid IN ('NO','PARTIAL')";
    if ($voidedTrnsID > 0) {
        $andCls = " AND 1 = 1";
    }
    
    //$cobDte = substr(getStartOfDayYMD(),0,10);
    $intTtl = 0;
    $resultInt = executeSQLNoParams("SELECT sum(tbl1.arrears)
        FROM (SELECT
        CASE WHEN to_timestamp(a.repay_date,'YYYY-MM-DD') <= to_timestamp(mcf.xx_get_start_of_day_date(1),'YYYY-MM-DD') then (a.interest_amnt - a.interest_amnt_paid) ELSE 0.00 END arrears
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND 1 = 1/*d.status = 'Authorized'*/
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls)tbl1");
    
    while ($rowInt = loc_db_fetch_array($resultInt)) {
        $intTtl = (float) $rowInt[0];
        break;
    }

    //GET LOAN BALANCE
    $result1 = executeSQLNoParams("SELECT distinct (b.principal_amount_bal + b.ttl_interest_bal) loan_bal, loan_rpmnt_type, b.principal_amount_bal, b.ttl_interest_bal, $intTtl
            FROM mcf.mcf_loan_schedule a
            INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
            INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
            INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
            INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $docHdrID AND 1 = 1/*d.status = 'Authorized'*/
          AND e.status != 'Void' AND b.principal_amount > 0
          $andCls");

    $rcdCnt = loc_db_num_rows($result1);

    if ($rcdCnt <= 0) {
        $errMsg .= "No Schedule exists for the Loan Request. Loan schedule should be saved first!<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    }

    while ($row1 = loc_db_fetch_array($result1)) {
        $ttlLoanBalOutstndn = round(((float) $row1[0]), 2);
        $lnPyTyp = $row1[1];
        $pncplAmtBalStlmnt = (float) $row1[2];
        //$pncplAmtBalStlmnt = round(((float) $row1[2]), 2);
        $intrstAmtBalStlmnt = round(((float) $row1[3]), 2);
        break;
    }

    if ($lnPyTyp == "REPAYMENT" && $entrdAMnt > $ttlLoanBalOutstndn) {
        $errMsg .= "REPAYMENT Amount " . number_format($entrdAMnt, 2) . " cannot be greater than the Total Loan Schedule Outstanding Balance of " . number_format($ttlLoanBalOutstndn, 2) . "! Please alter amount<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    } else if ($lnPyTyp == "SETTLEMENT" && $entrdAMnt > round(($pncplAmtBalStlmnt + $intTtl),2)) {
        $errMsg .= "SETTLEMENT Amount " . number_format($entrdAMnt, 2) . " cannot be greater than the Total Loan Schedule PRINCIPAL Balance of " . number_format(($pncplAmtBalStlmnt + $intTtl), 2) . "! Please alter amount<br/><br/>";
        $dspMsg = $errMsg;
        return false;
    }

    return true;
}


function get_OneCustAccntTrnsDet_LoanRpmnt_bkp09062019($pkeyID) {
    global $usrID;
    global $prsnid;
    global $canSeeOthrsTrns;

    $balDte = substr(getStartOfDayYMD(), 0, 10);

    $whereCls = "";
    if (!$canSeeOthrsTrns) {
        $whereCls .= " and (a.created_by=$usrID or a.last_update_by=$usrID or a.authorized_by_person_id=$prsnid)";
    }
    $strSql = "SELECT a.acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, a.trns_type, " .
            "a.amount, COALESCE(a.status,'Not Submitted'), a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), a.trns_no, "
            . "a.value_date, a.branch_id, a.doc_type, a.doc_no, a.trns_person_name, a.trns_person_tel_no, "
            . "a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number, a.trns_person_type, a.status, "
            . "a.debit_or_credit, a.authorized_by_person_id, a.autorization_date, a.amount_cash, "
            . "a.voided_acct_trns_id, a.voided_trns_type, a.reversal_reason, a.description, a.created_by, "
            . "b.branch_id, prs.get_prsn_name(a.authorized_by_person_id), a.approval_limit_id, d.max_amount,
              CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_unclrd_bals(a.account_id, '$balDte') ELSE a.unclrdbal END,
              CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_avlbl_bals(a.account_id, '$balDte') ELSE a.clrdbal END,
              b.account_type,
              CASE WHEN a.acctstatus='' THEN b.account_status ELSE a.acctstatus END,
              CASE WHEN a.acctcustomer='' THEN mcf.get_customer_name(b.cust_type, b.cust_id) ELSE a.acctcustomer END,
                b.prsn_type_or_entity, a.acctlien,
                CASE WHEN a.mandate='' THEN b.mandate ELSE a.mandate END, a.wtdrwllimitno, a.wtdrwllimitamt, a.wtdrwllimittype,
                a.accnt_crncy_rate, a.trns_has_other_lines, a.disbmnt_hdr_id, a.disbmnt_det_id, a.sub_trns_type, a.loan_rpmnt_type, a.loan_rpmnt_src_acct_id, a.loan_rpmnt_src_amount, b.cust_id  " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((a.acct_trns_id = " . $pkeyID . ")$whereCls)";
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_OneCustAccntTrnsDet_LoanRpmnt($pkeyID) {
    global $usrID;
    global $prsnid;
    global $canSeeOthrsTrns;

    $balDte = substr(getStartOfDayYMD(), 0, 10);
    
    //$clrdBal = getLoanTtlbalAsatCobdateWdlnacctid($sltdLnAcctID);//getAccountBal($acctNo, 'Cleared');
    //$unclrdBal = getLoanTtlbalAsatCobdateWdlnacctid($sltdLnAcctID);//getAccountBal($acctNo, 'Uncleared');

    $whereCls = "";
    if (!$canSeeOthrsTrns) {
        $whereCls .= " and (a.created_by=$usrID or a.last_update_by=$usrID or a.authorized_by_person_id=$prsnid)";
    }
    $strSql = "SELECT a.acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, a.trns_type, " .
            "a.amount, COALESCE(a.status,'Not Submitted'), a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), a.trns_no, "
            . "a.value_date, a.branch_id, a.doc_type, a.doc_no, a.trns_person_name, a.trns_person_tel_no, "
            . "a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number, a.trns_person_type, a.status, "
            . "a.debit_or_credit, a.authorized_by_person_id, a.autorization_date, a.amount_cash, "
            . "a.voided_acct_trns_id, a.voided_trns_type, a.reversal_reason, a.description, a.created_by, "
            . "b.branch_id, prs.get_prsn_name(a.authorized_by_person_id), a.approval_limit_id, d.max_amount,
                (a.unclrdbal), (a.clrdbal),
              /*CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_unclrd_bals(a.account_id, '$balDte') ELSE a.unclrdbal END,
              CASE WHEN (a.status NOT IN ('Authorized','Paid','Received','Void','Historic')) or a.status IS NULL THEN mcf.get_cstacnt_avlbl_bals(a.account_id, '$balDte') ELSE a.clrdbal END,*/
              b.account_type,
              CASE WHEN a.acctstatus='' THEN b.account_status ELSE a.acctstatus END,
              CASE WHEN a.acctcustomer='' THEN mcf.get_customer_name(b.cust_type, b.cust_id) ELSE a.acctcustomer END,
                b.prsn_type_or_entity, a.acctlien,
                CASE WHEN a.mandate='' THEN b.mandate ELSE a.mandate END, a.wtdrwllimitno, a.wtdrwllimitamt, a.wtdrwllimittype,
                a.accnt_crncy_rate, a.trns_has_other_lines, a.disbmnt_hdr_id, a.disbmnt_det_id, a.sub_trns_type, a.loan_rpmnt_type, a.loan_rpmnt_src_acct_id, a.loan_rpmnt_src_amount, b.cust_id  " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((a.acct_trns_id = " . $pkeyID . ")$whereCls)";
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_PaidLoanSchedule($dochdrID) {
    $strSql = "SELECT a.schedule_id, a.disbmnt_det_id, begining_bal, (interest_amnt-interest_amnt_paid), (principal_amnt-principal_amnt_paid),
                    ending_bal, a.is_paid, interest_amnt_paid, principal_amnt_paid, b.loan_rqst_id, b.disbmnt_det_id, repay_date, d.loan_rpmnt_type
        FROM mcf.mcf_loan_schedule a INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
          INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
          INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
          INNER JOIN mcf.mcf_cust_account_transactions d ON d.account_id = c.account_id
          WHERE d.acct_trns_id = $dochdrID AND e.status != 'Void' AND b.principal_amount > 0
          AND is_paid IN ('YES','PARTIAL')
          AND d.status = 'Authorized' ORDER BY 1 DESC";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function rvrsLoanRqstAcctLien_BKP09062019($loanRqstID, &$errMsg, $optn = 1){
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;

    $lnPrdtID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstID);
    $trnsCrncyID = getGnrlRecNm("mcf.mcf_prdt_loans", "loan_product_id", "currency_id", $lnPrdtID);

    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

    //$rpmntAcctID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "repayment_account_id", $loanRqstID);
    $rpmntAcctID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $loanRqstID);
    $trnsctnID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
    $v_loan_prncpl_bal = 0;
    $v_loan_intrst_bal = 0;
    $v_lien_cnt = 0;
    $v_lien_amt = 0;
    $succs = true;
    $dateStr = getFrmtdDB_Date_time();

    $trnsType1 = "LIEN_TRNS";
    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";
    $dcrsORIncrs = "D";
    $cashColtAccntID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $loanRqstID);
    $loanTrnsctnID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
    $cashColtAcctNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $cashColtAccntID);

    $nwMsg = "";
    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

    $acntRslt = get_OneCustAccntInfo($cashColtAccntID);
    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
        $acctstatus = $rowAcnt[10];
        $acctcustomer = $rowAcnt[11];
        $acctlien = (float) $rowAcnt[13];
        $mandate = $rowAcnt[14];
        $wtdrwllimitno = (int) $rowAcnt[15];
        $wtdrwllimitamt = (float) $rowAcnt[16];
        $wtdrwllimittype = $rowAcnt[17];
    }


    if($loanRqstID > 0){
        $strSql = "SELECT mcf.calc_loan_ttl_bal($loanRqstID, 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($loanRqstID, 'INTEREST OUTSTANDING')";
        $result = executeSQLNoParams($strSql);
        while ($row = loc_db_fetch_array($result)) {
            $v_loan_prncpl_bal = (float) $row[0];
            $v_loan_intrst_bal = (float) $row[1];
        }

        //if (($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0.00) {

        $strSql1 = "SELECT count(*) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND lien_status = 'Active'";
        if($optn == 0){//RE-INSTATE
            $strSql1 = "SELECT count(*) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND lien_status = 'Removed'";
        }
        $result1 = executeSQLNoParams($strSql1);
        while ($row1 = loc_db_fetch_array($result1)) {
            $v_lien_cnt = (int) $row1[0];
        }

        if ($v_lien_cnt > 0) {
            if ($v_lien_cnt > 1) {
                 $errMsg = "Loan Request $trnsctnID has $v_lien_cnt  Active Liens ";
                 return false;
            } else {
                $lnCnt = 0;
                if($optn == 0){//RE-INSTATE
                    $lnCnt = execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Active', end_date_active='4000-12-31' WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                } else {
                    $lnCnt = execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Removed', end_date_active=to_char(now(),'YYYY-MM-DD') WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                }

                if($lnCnt > 0){
                    $strSql4 = "SELECT coalesce(amount,0.00) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND
                    account_id = $rpmntAcctID";
                    $result4 = executeSQLNoParams($strSql4);
                    while ($row4 = loc_db_fetch_array($result4)) {
                        $v_lien_amt = (float) $row4[0];
                    }

                    if($v_lien_amt > 0){
                        $doctype = "LOAN_REPAY";
                        $lienQty = -1 * $v_lien_amt;
                        $clearedQty = $v_lien_amt;

                        if($optn == 0){//RE-INSTATE
                            $lienQty = $v_lien_amt;
                            $clearedQty = -1 * $v_lien_amt;
                        }

                        $recCnt = 0;
                        if($optn == 0){
                                //RE-INSTANTE
                                $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN on Loan Transaction No. " . $loanTrnsctnID, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {
                                $dcrsORIncrs = "I";
                                //REVERSE
                                $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN Reversal - Loan Transaction No. " . $loanTrnsctnID, "CR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        }

                        $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];

                        if ($rpmntAcctID > 0 && $recCnt > 0) {
                            $succs = updateCstmrAcntBalances($rpmntAcctID, $clearedQty, 0, $lienQty, $doctype, "I", $docTypPrfx, "", $dateStr, $errMsg);
                        }

                        if ($succs === FALSE) {
                            $errMsg = "Failed to reverse Lien balance of Loan Request $trnsctnID";
                            return false;
                        }
                    }
                } else {
                    $errMsg = "Failed to remove Account Lien of Loan Request $trnsctnID";
                    return false;
                }

            }
        }

        //}


        return true;
    } else {
        $errMsg = "No Loan Request ID found for Loan Account Number";
        return false;
    }

    return false;
}

function rvrsLoanRqstAcctLien($loanRqstID, &$errMsg, $optn = 1){
    global $trnsTypes;
    global $trnsTypeABRV;
    global $usrID;

    $lnPrdtID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "loan_product_id", $loanRqstID);
    $trnsCrncyID = getGnrlRecNm("mcf.mcf_prdt_loans", "loan_product_id", "currency_id", $lnPrdtID);

    $entrdCrncyID = (int) getGnrlRecNm("mcf.mcf_currencies", "crncy_id", "mapped_lov_crncy_id", $trnsCrncyID);

    //$rpmntAcctID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "repayment_account_id", $loanRqstID);
    $rpmntAcctID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $loanRqstID);
    $trnsctnID = (int) getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
    $v_loan_prncpl_bal = 0;
    $v_loan_intrst_bal = 0;
    $v_lien_cnt = 0;
    $v_lien_amt = 0;
    $succs = true;
    $dateStr = getFrmtdDB_Date_time();

    $trnsType1 = "LIEN_TRNS";
    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";
    $dcrsORIncrs = "I";
    $cashColtAccntID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "cash_collateral_id", $loanRqstID);
    $loanTrnsctnID = getGnrlRecNm("mcf.mcf_loan_request", "loan_rqst_id", "trnsctn_id", $loanRqstID);
    $cashColtAcctNo =  getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $cashColtAccntID);

    $nwMsg = "";
    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType1)] . "-" . $usrTrnsCode . "-" . $dte;

    $acntRslt = get_OneCustAccntInfo($cashColtAccntID);
    while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
        $acctstatus = $rowAcnt[10];
        $acctcustomer = $rowAcnt[11];
        $acctlien = (float) $rowAcnt[13];
        $mandate = $rowAcnt[14];
        $wtdrwllimitno = (int) $rowAcnt[15];
        $wtdrwllimitamt = (float) $rowAcnt[16];
        $wtdrwllimittype = $rowAcnt[17];
    }


    if($loanRqstID > 0){
        $strSql = "SELECT mcf.calc_loan_ttl_bal($loanRqstID, 'PRINCIPAL OUTSTANDING'), mcf.calc_loan_ttl_bal($loanRqstID, 'INTEREST OUTSTANDING')";
        $result = executeSQLNoParams($strSql);
        while ($row = loc_db_fetch_array($result)) {
            $v_loan_prncpl_bal = (float) $row[0];
            $v_loan_intrst_bal = (float) $row[1];
        }

        //if (($v_loan_prncpl_bal + $v_loan_intrst_bal) == 0.00) {

        $strSql1 = "SELECT count(*) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND lien_status = 'Active'";
        if($optn == 0){//RE-INSTATE
            $strSql1 = "SELECT count(*) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND lien_status = 'Removed'";
        }
        $result1 = executeSQLNoParams($strSql1);
        while ($row1 = loc_db_fetch_array($result1)) {
            $v_lien_cnt = (int) $row1[0];
        }

        if ($v_lien_cnt > 0) {
            if ($v_lien_cnt > 1) {
                 $errMsg = "Loan Request $trnsctnID has $v_lien_cnt  Active Liens ";
                 return false;
            } else {
                $lnCnt = 0;
                if($optn == 0){//RE-INSTATE
                    execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Active', end_date_active='4000-12-31' WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                    
                    $lnCnt = execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Active', end_date_active='4000-12-31' WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                } else {
                    execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Removed', end_date_active=to_char(now(),'YYYY-MM-DD') WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                    
                    $lnCnt = execUpdtInsSQL("UPDATE mcf.mcf_account_liens SET lien_status = 'Removed', end_date_active=to_char(now(),'YYYY-MM-DD') WHERE loan_rqst_id = $loanRqstID AND
                      account_id = $rpmntAcctID");
                }

                if($lnCnt > 0){
                    $strSql4 = "SELECT coalesce(amount,0.00) FROM mcf.mcf_account_liens WHERE loan_rqst_id = $loanRqstID AND
                    account_id = $rpmntAcctID";
                    $result4 = executeSQLNoParams($strSql4);
                    while ($row4 = loc_db_fetch_array($result4)) {
                        $v_lien_amt = (float) $row4[0];
                    }

                    if($v_lien_amt > 0){
                        $doctype = "LOAN_REPAY";
                        $lienQty = $v_lien_amt;
                        $clearedQty = -1 * $v_lien_amt;
                        /*$lienQty = -1 * $v_lien_amt;
                        $clearedQty = $v_lien_amt;

                        if($optn == 0){//RE-INSTATE
                            $lienQty = $v_lien_amt;
                            $clearedQty = -1 * $v_lien_amt;
                        }*/

                        $recCnt = 0;
                        if($optn == 0){
                                //RE-INSTANTE
                                $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN on Loan Transaction No. " . $loanTrnsctnID, "DR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Paid", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        } else {
                                $dcrsORIncrs = "D";
                                //REVERSE
                                $recCnt = createAccountTrns($cashColtAccntID, $dateStr, "Paperless", $gnrtdTrnsNo, "LIEN Reversal - Loan Transaction No. " . $loanTrnsctnID, "CR", (float) $lienQty, $trnsType1, (float) 0, "Self", "", "", "", "", "", $gnrtdTrnsNo, "Received", -1, "", "", (int) $entrdCrncyID, 1, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, "0");
                        }

                        $docTypPrfx = $trnsTypeABRV[findArryIdx($trnsTypes, $doctype)];

                        if ($rpmntAcctID > 0 && $recCnt > 0) {
                            $succs = updateCstmrAcntBalances($rpmntAcctID, $clearedQty, 0, $lienQty, $doctype, $dcrsORIncrs, $docTypPrfx, "", $dateStr, $errMsg);
                        }

                        if ($succs === FALSE) {
                            $errMsg = "Failed to reverse Lien balance of Loan Request $trnsctnID";
                            return false;
                        }
                    }
                } else {
                    $errMsg = "Failed to remove Account Lien of Loan Request $trnsctnID";
                    return false;
                }

            }
        }

        //}


        return true;
    } else {
        $errMsg = "No Loan Request ID found for Loan Account Number";
        return false;
    }

    return false;
}


//OVERDRAFT INTEREST PAYMENT
function getOvdrftIntrstPymntTbl($isEnabled, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Customer Name") {
        $whrcls = " AND (mcf.get_customer_name(b.cust_type, b.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Request") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    if ($sortBy == "Transaction Date DESC") {
        $ordrBy = "a.trns_date DESC";
    }

    $strSql = "SELECT distinct mnlpymnt_ovdrft_hdr_id, a.trnsctn_id, mcf.get_customer_name(b.cust_type, b.cust_id) cust_name,
  b.trnsctn_id loan_rqst, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'),
  iso_code, round(ttl_accrued_amount::numeric, 2) ttl_accrued_amount,  a.status,  a.description, b.trnsctn_id,
       pymnt_status, a.trns_date, a.branch_id
  FROM mcf.mcf_manual_ovdrft_interest_pymnt_hdr a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
AND c.currency_id = d.crncy_id AND (1 = 1 AND (c.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getOvdrftIntrstPymntTblTtl($isEnabled, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Customer Name") {
        $whrcls = " AND (mcf.get_customer_name(b.cust_type, b.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Loan Request") {
        $whrcls = " AND (b.trnsctn_id ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($isEnabled == "true") {
        $whrcls .= " and upper(a.status) = 'UNAUTHORIZED'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_manual_ovdrft_interest_pymnt_hdr a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
	WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
	AND c.currency_id = d.crncy_id AND (1 = 1 AND (c.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function createOvdrftIntrstPymnts($mnlpymnt_ovdrft_hdr_id, $loan_rqst_id, $description, $trns_date, $branch_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    if ($trns_date != "") {
        $trns_date = cnvrtDMYTmToYMDTm($trns_date);
    }

    $insSQL = "INSERT INTO mcf.mcf_manual_ovdrft_interest_pymnt_hdr(
            mnlpymnt_ovdrft_hdr_id, loan_rqst_id, ttl_accrued_amount, created_by, creation_date,
            last_update_by, last_update_date, status, trnsctn_id, description,
            pymnt_status,  trns_date, branch_id, ttl_amount_paid)
    VALUES ($mnlpymnt_ovdrft_hdr_id, $loan_rqst_id, (SELECT mcf.get_ovdrft_accrd_bal($loan_rqst_id)), $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',
            'Incomplete', 'OIP-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "', '" . loc_db_escape_string($description) . "',
            'Unprocessed', '$trns_date', $branch_id, (SELECT mcf.get_ovdrft_accrd_bal($loan_rqst_id)))";

    return execUpdtInsSQL($insSQL);
}

function updateOvdrftIntrstPymnts($mnlpymnt_ovdrft_hdr_id, $loan_rqst_id, $description, $trns_date, $branch_id, $dateStr, $ttlAccruedPymntAmount) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    //$balDte = getStartOfDayYMD();
    if ($trns_date != "") {
        $trns_date = cnvrtDMYTmToYMDTm($trns_date);
    }

    $insSQL = "UPDATE mcf.mcf_manual_ovdrft_interest_pymnt_hdr
   SET mnlpymnt_ovdrft_hdr_id=$mnlpymnt_ovdrft_hdr_id, loan_rqst_id=$loan_rqst_id, ttl_amount_paid=$ttlAccruedPymntAmount,
       last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "', description='" . loc_db_escape_string($description) . "',
           trns_date='$trns_date', branch_id=$branch_id
    WHERE mnlpymnt_ovdrft_hdr_id = $mnlpymnt_ovdrft_hdr_id";

    return execUpdtInsSQL($insSQL);
}

function getNewOvdrftIntrstPymntID() {
    $sqlStr = "SELECT nextval('mcf.mcf_manual_ovdrft_interest_pymnt_hdr_mnlpymnt_ovdrft_hdr_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function deleteOvdrftIntrstPymnts($ovdrftIntrstPymntId) {
    $delSQL1 = "DELETE FROM mcf.mcf_manual_ovdrft_interest_pymnt_hdr WHERE mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId";
    return execUpdtInsSQL($delSQL1);
}

function getOvdrftIntrstPymntDets($ovdrftIntrstPymntId) {
    $strSql = "SELECT distinct mnlpymnt_ovdrft_hdr_id, a.trnsctn_id, to_char(to_timestamp(trns_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'),
  a.branch_id, a.loan_rqst_id, mcf.get_customer_name(b.cust_type, b.cust_id) cust_name, a.description,
  a.ttl_accrued_amount, a.status, a.pymnt_status, d.iso_code, a.ttl_amount_paid
  FROM mcf.mcf_manual_ovdrft_interest_pymnt_hdr a, mcf.mcf_loan_request b, mcf.mcf_prdt_loans c,  mcf.mcf_currencies d
WHERE a.loan_rqst_id = b.loan_rqst_id AND b.loan_product_id = c.loan_product_id
AND c.currency_id = d.crncy_id AND mnlpymnt_ovdrft_hdr_id = $ovdrftIntrstPymntId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

//CUSTOMER CORRESPONDENCE
function get_CstmrCrspndncTblTtl($rqstStatusSrchIn, $statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    $cnt = 0;
    if ($searchIn == "ID") {
        $whrcls = " AND (a.id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer Name") {
        $whrcls = " AND (trim(mcf.get_customer_name(a.cust_type, a.cust_id)) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($rqstStatusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.request_status = '$rqstStatusSrchIn'";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_customer_correspondence a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;

}

function get_CstmrCrspndncTbl($rqstStatusSrchIn, $statusSrchIn, $branchSrchIn, $searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $whrcls = "";
    $ordrBy = "";
    if ($searchIn == "ID") {
        $whrcls = " AND (a.id_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Name") {
        $whrcls = " AND (trim(mcf.get_customer_name(a.cust_type, a.cust_id)) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($branchSrchIn == "All Branches") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= " and a.branch_id = $branchSrchIn";
    }

    if ($statusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.status = '$statusSrchIn'";
    }

    if ($rqstStatusSrchIn == "All Statuses") {
        $whrcls .= " and 1 = 1";
    } else {
        $whrcls .= "  and a.request_status = '$rqstStatusSrchIn'";
    }

    if ($sortBy == "Date Added DESC") {
        $ordrBy = "a.last_update_date DESC";
    } else if ($sortBy == "Customer Name") {
        $ordrBy = "3 ASC";
    } else if ($sortBy == "ID ASC") {
        $ordrBy = "id_no ASC";
    } else if ($sortBy == "ID DESC") {
        $ordrBy = "id_no DESC";
    }

    $strSql = "SELECT a.crspndnc_id, b.id_no, trim(mcf.get_customer_name(a.cust_type, a.cust_id)) fullname,
		a.cust_type, request_type, account_id, a.branch_id,
       request_details, urgency, to_char(to_timestamp(request_date,'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS') ,
       expected_close_date, actual_close_date,
       a.status, request_status, closed_by_person_id, closed_action_details
          FROM mcf.mcf_customer_correspondence a, mcf.mcf_customers b "
            . "WHERE (a.cust_id = b.cust_id AND (a.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);


    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

//CUSTOMER CORRESPONDENCE
function getNewCstmrCrspndncID() {
    $sqlStr = "SELECT nextval('mcf.mcf_customer_correspondence_crspndnc_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function deleteCstmrCrspndnc($cstmrCrspndncId) {
    $delSQL1 = "DELETE FROM mcf.mcf_customer_correspondence WHERE crspndnc_id = $cstmrCrspndncId";
    return execUpdtInsSQL($delSQL1);
}

function getCstmrCrspndncDets($cstmrCrspndncId) {
    $strSql = "SELECT crspndnc_id, a.cust_id, mcf.get_customer_name(a.cust_type, a.cust_id), a.cust_type, request_type, a.account_id,/*5*/
       b.account_number, a.branch_id, request_details, urgency,/*9*/
    case when request_date = '' or request_date is null then '' else to_char(to_timestamp(request_date, 'YYYY-MM-DD'),'DD-Mon-YYYY') end request_date,/*10*/
  case when expected_close_date = '' or expected_close_date is null then '' else to_char(to_timestamp(expected_close_date, 'YYYY-MM-DD'),'DD-Mon-YYYY') end expected_close_date,/*11*/
  case when actual_close_date = '' or actual_close_date is null then '' else to_char(to_timestamp(actual_close_date, 'YYYY-MM-DD'),'DD-Mon-YYYY') end actual_close_date,/*12*/
       a.status, request_status, closed_by_person_id, prs.get_prsn_name(closed_by_person_id) closed_by_person, /*16*/
       closed_action_details, a.org_id, trnsctn_id, /*19*/
       requestor, assigned_to_person_id, prs.get_prsn_name(assigned_to_person_id) assigned_to_person /*22*/
  FROM mcf.mcf_customer_correspondence a,  mcf.mcf_accounts b
WHERE a.account_id = b.account_id AND crspndnc_id = $cstmrCrspndncId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function createCstmrCrspndnc($crspndnc_id, $cust_id, $cust_type, $request_type, $account_id, $branch_id,
            $request_details, $urgency, $request_date, $expected_close_date, $actual_close_date,
            $closed_by_person_id, $closed_action_details, $requestor, $assigned_to_person_id, $dateStr) {
    global $usrID;
    global $orgID;

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    if ($request_date != "") {
        $request_date = cnvrtDMYToYMD($request_date);
    }

	if ($expected_close_date != "") {
        $expected_close_date = cnvrtDMYToYMD($expected_close_date);
    }

    if ($actual_close_date != "") {
        $actual_close_date = cnvrtDMYToYMD($actual_close_date);
    }

    $closed_by_person_id = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $closed_by_person_id, $orgID);
    $assigned_to_person_id = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $assigned_to_person_id, $orgID);

    $insSQL = "INSERT INTO mcf.mcf_customer_correspondence(
            crspndnc_id, cust_id, cust_type, request_type, account_id, branch_id,
            request_details, urgency, request_date, created_by, creation_date,
            last_update_by, last_update_date, expected_close_date, actual_close_date,
            status, request_status, closed_by_person_id, closed_action_details,
			org_id, trnsctn_id, requestor, assigned_to_person_id)
    VALUES ($crspndnc_id, $cust_id, '$cust_type', '" . loc_db_escape_string($request_type) . "', $account_id, $branch_id,
            '" . loc_db_escape_string($request_details) . "', '$urgency', '$request_date',$usrID,'" . $dateStr .
			 "'," . $usrID . ",'" . $dateStr . "','$expected_close_date', '$actual_close_date',
            'Incomplete', 'Open', $closed_by_person_id, '" . loc_db_escape_string($closed_action_details) . "',
            $orgID, 'CCP-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "','" . loc_db_escape_string($requestor) . "',$assigned_to_person_id)";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function updateCstmrCrspndnc($crspndnc_id, $cust_id, $cust_type, $request_type, $account_id, $branch_id,
            $request_details, $urgency, $request_date, $expected_close_date, $actual_close_date,
            $closed_by_person_id, $closed_action_details, $requestor, $assigned_to_person_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

     if ($request_date != "") {
        $request_date = cnvrtDMYToYMD($request_date);
    }

	if ($expected_close_date != "") {
        $expected_close_date = cnvrtDMYToYMD($expected_close_date);
    }

    if ($actual_close_date != "") {
        $actual_close_date = cnvrtDMYToYMD($actual_close_date);
    }

    $closed_by_person_id = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $closed_by_person_id, $orgID);
    $assigned_to_person_id = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $assigned_to_person_id, $orgID);

    $insSQL = "UPDATE mcf.mcf_customer_correspondence
   SET crspndnc_id=$crspndnc_id, cust_id=$cust_id, cust_type='$cust_type', request_type='" . loc_db_escape_string($request_type) . "',
       account_id=$account_id, branch_id=$branch_id, request_details='" . loc_db_escape_string($request_details) . "', urgency='$urgency',
	   request_date='$request_date', last_update_by =" . $usrID . ", last_update_date = '" . $dateStr . "', expected_close_date='$expected_close_date',
       actual_close_date='$actual_close_date', closed_by_person_id=$closed_by_person_id,
       closed_action_details='" . loc_db_escape_string($closed_action_details) . "',  org_id=$orgID,
	   requestor='" . loc_db_escape_string($requestor) . "', assigned_to_person_id=$assigned_to_person_id
    WHERE crspndnc_id = $crspndnc_id";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function loadAmortizationSchedule($jcloanamount, $jinterestRatePerPeriod, $jtotalloantermtimes, $jpaymentPerperiod, $jcpayback, $jrepayStartDate,
        $disbmntDetId, $intRateType, $crdtType, $compoundType) {

    if ($crdtType === "Overdraft") {
        return false;
    }

    $currentDate = $jrepayStartDate;

    $repayFrqncy = $jcpayback;
    $saBeginningBalance = $jcloanamount;
    $intTerm = floor($jtotalloantermtimes);
    $remainingTerm = $jtotalloantermtimes - $intTerm;
    $dateStr = getDB_Date_time();

    for ($i = 0; $i < $intTerm; $i++) {

        $thisInterest = 0.00;
        $thisPrincipal = 0.00;
        $thisPrincipal1 = 0.00;
        $thisEndingBalance = 0.00;
        if ($intRateType === "Flat Rate" || $compoundType ===  "simple") {
            $thisInterest = $jcloanamount * $jinterestRatePerPeriod;//(($jpaymentPerperiod * $jtotalloantermtimes) - $jcloanamount) / $jtotalloantermtimes;
            $thisPrincipal = $jcloanamount / $jtotalloantermtimes;
            $thisEndingBalance = $saBeginningBalance - $thisPrincipal;
        } else {
            $thisInterest = $saBeginningBalance * $jinterestRatePerPeriod;
            $thisPrincipal = $jpaymentPerperiod - $thisInterest;
            $thisEndingBalance = $saBeginningBalance - $thisPrincipal;

        }

        if($remainingTerm > 0.0001){

        } else {
            if ((int)$i === ((int)$intTerm - 1) && (float)$thisEndingBalance !== 0.00) {
                if ((float)$saBeginningBalance  < (float) $thisPrincipal) {
                    $thisPrincipal = $saBeginningBalance;
                    if ((float)$thisEndingBalance < 0) {
                        $thisInterest = $thisInterest + (-1 * $thisEndingBalance);
                    } else {
                        $thisInterest = $thisInterest + $thisEndingBalance;
                    }
                } else {
                    $thisInterest = $thisInterest + $thisEndingBalance;
                }
                $thisEndingBalance = 0.00;
            }
        }

        $currentDateDMY = date_format(date_create($currentDate),"d-M-Y");
	$rtrnCnt = save_LoanSchedule($disbmntDetId, $currentDateDMY, $saBeginningBalance, $thisInterest, $thisPrincipal, $thisEndingBalance, $dateStr);
        if($rtrnCnt > 0){
            execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET repay_end_date = '$currentDate' WHERE disbmnt_det_id = $disbmntDetId");
        }

        $saBeginningBalance = $thisEndingBalance;

        $date=date_create($currentDate);
        if ($repayFrqncy == "daily") {
            date_add($date,date_interval_create_from_date_string("1 days"));
        } else if ($repayFrqncy == "weekly") {
            date_add($date,date_interval_create_from_date_string("7 days"));
        } else if ($repayFrqncy == "biweekly") {
            date_add($date,date_interval_create_from_date_string("14 days"));
        } else if ($repayFrqncy == "halfmonth") {
            date_add($date,date_interval_create_from_date_string("15 days"));
        } else if ($repayFrqncy == "month") {
            date_add($date,date_interval_create_from_date_string("1 months"));
        } else if ($repayFrqncy == "quarter") {
            date_add($date,date_interval_create_from_date_string("3 months"));
        } else if ($repayFrqncy == "halfyear") {
            date_add($date,date_interval_create_from_date_string("6 months"));
        } else if ($repayFrqncy == "year") {
            date_add($date,date_interval_create_from_date_string("1 years"));
        }

        $newDte = date_format($date,"Y-m-d");
        $currentDate = excludeHolidaysFromDate($newDte);

//	$rtrnCnt = save_LoanSchedule($disbmntDetId, $currentDateDMY, $saBeginningBalance, $thisInterest, $thisPrincipal, $thisEndingBalance, $dateStr);
//        if($rtrnCnt > 0){
//            execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET repay_end_date = '$currentDate' WHERE disbmnt_det_id = $disbmntDetId");
//        }

    }

    if ($remainingTerm > 0.0001) {
        $thisInterest = $jcloanamount * $jinterestRatePerPeriod;
        if (!($intRateType === "Flat Rate"  || $compoundType ===  "simple")) {
            $thisInterest = $saBeginningBalance * $jinterestRatePerPeriod;
        }

        $currentDateDMY = date_format(date_create($currentDate),"d-M-Y");
	$rtrnCnt = save_LoanSchedule($disbmntDetId, $currentDateDMY, $saBeginningBalance, $thisInterest, $saBeginningBalance, 0, $dateStr);
	if($rtrnCnt > 0){
            execUpdtInsSQL("UPDATE mcf.mcf_loan_disbursement_det SET repay_end_date = '$currentDate' WHERE disbmnt_det_id = $disbmntDetId");
        }
    }

}

function excludeHolidaysFromDate($refDate) {
    $startDte = "";

    global $trnsNtAllwdDts;
    global $trnsNtAllwdDys;

    $strSql = "SELECT to_char(to_timestamp('$refDate','YYYY-MM-DD'),'DD-Mon-YYYY')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $startDte = $row[0];
    }

    $i = 0;
    $j = 1;
    $k = 1;
    $x = 0;

    do {

        while ($j > 0) {
            if (in_array(strtoupper($startDte), $trnsNtAllwdDts)) {
                $startDte = date('d-M-Y', strtotime($startDte . ' + 1 days'));
                $j = 1;
                $i = 1;
            } else {
                $j = 0;
                $x = 0;
                $k = 1;
            }
        }


        $cnt = 0;
        while ($k > 0) {
            $cnt = $cnt + 1;
            $startDteDay = date('l', strtotime($startDte));


            if (in_array(strtoupper($startDteDay), $trnsNtAllwdDys)) {
                $startDte = date('d-M-Y', strtotime($startDte . ' + 1 days'));
                //$startDteDay = date('l', strtotime($startDte));

                $k = 0;
                $i = 1;
                $x = 1;
            } else {
                if (count($trnsNtAllwdDys) <= 0 || $cnt == count($trnsNtAllwdDys)) {
                    $k = 0;
                    $x = 0;
                } else {
                    $k = 1;
                }
            }
        }


        if ($x == 0) {
            $i = 0;
        } else {
            $j = 1;
        }
    } while ($i > 0);


    $startDteDsply = date('Y-m-d', strtotime($startDte));

    return $startDteDsply;
}


function updatePrsnCustNtnlIDDtaImport($custID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, $prsnType, $rvsnTtl) {
    global $usrID;
    global $dateStr;
    $ntnlIDCardsDateIssd = cnvrtDMYToYMD($ntnlIDCardsDateIssd);
    if ($ntnlIDCardsExpDate == "") {
        $ntnlIDCardsExpDate = "4000-12-31";
    } else {
        $ntnlIDCardsExpDate = cnvrtDMYToYMD($ntnlIDCardsExpDate);
    }

    $tblNm = "mcf.mcf_prsn_national_ids";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
    }


    $insSQL = "UPDATE $tblNm SET
            person_id = $custID, other_info = '" . loc_db_escape_string($ntnlIDCardsOtherInfo) .
            "', last_update_by = " . $usrID .
            ", last_update_date = '" . $dateStr .
            "', date_issued = '" . $ntnlIDCardsDateIssd .
            "', expiry_date = '" . $ntnlIDCardsExpDate .
            "', person_type = '" . loc_db_escape_string($prsnType) .
            "' WHERE id_number = '".loc_db_escape_string($ntnlIDCardsIDNo)."'"
            . " AND national_id_typ = '" . loc_db_escape_string($ntnlIDCardsIDTyp) ."' "
            . " AND nationality = '" . loc_db_escape_string($ntnlIDCardsCountry) . "' AND rvsn_ttl = $rvsnTtl";
    //echo "$insSQL";

    return execUpdtInsSQL($insSQL);
}

function createPrsnCustNtnlIDDtaImport($custID, $ntnlIDCardsCountry, $ntnlIDCardsIDNo, $ntnlIDCardsIDTyp, $ntnlIDCardsDateIssd, $ntnlIDCardsExpDate, $ntnlIDCardsOtherInfo, $prsnType, $rvsnTtl) {
    global $usrID;
    global $dateStr;

    if ($ntnlIDCardsExpDate == "") {
        $ntnlIDCardsExpDate = "4000-12-31";
    }

    //$tblNm = "mcf.mcf_prsn_national_ids";
    $insSQL = "";
    if ($rvsnTtl > 0) {
        $tblNm = "mcf.mcf_prsn_national_ids_hstrc";
        $insSQL = "INSERT INTO $tblNm(ntnlty_id,
                person_id, nationality, id_number, created_by, creation_date,
                last_update_by, last_update_date, national_id_typ,
                date_issued, expiry_date, other_info, person_type, rvsn_ttl, is_approved)
        VALUES ((SELECT nextval('mcf.mcf_cust_national_ids_ntnlty_id_seq'))," . $custID . ",'" . loc_db_escape_string($ntnlIDCardsCountry) . "','" . loc_db_escape_string($ntnlIDCardsIDNo) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "','" . loc_db_escape_string($ntnlIDCardsIDTyp) .
                "','" . $ntnlIDCardsDateIssd . "','" . $ntnlIDCardsExpDate .
                "','" . loc_db_escape_string($ntnlIDCardsOtherInfo) . "','" . loc_db_escape_string($prsnType) . "',$rvsnTtl,'No')";
    } else {
        $tblNm = "mcf.mcf_prsn_national_ids";
        $insSQL = "INSERT INTO $tblNm(ntnlty_id,
                person_id, nationality, id_number, created_by, creation_date,
                last_update_by, last_update_date, national_id_typ,
                date_issued, expiry_date, other_info, person_type, rvsn_ttl)
        VALUES ((SELECT nextval('mcf.mcf_cust_national_ids_ntnlty_id_seq'))," . $custID . ",'" . loc_db_escape_string($ntnlIDCardsCountry) . "','" . loc_db_escape_string($ntnlIDCardsIDNo) .
                "'," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "','" . loc_db_escape_string($ntnlIDCardsIDTyp) .
                "','" . $ntnlIDCardsDateIssd . "','" . $ntnlIDCardsExpDate .
                "','" . loc_db_escape_string($ntnlIDCardsOtherInfo) . "','" . loc_db_escape_string($prsnType) . "',$rvsnTtl)";
    }

    return execUpdtInsSQL($insSQL);
}

function createOtherPersonDtaImprt($orgid, $localIdNo, $LinkedCustNo, $title, $firstName, $surName, $otherNames, $gender, $maritalStatus, $dob, $pob, $nationality, $homeTown, $religion, $lnkdFirmID, $lnkdFirmLocID, $email, $telNo, $mobileNo, $faxNo, $postalAddress, $residentialAddress, $lnkdFirmName, $lnkdFirmLoc, $dateStr, $segment1,
$startDate, $endDate, $relation, $bnkBranchID, $rvsnTtl) {
    global $usrID;
    $dobYMD = cnvrtDMYToYMD($dob);

    $endDate1 = $endDate;
    $startDate1 = cnvrtDMYToYMD($startDate);
    if ($endDate1 == "") {
        $endDate1 = "4000-12-31";
    } else {
        $endDate1 = cnvrtDMYToYMD($endDate1);
    }


	$isSignatory = "NO";
	if($relation == "Director"){
		$isSignatory = "YES";
	}

    $insSQL = "INSERT INTO mcf.mcf_prsn_names_nos(" .
            "created_by, creation_date, last_update_by, last_update_date, " .
            "local_id_no, title, first_name, sur_name, other_names, gender, org_id, " .
            "marital_status, date_of_birth, place_of_birth, religion, " .
            "res_address, pstl_addrs, email, cntct_no_tel, cntct_no_mobl, " .
            "cntct_no_fax, hometown, nationality, lnkd_firm_org_id, lnkd_firm_site_id, " .
            "new_company, new_company_loc, segment1_dataload, valid_start_date, valid_end_date,
			prsn_type, is_signatory, branch_id, status)" .
            "VALUES (" . $usrID . ", '" . $dateStr . "', " .
            $usrID . ", '" . $dateStr .
            "','" . loc_db_escape_string($localIdNo) . "', '" . loc_db_escape_string($title) .
            "', '" . loc_db_escape_string($firstName) . "', '" . loc_db_escape_string($surName) .
            "', '" . loc_db_escape_string($otherNames) . "', '" . loc_db_escape_string($gender) . "', " . $orgid . "," .
            "'" . loc_db_escape_string($maritalStatus) . "', '" . $dobYMD .
            "', '" . loc_db_escape_string($pob) . "', '" . loc_db_escape_string($religion) .
            "', '" . loc_db_escape_string($residentialAddress) . "', " .
            "'" . loc_db_escape_string($postalAddress) . "', '" . loc_db_escape_string($email) .
            "', '" . loc_db_escape_string($telNo) . "', '" . loc_db_escape_string($mobileNo) .
            "', '" . loc_db_escape_string($faxNo) . "', '" . loc_db_escape_string($homeTown) .
            "', '" . loc_db_escape_string($nationality) .
            "', " . $lnkdFirmID . ", " . $lnkdFirmLocID .
            ", '" . loc_db_escape_string($lnkdFirmName) . "', '" . loc_db_escape_string($lnkdFirmLoc) .
            "','". loc_db_escape_string($LinkedCustNo).
            "', '" . loc_db_escape_string($startDate1) . "', '" . loc_db_escape_string($endDate1) .
			"', '" . loc_db_escape_string($relation) . "', '" . loc_db_escape_string($isSignatory) .
            "',$bnkBranchID, 'Incomplete' )";
    //var_dump($insSQL);
    execUpdtInsSQL($insSQL);
}


function getPrdtIDFromLoanPrdtTeksol($loanProductNo){
    global $orgID;
    $prdtCode = "XXX";
    if($loanProductNo == "1031001000000201" || $loanProductNo == "1031002000000201" || $loanProductNo == "1031003000000201"
            || $loanProductNo == "1031004000000201"){
        $prdtCode = "301";
    } else if($loanProductNo == "1031001000000202" || $loanProductNo == "1031002000000202" || $loanProductNo == "1031003000000202"
            || $loanProductNo == "1031004000000202"){
        $prdtCode = "302";
    } else if($loanProductNo == "1031001000000203" || $loanProductNo == "1031002000000203" || $loanProductNo == "1031003000000203"
            || $loanProductNo == "1031004000000203"){
        $prdtCode = "303";
    } else if($loanProductNo == "1031001000000204" || $loanProductNo == "1031002000000204" || $loanProductNo == "1031003000000204"
            || $loanProductNo == "1031004000000204"){
        $prdtCode = "304";
    } else if($loanProductNo == "1031001000000205" || $loanProductNo == "1031002000000205" || $loanProductNo == "1031003000000205"
            || $loanProductNo == "1031004000000205"){
        $prdtCode = "305";
    } else if($loanProductNo == "1031001000000206" || $loanProductNo == "1031002000000206" || $loanProductNo == "1031003000000206"
            || $loanProductNo == "1031004000000206"){
        $prdtCode = "306";
    } else if($loanProductNo == "1031001000000207" || $loanProductNo == "1031002000000207" || $loanProductNo == "1031003000000207"
            || $loanProductNo == "1031004000000207"){
        $prdtCode = "307";
    } else if($loanProductNo == "1031001000000208" || $loanProductNo == "1031002000000209" || $loanProductNo == "1031003000000209"
            || $loanProductNo == "1031004000000208"){//STAFF LOAN
        $prdtCode = "308";
    } else if($loanProductNo == "1031001000000209" || $loanProductNo == "1031002000000208" || $loanProductNo == "1031003000000208"
            || $loanProductNo == "1031004000000209"){//SUSU LOAN
        $prdtCode = "309";
    }


    $prdtTypeID = getGnrlRecID("mcf.mcf_prdt_loans", "product_code", "loan_product_id", $prdtCode, $orgID);

    return  $prdtTypeID;
}

function getDB_DateTimeYMDHMS($prvTme) {
    $sqlStr = "select lpad(($prvTme::numeric +1)::character varying,12,'0')";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return date('ymdHis');
}

function createLoanRequestDtaImport($loanRqstID, $dateStr, $bnkBranchID, $custType, $bnkCustomerID, $prdtTypeID, $loanAmount, $applctnDate,
        $prpsOfLoan, $loanTenor, $loanTenorType, $rpmntSrcAcctID, $cashCollateralID, $invstmntCollateralID, $prptyCollateralID, $grpCustId,
        $rqstType, $refLoanrqstID, $crdtType, $rcvryOfficerID, $interestRate, $rpmntSrcType, $sctrMjrID, $sctrMnrID, $loanNo, $trnsTm,
        $isDisbursed, $payBackPlan, $prncplBal, $intrstBal, $repayStartDte, $repayEndDte, $ttlLoanPymnts) {
    global $usrID;

    if ($applctnDate == "") {
        $applctnDate = date('Y-m-d');
    }

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $newStatus = "Incomplete";
    $apprvrCmnts = "";
    if((int)$rpmntSrcAcctID > 0){
        $newStatus = "Approved";
        $apprvrCmnts = "Initiatial Data Load";
    }

    $insSQL = "INSERT INTO mcf.mcf_loan_request( " .
            "branch_id, cust_type, cust_id, loan_product_id, loan_amount, application_date, " .
            "purpose, loan_tenor, loan_tenor_type, repayment_account_id, grp_cust_id, created_by, creation_date, last_update_by, last_update_date,"
            . "cash_collateral_id, invstmnt_collateral_id, property_collateral_id, status, trnsctn_id, applctn_type, ref_loanrqst_id,"
            . " crdt_type, rcvry_officer_prsn_id, interest_rate, repayment_type, sector_clsfctn_major_id, sector_clsfctn_minor_id, segment1_dataload,"
            . "approved_amount, apprvd_interest_rate, apprvd_loan_tenor, apprvd_loan_tenor_type, authorizer_comments, is_disbursed, segment2_dataload,"
            . "segment3_dataload, segment4_dataload, segment5_dataload, segment6_dataload, segment7_dataload)" .
            "VALUES(" . $bnkBranchID . ",'" . loc_db_escape_string($custType) . "'," . $bnkCustomerID . "," . $prdtTypeID . "," . $loanAmount .
            ",'" . $applctnDate . "','" . loc_db_escape_string($prpsOfLoan) . "'," . $loanTenor . ",'" . $loanTenorType . "'," . $rpmntSrcAcctID . "," .
            $grpCustId . "," . $usrID . ",'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "'," . $cashCollateralID . "," . $invstmntCollateralID .
            "," . $prptyCollateralID . ",'$newStatus','LR-" . $usrTrnsCode . "-" . $trnsTm . "','" . $rqstType .
            "'," . $refLoanrqstID . ",'" . $crdtType . "'," . $rcvryOfficerID . "," . $interestRate . ",'" . $rpmntSrcType . "',"
            . "$sctrMjrID, $sctrMnrID ,'" . loc_db_escape_string($loanNo) . "',$loanAmount, $interestRate, $loanTenor,'" . $loanTenorType .
            "','$apprvrCmnts','$isDisbursed','$payBackPlan',$prncplBal, $intrstBal, '$repayStartDte', '$repayEndDte', $ttlLoanPymnts)";

    return execUpdtInsSQL($insSQL);
}


function createAccountTransationMassLoad($acctID, $acctBal, $crncyID, $trnsTme){
    global $usrID;
    global $orgID;
    global $trnsTypes;
    global $trnsTypeABRV;

    $docType = "Paperless";
    $trnsType = "DEPOSIT";
    $trnsTypeFull = "Account Balance from TEKSOL";
    $trnsHasOtherLines = "0";
    $dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-". $trnsTme;
    $docNum1 = $gnrtdTrnsNo;
    $dateStr = getDB_Date_time();
    $dbOrCrdt = "CR";
    $voidedTrnsID = -1;
    $voidedTrnsType = "";
    $rvrsldesc = "";
    $accntCurRate = 1;

    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";

    $isSelf = "Self";
    $recCnt = 0;

    if ((int)$acctID > 0) {

            $acntRslt = get_OneCustAccntInfo($acctID);
            while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                $acctstatus = $rowAcnt[10];
                $acctcustomer = $rowAcnt[11];
                $acctlien = (float) $rowAcnt[13];
                $mandate = $rowAcnt[14];
                $wtdrwllimitno = (int) $rowAcnt[15];
                $wtdrwllimitamt = (float) $rowAcnt[16];
                $wtdrwllimittype = $rowAcnt[17];
            }


        $recCnt = createAccountTrns($acctID, $dateStr, $docType, $docNum1, $trnsTypeFull, $dbOrCrdt, (float) $acctBal, $trnsType, (float) $acctBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $crncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
    }
    return $recCnt;
}

function getNewDisbmntHdrID() {
    $strSql = "select nextval('mcf.mcf_loan_disbursement_hdr_disbmnt_hdr_id_seq')";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function getLoanRefLienAmnt($refLoanID, $coltTypeOptn) {
    $sqlStr = "";
    $sqlStr1 = "";
    if($coltTypeOptn == 1){
        $sqlStr = "SELECT count(*) FROM mcf.mcf_account_liens
            WHERE lien_status = 'Active'
            AND loan_rqst_id = $refLoanID";
    } else if($coltTypeOptn == 2){//investment
        $sqlStr = "SELECT count(*) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
            WHERE to_char(now(),'YYYY-DD-MM') BETWEEN start_date_active AND end_date_active
             AND colt_type = 'Investment'
            AND loan_rqst_id = $refLoanID";
    } else if($coltTypeOptn == 3){//property
        $sqlStr = "SELECT count(*) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
            WHERE to_char(now(),'YYYY-DD-MM') BETWEEN start_date_active AND end_date_active
            AND colt_type = 'Property'
            AND loan_rqst_id = $refLoanID";
    }


    $result = executeSQLNoParams($sqlStr);
    $cntTtl = 0;

    while ($row = loc_db_fetch_array($result)) {
        $cntTtl = (int) $row[0];
    }

    if ($cntTtl > 0) {
            if($coltTypeOptn == 1){
                $sqlStr1 = "SELECT sum(amount) FROM mcf.mcf_account_liens
                    WHERE lien_status = 'Active'
                    AND loan_rqst_id = $refLoanID";
            } else if($coltTypeOptn == 2){//investment
                $sqlStr1 = "SELECT sum(lien_value) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
                    WHERE to_char(now(),'YYYY-DD-MM') BETWEEN start_date_active AND end_date_active
                     AND colt_type = 'Investment'
                    AND loan_rqst_id = $refLoanID";
            } else if($coltTypeOptn == 3){//property
                $sqlStr1 = "SELECT sum(lien_value) FROM mcf.mcf_prpry_n_invstmnt_colt_liens
                    WHERE to_char(now(),'YYYY-DD-MM') BETWEEN start_date_active AND end_date_active
                    AND colt_type = 'Property'
                    AND loan_rqst_id = $refLoanID";
            }

    } else {
        return 0.00;
    }

    $result1 = executeSQLNoParams($sqlStr1);
    $sumTtl = 0;

    while ($row1 = loc_db_fetch_array($result1)) {
        $sumTtl = (float) $row1[0];
    }

    return $sumTtl;
}


function canPrsnSeeCustomerBranchDocs($prsnID, $custID, $rvsnTtl){
    $tblNm = "mcf.mcf_customers";
     if($rvsnTtl > 0){
         $tblNm = "mcf.mcf_customers_hstrc";
     }

    $prsnBranchID = (int)get_Person_BranchID($prsnID);

    $lastUpdateByBranchID = -1;
    $strSql1 = "SELECT pasn.get_prsn_siteid(sec.get_usr_prsn_id(last_update_by)) FROM $tblNm WHERE cust_id = $custID AND rvsn_ttl = $rvsnTtl";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $lastUpdateByBranchID = (int) $row1[0];
    }

    if (((int) $prsnBranchID == (int) $lastUpdateByBranchID) && (int) $lastUpdateByBranchID > 0) {
        return true;
    }

    return false;
}

function canPrsnSeeOtherPrsnBranchDocs($prsnID, $custID, $rvsnTtl){
    $tblNm = "mcf.mcf_prsn_names_nos";
     if($rvsnTtl > 0){
         $tblNm = "mcf.mcf_prsn_names_nos_hstrc";
     }
    $prsnBranchID = (int)get_Person_BranchID($prsnID);

    $lastUpdateByBranchID = -1;
    $strSql1 = "SELECT pasn.get_prsn_siteid(sec.get_usr_prsn_id(last_update_by)) FROM $tblNm WHERE person_id = $custID AND rvsn_ttl = $rvsnTtl";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $lastUpdateByBranchID = (int) $row1[0];
    }

    if (((int) $prsnBranchID == (int) $lastUpdateByBranchID) && (int) $lastUpdateByBranchID > 0) {
        return true;
    }

    return false;
}

function canPrsnSeeCustAccntBranchDocs($prsnID, $acctID, $rvsnTtl){
    $tblNm = "mcf.mcf_accounts";
     if($rvsnTtl > 0){
         $tblNm = "mcf.mcf_accounts_hstrc";
     }
    $prsnBranchID = (int)get_Person_BranchID($prsnID);

    $lastUpdateByBranchID = -1;
    $strSql1 = "SELECT pasn.get_prsn_siteid(sec.get_usr_prsn_id(last_update_by)) FROM $tblNm WHERE account_id = $acctID AND rvsn_ttl = $rvsnTtl";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $lastUpdateByBranchID = (int) $row1[0];
    }

    if (((int) $prsnBranchID == (int) $lastUpdateByBranchID) && (int) $lastUpdateByBranchID > 0) {
        return true;
    }

    return false;
}

function createCustAccountManual($orgID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType = "Everyone", $groupID = "-1", $canOverdrawAcct="No", $smsTriggers, $acctID) {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    $reltnOfficerID = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $reltnOfficerID, $orgID);

    $insSQL = "INSERT INTO mcf.mcf_accounts( " .
            "account_id, account_title, account_type, product_type_id, account_trns_type, prsn_type_or_entity, " .
            "currency_id, purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, " .
            "exptd_trns_per_mnth, exptd_amount_per_mnth, branch_id, relationship_officer, " .
            "comments, status, mandate, cust_type, cust_id, allwd_group_type, allwd_group_value, " .
            "account_number, org_id, created_by, creation_date, last_update_by, last_update_date, account_status, can_overdraw_acct, sms_alert_triggers)" .
            "VALUES ( $acctID, '" .
            loc_db_escape_string($acctTitle) . "', '" . loc_db_escape_string($acctType) .
            "', " . $prdtTypeID . ", '" . loc_db_escape_string($acctTrnsTyp) .
            "', '" . loc_db_escape_string($prsnTypeEntity) . "', (SELECT mcf.get_account_prdt_crncy_id('" . loc_db_escape_string($acctType) . "'," . $prdtTypeID . ")) " .
            ", '" . loc_db_escape_string($prpsOfAcct) . "', '" . loc_db_escape_string($prpsOfAcctOther) .
            "', '" . loc_db_escape_string($srcOfFunds) . "', '" . loc_db_escape_string($srcOfFundsOther) .
            "', " . $trnsPerMnthNo . ", " . $amountPerMnth . ", " . $bnkBranchID .
            ",'" . loc_db_escape_string($reltnOfficerID) .
            "', '" . loc_db_escape_string($statusReason) . "', 'Incomplete', '" . loc_db_escape_string($accMndte) . "', '" . loc_db_escape_string($custType) .
            "'," . $bnkCustomerID . ", '" . loc_db_escape_string($grpType) . "', '" . loc_db_escape_string($groupID) .
            "', (SELECT mcf.generate_account_no(" . $orgID . "," . $bnkBranchID . ", " . $prdtTypeID . ", " . $bnkCustomerID .
            ", '" . $custType . "', '" . $acctType . "'))," . $orgID .
            ", " . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "','Inactive','$canOverdrawAcct','" . loc_db_escape_string($smsTriggers) . "')";

    return execUpdtInsSQL($insSQL);
}

function updateCustAccountDtaImprtStatusUpdate($acctID, $dateStr, $accntStatus, $isDormant) {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    //GENERATE CUST ACCOUNT

    $insSQL = "UPDATE mcf.mcf_accounts SET account_status = '" . $accntStatus . "', is_dormant = '" . $isDormant .
            "', last_update_by = $usrID, last_update_date = '" . $dateStr .
            "' WHERE account_id = $acctID";
    //var_dump($insSQL);
    return execUpdtInsSQL($insSQL);
}

function getNewCustID() {
    $strSql = "select nextval('mcf.mcf_customers_cust_id_seq')";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function getNewOtherPrsnID() {
    $strSql = "select nextval('mcf.mcf_prsn_names_nos_person_id_seq')";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

//08012017
function canPrsnSeeDsbmntBranchDocs($prsnID, $disbmntHdrID){
    $tblNm = "mcf.mcf_loan_disbursement_hdr";

    $prsnBranchID = (int)get_Person_BranchID($prsnID);

    $lastUpdateByBranchID = -1;
    $strSql1 = "SELECT pasn.get_prsn_siteid(sec.get_usr_prsn_id(last_update_by)) FROM $tblNm WHERE disbmnt_hdr_id = $disbmntHdrID";
    $result1 = executeSQLNoParams($strSql1);
    while ($row1 = loc_db_fetch_array($result1)) {
        $lastUpdateByBranchID = (int) $row1[0];
    }

    if (((int) $prsnBranchID == (int) $lastUpdateByBranchID) && (int) $lastUpdateByBranchID > 0) {
        return true;
    }

    return false;
}

function createMCFLoanDisbmntAccntngTopUpReschedule($docHdrID, $dsbrsdAmnt, $ttlInterest, $repaymentType, $repaymentAccntID, $prncplRcvblAccntID, $lbltyAccntID, $interestRcvblAcctID, $dfrdIntrstAcctID, $crncyID, $lineid, $docNum, $cstmrNm, $lnTrnsId, $loanPrdtID, $crdtType, &$errMsg, $rqstType) {
    global $orgID;
    global $prsnid;
    $dateStr = getFrmtdDB_Date_time();
    $succs = true;

    //$rsltAcc = get_One_MCFLoanDisbmntHdr($docHdrID);
    //$entrdRate = 0;
    $doctype = "LOAN DISBURSEMENT";

    $entrdRate = (float) 1;
    $fnccurid = getOrgFuncCurID($orgID);
    $trnsLnTyp = "";
    $trnsSrc = "SYS";

    deleteDocGLInfcLns($docHdrID, $doctype);
    rvrsImprtdIntrfcTrns($docHdrID, $doctype);
    $trnsTypeDesc = "";

    //$lbltyAccntID

    $nwMsg = "";
    if ($crdtType === "Loan") {
//        if ($prncplRcvblAccntID <= 0 || $lbltyAccntID <= 0) {
//            $errMsg .= "Principal Receivable and Customer Liability Accounts must be setup for Loan Product Type!<br/>";
//            return false;
//        }
        if ($crdtType === "Loan" && ($interestRcvblAcctID <= 0 || $dfrdIntrstAcctID <= 0)) {
            $errMsg .= "Interest Receivable and Deferred Interest Liability Accounts must be setup for Loan Product Type!<br/>";
            return false;
        }
        //}

        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $prncplRcvblAccntID);
        if ($crncyID !== $acctCrncyID) {
            $errMsg .= "Transaction Currency ID $crncyID is not the same as the Account Currency ID $acctCrncyID!<br/><br/>";
            return false;
        }

        //PRINCIPAL LOAN ACCOUNTING
        if ($repaymentType === "Account Deductions") {
            $lbltyAccntID1 = get_cashDpst_CrdtAccnt_ID($repaymentAccntID);
            $lbltyAccntID = $lbltyAccntID1;
        }
        $succs = generateDisbmntAccntngTopUpReschedule($fnccurid, $dsbrsdAmnt, $doctype, $docHdrID, $prncplRcvblAccntID, $lbltyAccntID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, "Principal", $nwMsg, $rqstType);

        if ($succs === FALSE) {
            $errMsg .= $nwMsg;
            return $succs;
        }

        //INTEREST ACCOUNTING
        //if ($crdtType === "Loan") {
        $succs = generateDisbmntAccntngTopUpReschedule($fnccurid, $ttlInterest, $doctype, $docHdrID, $interestRcvblAcctID, $dfrdIntrstAcctID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, "Interest", $nwMsg, $rqstType);

        if ($succs === FALSE) {
            $errMsg .= $nwMsg;
            return $succs;
        }
    }

//    //PROCESSING FEES ACCOUNTING
//    $result = get_One_MCFLoanPrcssnFees($loanPrdtID);
//    while ($row = loc_db_fetch_array($result)) {
//
//        $feeName = $row[0];
//        $feeType = $row[1];
//        $feeFlat = (float) $row[2];
//        if ((float) $dsbrsdAmnt < 0) {
//            $feeFlat = -1 * (float) $row[2];
//        }
//        $feePercent = (float) $row[3];
//        $ttlFees = $feeFlat + (($feePercent / 100) * (float) $dsbrsdAmnt);
//        $crdtAccntID1 = (int) $row[5];
//        $crdtAccntID = getDefaultAccountID($prsnid, $crdtAccntID1);
//
//        if ($crdtAccntID <= 0) {
//            $errMsg .= "Revenue Account for Processing Fee must be setup for Loan Product Type!<br/>";
//            return false;
//        }
//
//        $succs = generateDisbmntAccntng($fnccurid, $ttlFees, $doctype, $docHdrID, $lbltyAccntID, $crdtAccntID, $crncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, $feeName, $nwMsg);
//
//        if ($succs === FALSE) {
//            $errMsg .= $nwMsg;
//            return $succs;
//        }
//    }

    return $succs;
}

function generateDisbmntAccntngTopUpReschedule($fnccurid, $dsbrsdAmnt, $doctype, $docHdrID, $prncplRcvblAccntID, $lbltyAccntID, $entrdCrncyID, $lineid, $dateStr, $docNum, $cstmrNm, $lnTrnsId, $trnsLnTyp, $trnsSrc, $trnsTypeDesc, &$errMsg, $rqstType) {
    if ($cstmrNm == "") {
        $cstmrNm = "Unspecified Customer";
    }

    $rqstTypeDesc = " - (Reversal) Top-Up of Loan to ";
    if($rqstType == "Reschedule Request"){
        $rqstTypeDesc = " - (Reversal) Reschedule of Loan to ";
    }

    $trnsDate = getStartOfDayDMYHMS();
    $succs = FALSE;
    //Get Lst Exchage Rates and A
    $acctCrncyAmnt = 0;
    $acctCrncyID = -1;
    $funcCrncyRate = round(get_LtstExchRate($entrdCrncyID, $fnccurid, $dateStr), 15);
    $acntCrncyRate = 1.00;
    $entrdAMnt = round($dsbrsdAmnt, 2);

    $ttlDsbrsdAmnt = $dsbrsdAmnt * $funcCrncyRate;
    if ($doctype == "LOAN DISBURSEMENT") {
        $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $prncplRcvblAccntID);
        $acntCrncyRate = round(1, 15);
        $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);

        if ($trnsTypeDesc === "Principal" || $trnsTypeDesc === "Interest") {
            $succs = sendToMCFGLIntrfcMnl($prncplRcvblAccntID, "I", $ttlDsbrsdAmnt, $trnsDate, $docNum . $rqstTypeDesc . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
        } else {
            $succs = sendToMCFGLIntrfcMnl($prncplRcvblAccntID, "D", $ttlDsbrsdAmnt, $trnsDate, $docNum . $rqstTypeDesc . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
        }
        if (!$succs) {
            return $succs;
        } else {
            $acctCrncyID = (int) getGnrlRecNm("accb.accb_chart_of_accnts", "accnt_id", "crncy_id", $lbltyAccntID);
            $acntCrncyRate = round(get_LtstExchRate($entrdCrncyID, $acctCrncyID, $dateStr), 15);
            $acctCrncyAmnt = round($entrdAMnt * $acntCrncyRate, 2);
            $succs = sendToMCFGLIntrfcMnl(
                    $lbltyAccntID, "I", $ttlDsbrsdAmnt, $trnsDate, $docNum . $rqstTypeDesc . $cstmrNm .
                    "(" . $lnTrnsId . "-" . $doctype . ") -" . $trnsTypeDesc, $entrdCrncyID, $dateStr, $doctype, $docHdrID, $lineid, $trnsLnTyp, $trnsSrc, $entrdAMnt, $entrdCrncyID, $acctCrncyAmnt, $acctCrncyID, $funcCrncyRate, $acntCrncyRate);
            if (!$succs) {
                return $succs;
            }
        }
    }
    return $succs;
}

function get_RefLoanRqstDetsForLoanApplctnRescheduled($pkID) {
    $strSql = "SELECT distinct a.loan_rqst_id, principal_amount_bal, ttl_tenor_bal, apprvd_loan_tenor_type, apprvd_interest_rate,
        ttl_interest_bal, c.loan_repayment_type, a.apprvd_loan_tenor
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det b, mcf.mcf_prdt_loans c, mcf.mcf_loan_disbursement_hdr d
WHERE a.loan_rqst_id = b.loan_rqst_id AND a.loan_product_id = c.loan_product_id AND b.disbmnt_hdr_id = d.disbmnt_hdr_id
AND is_disbursed = 'YES' AND b.ttl_tenor_bal > 0 AND a.status = 'Rescheduled' AND d.status = 'Disbursed' AND b.principal_amount > 0
AND a.loan_rqst_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function get_RefLoanRqstDetsForLoanApplctnTopUp($pkID) {
    $strSql = "SELECT distinct a.loan_rqst_id, principal_amount_bal, ttl_tenor_bal, apprvd_loan_tenor_type, apprvd_interest_rate,
        ttl_interest_bal, c.loan_repayment_type, a.apprvd_loan_tenor
FROM mcf.mcf_loan_request a, mcf.mcf_loan_disbursement_det b, mcf.mcf_prdt_loans c, mcf.mcf_loan_disbursement_hdr d
WHERE a.loan_rqst_id = b.loan_rqst_id AND a.loan_product_id = c.loan_product_id AND b.disbmnt_hdr_id = d.disbmnt_hdr_id
AND is_disbursed = 'YES' AND b.ttl_tenor_bal > 0 AND a.status = 'Topped-Up' AND d.status = 'Disbursed' AND b.principal_amount > 0
AND a.loan_rqst_id = $pkID";

    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}


function createAccountTransationMassLoadTopUp($acctID, $acctBal, $crncyID, $trnsTme, $trnsType, $dbOrCrdt, $narration){
    global $usrID;
    global $orgID;
    global $trnsTypes;
    global $trnsTypeABRV;

    $docType = "Paperless";
    //$trnsType = "DEPOSIT";
    $trnsTypeFull = $narration;
    $trnsHasOtherLines = "0";
    //$dte = date('ymdHis');
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $gnrtdTrnsNo = $trnsTypeABRV[findArryIdx($trnsTypes, $trnsType)] . "-" . $usrTrnsCode . "-". $trnsTme;
    $docNum1 = $gnrtdTrnsNo;
    $dateStr = getDB_Date_time();
    //$dbOrCrdt = "CR";
    $voidedTrnsID = -1;
    $voidedTrnsType = "";
    $rvrsldesc = "";
    $accntCurRate = 1;

    $acctstatus = "";
    $acctcustomer = "";
    $acctlien = 0;
    $mandate = "";
    $wtdrwllimitno = -1;
    $wtdrwllimitamt = 0;
    $wtdrwllimittype = "";

    $isSelf = "Self";
    $recCnt = 0;

    if ((int)$acctID > 0) {

            $acntRslt = get_OneCustAccntInfo($acctID);
            while ($rowAcnt = loc_db_fetch_array($acntRslt)) {
                $acctstatus = $rowAcnt[10];
                $acctcustomer = $rowAcnt[11];
                $acctlien = (float) $rowAcnt[13];
                $mandate = $rowAcnt[14];
                $wtdrwllimitno = (int) $rowAcnt[15];
                $wtdrwllimitamt = (float) $rowAcnt[16];
                $wtdrwllimittype = $rowAcnt[17];
            }


        $recCnt = createAccountTrns($acctID, $dateStr, $docType, $docNum1, $trnsTypeFull, $dbOrCrdt, (float) $acctBal, $trnsType, (float) $acctBal, $isSelf, "", "", "", "", "", $gnrtdTrnsNo, "Received", $voidedTrnsID, $voidedTrnsType, $rvrsldesc, (int) $crncyID, $accntCurRate, $acctstatus, $acctcustomer, $acctlien, $mandate, $wtdrwllimitno, $wtdrwllimitamt, $wtdrwllimittype, $trnsHasOtherLines);
    }
    return $recCnt;
}

function getNewCustAccountID() {
    $strSql = "select nextval('mcf.mcf_accounts_account_id_seq')";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function createCustAccountDtaImport($acctID, $orgID, $custType, $bnkCustomerID, $acctNumber, $acctTitle, $acctType, $prdtTypeID, $acctTrnsTyp, $prsnTypeEntity, $prdtCrncy, $prpsOfAcct, $prpsOfAcctOther, $srcOfFunds, $srcOfFundsOther, $trnsPerMnthNo, $amountPerMnth, $bnkBranchID, $reltnOfficerID, $statusReason, $status, $accMndte, $dateStr, $grpType = "Everyone", $groupID = "-1") {
    global $usrID;
    global $orgID;
    //$dateStr = getDB_Date_time();
    $reltnOfficerID = getGnrlRecID("prs.prsn_names_nos", "local_id_no", "person_id", $reltnOfficerID, $orgID);

    $insSQL = "INSERT INTO mcf.mcf_accounts(account_id, " .
            "account_title, account_type, product_type_id, account_trns_type, prsn_type_or_entity, " .
            "currency_id, purpose_type, purpose_other, source_of_funds_type, source_of_funds_other, " .
            "exptd_trns_per_mnth, exptd_amount_per_mnth, branch_id, relationship_officer, " .
            "comments, status, mandate, cust_type, cust_id, allwd_group_type, allwd_group_value, " .
            "account_number, org_id, created_by, creation_date, last_update_by, last_update_date)" .
            "VALUES ($acctID, '" .
            loc_db_escape_string($acctTitle) . "', '" . loc_db_escape_string($acctType) .
            "', " . $prdtTypeID . ", '" . loc_db_escape_string($acctTrnsTyp) .
            "', '" . loc_db_escape_string($prsnTypeEntity) . "', (SELECT mcf.get_account_prdt_crncy_id('" . loc_db_escape_string($acctType) . "'," . $prdtTypeID . ")) " .
            ", '" . loc_db_escape_string($prpsOfAcct) . "', '" . loc_db_escape_string($prpsOfAcctOther) .
            "', '" . loc_db_escape_string($srcOfFunds) . "', '" . loc_db_escape_string($srcOfFundsOther) .
            "', " . $trnsPerMnthNo . ", " . $amountPerMnth . ", " . $bnkBranchID .
            ",'" . loc_db_escape_string($reltnOfficerID) .
            "', '" . loc_db_escape_string($statusReason) . "', '" . loc_db_escape_string($status) .
            "', '" . loc_db_escape_string($accMndte) . "', '" . loc_db_escape_string($custType) .
            "'," . $bnkCustomerID . ", '" . loc_db_escape_string($grpType) . "', '" . loc_db_escape_string($groupID) .
            "', (SELECT mcf.generate_account_no(" . $orgID . "," . $bnkBranchID . ", " . $prdtTypeID . ", " . $bnkCustomerID .
            ", '" . $custType . "', '" . $acctType . "'))," . $orgID .
            ", " . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr . "')";

    return execUpdtInsSQL($insSQL);
}

function getOvdrftPrdtID($prdtCode) {
    $strSql = "select loan_product_id FROM mcf.mcf_prdt_loans WHERE product_code = '$prdtCode' AND product_type = 'Overdraft'";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function createAccountLienDtaImport($lienAmnt, $startDate, $endDate, $acctID, $dateStr, $narration, $status, $loanRqstID, $rvsnTtl = 0) {
    global $usrID;

    //$startDate = cnvrtDMYToYMD($startDate);
    //$endDate = cnvrtDMYToYMD($endDate);

    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);

    $insSQL = "";
        $insSQL = "INSERT INTO mcf.mcf_account_liens(acct_lien_id,
        amount, start_date_active, end_date_active, account_id, narration, lien_no, created_by, creation_date, last_update_by, last_update_date,
        lien_status, loan_rqst_id, rvsn_ttl)
    VALUES ((SELECT nextval('mcf.mcf_account_liens_acct_lien_id_seq'))," . $lienAmnt . ",'" . $startDate . "','" . $endDate . "'," . $acctID . ",'" . $narration .
                "','AL-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS() . "'," . $usrID . ", '" . $dateStr . "', " . $usrID . ", '" . $dateStr .
                "','$status',$loanRqstID,$rvsnTtl)";

    return execUpdtInsSQL($insSQL);
}

function getLoanRqstDisbmntDetID($loanRqstID) {
    $strSql = "SELECT y.disbmnt_det_id
        FROM mcf.mcf_loan_request v INNER JOIN mcf.mcf_prdt_loans x ON v.loan_product_id = x.loan_product_id
        INNER JOIN mcf.mcf_loan_disbursement_det y ON y.loan_rqst_id = v.loan_rqst_id
        INNER JOIN mcf.mcf_loan_disbursement_hdr z ON y.disbmnt_hdr_id = z.disbmnt_hdr_id
          AND repayment_type = 'Account Deductions' AND is_disbursed = 'YES'
          AND v.status = 'Approved' AND z.status = 'Disbursed' AND y.principal_amount > 0
          AND v.crdt_type = 'Loan' AND v.loan_rqst_id = $loanRqstID";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function getGnrlSequenceNo($sequence) {
    $strSql = "select nextval('$sequence')";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return -1;
}

function getLoanRqstCrncy($loanRqstId) {
    $strSql = "select mcf.get_loanrqst_crncy($loanRqstId)";
    $result = executeSQLNoParams($strSql);
    if (loc_db_num_rows($result) > 0) {
        $row = loc_db_fetch_array($result);
        return $row[0];
    }
    return '';
}

function get_UnpaidLoanRqstSchedule($loanRqstID) {
    $strSql = "SELECT a.schedule_id, a.disbmnt_det_id, begining_bal, (interest_amnt-interest_amnt_paid), (principal_amnt-principal_amnt_paid),
                    ending_bal, a.is_paid, interest_amnt_paid, principal_amnt_paid, b.loan_rqst_id, b.disbmnt_det_id, repay_date
        FROM mcf.mcf_loan_schedule a INNER JOIN mcf.mcf_loan_disbursement_det b ON a.disbmnt_det_id = b.disbmnt_det_id
          INNER JOIN mcf.mcf_loan_disbursement_hdr e ON b.disbmnt_hdr_id = e.disbmnt_hdr_id
          INNER JOIN mcf.mcf_loan_request c ON c.loan_rqst_id = b.loan_rqst_id
          WHERE e.status = 'Disbursed' AND b.principal_amount > 0 AND is_paid IN ('NO','PARTIAL')
          AND c.loan_rqst_id = $loanRqstID ORDER BY 1 ASC";
    $result = executeSQLNoParams($strSql);

    return $result;
}

function doesCustNoExistsSave($custNo) {
    $result1 = executeSQLNoParams("SELECT cust_id FROM mcf.mcf_customers "
            . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($custNo)) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesCustNoExistsUpdate($custId, $custNo) {
    $result1 = executeSQLNoParams("SELECT cust_id FROM mcf.mcf_customers "
            . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string($custNo)) . "' AND cust_id != $custId");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function chkCstmrNoExtnceCount($custNo) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_customers "
            . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string(trim($custNo))) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return 0;
}

function getCustNoChngsPndng($custNo) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_customers "
            . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string(trim($custNo))) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function getCustNoRvsnTtl($custNo) {
    $result1 = executeSQLNoParams("SELECT rvsn_ttl FROM mcf.mcf_customers "
            . "WHERE upper(id_no) = '" . strtoupper(loc_db_escape_string(trim($custNo))) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return 0;
}

function getCustAccntChngsPndng($accountID) {
    $result1 = executeSQLNoParams("SELECT chngs_pndng FROM mcf.mcf_accounts "
            . "WHERE account_id = $accountID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function getCustAccntRvsnTtl($accountID) {
    $result1 = executeSQLNoParams("SELECT rvsn_ttl FROM mcf.mcf_accounts "
            . "WHERE account_id = $accountID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return 0;
}

function chkCstmrAccountExtnceCount($custID) {
    $result1 = executeSQLNoParams("SELECT count(*) FROM mcf.mcf_accounts "
            . "WHERE cist_id = $custID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return 0;
}

function get_grpMembersLoans($prntLoanRqstID, $searchFor, $offset, $limit_size) {
    $wherecls =  " AND (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)||' ['||c.local_id_no||']' ilike '" .
                loc_db_escape_string($searchFor) . "') ";


    $strSql = "SELECT distinct rqst_grpmember_id, parent_loan_rqst_id, trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)||' ['||c.local_id_no||']' fullname, requested_amount, approved_amount,
       mcf.get_loanrqst_trnsnid(loan_rqst_id), a.cust_id, loan_rqst_id, gpmbr_repayment_account_id, gpmbr_cash_collateral_id,
       gpmbr_invstmnt_collateral_id, gpmbr_property_collateral_id
  FROM mcf.mcf_loan_request_grp_members a, mcf.mcf_group_members b, mcf.mcf_customers_ind c
  WHERE a.cust_id = b.cust_id AND b.cust_id = c.cust_id AND parent_loan_rqst_id = $prntLoanRqstID " . $wherecls
            . "ORDER BY a.CUST_ID ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
//echo $strSql;
    $result = executeSQLNoParams($strSql);
    return $result;
}

function get_grpMembersLoansTtl($prntLoanRqstID, $searchFor) {
    $wherecls =  " AND (trim(c.title || ' ' || c.sur_name ||
                ', ' || c.first_name || ' ' || c.other_names)||' ['||c.local_id_no||']' ilike '" .
                loc_db_escape_string($searchFor) . "') ";

    $strSql = "SELECT
                count(1)
              FROM mcf.mcf_loan_request_grp_members a, mcf.mcf_group_members b, mcf.mcf_customers_ind c
  WHERE a.cust_id = b.cust_id AND b.cust_id = c.cust_id AND parent_loan_rqst_id = $prntLoanRqstID " . $wherecls;
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function createGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $loanRqstID, $rpmntAcctID, $cashColtID, $invtmntColtID, $prptyColtID){
    global $usrID;
    $insSQL = "INSERT INTO mcf.mcf_loan_request_grp_members(
            parent_loan_rqst_id, requested_amount,  created_by, creation_date, last_update_by, last_update_date,
            cust_id, gpmbr_repayment_account_id, gpmbr_cash_collateral_id, gpmbr_invstmnt_collateral_id,
       gpmbr_property_collateral_id)
    VALUES ($loanRqstID, $rqstdAmount, $usrID,  '$dateStr', $usrID,  '$dateStr', $custID, $rpmntAcctID, $cashColtID, $invtmntColtID, $prptyColtID)";

    return execUpdtInsSQL($insSQL);

}

function updateGrpMemberApplctns($pkeyID, $custID, $rqstdAmount, $dateStr, $loanRqstID, $rpmntAcctID, $cashColtID, $invtmntColtID, $prptyColtID){
       global $usrID;
        $insSQL = "UPDATE mcf.mcf_loan_request_grp_members
        SET parent_loan_rqst_id=$loanRqstID, requested_amount=$rqstdAmount,
            last_update_by=$usrID, last_update_date='$dateStr', cust_id=$custID,
                gpmbr_repayment_account_id = $rpmntAcctID, gpmbr_cash_collateral_id =$cashColtID, gpmbr_invstmnt_collateral_id =$invtmntColtID,
       gpmbr_property_collateral_id = $prptyColtID
      WHERE rqst_grpmember_id = $pkeyID";

    return execUpdtInsSQL($insSQL);

}

function updateGrpMemberApplctnsAprvl($pkeyID, $aprvdAmount, $dateStr){
       global $usrID;
        $insSQL = "UPDATE mcf.mcf_loan_request_grp_members
        SET approved_amount=$aprvdAmount,
            last_update_by=$usrID, last_update_date='$dateStr'
      WHERE rqst_grpmember_id = $pkeyID";

    return execUpdtInsSQL($insSQL);

}


function deleteLoanRqstGrpMember($pkID) {

    $delSQL2 = "DELETE from mcf.mcf_loan_request_grp_members WHERE rqst_grpmember_id = $pkID";

    return execUpdtInsSQL($delSQL2);
}

function grpMemberApplctnExists($loanRqstID) {
    $strSql = "SELECT
                count(1)
              FROM mcf.mcf_loan_request_grp_members a, mcf.mcf_loan_request b
  WHERE a.parent_loan_rqst_id = b.loan_rqst_id AND parent_loan_rqst_id = $loanRqstID AND grp_applicant_type = 'Group'" ;
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return 0;
}

function validateLoanCollateralsLiens($cashAccntID, $invstmntColtID, $prptyColtID, $apprvdAmnt, $lineid, $crdtType, &$errMsg, $loanRqstID, $optn) {//$docHdrID = accntID for Account Deductions
    $dsplyErrMsg = "";

    $cashAccntNo = getGnrlRecNm("mcf.mcf_accounts", "account_id", "account_number", $cashAccntID);
    $invstmntColtNo = getGnrlRecNm("mcf.mcf_prpry_n_invstmnt_colt_liens", "colt_lien_id", "lien_no", $invstmntColtID);
    $prptyColtNo = getGnrlRecNm("mcf.mcf_prpry_n_invstmnt_colt_liens", "colt_lien_id", "lien_no", $prptyColtID);

    $succs = FALSE;
    $lnCntr = 0;

    $xptdCashColtValue = 0.00;
    $valFlatCashColt = 0.00;
    $valPrcntCashColt = 0.00;

    $xptdInvstmntColtValue = 0.00;
    $valFlatInvstmntColt = 0.00;
    $valPrcntInvstmntColt = 0.00;

    $xptdPrptyColtValue = 0.00;
    $valFlatPrptyColt = 0.00;
    $valPrcntPrptyColt = 0.00;

    $result = getExptdColtrlValsForLoanRqst($loanRqstID);
    while ($row = loc_db_fetch_array($result)) {
        $valFlatCashColt = (float) $row[0];
        $valPrcntCashColt = (float) $row[1];
        $xptdCashColtValue = round(($valFlatCashColt + (($valPrcntCashColt / 100) * (float) $apprvdAmnt)), 2);

        $valFlatPrptyColt = (float) $row[2];
        $valPrcntPrptyColt = (float) $row[3];
        $xptdPrptyColtValue = round(($valFlatPrptyColt + (($valPrcntPrptyColt / 100) * (float) $apprvdAmnt)), 2);


        $valFlatInvstmntColt = (float) $row[4];
        $valPrcntInvstmntColt = (float) $row[5];
        $xptdInvstmntColtValue = round(($valFlatInvstmntColt + (($valPrcntInvstmntColt / 100) * (float) $apprvdAmnt)), 2);
    }

    if ($prptyColtID > 0) {
        $lienQtyPrpty = 0.00;
        if ($optn == 0) {//APPROVE
            $lienQtyPrpty = (float) $xptdPrptyColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $lienQtyPrpty = -1 * (float) $xptdPrptyColtValue; //$apprvdAmnt;
        }
        //VALIDATE COLLATERAL AMOUNT
        $srcPrptyNetVal = (float) getInvstmntOrPrptyNetVal($prptyColtID, "Property");

        $dsplyErrMsg .= "Property Collateral <b>$prptyColtNo</b> Value is not sufficient to guarantee this Loan Request lienQtyPrpty" . $lienQtyPrpty . " srcPrptyNetVal=" . $srcPrptyNetVal . " optn" . $optn;
        if ((float) $srcPrptyNetVal < (float) $lienQtyPrpty && $optn == 0) {
            $dsplyErrMsg .= "Property Collateral <b>$prptyColtNo</b> Value is not sufficient to guarantee this Loan Request lienQtyPrpty" . $lienQtyPrpty . " srcPrptyNetVal=" . $srcPrptyNetVal;
            $lnCntr = $lnCntr + 1;
        }
    }

    if ($invstmntColtID > 0) {
        $lienQtyInvstmnt = 0.00;
        if ($optn == 0) {//APPROVE
            $lienQtyInvstmnt = (float) $xptdInvstmntColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $lienQtyInvstmnt = -1 * (float) $xptdInvstmntColtValue; //$apprvdAmnt;
        }

        //VALIDATE COLLATERAL AMOUNT
        $srcInvstmntNetVal = (float) getInvstmntOrPrptyNetVal($invstmntColtID, "Investment");
        if ((float) $srcInvstmntNetVal < (float) $lienQtyInvstmnt && $optn == 0) {
            $dsplyErrMsg .= "Investment Collateral <b>$invstmntColtNo</b> Value is not sufficient to guarantee this Loan Request";
            $lnCntr = $lnCntr + 1;
        }
    }

    if ($cashAccntID > 0) {
        $lienQty = 0.00; //$apprvdAmnt;
        $clearedQty = 0.00; //$apprvdAmnt;

        if ($optn == 0) {//APPROVE
            $lienQty = (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
        } else {//REVERSE
            $lienQty = -1 * (float) $xptdCashColtValue; //$apprvdAmnt;
            $clearedQty = (float) $xptdCashColtValue; //$apprvdAmnt;
        }

        //VALIDATE COLLATERAL AMOUNT
        $srcCashBal = getAcctCollateralCurrAvlblBal($cashAccntID);
        if ((float) $srcCashBal < (float) $lienQty && $optn == 0) {
            $dsplyErrMsg .= "Available Balance on Cash Collateral Account <b>$cashAccntNo</b> is not sufficient to guarantee this Loan Request";
            $lnCntr = $lnCntr + 1;
        }
    }

    $dsplyErrMsg .= "</br>";

    $errMsg = $dsplyErrMsg;

    if ($lnCntr <= 0) {
        $succs = true;
    }

    $rslt = array("lnCntr"=>$lnCntr, "errMsg"=>$errMsg);

    return $rslt;
}

function createGrpMemberLoanApplctns($loanRqstID) {
    global $orgID;
    $rtrnRslt = 'FAILURE';
    global $usrID;

    $strSql = "SELECT mcf.xx_create_grpmembers_loanrequest($usrID, $orgID, $loanRqstID)";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    return $rtrnRslt;
}

function getInvestmentLqdtnTblTtl($searchFor, $searchIn, $orgID, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Transaction No") {
        $whrcls = " AND (c.lqdtn_trnsctn_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (c.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer") {
        $whrcls = " AND (mcf.get_customer_name(a.cust_type, a.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    $strSql = "SELECT count(1) " .
            "FROM mcf.mcf_investments_liquidation c, mcf.mcf_investments a, mcf.mcf_prdt_savings b
			WHERE c.invstmnt_id = a.invstmnt_id
			AND a.svngs_product_id = b.svngs_product_id
       AND (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls . $extra2 .
            ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

function getInvestmentLqdtnTbl($searchFor, $searchIn, $offset, $limit_size, $orgID, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Transaction No") {
        $whrcls = " AND (c.lqdtn_trnsctn_no ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Status") {
        $whrcls = " AND (c.status ilike '" . loc_db_escape_string($searchFor) . "')";
    } else if ($searchIn == "Customer") {
        $whrcls = " AND (mcf.get_customer_name(a.cust_type, a.cust_id) ilike '" . loc_db_escape_string($searchFor) . "')";
    }

    if ($sortBy == "Transaction No ASC") {
        $ordrBy = "c.lqdtn_trnsctn_no ASC";
    } else if ($sortBy == "Status DESC") {
        $ordrBy = "c.status DESC";
    } else if ($sortBy == "Date Added DESC") {
        $ordrBy = "c.last_update_date DESC";
    }

    $strSql = "SELECT lqdtn_id, lqdtn_trnsctn_no, mcf.get_customer_name(a.cust_type, a.cust_id) customer, b.currency_id, principal_value,
	current_interest_value, CASE WHEN rate_type = 'Interest' THEN a.interest_rate ELSE a.discount_rate END rate, c.status, lqdtn_invstmnt_status,
	trnsctn_no
       FROM mcf.mcf_investments_liquidation c, mcf.mcf_investments a, mcf.mcf_prdt_savings b
			WHERE c.invstmnt_id = a.invstmnt_id
			AND a.svngs_product_id = b.svngs_product_id
       AND (1 = 1 AND (b.org_id = " . $orgID . " " . $extra1 . ")" . $whrcls .
            ") ORDER BY " . $ordrBy . " LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getInvestmentLqdtnDet($lqdtnInvstmntId) {
	$strSql = "SELECT lqdtn_id, lqdtn_trnsctn_no, /**1**/
                   CASE WHEN liquidation_date = '' THEN '' ELSE to_char(to_timestamp(liquidation_date,'YYYY-MM-DD'),'DD-Mon-YYYY') END liquidation_date, /**2**/
                   x.branch_id, x.invstmnt_id, mcf.get_customer_name(y.cust_type,y.cust_id), x.purpose, current_interest_value, x.status, x.lqdtn_invstmnt_status, /**9**/
                   z.currency_id, trim(y.trnsctn_no)||' ['||mcf.get_customer_name(y.cust_type, y.cust_id)||' ('||mcf.get_cust_local_idno(y.cust_id)||')]', /**11**/
                   x.invstmnt_officer_id, principal_value, liquidation_type, to_char(to_timestamp(y.end_date,'YYYY-MM-DD'),'DD-Mon-YYYY') /**15**/
                   FROM mcf.mcf_investments_liquidation x, mcf.mcf_investments y, mcf.mcf_prdt_savings z WHERE x.invstmnt_id = y.invstmnt_id
                   AND y.svngs_product_id = z.svngs_product_id AND lqdtn_id = $lqdtnInvstmntId";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getInvestmentLqdtnID() {
    $sqlStr = "SELECT nextval('mcf.mcf_investments_liquidation_lqdtn_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function deleteInvestmentLqdtn($lqdtnId) {
    $delSQL1 = "DELETE FROM mcf.mcf_investments_liquidation WHERE lqdtn_id = $lqdtnId";
    return execUpdtInsSQL($delSQL1);
}

function createInvestmentLqdtn($lqdtnId, $invstmnt_id, $invstmnt_officer_id, $liquidation_date, $purpose, $branch_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $liquidation_date = cnvrtDMYToYMD($liquidation_date);
    $usrTrnsCode = getGnrlRecNm("sec.sec_users", "user_id", "code_for_trns_nums", $usrID);
    $prncplVal = (float)getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "amount", $invstmnt_id);

	$insSQL = "INSERT INTO mcf.mcf_investments_liquidation(
            lqdtn_id, invstmnt_id, invstmnt_officer_id, principal_value,
            current_interest_value, liquidation_date, created_by, creation_date,
            last_update_by, last_update_date, purpose,
            status, lqdtn_trnsctn_no, branch_id, lqdtn_invstmnt_status)
    VALUES ($lqdtnId, $invstmnt_id, $invstmnt_officer_id, $prncplVal,
            (SELECT mcf.xx_calc_invstmnt_current_interest($invstmnt_id,$orgID)), '$liquidation_date', $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "',
			'" . loc_db_escape_string($purpose) . "',
            'Incomplete', 'LQD-" . $usrTrnsCode . "-" . getDB_Date_timeYMDHMS(). "', $branch_id, 'Unprocessed')";

    return execUpdtInsSQL($insSQL);
}

function updateInvestmentLqdtn($lqdtnId, $invstmnt_id, $invstmnt_officer_id, $liquidation_date, $purpose,
            $branch_id, $dateStr) {
    global $usrID;
    //global $dateStr;
    global $orgID;

    $liquidation_date = cnvrtDMYToYMD($liquidation_date);
    $prncplVal = (float)getGnrlRecNm("mcf.mcf_investments", "invstmnt_id", "amount", $invstmnt_id);


	$insSQL = "UPDATE mcf.mcf_investments_liquidation
   SET invstmnt_id=$invstmnt_id, invstmnt_officer_id=$invstmnt_officer_id, principal_value=$prncplVal,
       current_interest_value=(SELECT mcf.xx_calc_invstmnt_current_interest($invstmnt_id,$orgID)), liquidation_date='$liquidation_date',
       last_update_by=$usrID, last_update_date='" . $dateStr . "', purpose='" . loc_db_escape_string($purpose) . "',
       branch_id=$branch_id
 WHERE lqdtn_id = $lqdtnId";

    return execUpdtInsSQL($insSQL);
}

function getAccountLinkedPrsnID($accountNo) {
    $result1 = executeSQLNoParams("select trim(substr(data_col26,1,coalesce(nullif(POSITION('~' in data_col26),0),1) -1)) from mcf.mcf_extra_data
where src_pk_id = (SELECT cust_id FROM mcf.mcf_accounts WHERE account_number = '" . loc_db_escape_string($accountNo) . "')
AND src_type = 'Personal Customer'");
    while ($row1 = loc_db_fetch_array($result1)) {
        if($row1[0] == ""){
            return -1;
        }
        return (int) $row1[0];
    }
    return -1;
}

function getInvstmntInterestEarned($invstmntID){
    global $orgID;
    $result1 = executeSQLNoParams("select mcf.xx_calc_invstmnt_current_interest($invstmntID, $orgID)");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (float) $row1[0];
    }
    return 0.00;
}

function getInvstmntPayBackDbtAcctType($invstmntID){
    global $orgID;
    $result1 = executeSQLNoParams("select mcf.xx_calc_invstmnt_current_interest($invstmntID, $orgID)");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (float) $row1[0];
    }
    return 0.00;
}

function getODLoanRqstDsbmntDetID($lnRqstID){
    global $orgID;
    $result1 = executeSQLNoParams("SELECT distinct disbmnt_det_id FROM
  mcf.mcf_loan_request a INNER JOIN mcf.mcf_loan_disbursement_det c ON c.loan_rqst_id = a.loan_rqst_id
INNER JOIN mcf.mcf_loan_disbursement_hdr d ON c.disbmnt_hdr_id = d.disbmnt_hdr_id
WHERE  1 = 1
 AND is_disbursed = 'YES'
 AND a.status = 'Approved' AND d.status = 'Disbursed' AND c.principal_amount > 0
 AND a.crdt_type = 'Overdraft' AND a.loan_rqst_id = $lnRqstID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return -1;
}

function updateODInterestPayment($p_disbmnt_det_id, $p_amount) {
    $trnsDte = getStartOfDayYMD();
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();
    $strSql = "SELECT mcf.update_od_acrued_interest_table($p_disbmnt_det_id, $p_amount, $usrID, '$dateStr')";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    return $rtrnRslt;
}

function doesCustAccountNoExistsSave($custAccountNo) {
    $result1 = executeSQLNoParams("SELECT account_id FROM mcf.mcf_accounts "
            . "WHERE upper(account_number) = '" . strtoupper(loc_db_escape_string(trim($custAccountNo))) . "'");
    while ($row1 = loc_db_fetch_array($result1)) {
        return true;
    }
    return false;
}

function doesCustAccountNoExistsUpdate($acctID, $custAccountNo) {
    $result1 = executeSQLNoParams("SELECT account_id FROM mcf.mcf_accounts "
            . "WHERE upper(account_number) = '" . strtoupper(loc_db_escape_string(trim($custAccountNo))) . "' AND account_id != $acctID");
    while ($row1 = loc_db_fetch_array($result1)) {
        return (int) $row1[0];
    }
    return false;
}

function validateCstmrAcntBalanceTrns($accntID, $clearedQty, $unClearedQty, $lienQty, $itmType, $actTyp, $docTypPrfx, $docLnID, $dateStr, &$errMsg) {
    $trnsDate = getStartOfDayDMYHMS();
    $succs = false;
    $src_trsID = $docTypPrfx . "-" . $docLnID;
    if ($actTyp == "D") {
        $clearedQty = -1 * $clearedQty;
        $unClearedQty = -1 * $unClearedQty;
        $lienQty = -1 * $lienQty;
    }

    $trnsDate = getStartOfDayDMYHMS();
    $affctd = 0;
    $dailybalID = getCstmrAcntDailyBalsID($accntID, $trnsDate);
    $lstClrdTotBals = getCstmrAcntLstClrdTotBls($accntID, $trnsDate);
    $lstUnClrdTotBals = getCstmrAcntLstUnClrdTotBls($accntID, $trnsDate);
    $lstLienBals = getCstmrAcntLstLienBls($accntID, $trnsDate);
    $actvLienBals = 0.00;

    $resultQry1 = executeSQLNoParams("SELECT sum(b.amount) FROM mcf.mcf_account_liens b WHERE $accntID = b.account_id and b.lien_status = 'Active' and b.is_approved = 'Yes'");
    while ($row1 = loc_db_fetch_array($resultQry1)) {
        $actvLienBals = (float)$row1[0];
    }

    if ($lienQty != 0){
        if (round(($actvLienBals),2) == round(((float)$lienQty + (float)$lstLienBals),2)) {
            $affctd = 1;
        }

    } else {
        $affctd = 1;
    }

	if ($affctd > 0){
		$succs = true;
	} else {
		$succs = false;
	}
    if (!$succs) {
        $errMsg = "Act Type:" . $actTyp . ":Item Type:" . $itmType . ":Account ID:" . $accntID . ":Cleared Amt:" . $clearedQty . ":UnCleared Amt:" . $unClearedQty . " will cause negative balance!";
    }
    return $succs;

}

function getAgingClsForCharts() {
	$strSql = "  SELECT mcf.get_aging_class_count('Current Loans'), mcf.get_aging_class_count('Up to 30 days'),
            mcf.get_aging_class_count('31 days and less than 61 days'),  mcf.get_aging_class_count('61 days and less than 91 days'),
            mcf.get_aging_class_count('91 days and less than 121 days'),  mcf.get_aging_class_count('121 days and less than 151 days'),
            mcf.get_aging_class_count('151 days and above') ";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getDisbursmentTtlForCharts($branchID) {
	$strSql = "SELECT mcf.get_monthly_disbursement($branchID,'2018-01'), mcf.get_monthly_disbursement($branchID,'2018-02'),
            mcf.get_monthly_disbursement($branchID,'2018-03'), mcf.get_monthly_disbursement($branchID,'2018-04'),
            mcf.get_monthly_disbursement($branchID,'2018-05'), mcf.get_monthly_disbursement($branchID,'2018-06')";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getAccountBranchID($accountID) {
    $sqlStr = "SELECT branch_id FROM mcf.mcf_accounts WHERE account_id = $accountID";
    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

function processModifyCustomerAccountData($acctID) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    $trnsDte = getStartOfDayYMD();
    global $orgID;
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();

    $strSql = "SELECT mcf.xx_modify_customeraccount_data($usrID, '$dateStr', $orgID, $acctID)";

    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    return $rtrnRslt;
}

function runChqBookFeeDeduction($chqBkID, $prcsOptn) {
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    global $orgID;
    $rtrnRslt = 'FAILURE';
    $recCnt = 0;
    global $usrID;
    $dateStr = getDB_Date_time();

    $strSql = "SELECT mcf.xx_process_chqbkfee_deduction($usrID, '$balDte', $orgID, $prcsOptn, $chqBkID)";


    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        $rtrnRslt = $row[0];
    }

    if ($rtrnRslt == 'SUCCESS') {
        if($prcsOptn == 1){
            $recCnt = execUpdtInsSQL("Update mcf.mcf_cheque_book_register SET "
                . "fee_status = 'Unprocessed', last_update_by = $usrID, last_update_date = '$dateStr' "
                . "WHERE chq_book_id = $chqBkID");   
        } else {
            $recCnt = execUpdtInsSQL("Update mcf.mcf_cheque_book_register SET "
                . "fee_status = 'Processed', last_update_by = $usrID, last_update_date = '$dateStr' "
                . "WHERE chq_book_id = $chqBkID");
        }
    }

    return $rtrnRslt;
}

function getChqBkID() {
    $sqlStr = "SELECT nextval('mcf.mcf_cheque_register_chq_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function chqBookFeeDeductionExistsCount($chqBookId) {

    $sqlStr = "SELECT  mcf.has_chqbk_rvnue_bn_deducted($chqBookId);";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return -1;
}

//NEW FUNCTION 27052019
function getLoanTtlbalAsatCobdateWdlnacctid($lnAcctId) {

    $sqlStr = "SELECT  mcf.get_loan_ttlbal_asat_cobdate_wdlnacctid($lnAcctId);";

    $result = executeSQLNoParams($sqlStr);

    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }

    return 9999999999;
}

function get_OneCustAccntHstry_Loans($pkeyID) {
    $whereCls = "";
    $balDte = substr(getStartOfDayYMD(), 0, 10);
    $clrdBal = 0;
    $unclrdBal = 0;
    if($pkeyID > 0){
        $clrdBal = getLoanTtlbalAsatCobdateWdlnacctid($pkeyID);//getAccountBal($acctNo, 'Cleared');
        $unclrdBal = getLoanTtlbalAsatCobdateWdlnacctid($pkeyID);//getAccountBal($acctNo, 'Uncleared');
    }
    
    $strSql = "SELECT a.acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, a.trns_type, " .
            "a.amount, COALESCE(a.status,'Not Submitted'), a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), a.trns_no, "
            . "a.value_date, a.branch_id, a.doc_type, a.doc_no, a.trns_person_name, a.trns_person_tel_no, "
            . "a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number, a.trns_person_type, a.status, "
            . "a.debit_or_credit, a.authorized_by_person_id, a.autorization_date, a.amount_cash, "
            . "a.voided_acct_trns_id, a.voided_trns_type, a.reversal_reason, a.description, a.created_by, "
            . "b.branch_id, prs.get_prsn_name(a.authorized_by_person_id), a.approval_limit_id, d.max_amount,
              (a.unclrdbal - a.amount), (a.clrdbal - a.amount),
              b.account_type, 
              CASE WHEN a.acctstatus='' THEN b.account_status ELSE a.acctstatus END, 
              CASE WHEN a.acctcustomer='' THEN mcf.get_customer_name(b.cust_type, b.cust_id) ELSE a.acctcustomer END, 
                b.prsn_type_or_entity, a.acctlien, 
                CASE WHEN a.mandate='' THEN b.mandate ELSE a.mandate END, a.wtdrwllimitno, a.wtdrwllimitamt, a.wtdrwllimittype,
                org.get_site_name(a.branch_id::integer) " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((a.account_id = " . $pkeyID . ")$whereCls) ORDER BY a.trns_date DESC, a.acct_trns_id DESC LIMIT 10 OFFSET 0";
//echo $strSql;      
    $result = executeSQLNoParams($strSql);
    return $result;
}

function createAccountTrns_Loans($acctID, $dateStr, $docType, $docNo, $desc, $dbOrCrdt, $trnsAmnt, $trnsType, $cashAmount = 0, $trnsPrsnType = "Self", $trnsPrsnNm = "", $trnsPrsnTel = "", $trnsPrsnAddrs = "", $trnsPrsnIDType = "", $trnsPrsnIDNo = "", $trnsNo = "", $status = "Not Submitted", $voidedTrnsID = -1, $voidedTrnsType = "", $rvrsldesc = "", $entrdCrncyID = -1, $accntCurRate = 1, $acctstatus = "", $acctcustomer = "", $acctlien = 0, $mandate = "", $wtdrwllimitno = -1, $wtdrwllimitamt = 0, $wtdrwllimittype = "", $trns_has_other_lines = "0", $disbmntHdrID = -1, $disbmntDetID = -1, $subDocType = "", $lnkdChqTrnsID = -1, $lnkdOrdExctnID = -1, $lnkdMscTrnsID = -1, $loanRepayType = "", $loanRpmntSrcAcctID = -1, $loanRpmntSrcAmnt = 0.00, $bulkTrnsHdrID = -1, $miscTrnsBalsGlAcntID = -1) {
    global $usrID;
    global $prsnid;
    global $orgID;
    global $gnrlTrnsDteYMDHMS;
    $clrdBal = getLoanTtlbalAsatCobdateWdlnacctid($acctID);//getAccountBal($acctNo, 'Cleared');
    $unclrdBal = getLoanTtlbalAsatCobdateWdlnacctid($acctID);//getAccountBal($acctNo, 'Uncleared');

    $insSQL = "INSERT INTO mcf.mcf_cust_account_transactions(
            trns_date, account_id, trns_type, description, 
            amount, value_date, branch_id, doc_no, trns_person_name, trns_person_tel_no, 
            trns_person_address, trns_person_id_type, trns_person_id_number, 
            trns_person_type, created_by, creation_date, last_update_by, 
            last_update_date, org_id, status, doc_type, debit_or_credit, 
            authorized_by_person_id, autorization_date, trns_no, amount_cash, 
            voided_acct_trns_id, voided_trns_type, reversal_reason, approval_limit_id, 
            unclrdbal, clrdbal, acctstatus, acctcustomer, acctlien, mandate, 
            wtdrwllimitno, wtdrwllimitamt, wtdrwllimittype, entered_crncy_id, 
            accnt_crncy_rate,trns_has_other_lines, disbmnt_hdr_id, disbmnt_det_id, 
            sub_trns_type, lnkd_chq_trns_id, lnkd_ordr_exctn_id, lnkd_mscl_trns_id,
            loan_rpmnt_type, loan_rpmnt_src_acct_id, loan_rpmnt_src_amount, bulk_trns_hdr_id, balancing_gl_accnt_id) " .
            "VALUES('" . $gnrlTrnsDteYMDHMS .
            "', " . $acctID .
            ",'" . loc_db_escape_string($trnsType) .
            "','" . loc_db_escape_string($desc) .
            "'," . $trnsAmnt .
            ",'" . substr($gnrlTrnsDteYMDHMS, 0, 10) .
            "', (SELECT pasn.get_prsn_siteid($prsnid))" .
            ", '" . loc_db_escape_string($docNo) .
            "', '" . loc_db_escape_string($trnsPrsnNm) .
            "', '" . loc_db_escape_string($trnsPrsnTel) .
            "', '" . loc_db_escape_string($trnsPrsnAddrs) .
            "', '" . loc_db_escape_string($trnsPrsnIDType) .
            "', '" . loc_db_escape_string($trnsPrsnIDNo) .
            "', '" . loc_db_escape_string($trnsPrsnType) .
            "'," . $usrID .
            ",'" . $dateStr .
            "'," . $usrID .
            ",'" . $dateStr .
            "'," . $orgID .
            ", '" . loc_db_escape_string($status) .
            "', '" . loc_db_escape_string($docType) .
            "', '" . loc_db_escape_string($dbOrCrdt) .
            "',-1,'', '" . loc_db_escape_string($trnsNo) .
            "'," . $cashAmount .
            "," . $voidedTrnsID .
            ", '" . loc_db_escape_string($voidedTrnsType) .
            "', '" . loc_db_escape_string($rvrsldesc) .
            "',-1, $clrdBal " .
            ", $unclrdBal" .
            ", '" . loc_db_escape_string($acctstatus) .
            "', '" . loc_db_escape_string($acctcustomer) .
            "'," . $acctlien .
            ", '" . loc_db_escape_string($mandate) .
            "'," . $wtdrwllimitno .
            "," . $wtdrwllimitamt .
            ", '" . loc_db_escape_string($wtdrwllimittype) .
            "'," . $entrdCrncyID .
            "," . $accntCurRate .
            ",'" . $trns_has_other_lines .
            "'," . $disbmntHdrID .
            "," . $disbmntDetID . ", '" . loc_db_escape_string($subDocType) .
            "'," . $lnkdChqTrnsID . "," . $lnkdOrdExctnID . "," . $lnkdMscTrnsID . ",'$loanRepayType',"
            . "$loanRpmntSrcAcctID, $loanRpmntSrcAmnt, $bulkTrnsHdrID, $miscTrnsBalsGlAcntID)";
    return execUpdtInsSQL($insSQL);
}

function updateAccountTrns_Loans($acctID, $dateStr, $docType, $docNo, $desc, $dbOrCrdt, $trnsAmnt, $acctTrnsId, $cashAmount = 0, $trnsPrsnType = "Self", $trnsPrsnNm = "", $trnsPrsnTel = "", $trnsPrsnAddrs = "", $trnsPrsnIDType = "", $trnsPrsnIDNo = "", $status = "Not Submitted", $rvrsldesc = "", $entrdCrncyID = -1, $accntCurRate = 1, $acctstatus = "", $acctcustomer = "", $acctlien = 0, $mandate = "", $wtdrwllimitno = -1, $wtdrwllimitamt = 0, $wtdrwllimittype = "", $trnsNo = "", $disbmntHdrID = -1, $disbmntDetID = -1, $subDocType = "", $lnkdChqTrnsID = -1, $lnkdOrdExctnID = -1, $lnkdMscTrnsID = -1, $loanRepayType = "", $loanRpmntSrcAcctID = -1, $loanRpmntSrcAmnt = 0.00, $bulkTrnsHdrID = -1, $trnsType = "", $miscTrnsBalsGlAcntID = -1) {
    global $usrID;
    global $prsnid;
    global $orgID;
    global $gnrlTrnsDteYMDHMS;
    $clrdBal = getLoanTtlbalAsatCobdateWdlnacctid($acctID);//getAccountBal($acctNo, 'Cleared');
    $unclrdBal = getLoanTtlbalAsatCobdateWdlnacctid($acctID);//getAccountBal($acctNo, 'Uncleared');
    
    $insSQL = "UPDATE mcf.mcf_cust_account_transactions
            SET  trns_date='" . $gnrlTrnsDteYMDHMS .
            "', account_id=" . $acctID . ", description='" . loc_db_escape_string($desc) .
            "', amount=" . $trnsAmnt .
            ", value_date='" . substr($gnrlTrnsDteYMDHMS, 0, 10) .
            "', branch_id=(SELECT pasn.get_prsn_siteid($prsnid)), " .
            "org_id=" . $orgID . ", " .
            "doc_no='" . loc_db_escape_string($docNo) .
            "', trns_person_name='" . loc_db_escape_string($trnsPrsnNm) .
            "', trns_person_tel_no='" . loc_db_escape_string($trnsPrsnTel) .
            "', trns_person_address='" . loc_db_escape_string($trnsPrsnAddrs) .
            "', trns_person_id_type='" . loc_db_escape_string($trnsPrsnIDType) .
            "', trns_person_id_number='" . loc_db_escape_string($trnsPrsnIDNo) .
            "', trns_person_type='" . loc_db_escape_string($trnsPrsnType) .
            "', last_update_by=" . $usrID . ", 
                last_update_date='" . $dateStr . "', doc_type='" . loc_db_escape_string($docType) . "', 
                debit_or_credit='" . loc_db_escape_string($dbOrCrdt) . "', 
                amount_cash=" . $cashAmount . ",  
                reversal_reason='" . loc_db_escape_string($rvrsldesc) . "', 
                unclrdbal=$unclrdBal,
                clrdbal=$clrdBal,
                acctstatus='" . loc_db_escape_string($acctstatus) . "', 
                acctcustomer='" . loc_db_escape_string($acctcustomer) . "', 
                acctlien=" . $acctlien . ", 
                mandate='" . loc_db_escape_string($mandate) . "', 
                wtdrwllimitno=" . $wtdrwllimitno . ", 
                wtdrwllimitamt=" . $wtdrwllimitamt . ", 
                wtdrwllimittype='" . loc_db_escape_string($wtdrwllimittype) . "',
                disbmnt_hdr_id = " . $disbmntHdrID . ",
                disbmnt_det_id = " . $disbmntDetID .
            ", sub_trns_type='" . loc_db_escape_string($subDocType) .
            "', loan_rpmnt_type='" . $loanRepayType .
            "', loan_rpmnt_src_acct_id=" . $loanRpmntSrcAcctID .
            ", loan_rpmnt_src_amount=" . $loanRpmntSrcAmnt .
            ", bulk_trns_hdr_id=" . $bulkTrnsHdrID .
            ", balancing_gl_accnt_id=" . $miscTrnsBalsGlAcntID;
    /* , lnkd_chq_trns_id=" . $lnkdChqTrnsID .
      ", lnkd_ordr_exctn_id=" . $lnkdOrdExctnID .
      ", lnkd_mscl_trns_id=" . $lnkdMscTrnsID; */
    if ($entrdCrncyID > 0 && $accntCurRate != 0) {
        $insSQL .= ", entered_crncy_id=" . $entrdCrncyID . ", accnt_crncy_rate=" . $accntCurRate;
    }
    if ($trnsType != "") {
        $insSQL .= ", trns_type='" . loc_db_escape_string($trnsType) . "'";
    }
    $insSQL .= " WHERE acct_trns_id = " . $acctTrnsId . " and (status NOT IN ('Authorized', 'Paid', 'Received','Initiated','Void','Historic') and processing_ongoing='0')";
    //echo $insSQL;
    return execUpdtInsSQL($insSQL);
}

function getHistoricAccountTrns_Loans($acctNo) {
    global $gnrlTrnsDteYMDHMS;
    $balDte = substr($gnrlTrnsDteYMDHMS, 0, 10);
    $strSql = "SELECT a.acct_trns_id, b.account_number, b.account_title, a.trns_date, b.currency_id, a.trns_type, " .
            "a.amount, COALESCE(a.status,'Not Submitted'), a.account_id, c.mapped_lov_crncy_id, gst.get_pssbl_val(c.mapped_lov_crncy_id) crncy_nm,"
            . "to_char(to_timestamp(a.trns_date, 'YYYY-MM-DD HH24:MI:SS'),'DD-Mon-YYYY HH24:MI:SS'), COALESCE(a.trns_no,''), "
            . "a.value_date, a.branch_id, a.doc_type, a.doc_no, a.trns_person_name, a.trns_person_tel_no, "
            . "a.trns_person_address, a.trns_person_id_type, a.trns_person_id_number, a.trns_person_type, a.status, "
            . "a.debit_or_credit, a.authorized_by_person_id, a.autorization_date, a.amount_cash, "
            . "a.voided_acct_trns_id, a.voided_trns_type, a.reversal_reason, a.description, a.created_by, "
            . "b.branch_id, COALESCE(prs.get_prsn_name(a.authorized_by_person_id),''), a.approval_limit_id, d.max_amount, 
              (a.unclrdbal - a.amount), 
              (a.clrdbal - a.amount), 
              b.account_type, 
              CASE WHEN a.acctstatus='' THEN b.account_status ELSE a.acctstatus END, 
              CASE WHEN a.acctcustomer='' THEN mcf.get_customer_name(b.cust_type, b.cust_id) ELSE a.acctcustomer END, 
                b.prsn_type_or_entity, a.acctlien, 
                CASE WHEN a.mandate='' THEN b.mandate ELSE a.mandate END, a.wtdrwllimitno, a.wtdrwllimitamt, a.wtdrwllimittype,
                org.get_site_name(a.branch_id::integer)  " .
            "FROM mcf.mcf_cust_account_transactions a "
            . "LEFT OUTER JOIN mcf.mcf_accounts b ON (a.account_id = b.account_id) "
            . "LEFT OUTER JOIN mcf.mcf_currencies c ON (b.currency_id = c.crncy_id) "
            . "LEFT OUTER JOIN vms.vms_authorizers_limit d ON (a.approval_limit_id = d.authorizer_limit_id) "
            . "LEFT OUTER JOIN mcf.mcf_prdt_savings e ON (e.svngs_product_id = b.product_type_id) "
            . "WHERE ((b.account_number = '" . loc_db_escape_string($acctNo) .
            "')) ORDER BY a.trns_date DESC, a.acct_trns_id DESC LIMIT 10 OFFSET 0";
    $result = executeSQLNoParams($strSql);
    return $result;
}
/** END LATEST FUNCTIONS * */

//SUPPLEMENTARY ACCOUNTS
function insertSuplmntryRpymntAccnts($rpmnt_sup_acct_id, $loan_rqst_id, $account_id, $is_enabled, $usrID, $dateStr) {
    global $orgID;
    $insSQL = "INSERT INTO mcf.mcf_repayment_suplmntry_accounts(
            rpmnt_sup_acct_id, loan_rqst_id, is_enabled, created_by, creation_date, 
            last_update_by, last_update_date, account_id)
            VALUES ($rpmnt_sup_acct_id, $loan_rqst_id, '" . loc_db_escape_string($is_enabled) . "',
            $usrID,'" . $dateStr . "'," . $usrID . ",'" . $dateStr . "', $account_id)";

    return execUpdtInsSQL($insSQL);
}

function updateSuplmntryRpymntAccnts($rpmnt_sup_acct_id, $loan_rqst_id, $account_id, $is_enabled, $usrID, $dateStr) {
    $updtSQL = "UPDATE mcf.mcf_repayment_suplmntry_accounts
   SET account_id = $account_id, is_enabled='" . loc_db_escape_string($is_enabled) . "', last_update_by=$usrID, 
       last_update_date='" . $dateStr . "'
    WHERE rpmnt_sup_acct_id = $rpmnt_sup_acct_id";
    //var_dump($updtSQL);
    return execUpdtInsSQL($updtSQL);
}

function deleteSuplmntryRpymntAccnts($rpmnt_sup_acct_id) {
    $delSQL1 = "DELETE FROM mcf.mcf_repayment_suplmntry_accounts WHERE rpmnt_sup_acct_id = $rpmnt_sup_acct_id";

    return execUpdtInsSQL($delSQL1);
}

function getSuplmntryRpymntAccntsID() {
    $sqlStr = "SELECT nextval('mcf.mcf_repayment_suplmntry_accounts_rpmnt_sup_acct_id_seq'::regclass);";
    $result = executeSQLNoParams($sqlStr);
    while ($row = loc_db_fetch_array($result)) {
        return (float) $row[0];
    }
    return -1;
}

function getSuplmntryRpymntAccntsDets($loan_rqst_id) {
    $strSql = "SELECT rpmnt_sup_acct_id, x.account_id, y.account_number, is_enabled, loan_rqst_id 
				  FROM mcf.mcf_repayment_suplmntry_accounts x, mcf.mcf_accounts y, mcf.mcf_loan_request z
				  WHERE x.loan_rqst_id = z.loan_rqst_id
				  AND x.account_id = y.account_id
				  AND x.loan_rqst_id = $loan_rqst_id";

    $result = executeSQLNoParams($strSql);
    return $result;
}

function getSuplmntryRpymntAccntsTbl($loan_rqst_id, $searchFor, $searchIn, $offset, $limit_size, $searchAll, $sortBy) {
    $extra1 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Number") {
        $whrcls .= " AND (y.account_number ilike '" . loc_db_escape_string($searchFor) .
                "') ";
    }

    $strSql = "SELECT rpmnt_sup_acct_id, x.account_id, y.account_number, is_enabled, x.loan_rqst_id 
				  FROM mcf.mcf_repayment_suplmntry_accounts x, mcf.mcf_accounts y, mcf.mcf_loan_request z
				  WHERE x.loan_rqst_id = z.loan_rqst_id
				  AND x.account_id = y.account_id
				  AND x.loan_rqst_id = $loan_rqst_id AND (1 = 1 " . $extra1 . " " . $whrcls .
            ") ORDER BY 3 ASC LIMIT " . $limit_size .
            " OFFSET " . abs($offset * $limit_size);
    $result = executeSQLNoParams($strSql);
    //var_dump($strSql);
    return $result;
}

function getSuplmntryRpymntAccntsTblTtl($loan_rqst_id, $searchFor, $searchIn, $searchAll) {
    $extra1 = "";
    $extra2 = "";

    if ($searchAll == true) {
        $extra1 = "or 1 = 1";
    }

    $strSql = "";
    $whrcls = "";
    if ($searchIn == "Account Number") {
        $whrcls .= " AND (y.account_number ilike '" . loc_db_escape_string($searchFor) .
                "') ";
    }

    $strSql = "SELECT count(1) 
				  FROM mcf.mcf_repayment_suplmntry_accounts x, mcf.mcf_accounts y, mcf.mcf_loan_request z
				  WHERE x.loan_rqst_id = z.loan_rqst_id
				  AND x.account_id = y.account_id
				  AND x.loan_rqst_id = $loan_rqst_id AND (1 = 1 " . $extra1 . "" . $whrcls . $extra2 . ")";
    $result = executeSQLNoParams($strSql);
    while ($row = loc_db_fetch_array($result)) {
        return $row[0];
    }
    return 0;
}

//END OF SUPPLEMENTARY ACCOUNTS

?>
